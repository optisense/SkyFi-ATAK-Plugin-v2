# TAK.gov GitLab CI/CD Pipeline for ATAK Plugin - Fixed for Kubernetes Runner
# Requirements: Gradle 8.10, JDK 17, ATAK SDK 5.5.0

stages:
  - validate
  - build
  - package
  - sign

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=false"
  GRADLE_USER_HOME: "${CI_PROJECT_DIR}/.gradle"
  ANDROID_HOME: "${CI_PROJECT_DIR}/android-sdk"
  ANDROID_SDK_ROOT: "${CI_PROJECT_DIR}/android-sdk"
  # Kubernetes runner configuration
  KUBERNETES_CPU_REQUEST: "500m"
  KUBERNETES_CPU_LIMIT: "2000m"
  KUBERNETES_MEMORY_REQUEST: "1Gi"
  KUBERNETES_MEMORY_LIMIT: "4Gi"
  
# Default configuration for all jobs
default:
  tags:
    - kubernetes
  # Pod configuration to fix scheduling issues
  before_script:
    - echo "Configuring pod for Kubernetes runner..."

# Cache Gradle dependencies
cache:
  key: "${CI_COMMIT_REF_SLUG}"
  paths:
    - .gradle/
    - build/
    - app/build/

# Setup Android SDK for all jobs
.android_setup: &android_setup
  before_script:
    - apt-get update && apt-get install -y wget unzip git
    - git config --global user.email "ci@tak.gov"
    - git config --global user.name "TAK CI"
    - echo "Setting up Android SDK..."
    - mkdir -p ${ANDROID_HOME}
    - cd ${ANDROID_HOME}
    - |
      if [ ! -f "cmdline-tools/latest/bin/sdkmanager" ]; then
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/ || true
        rm commandlinetools-linux-9477386_latest.zip
      fi
    - export PATH=${ANDROID_HOME}/cmdline-tools/latest/bin:${PATH}
    - yes | sdkmanager --licenses || true
    - sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"
    - cd ${CI_PROJECT_DIR}
    - chmod +x gradlew
    - |
      echo "Setting up local.properties with SDK and TAK.gov credentials..."
      cat > local.properties << EOF
      sdk.dir=${ANDROID_HOME}
      takrepo.url=https://artifacts.tak.gov:443/artifactory/maven-release
      takrepo.user=${TAKREPO_USER:-jfuginay}
      takrepo.password=${TAKREPO_PASSWORD:-glpat-EfxW36mJhsG7c_bJ3C7k}
      EOF

# Validate environment and dependencies
validate:environment:
  stage: validate
  image: openjdk:17-jdk-slim
  <<: *android_setup
  # Pod spec override to fix scheduling
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-runner
    KUBERNETES_POD_ANNOTATIONS_OVERWRITE: "scheduler.alpha.kubernetes.io/tolerations: '[{\"key\":\"application\",\"value\":\"critical\",\"effect\":\"NoSchedule\"}]'"
  script:
    - echo "Validating build environment..."
    - java -version
    - ./gradlew --version
    - echo "Checking for required files..."
    - test -f gradlew || exit 1
    - test -f app/build.gradle || exit 1
    - test -f settings.gradle || exit 1
    - test -f atak-gradle-takdev.jar || echo "Warning - Local TAK SDK not found, will use TAK.gov repository"
    - echo "Checking Gradle wrapper version..."
    - ./gradlew --version | grep "Gradle 8.10" || echo "Warning - Gradle version mismatch"
    - echo "Validating plugin.xml uses SkyFiPluginCompatWrapper..."
    - grep "SkyFiPluginCompatWrapper" app/src/main/assets/plugin.xml || (echo "ERROR - plugin.xml must use SkyFiPluginCompatWrapper" && exit 1)
  artifacts:
    paths:
      - build/
      - android-sdk/
    expire_in: 1 hour
  # Resource limits for pod
  resource_group: build
  parallel:
    matrix:
      - RUNNER_TYPE: [standard]

# Build debug APK for testing with optimized resources
build:debug:
  stage: build
  image: openjdk:17-jdk-slim
  <<: *android_setup
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-runner
    KUBERNETES_POD_ANNOTATIONS_OVERWRITE: "scheduler.alpha.kubernetes.io/tolerations: '[{\"key\":\"application\",\"value\":\"critical\",\"effect\":\"NoSchedule\"}]'"
    KUBERNETES_CPU_REQUEST: "1000m"
    KUBERNETES_CPU_LIMIT: "3000m"
    KUBERNETES_MEMORY_REQUEST: "2Gi"
    KUBERNETES_MEMORY_LIMIT: "6Gi"
  script:
    - echo "Building debug APK with optimized memory settings..."
    - export GRADLE_OPTS="-Xmx2g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.daemon=false"
    - ./gradlew clean assembleCivDebug --stacktrace --no-daemon --max-workers=2
    - echo "Debug APK built successfully"
    - ls -la app/build/outputs/apk/civ/debug/
  artifacts:
    paths:
      - app/build/outputs/apk/civ/debug/*.apk
      - app/build/reports/
    expire_in: 1 week
  only:
    - main
    - develop
    - merge_requests
  resource_group: build

# Build release APK (unsigned) with optimized resources
build:release:
  stage: build
  image: openjdk:17-jdk-slim
  <<: *android_setup
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-runner
    KUBERNETES_POD_ANNOTATIONS_OVERWRITE: "scheduler.alpha.kubernetes.io/tolerations: '[{\"key\":\"application\",\"value\":\"critical\",\"effect\":\"NoSchedule\"}]'"
    KUBERNETES_CPU_REQUEST: "1000m"
    KUBERNETES_CPU_LIMIT: "3000m"
    KUBERNETES_MEMORY_REQUEST: "2Gi"
    KUBERNETES_MEMORY_LIMIT: "6Gi"
  script:
    - echo "Building unsigned release APK with optimized memory settings..."
    - export GRADLE_OPTS="-Xmx2g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.daemon=false"
    - ./gradlew clean assembleCivRelease --stacktrace --no-daemon --max-workers=2
    - echo "Release APK built successfully (unsigned)"
    - ls -la app/build/outputs/apk/civ/release/
  artifacts:
    paths:
      - app/build/outputs/apk/civ/release/*.apk
      - app/build/reports/
    expire_in: 1 month
  only:
    - main
    - tags
  resource_group: build

# Build all variants (CIV and MIL if configured) with high resources
build:variants:
  stage: build
  image: openjdk:17-jdk-slim
  <<: *android_setup
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-runner
    KUBERNETES_POD_ANNOTATIONS_OVERWRITE: "scheduler.alpha.kubernetes.io/tolerations: '[{\"key\":\"application\",\"value\":\"critical\",\"effect\":\"NoSchedule\"}]'"
    KUBERNETES_CPU_REQUEST: "2000m"
    KUBERNETES_CPU_LIMIT: "4000m"
    KUBERNETES_MEMORY_REQUEST: "4Gi"
    KUBERNETES_MEMORY_LIMIT: "8Gi"
  script:
    - echo "Building all variants with high memory allocation..."
    - export GRADLE_OPTS="-Xmx4g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.daemon=false"
    - ./gradlew clean assemble --stacktrace --no-daemon --max-workers=3
    - echo "All variants built successfully"
    - find app/build/outputs/apk -name "*.apk" -type f
  artifacts:
    paths:
      - app/build/outputs/apk/**/*.apk
    expire_in: 1 week
  when: manual
  only:
    - main
  resource_group: build

# Package source for TAK.gov submission (lightweight job)
package:source:
  stage: package
  image: alpine:latest
  variables:
    KUBERNETES_CPU_REQUEST: "200m"
    KUBERNETES_CPU_LIMIT: "500m"
    KUBERNETES_MEMORY_REQUEST: "256Mi"
    KUBERNETES_MEMORY_LIMIT: "512Mi"
    KUBERNETES_POD_ANNOTATIONS_OVERWRITE: "scheduler.alpha.kubernetes.io/tolerations: '[{\"key\":\"application\",\"value\":\"critical\",\"effect\":\"NoSchedule\"}]'"
  before_script:
    - apk add --no-cache zip rsync
  script:
    - echo "Creating TAK.gov source submission package..."
    - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)
    - export SUBMISSION_NAME="SkyFi-ATAK-Plugin-v2-TAKGOV-${TIMESTAMP}"
    - mkdir -p build/submission/${SUBMISSION_NAME}
    - rsync -av --exclude='.git*' --exclude='build/' --exclude='app/build/' --exclude='*.apk' --exclude='releases/' --exclude='.gradle/' --exclude='.idea/' ./ build/submission/${SUBMISSION_NAME}/
    - cd build/submission
    - zip -r ${SUBMISSION_NAME}.zip ${SUBMISSION_NAME}/
    - echo "Source package created - ${SUBMISSION_NAME}.zip"
    - ls -lh ${SUBMISSION_NAME}.zip
  artifacts:
    paths:
      - build/submission/*.zip
    expire_in: 1 month
  only:
    - main
    - tags

# Prepare for TAK.gov signing (lightweight job)
sign:prepare:
  stage: sign
  image: alpine:latest
  dependencies:
    - build:release
  variables:
    KUBERNETES_CPU_REQUEST: "100m"
    KUBERNETES_CPU_LIMIT: "200m"
    KUBERNETES_MEMORY_REQUEST: "128Mi"
    KUBERNETES_MEMORY_LIMIT: "256Mi"
    KUBERNETES_POD_ANNOTATIONS_OVERWRITE: "scheduler.alpha.kubernetes.io/tolerations: '[{\"key\":\"application\",\"value\":\"critical\",\"effect\":\"NoSchedule\"}]'"
  script:
    - echo "Preparing APKs for TAK.gov signing..."
    - mkdir -p build/signing
    - cp app/build/outputs/apk/civ/release/*.apk build/signing/ || true
    - echo "Creating signing request document..."
    - echo "# TAK.gov Signing Request" > build/signing/SIGNING_REQUEST.md
    - echo "" >> build/signing/SIGNING_REQUEST.md
    - echo "Plugin - SkyFi ATAK Plugin v2" >> build/signing/SIGNING_REQUEST.md
    - echo "Version - ${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA}}" >> build/signing/SIGNING_REQUEST.md
    - echo "Target ATAK Version - 5.5.0" >> build/signing/SIGNING_REQUEST.md
    - echo "" >> build/signing/SIGNING_REQUEST.md
    - echo "## Files for Signing" >> build/signing/SIGNING_REQUEST.md
    - echo "- SkyFi-debug.apk (for testing)" >> build/signing/SIGNING_REQUEST.md
    - echo "- SkyFi-release-unsigned.apk (for production)" >> build/signing/SIGNING_REQUEST.md
    - echo "" >> build/signing/SIGNING_REQUEST.md
    - echo "## Important Notes" >> build/signing/SIGNING_REQUEST.md
    - echo "- Plugin uses SkyFiPluginCompatWrapper (no IServiceController dependency)" >> build/signing/SIGNING_REQUEST.md
    - echo "- Built with Gradle 8.10 and JDK 17" >> build/signing/SIGNING_REQUEST.md
    - echo "- Tested for compatibility with ATAK-CIV 5.5.0" >> build/signing/SIGNING_REQUEST.md
    - echo "" >> build/signing/SIGNING_REQUEST.md
    - echo "## Requested Signatures" >> build/signing/SIGNING_REQUEST.md
    - echo "- CIV signature for civilian ATAK distribution" >> build/signing/SIGNING_REQUEST.md
    - echo "- MIL signature if applicable for military distribution" >> build/signing/SIGNING_REQUEST.md
    - echo "Signing preparation complete"
  artifacts:
    paths:
      - build/signing/
    expire_in: 1 month
  when: manual
  only:
    - main
    - tags

# Test job with optimized resources
test:unit:
  stage: build
  image: openjdk:17-jdk-slim
  <<: *android_setup
  variables:
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: gitlab-runner
    KUBERNETES_POD_ANNOTATIONS_OVERWRITE: "scheduler.alpha.kubernetes.io/tolerations: '[{\"key\":\"application\",\"value\":\"critical\",\"effect\":\"NoSchedule\"}]'"
    KUBERNETES_CPU_REQUEST: "500m"
    KUBERNETES_CPU_LIMIT: "2000m"
    KUBERNETES_MEMORY_REQUEST: "1Gi"
    KUBERNETES_MEMORY_LIMIT: "3Gi"
  script:
    - export GRADLE_OPTS="-Xmx1g -XX:MaxMetaspaceSize=256m -Dorg.gradle.daemon=false"
    - ./gradlew test --stacktrace --no-daemon
  artifacts:
    reports:
      junit: app/build/test-results/test**/TEST-*.xml
    paths:
      - app/build/reports/tests/
    expire_in: 1 week
  when: manual