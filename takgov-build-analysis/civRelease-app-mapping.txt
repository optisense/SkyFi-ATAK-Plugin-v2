# compiler: R8
# compiler_version: 4.0.52
# min_api: 21
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.1"}
# pg_map_id: fa4168c
# pg_map_hash: SHA-256 fa4168c366521b493550b43fdb8ad6a57644f451550fda831f4a075a4375a5b2
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:57:void <init>() -> <init>
    64:64:void <init>(int) -> <init>
    71:71:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    133:133:boolean containsAll(java.util.Collection) -> containsAll
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:144:void putAll(java.util.Map) -> putAll
    154:154:boolean removeAll(java.util.Collection) -> removeAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:119:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:104:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:114:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    53:54:void <clinit>() -> <clinit>
    243:243:void <init>() -> <init>
    250:257:void <init>(int) -> <init>
    264:266:void <init>(androidx.collection.ArraySet) -> <init>
    274:276:void <init>(java.util.Collection) -> <init>
    364:404:boolean add(java.lang.Object) -> add
    442:452:void addAll(androidx.collection.ArraySet) -> addAll
    752:755:boolean addAll(java.util.Collection) -> addAll
    164:198:void allocArrays(int) -> allocArrays
    415:434:void append(java.lang.Object) -> append
    285:289:void clear() -> clear
    318:318:boolean contains(java.lang.Object) -> contains
    737:739:boolean containsAll(java.util.Collection) -> containsAll
    298:306:void ensureCapacity(int) -> ensureCapacity
    594:603:boolean equals(java.lang.Object) -> equals
    203:234:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    666:714:androidx.collection.MapCollections getCollection() -> getCollection
    622:625:int hashCode() -> hashCode
    86:113:int indexOf(java.lang.Object,int) -> indexOf
    328:328:int indexOf(java.lang.Object) -> indexOf
    124:151:int indexOfNull() -> indexOfNull
    346:346:boolean isEmpty() -> isEmpty
    726:726:java.util.Iterator iterator() -> iterator
    465:467:boolean remove(java.lang.Object) -> remove
    538:546:boolean removeAll(androidx.collection.ArraySet) -> removeAll
    768:769:boolean removeAll(java.util.Collection) -> removeAll
    479:523:java.lang.Object removeAt(int) -> removeAt
    783:785:boolean retainAll(java.util.Collection) -> retainAll
    554:554:int size() -> size
    560:561:java.lang.Object[] toArray() -> toArray
    568:575:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    639:657:java.lang.String toString() -> toString
    338:338:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    667:667:void <init>(androidx.collection.ArraySet) -> <init>
    710:710:void colClear() -> colClear
    675:675:java.lang.Object colGetEntry(int,int) -> colGetEntry
    690:690:java.util.Map colGetMap() -> colGetMap
    670:670:int colGetSize() -> colGetSize
    680:680:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    685:685:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    695:695:void colPut(java.lang.Object,java.lang.Object) -> colPut
    705:705:void colRemoveAt(int) -> colRemoveAt
    700:700:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.CircularArray -> androidx.collection.CircularArray:
    49:49:void <init>() -> <init>
    58:76:void <init>(int) -> <init>
    84:87:void addFirst(java.lang.Object) -> addFirst
    96:99:void addLast(java.lang.Object) -> addLast
    138:138:void clear() -> clear
    30:42:void doubleCapacity() -> doubleCapacity
    240:243:java.lang.Object get(int) -> get
    215:218:java.lang.Object getFirst() -> getFirst
    227:230:java.lang.Object getLast() -> getLast
    259:259:boolean isEmpty() -> isEmpty
    109:114:java.lang.Object popFirst() -> popFirst
    124:130:java.lang.Object popLast() -> popLast
    185:205:void removeFromEnd(int) -> removeFromEnd
    152:170:void removeFromStart(int) -> removeFromStart
    251:251:int size() -> size
androidx.collection.CircularIntArray -> androidx.collection.CircularIntArray:
    50:50:void <init>() -> <init>
    59:77:void <init>(int) -> <init>
    85:88:void addFirst(int) -> addFirst
    97:100:void addLast(int) -> addLast
    133:133:void clear() -> clear
    31:43:void doubleCapacity() -> doubleCapacity
    197:198:int get(int) -> get
    176:177:int getFirst() -> getFirst
    186:187:int getLast() -> getLast
    214:214:boolean isEmpty() -> isEmpty
    110:112:int popFirst() -> popFirst
    122:125:int popLast() -> popLast
    164:167:void removeFromEnd(int) -> removeFromEnd
    147:150:void removeFromStart(int) -> removeFromStart
    206:206:int size() -> size
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    83:83:void <init>() -> <init>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    70:70:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    0:0:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    47:47:void <clinit>() -> <clinit>
    58:58:void <init>() -> <init>
    48:77:void <init>(int) -> <init>
    369:395:void append(long,java.lang.Object) -> append
    353:361:void clear() -> clear
    46:46:java.lang.Object clone() -> clone
    85:89:androidx.collection.LongSparseArray clone() -> clone
    341:341:boolean containsKey(long) -> containsKey
    346:346:boolean containsValue(java.lang.Object) -> containsValue
    128:133:void delete(long) -> delete
    158:178:void gc() -> gc
    106:106:java.lang.Object get(long) -> get
    115:117:java.lang.Object get(long,java.lang.Object) -> get
    312:316:int indexOfKey(long) -> indexOfKey
    328:333:int indexOfValue(java.lang.Object) -> indexOfValue
    263:263:boolean isEmpty() -> isEmpty
    272:276:long keyAt(int) -> keyAt
    189:231:void put(long,java.lang.Object) -> put
    241:242:void putAll(androidx.collection.LongSparseArray) -> putAll
    142:142:void remove(long) -> remove
    149:151:void removeAt(int) -> removeAt
    299:303:void setValueAt(int,java.lang.Object) -> setValueAt
    251:255:int size() -> size
    407:428:java.lang.String toString() -> toString
    286:290:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:56:void <init>(int) -> <init>
    0:0:java.lang.Object create(java.lang.Object) -> create
    322:322:int createCount() -> createCount
    0:0:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    281:281:void evictAll() -> evictAll
    336:336:int evictionCount() -> evictionCount
    84:125:java.lang.Object get(java.lang.Object) -> get
    307:307:int hitCount() -> hitCount
    299:299:int maxSize() -> maxSize
    315:315:int missCount() -> missCount
    139:156:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    329:329:int putCount() -> putCount
    201:213:java.lang.Object remove(java.lang.Object) -> remove
    66:72:void resize(int) -> resize
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    290:290:int size() -> size
    0:0:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    344:344:java.util.Map snapshot() -> snapshot
    348:351:java.lang.String toString() -> toString
    171:189:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:32:void <init>() -> <init>
    459:461:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    518:522:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:493:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:509:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    41:45:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:58:java.lang.Object next() -> next
    64:70:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:184:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:204:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    259:263:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:283:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    349:351:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:310:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    77:81:void <init>(androidx.collection.MapCollections) -> <init>
    137:146:boolean equals(java.lang.Object) -> equals
    110:114:java.lang.Object getKey() -> getKey
    119:123:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:158:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:93:java.util.Map$Entry next() -> next
    99:105:void remove() -> remove
    128:132:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:371:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:383:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:404:boolean remove(java.lang.Object) -> remove
    412:417:boolean removeAll(java.util.Collection) -> removeAll
    428:433:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:239:void <init>() -> <init>
    246:253:void <init>(int) -> <init>
    260:262:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    166:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    597:637:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    363:364:java.lang.Object get(java.lang.Object) -> get
    656:661:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    402:402:boolean isEmpty() -> isEmpty
    373:373:java.lang.Object keyAt(int) -> keyAt
    415:472:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    481:491:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    504:506:java.lang.Object remove(java.lang.Object) -> remove
    518:573:java.lang.Object removeAt(int) -> removeAt
    393:394:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    581:581:int size() -> size
    675:700:java.lang.String toString() -> toString
    382:382:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:81:void <init>(int) -> <init>
    388:414:void append(int,java.lang.Object) -> append
    372:380:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    89:93:androidx.collection.SparseArrayCompat clone() -> clone
    360:360:boolean containsKey(int) -> containsKey
    365:365:boolean containsValue(java.lang.Object) -> containsValue
    132:137:void delete(int) -> delete
    175:195:void gc() -> gc
    110:110:java.lang.Object get(int) -> get
    119:121:java.lang.Object get(int,java.lang.Object) -> get
    329:333:int indexOfKey(int) -> indexOfKey
    347:352:int indexOfValue(java.lang.Object) -> indexOfValue
    280:280:boolean isEmpty() -> isEmpty
    289:293:int keyAt(int) -> keyAt
    206:248:void put(int,java.lang.Object) -> put
    258:259:void putAll(androidx.collection.SparseArrayCompat) -> putAll
    146:146:void remove(int) -> remove
    153:155:void removeAt(int) -> removeAt
    166:168:void removeAtRange(int,int) -> removeAtRange
    316:320:void setValueAt(int,java.lang.Object) -> setValueAt
    268:272:int size() -> size
    426:447:java.lang.String toString() -> toString
    303:307:java.lang.Object valueAt(int) -> valueAt
androidx.customview.R -> androidx.customview.R:
    0:0:void <init>() -> <init>
androidx.customview.poolingcontainer.PoolingContainer -> androidx.customview.poolingcontainer.PoolingContainer:
# {"id":"sourceFile","fileName":"PoolingContainer.kt"}
    121:122:void <clinit>() -> <clinit>
    56:56:void addPoolingContainerListener(android.view.View,androidx.customview.poolingcontainer.PoolingContainerListener) -> addPoolingContainerListener
    104:155:void callPoolingContainerOnRelease(android.view.View) -> callPoolingContainerOnRelease
    116:157:void callPoolingContainerOnReleaseForChildren(android.view.ViewGroup) -> callPoolingContainerOnReleaseForChildren
    145:148:androidx.customview.poolingcontainer.PoolingContainerListenerHolder getPoolingContainerListenerHolder(android.view.View) -> getPoolingContainerListenerHolder
    79:79:boolean isPoolingContainer(android.view.View) -> isPoolingContainer
    89:153:boolean isWithinPoolingContainer(android.view.View) -> isWithinPoolingContainer
    64:64:void removePoolingContainerListener(android.view.View,androidx.customview.poolingcontainer.PoolingContainerListener) -> removePoolingContainerListener
    81:81:void setPoolingContainer(android.view.View,boolean) -> setPoolingContainer
androidx.customview.poolingcontainer.PoolingContainerListener -> androidx.customview.poolingcontainer.PoolingContainerListener:
# {"id":"sourceFile","fileName":"PoolingContainer.kt"}
androidx.customview.poolingcontainer.PoolingContainerListenerHolder -> androidx.customview.poolingcontainer.PoolingContainerListenerHolder:
# {"id":"sourceFile","fileName":"PoolingContainer.kt"}
    124:125:void <init>() -> <init>
    128:128:void addListener(androidx.customview.poolingcontainer.PoolingContainerListener) -> addListener
    136:137:void onRelease() -> onRelease
    132:132:void removeListener(androidx.customview.poolingcontainer.PoolingContainerListener) -> removeListener
androidx.customview.poolingcontainer.R -> androidx.customview.poolingcontainer.R:
    0:0:void <init>() -> <init>
androidx.customview.poolingcontainer.R$id -> androidx.customview.poolingcontainer.R$id:
    0:0:void <init>() -> <init>
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    37:38:void <init>() -> <init>
    46:50:void <init>(android.os.Parcelable) -> <init>
    59:59:void <init>(android.os.Parcel) -> <init>
    68:70:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    0:0:int describeContents() -> describeContents
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:95:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    100:347:void <clinit>() -> <clinit>
    104:150:void <init>(android.view.View) -> <init>
    998:1001:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1046:1054:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    481:481:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    639:641:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    677:700:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    653:654:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    791:886:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    734:747:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:194:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    218:251:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:433:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:329:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    589:589:int getFocusedVirtualView() -> getFocusedVirtualView
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    450:467:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    526:526:void invalidateRoot() -> invalidateRoot
    542:542:void invalidateVirtualView(int) -> invalidateVirtualView
    566:573:void invalidateVirtualView(int,int) -> invalidateVirtualView
    932:948:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    0:0:int keyToDirection(int) -> keyToDirection
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    720:723:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:280:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    660:663:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    755:758:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    0:0:void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> onPopulateEventForHost
    0:0:void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    0:0:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    0:0:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
    897:899:boolean performAction(int,int,android.os.Bundle) -> performAction
    910:918:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    904:904:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    968:983:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1016:1033:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    505:515:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    612:622:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:339:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
    1238:1238:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1245:1247:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1257:1262:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1252:1252:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    454:454:void <init>() -> <init>
    243:272:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    329:334:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:178:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:55:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:69:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:84:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    0:0:int getWeightedDistanceFor(int,int) -> getWeightedDistanceFor
    203:230:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    299:311:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    345:353:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    372:380:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    400:408:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    427:435:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
    95:103:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:129:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    332:332:void <clinit>() -> <clinit>
    119:401:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    525:534:void abort() -> abort
    933:952:boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    511:516:void cancel() -> cancel
    471:479:void captureChildView(android.view.View,int) -> captureChildView
    1276:1289:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1306:1314:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    1334:1336:boolean checkTouchSlop(int) -> checkTouchSlop
    1359:1374:boolean checkTouchSlop(int,int) -> checkTouchSlop
    670:670:int clampMag(int,int,int) -> clampMag
    687:687:float clampMag(float,float,float) -> clampMag
    790:800:void clearMotionHistory() -> clearMotionHistory
    804:814:void clearMotionHistory(int) -> clearMotionHistory
    642:656:int computeAxisDuration(int,int,int) -> computeAxisDuration
    617:632:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    735:769:boolean continueSettling(boolean) -> continueSettling
    355:355:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    369:370:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    779:785:void dispatchViewReleased(float,float) -> dispatchViewReleased
    696:696:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1426:1440:void dragTo(int,int,int,int) -> dragTo
    818:843:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1487:1491:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    710:720:void flingCapturedView(int,int,int,int) -> flingCapturedView
    597:612:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    495:495:int getActivePointerId() -> getActivePointerId
    487:487:android.view.View getCapturedView() -> getCapturedView
    459:459:int getEdgeSize() -> getEdgeSize
    1501:1504:int getEdgesTouched(int,int) -> getEdgesTouched
    422:422:float getMinVelocity() -> getMinVelocity
    503:503:int getTouchSlop() -> getTouchSlop
    431:431:int getViewDragState() -> getViewDragState
    1455:1455:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    1389:1391:boolean isEdgeTouched(int) -> isEdgeTouched
    1409:1409:boolean isEdgeTouched(int,int) -> isEdgeTouched
    884:884:boolean isPointerDown(int) -> isPointerDown
    1510:1511:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1471:1474:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1097:1248:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1413:1420:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1256:1271:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    848:852:void saveInitialMotion(float,float,int) -> saveInitialMotion
    856:866:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    888:893:void setDragState(int) -> setDragState
    447:447:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    411:411:void setMinVelocity(float) -> setMinVelocity
    577:584:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    552:559:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    908:914:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    332:332:void <init>() -> <init>
    0:0:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    340:340:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    343:343:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    152:152:void <init>() -> <init>
    0:0:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    0:0:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    0:0:int getOrderedChildIndex(int) -> getOrderedChildIndex
    0:0:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    0:0:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    0:0:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    0:0:boolean onEdgeLock(int) -> onEdgeLock
    0:0:void onEdgeTouched(int,int) -> onEdgeTouched
    0:0:void onViewCaptured(android.view.View,int) -> onViewCaptured
    0:0:void onViewDragStateChanged(int) -> onViewDragStateChanged
    0:0:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    0:0:void onViewReleased(android.view.View,float,float) -> onViewReleased
androidx.interpolator.R -> androidx.interpolator.R:
    0:0:void <init>() -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    30:32:void <init>(float[]) -> <init>
    46:54:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.R -> androidx.recyclerview.R:
    0:0:void <init>() -> <init>
androidx.recyclerview.R$attr -> androidx.recyclerview.R$attr:
    0:0:void <init>() -> <init>
androidx.recyclerview.R$dimen -> androidx.recyclerview.R$dimen:
    0:0:void <init>() -> <init>
androidx.recyclerview.R$id -> androidx.recyclerview.R$id:
    0:0:void <init>() -> <init>
androidx.recyclerview.R$styleable -> androidx.recyclerview.R$styleable:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:72:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:78:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    82:82:androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[]) -> addUpdateOp
    432:432:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:130:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:613:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:183:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:223:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:422:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:124:void consumePostponedUpdates() -> consumePostponedUpdates
    557:584:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:302:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:324:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:493:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:734:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    507:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    519:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    544:548:boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
    531:533:boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    439:455:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:115:void preProcess() -> preProcess
    741:743:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:752:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:89:void reset() -> reset
    330:404:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:655:void <init>(int,int,int,java.lang.Object) -> <init>
    659:659:java.lang.String cmdToString() -> cmdToString
    684:709:boolean equals(java.lang.Object) -> equals
    718:720:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.AdapterListUpdateCallback -> androidx.recyclerview.widget.AdapterListUpdateCallback:
    37:38:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    63:63:void onChanged(int,int,java.lang.Object) -> onChanged
    44:44:void onInserted(int,int) -> onInserted
    56:56:void onMoved(int,int) -> onMoved
    50:50:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.AsyncDifferConfig -> androidx.recyclerview.widget.AsyncDifferConfig:
    47:50:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    64:64:java.util.concurrent.Executor getBackgroundThreadExecutor() -> getBackgroundThreadExecutor
    70:70:androidx.recyclerview.widget.DiffUtil$ItemCallback getDiffCallback() -> getDiffCallback
    58:58:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
androidx.recyclerview.widget.AsyncDifferConfig$Builder -> androidx.recyclerview.widget.AsyncDifferConfig$Builder:
    145:145:void <clinit>() -> <clinit>
    84:85:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    130:138:androidx.recyclerview.widget.AsyncDifferConfig build() -> build
    119:119:androidx.recyclerview.widget.AsyncDifferConfig$Builder setBackgroundThreadExecutor(java.util.concurrent.Executor) -> setBackgroundThreadExecutor
    102:102:androidx.recyclerview.widget.AsyncDifferConfig$Builder setMainThreadExecutor(java.util.concurrent.Executor) -> setMainThreadExecutor
androidx.recyclerview.widget.AsyncListDiffer -> androidx.recyclerview.widget.AsyncListDiffer:
    131:131:void <clinit>() -> <clinit>
    162:163:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    148:197:void <init>(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    392:392:void addListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> addListListener
    216:216:java.util.List getCurrentList() -> getCurrentList
    364:369:void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable) -> latchList
    375:379:void onCurrentListChanged(java.util.List,java.lang.Runnable) -> onCurrentListChanged
    403:403:void removeListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> removeListListener
    231:231:void submitList(java.util.List) -> submitList
    254:289:void submitList(java.util.List,java.lang.Runnable) -> submitList
androidx.recyclerview.widget.AsyncListDiffer$1 -> androidx.recyclerview.widget.AsyncListDiffer$1:
    289:289:void <init>(androidx.recyclerview.widget.AsyncListDiffer,java.util.List,java.util.List,int,java.lang.Runnable) -> <init>
    292:347:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$1$1 -> androidx.recyclerview.widget.AsyncListDiffer$1$1:
    292:292:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1) -> <init>
    316:328:boolean areContentsTheSame(int,int) -> areContentsTheSame
    305:308:boolean areItemsTheSame(int,int) -> areItemsTheSame
    334:343:java.lang.Object getChangePayload(int,int) -> getChangePayload
    300:300:int getNewListSize() -> getNewListSize
    295:295:int getOldListSize() -> getOldListSize
androidx.recyclerview.widget.AsyncListDiffer$1$2 -> androidx.recyclerview.widget.AsyncListDiffer$1$2:
    347:347:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1,androidx.recyclerview.widget.DiffUtil$DiffResult) -> <init>
    350:351:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor -> androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor:
    122:123:void <init>() -> <init>
    126:126:void execute(java.lang.Runnable) -> execute
androidx.recyclerview.widget.AsyncListUtil -> androidx.recyclerview.widget.AsyncListUtil:
    64:293:void <init>(java.lang.Class,int,androidx.recyclerview.widget.AsyncListUtil$DataCallback,androidx.recyclerview.widget.AsyncListUtil$ViewCallback) -> <init>
    155:160:java.lang.Object getItem(int) -> getItem
    175:175:int getItemCount() -> getItemCount
    107:107:boolean isRefreshPending() -> isRefreshPending
    79:79:void log(java.lang.String,java.lang.Object[]) -> log
    119:123:void onRangeChanged() -> onRangeChanged
    133:134:void refresh() -> refresh
    179:207:void updateRange() -> updateRange
androidx.recyclerview.widget.AsyncListUtil$1 -> androidx.recyclerview.widget.AsyncListUtil$1:
    212:212:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    233:255:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> addTile
    289:289:boolean isRequestedGeneration(int) -> isRequestedGeneration
    282:285:void recycleAllTiles() -> recycleAllTiles
    264:275:void removeTile(int,int) -> removeTile
    218:228:void updateItemCount(int,int) -> updateItemCount
androidx.recyclerview.widget.AsyncListUtil$2 -> androidx.recyclerview.widget.AsyncListUtil$2:
    294:298:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    392:397:androidx.recyclerview.widget.TileList$Tile acquireTile() -> acquireTile
    405:406:void addTile(androidx.recyclerview.widget.TileList$Tile) -> addTile
    421:432:void flushTileCache(int) -> flushTileCache
    350:350:int getTileStart(int) -> getTileStart
    401:401:boolean isTileLoaded(int) -> isTileLoaded
    366:377:void loadTile(int,int) -> loadTile
    441:441:void log(java.lang.String,java.lang.Object[]) -> log
    385:388:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> recycleTile
    308:311:void refresh(int) -> refresh
    413:414:void removeTile(int) -> removeTile
    355:360:void requestTiles(int,int,int,boolean) -> requestTiles
    326:344:void updateRange(int,int,int,int,int) -> updateRange
androidx.recyclerview.widget.AsyncListUtil$DataCallback -> androidx.recyclerview.widget.AsyncListUtil$DataCallback:
    451:451:void <init>() -> <init>
    0:0:int getMaxCachedTiles() -> getMaxCachedTiles
    0:0:void recycleData(java.lang.Object[],int) -> recycleData
androidx.recyclerview.widget.AsyncListUtil$ViewCallback -> androidx.recyclerview.widget.AsyncListUtil$ViewCallback:
    521:521:void <init>() -> <init>
    577:580:void extendRangeInto(int[],int[],int) -> extendRangeInto
androidx.recyclerview.widget.BatchingListUpdateCallback -> androidx.recyclerview.widget.BatchingListUpdateCallback:
    43:49:void <init>(androidx.recyclerview.widget.ListUpdateCallback) -> <init>
    58:73:void dispatchLastEvent() -> dispatchLastEvent
    113:126:void onChanged(int,int,java.lang.Object) -> onChanged
    78:87:void onInserted(int,int) -> onInserted
    106:107:void onMoved(int,int) -> onMoved
    92:101:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    68:75:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    109:109:void addView(android.view.View,boolean) -> addView
    123:131:void addView(android.view.View,int,boolean) -> addView
    279:287:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    330:332:void detachViewFromParent(int) -> detachViewFromParent
    254:260:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    228:229:android.view.View getChildAt(int) -> getChildAt
    301:301:int getChildCount() -> getChildCount
    141:147:int getOffset(int) -> getOffset
    321:321:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    311:311:int getUnfilteredChildCount() -> getUnfilteredChildCount
    376:384:void hide(android.view.View) -> hide
    84:85:void hideViewInternal(android.view.View) -> hideViewInternal
    345:357:int indexOfChild(android.view.View) -> indexOfChild
    367:367:boolean isHidden(android.view.View) -> isHidden
    236:241:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    164:186:void removeView(android.view.View) -> removeView
    196:219:void removeViewAt(int) -> removeViewAt
    421:453:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    411:411:java.lang.String toString() -> toString
    398:406:void unhide(android.view.View) -> unhide
    94:95:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    459:465:void <init>() -> <init>
    486:490:void clear(int) -> clear
    557:566:int countOnesBefore(int) -> countOnesBefore
    479:480:void ensureNext() -> ensureNext
    497:500:boolean get(int) -> get
    513:528:void insert(int,boolean) -> insert
    535:550:boolean remove(int) -> remove
    505:507:void reset() -> reset
    471:474:void set(int) -> set
    572:573:java.lang.String toString() -> toString
androidx.recyclerview.widget.ConcatAdapter -> androidx.recyclerview.widget.ConcatAdapter:
    90:90:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter[]) -> <init>
    104:104:void <init>(androidx.recyclerview.widget.ConcatAdapter$Config,androidx.recyclerview.widget.RecyclerView$Adapter[]) -> <init>
    114:114:void <init>(java.util.List) -> <init>
    126:132:void <init>(androidx.recyclerview.widget.ConcatAdapter$Config,java.util.List) -> <init>
    146:146:boolean addAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> addAdapter
    162:162:boolean addAdapter(int,androidx.recyclerview.widget.RecyclerView$Adapter) -> addAdapter
    303:303:int findRelativeAdapterPositionIn(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> findRelativeAdapterPositionIn
    281:281:java.util.List getAdapters() -> getAdapters
    239:239:int getItemCount() -> getItemCount
    227:227:long getItemId(int) -> getItemId
    178:178:int getItemViewType(int) -> getItemViewType
    325:325:android.util.Pair getWrappedAdapterAndPosition(int) -> getWrappedAdapterAndPosition
    234:234:void internalSetStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy) -> internalSetStateRestorationPolicy
    264:264:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    189:189:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    184:184:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    269:269:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    244:244:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    249:249:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    254:254:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    259:259:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    173:173:boolean removeAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> removeAdapter
    201:201:void setHasStableIds(boolean) -> setHasStableIds
    220:220:void setStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy) -> setStateRestorationPolicy
androidx.recyclerview.widget.ConcatAdapter$Config -> androidx.recyclerview.widget.ConcatAdapter$Config:
    385:385:void <clinit>() -> <clinit>
    387:389:void <init>(boolean,androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode) -> <init>
androidx.recyclerview.widget.ConcatAdapter$Config$Builder -> androidx.recyclerview.widget.ConcatAdapter$Config$Builder:
    433:435:void <init>() -> <init>
    477:477:androidx.recyclerview.widget.ConcatAdapter$Config build() -> build
    451:451:androidx.recyclerview.widget.ConcatAdapter$Config$Builder setIsolateViewTypes(boolean) -> setIsolateViewTypes
    468:468:androidx.recyclerview.widget.ConcatAdapter$Config$Builder setStableIdMode(androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode) -> setStableIdMode
androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode -> androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode:
    395:427:void <clinit>() -> <clinit>
    395:395:void <init>(java.lang.String,int) -> <init>
    395:395:androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode valueOf(java.lang.String) -> valueOf
    395:395:androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode[] values() -> values
androidx.recyclerview.widget.ConcatAdapterController -> androidx.recyclerview.widget.ConcatAdapterController:
    61:104:void <init>(androidx.recyclerview.widget.ConcatAdapter,androidx.recyclerview.widget.ConcatAdapter$Config) -> <init>
    133:133:boolean addAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> addAdapter
    143:179:boolean addAdapter(int,androidx.recyclerview.widget.RecyclerView$Adapter) -> addAdapter
    287:289:void calculateAndUpdateStateRestorationPolicy() -> calculateAndUpdateStateRestorationPolicy
    383:384:boolean canRestoreState() -> canRestoreState
    294:305:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy computeStateRestorationPolicy() -> computeStateRestorationPolicy
    206:208:int countItemsBefore(androidx.recyclerview.widget.NestedAdapterWrapper) -> countItemsBefore
    347:363:androidx.recyclerview.widget.ConcatAdapterController$WrapperAndLocalPosition findWrapperAndLocalPosition(int) -> findWrapperAndLocalPosition
    110:114:androidx.recyclerview.widget.NestedAdapterWrapper findWrapperFor(androidx.recyclerview.widget.RecyclerView$Adapter) -> findWrapperFor
    496:500:androidx.recyclerview.widget.RecyclerView$Adapter getBoundAdapter(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getBoundAdapter
    505:510:java.util.List getCopyOfAdapters() -> getCopyOfAdapters
    217:219:long getItemId(int) -> getItemId
    318:320:int getItemViewType(int) -> getItemViewType
    471:490:int getLocalAdapterPosition(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> getLocalAdapterPosition
    311:312:int getTotalCount() -> getTotalCount
    331:334:android.util.Pair getWrappedAdapterAndPosition(int) -> getWrappedAdapterAndPosition
    424:426:androidx.recyclerview.widget.NestedAdapterWrapper getWrapper(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getWrapper
    516:516:boolean hasStableIds() -> hasStableIds
    118:120:int indexOfWrapper(androidx.recyclerview.widget.RecyclerView$Adapter) -> indexOfWrapper
    433:434:boolean isAttachedTo(androidx.recyclerview.widget.RecyclerView) -> isAttachedTo
    442:447:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    376:379:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    226:227:void onChanged(androidx.recyclerview.widget.NestedAdapterWrapper) -> onChanged
    325:326:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    452:462:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    412:418:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    233:234:void onItemRangeChanged(androidx.recyclerview.widget.NestedAdapterWrapper,int,int) -> onItemRangeChanged
    243:244:void onItemRangeChanged(androidx.recyclerview.widget.NestedAdapterWrapper,int,int,java.lang.Object) -> onItemRangeChanged
    254:255:void onItemRangeInserted(androidx.recyclerview.widget.NestedAdapterWrapper,int,int) -> onItemRangeInserted
    274:275:void onItemRangeMoved(androidx.recyclerview.widget.NestedAdapterWrapper,int,int) -> onItemRangeMoved
    264:265:void onItemRangeRemoved(androidx.recyclerview.widget.NestedAdapterWrapper,int,int) -> onItemRangeRemoved
    283:283:void onStateRestorationPolicyChanged(androidx.recyclerview.widget.NestedAdapterWrapper) -> onStateRestorationPolicyChanged
    392:393:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    397:398:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    402:408:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    369:372:void releaseWrapperAndLocalPosition(androidx.recyclerview.widget.ConcatAdapterController$WrapperAndLocalPosition) -> releaseWrapperAndLocalPosition
    184:200:boolean removeAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> removeAdapter
androidx.recyclerview.widget.ConcatAdapterController$WrapperAndLocalPosition -> androidx.recyclerview.widget.ConcatAdapterController$WrapperAndLocalPosition:
    523:523:void <init>() -> <init>
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    39:56:void <init>() -> <init>
    226:228:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    233:255:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    330:349:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    354:401:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    262:278:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    283:320:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    196:197:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    202:220:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    672:672:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    648:649:void cancelAll(java.util.List) -> cancelAll
    557:558:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    444:525:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    564:644:void endAnimations() -> endAnimations
    406:410:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    417:421:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    426:437:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    538:548:boolean isRunning() -> isRunning
    529:533:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    104:188:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    123:123:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    126:131:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    147:147:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    150:154:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    170:170:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    173:177:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    206:206:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    214:218:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    209:209:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    237:237:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    245:245:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    250:253:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    240:240:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    297:297:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    305:309:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    315:318:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    300:300:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    364:364:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    372:378:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    367:367:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    386:386:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    393:399:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    389:389:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    74:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    81:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    91:91:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    62:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil -> androidx.recyclerview.widget.DiffUtil:
    87:87:void <clinit>() -> <clinit>
    83:83:void <init>() -> <init>
    274:321:androidx.recyclerview.widget.DiffUtil$Snake backward(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray,int) -> backward
    106:106:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback) -> calculateDiff
    124:178:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean) -> calculateDiff
    217:259:androidx.recyclerview.widget.DiffUtil$Snake forward(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray,int) -> forward
    191:202:androidx.recyclerview.widget.DiffUtil$Snake midPoint(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray) -> midPoint
androidx.recyclerview.widget.DiffUtil$1 -> androidx.recyclerview.widget.DiffUtil$1:
    87:87:void <init>() -> <init>
    87:87:int compare(java.lang.Object,java.lang.Object) -> compare
    90:90:int compare(androidx.recyclerview.widget.DiffUtil$Diagonal,androidx.recyclerview.widget.DiffUtil$Diagonal) -> compare
androidx.recyclerview.widget.DiffUtil$Callback -> androidx.recyclerview.widget.DiffUtil$Callback:
    332:332:void <init>() -> <init>
    0:0:java.lang.Object getChangePayload(int,int) -> getChangePayload
androidx.recyclerview.widget.DiffUtil$CenteredArray -> androidx.recyclerview.widget.DiffUtil$CenteredArray:
    1037:1039:void <init>(int) -> <init>
    1047:1047:int[] backingData() -> backingData
    1055:1055:void fill(int) -> fill
    1043:1043:int get(int) -> get
    1051:1051:void set(int,int) -> set
androidx.recyclerview.widget.DiffUtil$Diagonal -> androidx.recyclerview.widget.DiffUtil$Diagonal:
    481:484:void <init>(int,int,int) -> <init>
    488:488:int endX() -> endX
    492:492:int endY() -> endY
androidx.recyclerview.widget.DiffUtil$DiffResult -> androidx.recyclerview.widget.DiffUtil$DiffResult:
    664:675:void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    683:689:void addEdgeDiagonals() -> addEdgeDiagonals
    795:799:int convertNewPositionToOld(int) -> convertNewPositionToOld
    773:777:int convertOldPositionToNew(int) -> convertOldPositionToNew
    840:840:void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter) -> dispatchUpdatesTo
    855:967:void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback) -> dispatchUpdatesTo
    739:759:void findMatchingAddition(int) -> findMatchingAddition
    698:712:void findMatchingItems() -> findMatchingItems
    719:728:void findMoveMatches() -> findMoveMatches
    976:991:androidx.recyclerview.widget.DiffUtil$PostponedUpdate getPostponedUpdate(java.util.Collection,int,boolean) -> getPostponedUpdate
androidx.recyclerview.widget.DiffUtil$ItemCallback -> androidx.recyclerview.widget.DiffUtil$ItemCallback:
    409:409:void <init>() -> <init>
    0:0:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
androidx.recyclerview.widget.DiffUtil$PostponedUpdate -> androidx.recyclerview.widget.DiffUtil$PostponedUpdate:
    1021:1024:void <init>(int,int,boolean) -> <init>
androidx.recyclerview.widget.DiffUtil$Range -> androidx.recyclerview.widget.DiffUtil$Range:
    577:577:void <init>() -> <init>
    580:584:void <init>(int,int,int,int) -> <init>
    592:592:int newSize() -> newSize
    588:588:int oldSize() -> oldSize
androidx.recyclerview.widget.DiffUtil$Snake -> androidx.recyclerview.widget.DiffUtil$Snake:
    501:501:void <init>() -> <init>
    536:536:int diagonalSize() -> diagonalSize
    528:528:boolean hasAdditionOrRemoval() -> hasAdditionOrRemoval
    532:532:boolean isAddition() -> isAddition
    545:559:androidx.recyclerview.widget.DiffUtil$Diagonal toDiagonal() -> toDiagonal
androidx.recyclerview.widget.DividerItemDecoration -> androidx.recyclerview.widget.DividerItemDecoration:
    49:49:void <clinit>() -> <clinit>
    58:76:void <init>(android.content.Context,int) -> <init>
    154:177:void drawHorizontal(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> drawHorizontal
    127:150:void drawVertical(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> drawVertical
    110:110:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    184:191:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    116:122:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    100:102:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    87:90:void setOrientation(int) -> setOrientation
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    104:160:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:172:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    258:258:void cancelHide() -> cancelHide
    183:186:void destroyCallbacks() -> destroyCallbacks
    316:328:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    291:311:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    542:543:int[] getHorizontalRange() -> getHorizontalRange
    516:516:android.graphics.drawable.Drawable getHorizontalThumbDrawable() -> getHorizontalThumbDrawable
    511:511:android.graphics.drawable.Drawable getHorizontalTrackDrawable() -> getHorizontalTrackDrawable
    533:534:int[] getVerticalRange() -> getVerticalRange
    526:526:android.graphics.drawable.Drawable getVerticalThumbDrawable() -> getVerticalThumbDrawable
    521:521:android.graphics.drawable.Drawable getVerticalTrackDrawable() -> getVerticalTrackDrawable
    244:252:void hide(int) -> hide
    461:474:void horizontalScrollTo(float) -> horizontalScrollTo
    220:220:boolean isDragging() -> isDragging
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    496:496:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    224:224:boolean isVisible() -> isVisible
    268:285:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:394:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    0:0:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    409:437:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:191:void requestRedraw() -> requestRedraw
    262:263:void resetHideDelay(int) -> resetHideDelay
    479:479:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:212:void setState(int) -> setState
    177:179:void setupCallbacks() -> setupCallbacks
    228:237:void show() -> show
    339:373:void updateScrollPosition(int,int) -> updateScrollPosition
    446:457:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:126:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:134:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    549:551:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:572:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:566:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    577:577:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:585:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    160:163:void add(androidx.recyclerview.widget.RecyclerView) -> add
    217:261:void buildTaskList() -> buildTaskList
    344:351:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    356:362:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    265:270:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    177:187:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    367:368:void prefetch(long) -> prefetch
    316:339:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    279:306:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    167:169:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    374:405:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    190:190:void <init>() -> <init>
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    194:208:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    65:65:void <init>() -> <init>
    113:135:void addPosition(int,int) -> addPosition
    152:155:void clearPrefetchPositions() -> clearPrefetchPositions
    79:105:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    139:142:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    74:75:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    38:38:void <init>() -> <init>
    46:50:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    46:77:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    46:88:void <init>(android.content.Context,int) -> <init>
    46:101:void <init>(android.content.Context,int,int,boolean) -> <init>
    808:811:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> assignSpans
    201:206:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    326:326:void calculateItemBorders(int) -> calculateItemBorders
    337:354:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    268:268:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    196:197:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    539:546:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1235:1238:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1217:1220:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1326:1364:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffsetWithSpanInfo
    1293:1317:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRangeWithSpanInfo
    1244:1247:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1226:1229:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    405:426:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    380:381:void ensureViewSet() -> ensureViewSet
    435:465:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    243:247:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    254:254:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    259:262:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    135:143:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    121:129:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    360:364:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    823:823:int getSpanCount() -> getSpanCount
    479:491:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    495:512:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    516:533:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    287:287:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> getSpanSizeLookup
    772:774:void guessMeasurement(float,int) -> guessMeasurement
    1289:1289:boolean isUsingSpansToEstimateScrollbarDimensions() -> isUsingSpansToEstimateScrollbarDimensions
    554:725:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    738:758:void measureChild(android.view.View,int,boolean) -> measureChild
    779:787:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    371:376:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    1090:1203:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    170:174:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    149:163:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    212:213:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    218:219:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    237:238:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    224:225:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    231:232:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    179:186:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    191:192:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    388:390:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    396:398:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    302:319:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    836:846:void setSpanCount(int) -> setSpanCount
    278:278:void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    111:115:void setStackFromEnd(boolean) -> setStackFromEnd
    1277:1277:void setUsingSpansToEstimateScrollbarDimensions(boolean) -> setUsingSpansToEstimateScrollbarDimensions
    1212:1212:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    292:297:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1370:1370:void <init>() -> <init>
    1379:1379:int getSpanIndex(int,int) -> getSpanIndex
    0:0:int getSpanSize(int) -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1397:1402:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1397:1406:void <init>(int,int) -> <init>
    1397:1410:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1397:1414:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1397:1418:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    1436:1436:int getSpanIndex() -> getSpanIndex
    1446:1446:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    856:862:void <init>() -> <init>
    1020:1035:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> findFirstKeyLessThan
    952:960:int getCachedSpanGroupIndex(int,int) -> getCachedSpanGroupIndex
    939:947:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    1054:1069:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    988:1003:int getSpanIndex(int,int) -> getSpanIndex
    917:917:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    909:909:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
    935:935:boolean isSpanGroupIndexCacheEnabled() -> isSpanGroupIndexCacheEnabled
    926:926:boolean isSpanIndexCacheEnabled() -> isSpanIndexCacheEnabled
    899:901:void setSpanGroupIndexCacheEnabled(boolean) -> setSpanGroupIndexCacheEnabled
    882:884:void setSpanIndexCacheEnabled(boolean) -> setSpanIndexCacheEnabled
androidx.recyclerview.widget.ItemTouchHelper -> androidx.recyclerview.widget.ItemTouchHelper:
    169:450:void <init>(androidx.recyclerview.widget.ItemTouchHelper$Callback) -> <init>
    0:0:void addChildDrawingOrderCallback() -> addChildDrawingOrderCallback
    470:483:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    1249:1267:int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    991:1044:void checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    1276:1293:int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    497:511:void destroyCallbacks() -> destroyCallbacks
    924:932:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    1166:1172:androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    1050:1065:android.view.View findChildView(android.view.MotionEvent) -> findChildView
    810:855:java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> findSwapTargets
    961:983:androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    942:942:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    531:539:void getSelectedDxDy(float[]) -> getSelectedDxDy
    733:735:boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    455:457:boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    863:893:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    947:950:void obtainVelocityTracker() -> obtainVelocityTracker
    0:0:void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    904:914:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    563:570:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    550:555:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    709:709:void postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    954:956:void releaseVelocityTracker() -> releaseVelocityTracker
    1328:1332:void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
    747:805:boolean scrollIfNecessary() -> scrollIfNecessary
    583:703:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> select
    488:493:void setupCallbacks() -> setupCallbacks
    1103:1114:void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startDrag
    515:516:void startGestureDetection() -> startGestureDetection
    1150:1161:void startSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startSwipe
    521:526:void stopGestureDetection() -> stopGestureDetection
    1202:1239:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    1181:1197:void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
androidx.recyclerview.widget.ItemTouchHelper$1 -> androidx.recyclerview.widget.ItemTouchHelper$1:
    260:260:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    263:268:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$2 -> androidx.recyclerview.widget.ItemTouchHelper$2:
    316:316:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    320:360:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    426:426:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    365:414:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.ItemTouchHelper$3 -> androidx.recyclerview.widget.ItemTouchHelper$3:
    644:644:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    647:667:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.ItemTouchHelper$4 -> androidx.recyclerview.widget.ItemTouchHelper$4:
    709:709:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> <init>
    712:724:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$5 -> androidx.recyclerview.widget.ItemTouchHelper$5:
    1305:1305:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    1308:1314:int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
androidx.recyclerview.widget.ItemTouchHelper$Callback -> androidx.recyclerview.widget.ItemTouchHelper$Callback:
    1412:1419:void <clinit>() -> <clinit>
    1396:1432:void <init>() -> <init>
    0:0:boolean canDropOver(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canDropOver
    1814:1857:androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    2050:2050:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearView
    0:0:int convertToAbsoluteDirection(int,int) -> convertToAbsoluteDirection
    0:0:int convertToRelativeDirection(int,int) -> convertToRelativeDirection
    1604:1605:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    2145:2151:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float) -> getAnimationDuration
    0:0:int getBoundingBoxMargin() -> getBoundingBoxMargin
    1477:1477:androidx.recyclerview.widget.ItemTouchUIUtil getDefaultUIUtil() -> getDefaultUIUtil
    1913:1917:int getMaxDragScroll(androidx.recyclerview.widget.RecyclerView) -> getMaxDragScroll
    0:0:float getMoveThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMoveThreshold
    0:0:float getSwipeEscapeVelocity(float) -> getSwipeEscapeVelocity
    0:0:float getSwipeThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeThreshold
    0:0:float getSwipeVelocityThreshold(float) -> getSwipeVelocityThreshold
    1609:1609:boolean hasDragFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasDragFlag
    1615:1615:boolean hasSwipeFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasSwipeFlag
    2179:2193:int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    0:0:boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    0:0:boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    0:0:int makeFlag(int,int) -> makeFlag
    1523:1525:int makeMovementFlags(int,int) -> makeMovementFlags
    2083:2083:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    2118:2118:void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    1990:2002:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    2009:2032:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    1956:1982:void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    1908:1908:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
androidx.recyclerview.widget.ItemTouchHelper$Callback$1 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$1:
    1412:1412:void <init>() -> <init>
    0:0:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$Callback$2 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$2:
    1419:1419:void <init>() -> <init>
    0:0:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener -> androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener:
    2327:2329:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    2337:2337:void doNotReactToLongPress() -> doNotReactToLongPress
    0:0:boolean onDown(android.view.MotionEvent) -> onDown
    2347:2373:void onLongPress(android.view.MotionEvent) -> onLongPress
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation:
    2409:2434:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    2447:2447:void cancel() -> cancel
    2486:2486:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2478:2481:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    0:0:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    0:0:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    2438:2438:void setDuration(long) -> setDuration
    2451:2451:void setFraction(float) -> setFraction
    2442:2443:void start() -> start
    2459:2467:void update() -> update
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1 -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1:
    2426:2426:void <init>(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation) -> <init>
    2429:2429:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback -> androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback:
    2246:2248:void <init>(int,int) -> <init>
    2300:2300:int getDragDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getDragDirs
    2306:2307:int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMovementFlags
    2285:2285:int getSwipeDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeDirs
    2270:2270:void setDefaultDragDirs(int) -> setDefaultDragDirs
    2259:2259:void setDefaultSwipeDirs(int) -> setDefaultSwipeDirs
androidx.recyclerview.widget.ItemTouchUIUtilImpl -> androidx.recyclerview.widget.ItemTouchUIUtilImpl:
    32:32:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    91:99:void clearView(android.view.View) -> clearView
    61:68:float findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View) -> findMaxElevation
    46:57:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    0:0:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    0:0:void onSelected(android.view.View) -> onSelected
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    98:99:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    163:163:void <init>(android.content.Context) -> <init>
    67:180:void <init>(android.content.Context,int,boolean) -> <init>
    67:197:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1444:1445:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    507:515:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    313:313:boolean canScrollHorizontally() -> canScrollHorizontally
    321:321:boolean canScrollVertically() -> canScrollVertically
    1402:1412:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1323:1343:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1311:1313:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1176:1176:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1164:1164:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1188:1188:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1209:1215:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1198:1204:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1220:1226:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    531:539:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1182:1182:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1170:1170:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1194:1194:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1753:1778:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1079:1079:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1068:1069:void ensureLayoutState() -> ensureLayoutState
    1607:1657:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1998:1999:int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    1955:1955:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> findFirstPartiallyOrCompletelyInvisibleChild
    1836:1840:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1818:1822:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1981:1982:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    2038:2039:int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    1959:1959:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> findLastPartiallyOrCompletelyInvisibleChild
    2021:2022:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2070:2092:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    2048:2065:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1943:1944:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1950:1951:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1868:1895:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    426:439:android.view.View findViewByPosition(int) -> findViewByPosition
    989:1002:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    1014:1027:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    211:211:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1806:1806:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1796:1796:android.view.View getChildClosestToStart() -> getChildClosestToStart
    466:467:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    1395:1395:int getInitialPrefetchItemCount() -> getInitialPrefetchItemCount
    348:348:int getOrientation() -> getOrientation
    223:223:boolean getRecycleChildrenOnDetach() -> getRecycleChildrenOnDetach
    394:394:boolean getReverseLayout() -> getReverseLayout
    337:337:boolean getStackFromEnd() -> getStackFromEnd
    0:0:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    1064:1064:boolean isLayoutRTL() -> isLayoutRTL
    1257:1257:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1662:1730:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    779:825:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    2148:2154:void logChildren() -> logChildren
    0:0:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    246:249:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2100:2134:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    256:259:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    559:739:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    748:752:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    294:299:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    266:286:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2219:2243:void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
    1581:1589:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1464:1468:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1537:1562:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromEnd
    1497:1514:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromStart
    1305:1306:boolean resolveIsInfinite() -> resolveIsInfinite
    380:383:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1416:1437:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1142:1145:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1098:1103:void scrollToPosition(int) -> scrollToPosition
    1126:1131:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    1155:1158:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1380:1380:void setInitialPrefetchItemCount(int) -> setInitialPrefetchItemCount
    359:369:void setOrientation(int) -> setOrientation
    240:240:void setRecycleChildrenOnDetach(boolean) -> setRecycleChildrenOnDetach
    412:417:void setReverseLayout(boolean) -> setReverseLayout
    1247:1247:void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    328:333:void setStackFromEnd(boolean) -> setStackFromEnd
    1735:1737:boolean shouldMeasureTwice() -> shouldMeasureTwice
    522:525:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2209:2209:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    858:890:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    903:978:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    830:847:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1263:1301:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    1035:1035:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    1039:1045:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    1049:1049:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    1053:1059:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
    2168:2201:void validateChildOrder() -> validateChildOrder
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2515:2516:void <init>() -> <init>
    2531:2533:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2600:2607:void assignFromView(android.view.View,int) -> assignFromView
    2553:2593:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2547:2549:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2520:2523:void reset() -> reset
    2538:2538:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2611:2611:void <init>() -> <init>
    2618:2621:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2252:2338:void <init>() -> <init>
    2392:2392:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2396:2401:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2349:2349:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2436:2436:void log() -> log
    2359:2363:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2375:2384:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2406:2419:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2491:2491:void <clinit>() -> <clinit>
    2454:2454:void <init>() -> <init>
    2458:2461:void <init>(android.os.Parcel) -> <init>
    2465:2468:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    0:0:int describeContents() -> describeContents
    2472:2472:boolean hasValidAnchor() -> hasValidAnchor
    2476:2476:void invalidateAnchor() -> invalidateAnchor
    2486:2488:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2492:2492:void <init>() -> <init>
    2492:2492:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2495:2495:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2492:2492:java.lang.Object[] newArray(int) -> newArray
    2500:2500:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
    80:97:void <init>(android.content.Context) -> <init>
    303:303:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    348:358:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    322:332:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    172:172:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    197:197:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    211:211:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    0:0:int clampApplyScroll(int,int) -> clampApplyScroll
    224:224:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    176:180:float getSpeedPerPixel() -> getSpeedPerPixel
    238:238:int getVerticalSnapPreference() -> getVerticalSnapPreference
    132:146:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    0:0:void onStart() -> onStart
    156:157:void onStop() -> onStop
    114:119:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    251:267:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.LinearSnapHelper -> androidx.recyclerview.widget.LinearSnapHelper:
    33:33:void <init>() -> <init>
    47:56:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    226:252:float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> computeDistancePerChild
    142:144:int distanceToCenter(android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    161:168:int estimateNextPositionDiffForFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper,int,int) -> estimateNextPositionDiffForFling
    183:196:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    133:136:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    66:116:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    271:274:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    262:265:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
androidx.recyclerview.widget.ListAdapter -> androidx.recyclerview.widget.ListAdapter:
    97:110:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    97:116:void <init>(androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    173:173:java.util.List getCurrentList() -> getCurrentList
    150:150:java.lang.Object getItem(int) -> getItem
    155:155:int getItemCount() -> getItemCount
    0:0:void onCurrentListChanged(java.util.List,java.util.List) -> onCurrentListChanged
    128:128:void submitList(java.util.List) -> submitList
    146:146:void submitList(java.util.List,java.lang.Runnable) -> submitList
androidx.recyclerview.widget.ListAdapter$1 -> androidx.recyclerview.widget.ListAdapter$1:
    98:98:void <init>(androidx.recyclerview.widget.ListAdapter) -> <init>
    102:102:void onCurrentListChanged(java.util.List,java.util.List) -> onCurrentListChanged
androidx.recyclerview.widget.MessageThreadUtil -> androidx.recyclerview.widget.MessageThreadUtil:
    26:26:void <init>() -> <init>
    88:88:androidx.recyclerview.widget.ThreadUtil$BackgroundCallback getBackgroundProxy(androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> getBackgroundProxy
    30:30:androidx.recyclerview.widget.ThreadUtil$MainThreadCallback getMainThreadProxy(androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> getMainThreadProxy
androidx.recyclerview.widget.MessageThreadUtil$1 -> androidx.recyclerview.widget.MessageThreadUtil$1:
    30:58:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> <init>
    45:45:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> addTile
    50:50:void removeTile(int,int) -> removeTile
    54:55:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    40:40:void updateItemCount(int,int) -> updateItemCount
androidx.recyclerview.widget.MessageThreadUtil$1$1 -> androidx.recyclerview.widget.MessageThreadUtil$1$1:
    58:58:void <init>(androidx.recyclerview.widget.MessageThreadUtil$1) -> <init>
    61:78:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$2 -> androidx.recyclerview.widget.MessageThreadUtil$2:
    88:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> <init>
    112:112:void loadTile(int,int) -> loadTile
    131:132:void maybeExecuteBackgroundRunnable() -> maybeExecuteBackgroundRunnable
    117:117:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> recycleTile
    100:100:void refresh(int) -> refresh
    121:122:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    126:127:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
    106:106:void updateRange(int,int,int,int,int) -> updateRange
androidx.recyclerview.widget.MessageThreadUtil$2$1 -> androidx.recyclerview.widget.MessageThreadUtil$2$1:
    136:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil$2) -> <init>
    140:167:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue -> androidx.recyclerview.widget.MessageThreadUtil$MessageQueue:
    233:236:void <init>() -> <init>
    239:246:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next() -> next
    271:291:void removeMessages(int) -> removeMessages
    257:267:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    250:253:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem -> androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem:
    180:180:void <clinit>() -> <clinit>
    177:177:void <init>() -> <init>
    204:221:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int,int,int,int,java.lang.Object) -> obtainMessage
    225:225:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int) -> obtainMessage
    229:229:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,java.lang.Object) -> obtainMessage
    191:199:void recycle() -> recycle
androidx.recyclerview.widget.NestedAdapterWrapper -> androidx.recyclerview.widget.NestedAdapterWrapper:
    47:132:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.NestedAdapterWrapper$Callback,androidx.recyclerview.widget.ViewTypeStorage,androidx.recyclerview.widget.StableIdStorage$StableIdLookup) -> <init>
    137:138:void dispose() -> dispose
    142:142:int getCachedItemCount() -> getCachedItemCount
    161:162:long getItemId(int) -> getItemId
    146:146:int getItemViewType(int) -> getItemViewType
    157:157:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    152:153:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
androidx.recyclerview.widget.NestedAdapterWrapper$1 -> androidx.recyclerview.widget.NestedAdapterWrapper$1:
    48:48:void <init>(androidx.recyclerview.widget.NestedAdapterWrapper) -> <init>
    51:52:void onChanged() -> onChanged
    57:57:void onItemRangeChanged(int,int) -> onItemRangeChanged
    68:68:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    78:85:void onItemRangeInserted(int,int) -> onItemRangeInserted
    105:107:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    91:99:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    116:116:void onStateRestorationPolicyChanged() -> onStateRestorationPolicyChanged
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:26:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    214:216:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:34:void reorderOps(java.util.List) -> reorderOps
    157:171:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:49:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    61:149:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    179:208:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:47:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    243:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    55:55:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:64:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    298:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    282:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    290:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    305:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    329:329:void offsetChild(android.view.View,int) -> offsetChild
    271:271:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    396:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    380:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    388:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    403:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    427:427:void offsetChild(android.view.View,int) -> offsetChild
    369:369:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.PagerSnapHelper:
    39:39:void <init>() -> <init>
    53:62:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    174:177:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    204:206:int distanceToCenter(android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    222:235:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    73:76:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    85:140:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    268:271:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    248:251:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getOrientationHelper
    259:262:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
    150:150:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> isForwardFling
    158:164:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> isReverseLayout
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.PagerSnapHelper$1:
    177:177:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    193:193:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    198:198:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    181:187:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    227:668:void <clinit>() -> <clinit>
    735:735:void <init>(android.content.Context) -> <init>
    739:739:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    419:817:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    3028:3052:void absorbGlows(int,int) -> absorbGlows
    217:217:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    217:217:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    217:217:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    217:217:void access$300(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$300
    217:217:void access$400(androidx.recyclerview.widget.RecyclerView,android.view.View) -> access$400
    217:217:void access$500(androidx.recyclerview.widget.RecyclerView,int,int) -> access$500
    1571:1580:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    3368:3369:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1708:1721:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1737:1737:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1407:1410:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    3510:3510:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1845:1848:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    1363:1365:void addRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> addRecyclerListener
    4878:4880:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4896:4912:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4886:4889:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    3461:3466:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    3479:3492:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    5189:5190:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3923:3924:void cancelScroll() -> cancelScroll
    5015:5015:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    6467:6481:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    5069:5076:void clearOldPositions() -> clearOldPositions
    1431:1432:void clearOnChildAttachStateChangeListeners() -> clearOnChildAttachStateChangeListeners
    1866:1867:void clearOnScrollListeners() -> clearOnScrollListeners
    2313:2316:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    2288:2291:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2336:2339:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2385:2388:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2361:2364:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2408:2411:int computeVerticalScrollRange() -> computeVerticalScrollRange
    3005:3022:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    2858:2858:int consumeFlingInHorizontalStretch(int) -> consumeFlingInHorizontalStretch
    2889:2903:int consumeFlingInStretch(int,android.widget.EdgeEffect,android.widget.EdgeEffect,int) -> consumeFlingInStretch
    2870:2870:int consumeFlingInVerticalStretch(int) -> consumeFlingInVerticalStretch
    2074:2107:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    877:921:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    4091:4098:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4837:4838:boolean didChildRangeChange(int,int) -> didChildRangeChange
    8374:8382:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    8359:8367:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    4160:4166:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    4322:4367:void dispatchLayout() -> dispatchLayout
    4539:4623:void dispatchLayoutStep1() -> dispatchLayoutStep1
    4631:4653:void dispatchLayoutStep2() -> dispatchLayoutStep2
    4661:4744:void dispatchLayoutStep3() -> dispatchLayoutStep3
    12505:12505:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    12510:12510:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    12493:12493:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    12499:12499:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    12473:12473:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    12480:12480:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    12487:12487:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5725:5739:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    5669:5691:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    12384:12397:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    4226:4226:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1558:1558:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1550:1550:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3550:3559:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4944:4999:void draw(android.graphics.Canvas) -> draw
    5545:5545:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    3097:3105:void ensureBottomGlow() -> ensureBottomGlow
    3057:3065:void ensureLeftGlow() -> ensureLeftGlow
    3070:3078:void ensureRightGlow() -> ensureRightGlow
    3083:3091:void ensureTopGlow() -> ensureTopGlow
    825:828:java.lang.String exceptionLabel() -> exceptionLabel
    4521:4527:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    5528:5536:android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    5304:5307:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    5321:5322:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    3579:3584:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    4811:4833:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    6445:6455:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    4408:4428:android.view.View findNextViewToFocus() -> findNextViewToFocus
    5439:5449:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    5501:5509:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    5417:5417:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> findViewHolderForLayoutPosition
    5389:5389:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> findViewHolderForPosition
    5461:5473:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2729:2819:boolean fling(int,int) -> fling
    3172:3246:android.view.View focusSearch(android.view.View,int) -> focusSearch
    5020:5023:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    5028:5031:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    5036:5039:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    0:0:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    1332:1332:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    12401:12406:int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionInRecyclerView
    1387:1390:int getBaseline() -> getBaseline
    4873:4873:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    5349:5350:int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    14420:14423:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    5375:5379:long getChildItemId(android.view.View) -> getChildItemId
    5364:5365:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    5339:5339:int getChildPosition(android.view.View) -> getChildPosition
    5283:5288:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    5330:5330:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1203:1203:boolean getClipToPadding() -> getClipToPadding
    852:852:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    5607:5607:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    5611:5616:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    4509:4514:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    3137:3137:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    929:935:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    4241:4241:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    5620:5640:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1749:1754:androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> getItemDecorationAt
    1763:1763:int getItemDecorationCount() -> getItemDecorationCount
    1615:1615:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2945:2945:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2935:2935:int getMinFlingVelocity() -> getMinFlingVelocity
    6492:6493:long getNanoTime() -> getNanoTime
    1509:1509:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    5256:5256:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1628:1628:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1675:1675:int getScrollState() -> getScrollState
    14449:14452:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    5716:5719:float getSplineFlingDistance(int) -> getSplineFlingDistance
    4765:4791:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    1175:1175:boolean hasFixedSize() -> hasFixedSize
    12462:12462:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    12467:12467:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5758:5759:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    2115:2121:boolean hasUpdatedView() -> hasUpdatedView
    1073:1073:void initAdapterManager() -> initAdapterManager
    839:840:void initAutofill() -> initAutofill
    939:939:void initChildrenHelper() -> initChildrenHelper
    12415:12425:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    3110:3110:void invalidateGlows() -> invalidateGlows
    5234:5242:void invalidateItemDecorations() -> invalidateItemDecorations
    4156:4156:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    5051:5051:boolean isAnimating() -> isAnimating
    3450:3450:boolean isAttachedToWindow() -> isAttachedToWindow
    4190:4190:boolean isComputingLayout() -> isComputingLayout
    2568:2568:boolean isLayoutFrozen() -> isLayoutFrozen
    2531:2531:boolean isLayoutSuppressed() -> isLayoutSuppressed
    12437:12437:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    3262:3312:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1895:1903:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4934:4939:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    5218:5226:void markKnownViewsInvalid() -> markKnownViewsInvalid
    1964:1964:void nestedScrollBy(int,int) -> nestedScrollBy
    1979:2022:void nestedScrollByInternal(int,int,android.view.MotionEvent,int) -> nestedScrollByInternal
    5593:5595:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5555:5557:void offsetChildrenVertical(int) -> offsetChildrenVertical
    5114:5127:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    5080:5110:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    5133:5157:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    3385:3416:void onAttachedToWindow() -> onAttachedToWindow
    0:0:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    0:0:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    3422:3441:void onDetachedFromWindow() -> onDetachedFromWindow
    5005:5009:void onDraw(android.graphics.Canvas) -> onDraw
    4133:4133:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    4137:4137:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    4141:4150:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3940:3981:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3593:3700:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4918:4921:void onLayout(boolean,int,int,int,int) -> onLayout
    3990:4080:void onMeasure(int,int) -> onMeasure
    3928:3934:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    3375:3380:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1528:1542:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1514:1520:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    0:0:void onScrollStateChanged(int) -> onScrollStateChanged
    0:0:void onScrolled(int,int) -> onScrolled
    4103:4105:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3751:3909:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    4249:4251:void postAnimationRunner() -> postAnimationRunner
    4256:4256:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    4266:4293:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    5208:5210:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2954:2976:void pullGlows(float,float,float,float) -> pullGlows
    4801:4807:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    4435:4504:void recoverFocusFromState() -> recoverFocusFromState
    2982:2999:void releaseGlows() -> releaseGlows
    2201:2225:int releaseHorizontalGlow(int,float) -> releaseHorizontalGlow
    2241:2265:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    1276:1288:void removeAndRecycleViews() -> removeAndRecycleViews
    1592:1603:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4844:4865:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1790:1799:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    1772:1777:void removeItemDecorationAt(int) -> removeItemDecorationAt
    1420:1423:void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    3519:3521:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1857:1858:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    1374:1374:void removeRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> removeRecyclerListener
    6037:6048:void repositionShadowingViews() -> repositionShadowingViews
    3317:3320:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    3335:3357:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    3363:3363:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3741:3746:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4926:4929:void requestLayout() -> requestLayout
    4392:4394:void resetFocusInfo() -> resetFocusInfo
    3915:3919:void resetScroll() -> resetScroll
    4372:4387:void saveFocusInfo() -> saveFocusInfo
    5055:5063:void saveOldPositions() -> saveOldPositions
    1941:1952:void scrollBy(int,int) -> scrollBy
    2145:2183:boolean scrollByInternal(int,int,android.view.MotionEvent,int) -> scrollByInternal
    2038:2061:void scrollStep(int,int,int[]) -> scrollStep
    1935:1935:void scrollTo(int,int) -> scrollTo
    1881:1891:void scrollToPosition(int) -> scrollToPosition
    4218:4221:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    862:863:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1265:1268:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1303:1321:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1816:1820:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    12374:12379:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1180:1186:void setClipToPadding(boolean) -> setClipToPadding
    403:403:void setDebugAssertionsEnabled(boolean) -> setDebugAssertionsEnabled
    3123:3125:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1167:1167:void setHasFixedSize(boolean) -> setHasFixedSize
    4122:4128:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1665:1665:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2559:2559:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1449:1487:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2598:2600:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    12432:12432:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1499:1499:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1832:1832:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    5273:5273:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1640:1640:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1349:1349:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1679:1690:void setScrollState(int) -> setScrollState
    1216:1227:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    416:416:void setVerboseLoggingEnabled(boolean) -> setVerboseLoggingEnabled
    1650:1650:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    2841:2844:boolean shouldAbsorb(android.widget.EdgeEffect,int,int) -> shouldAbsorb
    4202:4210:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2613:2613:void smoothScrollBy(int,int) -> smoothScrollBy
    2625:2625:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2644:2644:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2682:2711:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    1922:1930:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2426:2428:void startInterceptRequestLayout() -> startInterceptRequestLayout
    12442:12442:boolean startNestedScroll(int) -> startNestedScroll
    12447:12447:boolean startNestedScroll(int,int) -> startNestedScroll
    3716:3733:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    2443:2473:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    12452:12452:void stopNestedScroll() -> stopNestedScroll
    12457:12457:void stopNestedScroll(int) -> stopNestedScroll
    2915:2916:void stopScroll() -> stopScroll
    2923:2925:void stopScrollersInternal() -> stopScrollersInternal
    2503:2518:void suppressLayout(boolean) -> suppressLayout
    1248:1251:void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> swapAdapter
    5167:5185:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    452:452:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    455:468:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    650:650:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    653:656:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    660:660:void <init>() -> <init>
    0:0:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    697:697:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    708:708:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    701:702:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    714:724:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    730:730:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    939:939:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    950:954:void addView(android.view.View,int) -> addView
    1010:1027:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    1032:1051:void detachViewFromParent(int) -> detachViewFromParent
    984:984:android.view.View getChildAt(int) -> getChildAt
    942:942:int getChildCount() -> getChildCount
    1004:1004:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    959:959:int indexOfChild(android.view.View) -> indexOfChild
    1056:1058:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    1064:1066:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    989:999:void removeAllViews() -> removeAllViews
    964:976:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    1073:1073:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1118:1130:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    1076:1084:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    1108:1109:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1142:1143:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1148:1150:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    1093:1095:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    1101:1102:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1114:1114:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1137:1137:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$7 -> androidx.recyclerview.widget.RecyclerView$7:
    8323:8323:void <clinit>() -> <clinit>
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    7666:7669:void <init>() -> <init>
    7818:7854:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    8323:8327:boolean canRestoreState() -> canRestoreState
    7787:7798:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    0:0:int findRelativeAdapterPositionIn(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> findRelativeAdapterPositionIn
    0:0:long getItemId(int) -> getItemId
    0:0:int getItemViewType(int) -> getItemViewType
    8312:8312:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy getStateRestorationPolicy() -> getStateRestorationPolicy
    8009:8009:boolean hasObservers() -> hasObservers
    7917:7917:boolean hasStableIds() -> hasStableIds
    8094:8094:void notifyDataSetChanged() -> notifyDataSetChanged
    8109:8109:void notifyItemChanged(int) -> notifyItemChanged
    8136:8136:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    8199:8199:void notifyItemInserted(int) -> notifyItemInserted
    8214:8214:void notifyItemMoved(int,int) -> notifyItemMoved
    8153:8153:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    8183:8183:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    8232:8232:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    8265:8265:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    8248:8248:void notifyItemRemoved(int) -> notifyItemRemoved
    0:0:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    7747:7747:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    0:0:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    0:0:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    0:0:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    0:0:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    8028:8028:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7883:7887:void setHasStableIds(boolean) -> setHasStableIds
    8299:8300:void setStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy) -> setStateRestorationPolicy
    8041:8041:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy -> androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy:
    8337:8353:void <clinit>() -> <clinit>
    8337:8337:void <init>(java.lang.String,int) -> <init>
    8337:8337:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String) -> valueOf
    8337:8337:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values() -> values
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    13187:13187:void <init>() -> <init>
    13189:13189:boolean hasObservers() -> hasObservers
    13197:13198:void notifyChanged() -> notifyChanged
    13244:13245:void notifyItemMoved(int,int) -> notifyItemMoved
    13209:13209:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    13218:13219:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    13228:13229:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    13238:13239:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    13203:13204:void notifyStateRestorationPolicyChanged() -> notifyStateRestorationPolicyChanged
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    12651:12651:void <init>() -> <init>
    0:0:void onChanged() -> onChanged
    0:0:void onItemRangeChanged(int,int) -> onItemRangeChanged
    12663:12663:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    0:0:void onItemRangeInserted(int,int) -> onItemRangeInserted
    0:0:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    0:0:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    0:0:void onStateRestorationPolicyChanged() -> onStateRestorationPolicyChanged
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    6130:6130:void <init>() -> <init>
    6163:6163:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    13684:13754:void <init>() -> <init>
    14071:14077:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    0:0:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    14287:14287:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    14155:14157:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    14196:14196:void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationStarted
    14295:14299:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    13780:13780:long getAddDuration() -> getAddDuration
    13816:13816:long getChangeDuration() -> getChangeDuration
    13762:13762:long getMoveDuration() -> getMoveDuration
    13798:13798:long getRemoveDuration() -> getRemoveDuration
    14228:14233:boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    14313:14313:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    0:0:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    0:0:void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationStarted
    13903:13903:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    13875:13875:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    13789:13789:void setAddDuration(long) -> setAddDuration
    13825:13825:void setChangeDuration(long) -> setChangeDuration
    13837:13837:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
    13771:13771:void setMoveDuration(long) -> setMoveDuration
    13807:13807:void setRemoveDuration(long) -> setRemoveDuration
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    14380:14380:void <init>() -> <init>
    14392:14392:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    14408:14412:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    13642:13642:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    13647:13656:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    11515:11515:void <init>() -> <init>
    11564:11564:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    11589:11589:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    0:0:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    11526:11526:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    0:0:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
    11547:11547:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    8402:8509:void <init>() -> <init>
    9344:9344:void addDisappearingView(android.view.View) -> addDisappearingView
    9363:9363:void addDisappearingView(android.view.View,int) -> addDisappearingView
    9375:9375:void addView(android.view.View) -> addView
    9388:9388:void addView(android.view.View,int) -> addView
    9392:9441:void addViewInt(android.view.View,int,boolean) -> addViewInt
    8680:8681:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    8717:8718:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    9632:9638:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    9653:9653:void attachView(android.view.View,int) -> attachView
    9664:9664:void attachView(android.view.View) -> attachView
    10527:10532:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    0:0:boolean canScrollHorizontally() -> canScrollHorizontally
    0:0:boolean canScrollVertically() -> canScrollVertically
    0:0:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    8695:8704:int chooseSize(int,int,int) -> chooseSize
    0:0:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    0:0:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    0:0:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    0:0:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    0:0:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    0:0:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    0:0:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    0:0:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    10019:10022:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    9703:9704:void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapView
    9717:9718:void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapViewAt
    9590:9592:void detachView(android.view.View) -> detachView
    9612:9612:void detachViewAt(int) -> detachViewAt
    9619:9619:void detachViewInternal(int,android.view.View) -> detachViewInternal
    8930:8931:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8935:8936:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    9324:9325:void endAnimation(android.view.View) -> endAnimation
    9531:9538:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    9559:9567:android.view.View findViewByPosition(int) -> findViewByPosition
    9164:9169:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    9189:9189:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    0:0:int getBaseline() -> getBaseline
    10562:10562:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    9762:9762:android.view.View getChildAt(int) -> getChildAt
    9751:9751:int getChildCount() -> getChildCount
    10228:10254:int getChildMeasureSpec(int,int,int,boolean) -> getChildMeasureSpec
    10270:10311:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    10656:10685:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    9043:9043:boolean getClipToPadding() -> getClipToPadding
    0:0:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    10506:10506:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    10458:10458:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    10470:10470:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    10336:10337:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    10323:10324:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    10494:10494:int getDecoratedRight(android.view.View) -> getDecoratedRight
    10482:10482:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9916:9920:android.view.View getFocusedChild() -> getFocusedChild
    9826:9826:int getHeight() -> getHeight
    9794:9794:int getHeightMode() -> getHeightMode
    9939:9940:int getItemCount() -> getItemCount
    9513:9513:int getItemViewType(android.view.View) -> getItemViewType
    9313:9313:int getLayoutDirection() -> getLayoutDirection
    10577:10577:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    11085:11085:int getMinimumHeight() -> getMinimumHeight
    11077:11077:int getMinimumWidth() -> getMinimumWidth
    9866:9866:int getPaddingBottom() -> getPaddingBottom
    9886:9886:int getPaddingEnd() -> getPaddingEnd
    9836:9836:int getPaddingLeft() -> getPaddingLeft
    9856:9856:int getPaddingRight() -> getPaddingRight
    9876:9876:int getPaddingStart() -> getPaddingStart
    9846:9846:int getPaddingTop() -> getPaddingTop
    9503:9503:int getPosition(android.view.View) -> getPosition
    11445:11453:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    10592:10592:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    0:0:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    0:0:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    10547:10547:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    10426:10447:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    9810:9810:int getWidth() -> getWidth
    9778:9778:int getWidthMode() -> getWidthMode
    11479:11483:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    9906:9906:boolean hasFocus() -> hasFocus
    9984:9992:void ignoreView(android.view.View) -> ignoreView
    8947:8947:boolean isAttachedToWindow() -> isAttachedToWindow
    8808:8808:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9896:9896:boolean isFocused() -> isFocused
    10794:10805:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8873:8873:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    0:0:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    10151:10151:boolean isMeasurementCacheEnabled() -> isMeasurementCacheEnabled
    10166:10167:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    9301:9301:boolean isSmoothScrolling() -> isSmoothScrolling
    10773:10775:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    10370:10371:void layoutDecorated(android.view.View,int,int,int,int) -> layoutDecorated
    10405:10407:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    10097:10109:void measureChild(android.view.View,int,int) -> measureChild
    10195:10210:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    9684:9690:void moveView(int,int) -> moveView
    9950:9951:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9962:9963:void offsetChildrenVertical(int) -> offsetChildrenVertical
    0:0:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    0:0:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    0:0:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    0:0:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    9034:9034:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    0:0:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    11210:11210:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    11226:11235:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    11161:11161:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    11191:11205:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    0:0:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    11241:11244:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    0:0:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    0:0:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    0:0:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    0:0:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    0:0:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    0:0:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    10928:10928:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    9099:9099:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    0:0:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    11058:11058:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    10819:10819:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10841:10841:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    0:0:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    0:0:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    0:0:void onScrollStateChanged(int) -> onScrollStateChanged
    11125:11126:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    11350:11350:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    11366:11401:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    0:0:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    11408:11408:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    8960:8961:void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    9479:9481:void removeAllViews() -> removeAllViews
    11151:11154:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    10055:10080:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    9728:9729:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    9739:9741:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8978:8979:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    9674:9674:void removeDetachedView(android.view.View) -> removeDetachedView
    9455:9455:void removeView(android.view.View) -> removeView
    9467:9469:void removeViewAt(int) -> removeViewAt
    10708:10708:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    10729:10738:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    8667:8668:void requestLayout() -> requestLayout
    11278:11278:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    10027:10041:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    0:0:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    9256:9257:void scrollToPosition(int) -> scrollToPosition
    0:0:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    8736:8736:void setAutoMeasureEnabled(boolean) -> setAutoMeasureEnabled
    11458:11460:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    8856:8860:void setItemPrefetchEnabled(boolean) -> setItemPrefetchEnabled
    8578:8587:void setMeasureSpecs(int,int) -> setMeasureSpecs
    8656:8660:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    11069:11069:void setMeasuredDimension(int,int) -> setMeasuredDimension
    8605:8633:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    10162:10162:void setMeasurementCacheEnabled(boolean) -> setMeasurementCacheEnabled
    8563:8574:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    10135:10138:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    0:0:boolean shouldMeasureTwice() -> shouldMeasureTwice
    10120:10122:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    9274:9274:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    9289:9294:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    10005:10008:void stopIgnoringView(android.view.View) -> stopIgnoringView
    11119:11120:void stopSmoothScroller() -> stopSmoothScroller
    0:0:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    8411:8411:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    8414:8414:android.view.View getChildAt(int) -> getChildAt
    8437:8438:int getChildEnd(android.view.View) -> getChildEnd
    8430:8431:int getChildStart(android.view.View) -> getChildStart
    8424:8424:int getParentEnd() -> getParentEnd
    8419:8419:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    8447:8447:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    8450:8450:android.view.View getChildAt(int) -> getChildAt
    8474:8475:int getChildEnd(android.view.View) -> getChildEnd
    8467:8468:int getChildStart(android.view.View) -> getChildStart
    8460:8461:int getParentEnd() -> getParentEnd
    8455:8455:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    11493:11493:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    12521:12529:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    12521:12533:void <init>(int,int) -> <init>
    12521:12537:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    12521:12541:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    12521:12545:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    12631:12631:int getAbsoluteAdapterPosition() -> getAbsoluteAdapterPosition
    12643:12643:int getBindingAdapterPosition() -> getBindingAdapterPosition
    12616:12616:int getViewAdapterPosition() -> getViewAdapterPosition
    12605:12605:int getViewLayoutPosition() -> getViewLayoutPosition
    12595:12595:int getViewPosition() -> getViewPosition
    12587:12587:boolean isItemChanged() -> isItemChanged
    12576:12576:boolean isItemRemoved() -> isItemRemoved
    12565:12565:boolean isViewInvalid() -> isViewInvalid
    12555:12555:boolean viewNeedsUpdate() -> viewNeedsUpdate
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    13620:13620:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    11677:11677:void <init>() -> <init>
    0:0:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    0:0:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    6186:6238:void <init>() -> <init>
    6364:6364:void attach() -> attach
    6379:6379:void attachForPoolingContainer(androidx.recyclerview.widget.RecyclerView$Adapter) -> attachForPoolingContainer
    6244:6249:void clear() -> clear
    6368:6368:void detach() -> detach
    6393:6399:void detachForPoolingContainer(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> detachForPoolingContainer
    6348:6349:void factorInBindTime(int,long) -> factorInBindTime
    6342:6343:void factorInCreateTime(int,long) -> factorInCreateTime
    6285:6290:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    6272:6272:int getRecycledViewCount(int) -> getRecycledViewCount
    6431:6434:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    6420:6426:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6321:6331:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    6338:6338:long runningAverage(long,long) -> runningAverage
    6260:6264:void setMaxRecycledViews(int,int) -> setMaxRecycledViews
    6304:6307:int size() -> size
    6359:6359:boolean willBindInTime(int,long,long) -> willBindInTime
    6354:6354:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    6203:6207:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    6512:6522:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    7163:7181:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6937:6954:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    6677:6705:void bindViewToPosition(android.view.View,int) -> bindViewToPosition
    6535:6536:void clear() -> clear
    7593:7605:void clearOldPositions() -> clearOldPositions
    7252:7254:void clearScrap() -> clearScrap
    6727:6734:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    7406:7420:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    7261:7280:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    7550:7554:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    7244:7244:int getScrapCount() -> getScrapCount
    6567:6567:java.util.List getScrapList() -> getScrapList
    7352:7395:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    7297:7341:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    7248:7248:android.view.View getScrapViewAt(int) -> getScrapViewAt
    6753:6753:android.view.View getViewForPosition(int) -> getViewForPosition
    6757:6757:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6959:6960:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6965:6981:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    7611:7616:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    7577:7588:void markKnownViewsInvalid() -> markKnownViewsInvalid
    7521:7524:void maybeSendPoolingContainerAttach() -> maybeSendPoolingContainerAttach
    7462:7471:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    7443:7455:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    7484:7498:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    7425:7429:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    7539:7539:void onAttachedToWindow() -> onAttachedToWindow
    7543:7546:void onDetachedFromWindow() -> onDetachedFromWindow
    7529:7529:void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter) -> poolingContainerDetach
    7533:7534:void poolingContainerDetach(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> poolingContainerDetach
    7190:7194:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    7028:7034:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    7050:7058:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6998:7023:void recycleView(android.view.View) -> recycleView
    7067:7150:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    7207:7222:void scrapView(android.view.View) -> scrapView
    7509:7517:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    7505:7505:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    6545:6546:void setViewCacheSize(int) -> setViewCacheSize
    6619:6656:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    6780:6932:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    7233:7240:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    6550:6556:void updateViewCacheSize() -> updateViewCacheSize
    6581:6600:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    7559:7569:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    6055:6055:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6060:6065:void onChanged() -> onChanged
    6071:6073:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    6079:6081:void onItemRangeInserted(int,int) -> onItemRangeInserted
    6095:6097:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    6087:6089:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    6112:6120:void onStateRestorationPolicyChanged() -> onStateRestorationPolicyChanged
    6102:6106:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    13287:13287:void <clinit>() -> <clinit>
    13265:13267:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    13274:13274:void <init>(android.os.Parcelable) -> <init>
    13284:13284:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    13279:13280:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    13287:13287:void <init>() -> <init>
    13287:13287:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    13287:13287:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    13290:13290:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    13295:13295:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    13287:13287:java.lang.Object[] newArray(int) -> newArray
    13300:13300:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener:
    11653:11653:void <init>() -> <init>
    0:0:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    0:0:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    0:0:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    12702:12719:void <init>() -> <init>
    12776:12782:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    12913:12913:android.view.View findViewByPosition(int) -> findViewByPosition
    12906:12906:int getChildCount() -> getChildCount
    12899:12899:int getChildPosition(android.view.View) -> getChildPosition
    12792:12792:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    12844:12844:int getTargetPosition() -> getTargetPosition
    12922:12922:void instantScrollToPosition(int) -> instantScrollToPosition
    12826:12826:boolean isPendingInitialRun() -> isPendingInitialRun
    12834:12834:boolean isRunning() -> isRunning
    12940:12943:void normalize(android.graphics.PointF) -> normalize
    12848:12889:void onAnimation(int,int) -> onAnimation
    12926:12929:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    12762:12762:void setTargetPosition(int) -> setTargetPosition
    12737:12758:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    12802:12815:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    13014:13014:void <init>(int,int) -> <init>
    13023:13023:void <init>(int,int,int) -> <init>
    12999:13038:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    13118:13118:int getDuration() -> getDuration
    13099:13099:int getDx() -> getDx
    13109:13109:int getDy() -> getDy
    13128:13128:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    13061:13061:boolean hasJumpTarget() -> hasJumpTarget
    13057:13057:void jumpTo(int) -> jumpTo
    13065:13084:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    13122:13123:void setDuration(int) -> setDuration
    13103:13104:void setDx(int) -> setDx
    13113:13114:void setDy(int) -> setDy
    13139:13140:void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    13154:13158:void update(int,int,int,android.view.animation.Interpolator) -> update
    13089:13093:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    13315:13387:void <init>() -> <init>
    13321:13324:void assertLayoutStep(int) -> assertLayoutStep
    13540:13540:boolean didStructureChange() -> didStructureChange
    13492:13495:java.lang.Object get(int) -> get
    13568:13570:int getItemCount() -> getItemCount
    13581:13581:int getRemainingScrollHorizontal() -> getRemainingScrollHorizontal
    13592:13592:int getRemainingScrollVertical() -> getRemainingScrollVertical
    13522:13522:int getTargetScrollPosition() -> getTargetScrollPosition
    13532:13532:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    13435:13435:boolean isMeasuring() -> isMeasuring
    13444:13444:boolean isPreLayout() -> isPreLayout
    13413:13417:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    13507:13510:void put(int,java.lang.Object) -> put
    13476:13479:void remove(int) -> remove
    13597:13597:java.lang.String toString() -> toString
    13455:13455:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
    13466:13466:boolean willRunSimpleAnimations() -> willRunSimpleAnimations
androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory:
    6170:6170:void <init>() -> <init>
    6174:6174:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    7635:7635:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5767:5776:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6017:6025:int computeScrollDuration(int,int) -> computeScrollDuration
    5949:5960:void fling(int,int) -> fling
    5944:5945:void internalPostOnAnimation() -> internalPostOnAnimation
    5936:5939:void postOnAnimation() -> postOnAnimation
    5781:5931:void run() -> run
    5980:6007:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    6029:6030:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    11868:11868:void <clinit>() -> <clinit>
    11762:11902:void <init>(android.view.View) -> <init>
    12202:12205:void addChangePayload(java.lang.Object) -> addChangePayload
    12197:12197:void addFlags(int) -> addFlags
    11928:11929:void clearOldPosition() -> clearOldPosition
    12217:12220:void clearPayload() -> clearPayload
    12144:12144:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    12148:12148:void clearTmpDetachFlag() -> clearTmpDetachFlag
    12210:12212:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    12360:12360:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11906:11908:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    12081:12084:int getAbsoluteAdapterPosition() -> getAbsoluteAdapterPosition
    11993:11993:int getAdapterPosition() -> getAdapterPosition
    12096:12096:androidx.recyclerview.widget.RecyclerView$Adapter getBindingAdapter() -> getBindingAdapter
    12028:12043:int getBindingAdapterPosition() -> getBindingAdapterPosition
    12121:12121:long getItemId() -> getItemId
    12128:12128:int getItemViewType() -> getItemViewType
    11980:11980:int getLayoutPosition() -> getLayoutPosition
    12111:12111:int getOldPosition() -> getOldPosition
    11953:11953:int getPosition() -> getPosition
    12224:12233:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    12177:12177:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    12189:12189:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    12185:12185:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    12169:12169:boolean isBound() -> isBound
    12161:12161:boolean isInvalid() -> isInvalid
    12343:12344:boolean isRecyclable() -> isRecyclable
    12173:12173:boolean isRemoved() -> isRemoved
    12132:12132:boolean isScrap() -> isScrap
    12181:12181:boolean isTmpDetached() -> isTmpDetached
    12364:12364:boolean isUpdated() -> isUpdated
    12165:12165:boolean needsUpdate() -> needsUpdate
    11912:11923:void offsetPosition(int,boolean) -> offsetPosition
    12262:12268:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    12276:12278:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    12238:12254:void resetInternal() -> resetInternal
    11933:11934:void saveOldPosition() -> saveOldPosition
    12193:12193:void setFlags(int,int) -> setFlags
    12319:12334:void setIsRecyclable(boolean) -> setIsRecyclable
    12156:12157:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    12352:12352:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11939:11939:boolean shouldIgnore() -> shouldIgnore
    12152:12152:void stopIgnoring() -> stopIgnoring
    12284:12303:java.lang.String toString() -> toString
    12136:12136:void unScrap() -> unScrap
    12140:12140:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    44:50:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    109:109:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    90:94:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    79:81:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    64:68:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    122:130:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    219:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    263:267:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    148:148:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> getAndRemoveOriginalDelegateForItem
    241:245:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    157:168:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    230:234:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    252:256:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    178:191:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    138:140:void saveOriginalDelegate(android.view.View) -> saveOriginalDelegate
    197:201:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    208:212:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    99:99:void <init>() -> <init>
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    36:42:void <init>() -> <init>
    115:127:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    153:163:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    91:108:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    134:142:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    85:85:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    311:312:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    358:358:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    327:328:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    372:372:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    300:301:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    348:348:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    285:286:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    338:338:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    51:51:boolean getSupportsChangeAnimations() -> getSupportsChangeAnimations
    0:0:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    0:0:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    0:0:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    0:0:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    0:0:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    0:0:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    0:0:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    0:0:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
    72:72:void setSupportsChangeAnimations(boolean) -> setSupportsChangeAnimations
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
    35:43:void <init>() -> <init>
    94:105:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    140:143:int[] calculateScrollDistance(int,int) -> calculateScrollDistance
    212:212:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    228:231:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    124:125:void destroyCallbacks() -> destroyCallbacks
    66:76:boolean onFling(int,int) -> onFling
    113:117:void setupCallbacks() -> setupCallbacks
    159:174:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    184:197:void snapToTargetExistingView() -> snapToTargetExistingView
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$1:
    44:45:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    49:52:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    59:59:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.SnapHelper$2 -> androidx.recyclerview.widget.SnapHelper$2:
    231:231:void <init>(androidx.recyclerview.widget.SnapHelper,android.content.Context) -> <init>
    250:250:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    234:244:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.SortedList -> androidx.recyclerview.widget.SortedList:
    93:93:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback) -> <init>
    103:107:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback,int) -> <init>
    145:146:int add(java.lang.Object) -> add
    544:563:int add(java.lang.Object,boolean) -> add
    164:172:void addAll(java.lang.Object[],boolean) -> addAll
    184:184:void addAll(java.lang.Object[]) -> addAll
    195:196:void addAll(java.util.Collection) -> addAll
    254:265:void addAllInternal(java.lang.Object[]) -> addAllInternal
    795:811:void addToData(int,java.lang.Object) -> addToData
    520:527:void beginBatchedUpdates() -> beginBatchedUpdates
    824:831:void clear() -> clear
    815:816:java.lang.Object[] copyArray(java.lang.Object[]) -> copyArray
    534:539:void endBatchedUpdates() -> endBatchedUpdates
    746:755:int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int) -> findIndexOf
    399:399:int findSameItem(java.lang.Object,java.lang.Object[],int,int) -> findSameItem
    707:718:java.lang.Object get(int) -> get
    730:741:int indexOf(java.lang.Object) -> indexOf
    772:787:int linearEqualitySearch(java.lang.Object,int,int,int) -> linearEqualitySearch
    410:472:void merge(java.lang.Object[],int) -> merge
    687:693:void recalculatePositionOfItemAt(int) -> recalculatePositionOfItemAt
    576:577:boolean remove(java.lang.Object) -> remove
    595:599:boolean remove(java.lang.Object,boolean) -> remove
    588:590:java.lang.Object removeItemAt(int) -> removeItemAt
    604:608:void removeItemAtIndex(int,boolean) -> removeItemAtIndex
    219:224:void replaceAll(java.lang.Object[],boolean) -> replaceAll
    237:237:void replaceAll(java.lang.Object[]) -> replaceAll
    249:250:void replaceAll(java.util.Collection) -> replaceAll
    336:339:void replaceAllInsert(java.lang.Object) -> replaceAllInsert
    270:331:void replaceAllInternal(java.lang.Object[]) -> replaceAllInternal
    343:345:void replaceAllRemove() -> replaceAllRemove
    116:116:int size() -> size
    355:388:int sortAndDedup(java.lang.Object[]) -> sortAndDedup
    481:482:void throwIfInMutationOperation() -> throwIfInMutationOperation
    633:655:void updateItemAt(int,java.lang.Object) -> updateItemAt
androidx.recyclerview.widget.SortedList$BatchedCallback -> androidx.recyclerview.widget.SortedList$BatchedCallback:
    955:957:void <init>(androidx.recyclerview.widget.SortedList$Callback) -> <init>
    993:993:boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    998:998:boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    962:962:int compare(java.lang.Object,java.lang.Object) -> compare
    1012:1012:void dispatchLastEvent() -> dispatchLastEvent
    1004:1004:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
    982:982:void onChanged(int,int) -> onChanged
    988:988:void onChanged(int,int,java.lang.Object) -> onChanged
    967:967:void onInserted(int,int) -> onInserted
    977:977:void onMoved(int,int) -> onMoved
    972:972:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.SortedList$Callback -> androidx.recyclerview.widget.SortedList$Callback:
    842:842:void <init>() -> <init>
    0:0:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
    869:869:void onChanged(int,int,java.lang.Object) -> onChanged
androidx.recyclerview.widget.SortedListAdapterCallback -> androidx.recyclerview.widget.SortedListAdapterCallback:
    38:39:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    59:59:void onChanged(int,int) -> onChanged
    65:65:void onChanged(int,int,java.lang.Object) -> onChanged
    44:44:void onInserted(int,int) -> onInserted
    54:54:void onMoved(int,int) -> onMoved
    49:49:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.StableIdStorage$IsolatedStableIdStorage -> androidx.recyclerview.widget.StableIdStorage$IsolatedStableIdStorage:
    79:80:void <init>() -> <init>
    89:89:androidx.recyclerview.widget.StableIdStorage$StableIdLookup createStableIdLookup() -> createStableIdLookup
    83:83:long obtainId() -> obtainId
androidx.recyclerview.widget.StableIdStorage$IsolatedStableIdStorage$WrapperStableIdLookup -> androidx.recyclerview.widget.StableIdStorage$IsolatedStableIdStorage$WrapperStableIdLookup:
    92:93:void <init>(androidx.recyclerview.widget.StableIdStorage$IsolatedStableIdStorage) -> <init>
    97:102:long localToGlobal(long) -> localToGlobal
androidx.recyclerview.widget.StableIdStorage$NoStableIdStorage -> androidx.recyclerview.widget.StableIdStorage$NoStableIdStorage:
    41:42:void <init>() -> <init>
    52:52:androidx.recyclerview.widget.StableIdStorage$StableIdLookup createStableIdLookup() -> createStableIdLookup
androidx.recyclerview.widget.StableIdStorage$NoStableIdStorage$1 -> androidx.recyclerview.widget.StableIdStorage$NoStableIdStorage$1:
    42:42:void <init>(androidx.recyclerview.widget.StableIdStorage$NoStableIdStorage) -> <init>
    0:0:long localToGlobal(long) -> localToGlobal
androidx.recyclerview.widget.StableIdStorage$SharedPoolStableIdStorage -> androidx.recyclerview.widget.StableIdStorage$SharedPoolStableIdStorage:
    59:60:void <init>() -> <init>
    70:70:androidx.recyclerview.widget.StableIdStorage$StableIdLookup createStableIdLookup() -> createStableIdLookup
androidx.recyclerview.widget.StableIdStorage$SharedPoolStableIdStorage$1 -> androidx.recyclerview.widget.StableIdStorage$SharedPoolStableIdStorage$1:
    60:60:void <init>(androidx.recyclerview.widget.StableIdStorage$SharedPoolStableIdStorage) -> <init>
    0:0:long localToGlobal(long) -> localToGlobal
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    106:234:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    106:248:void <init>(int,int) -> <init>
    1780:1781:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    794:825:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1839:1841:boolean areAllEndsEqual() -> areAllEndsEqual
    1849:1851:boolean areAllStartsEqual() -> areAllStartsEqual
    527:528:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1724:1734:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2017:2021:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2001:2001:boolean canScrollHorizontally() -> canScrollHorizontally
    1996:1996:boolean canScrollVertically() -> canScrollVertically
    269:309:boolean checkForGaps() -> checkForGaps
    2247:2247:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    402:413:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2097:2127:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1096:1096:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1076:1076:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1116:1116:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1100:1105:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1080:1085:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1120:1125:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2026:2036:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1111:1111:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1091:1091:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1131:1131:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2368:2393:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1706:1709:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1715:1718:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    257:259:void createOrientationHelpers() -> createOrientationHelpers
    1549:1702:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    999:1005:int[] findFirstCompletelyVisibleItemPositions(int[]) -> findFirstCompletelyVisibleItemPositions
    2192:2195:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1361:1367:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1331:1338:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1319:1321:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    967:973:int[] findFirstVisibleItemPositions(int[]) -> findFirstVisibleItemPositions
    1063:1069:int[] findLastCompletelyVisibleItemPositions(int[]) -> findLastCompletelyVisibleItemPositions
    2209:2211:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1031:1037:int[] findLastVisibleItemPositions(int[]) -> findLastVisibleItemPositions
    1385:1398:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1404:1417:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2222:2226:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2233:2233:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2238:2241:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2182:2183:int getFirstChildPosition() -> getFirstChildPosition
    499:499:int getGapStrategy() -> getGapStrategy
    2177:2178:int getLastChildPosition() -> getLastChildPosition
    1859:1861:int getMaxEnd(int) -> getMaxEnd
    1817:1819:int getMaxStart(int) -> getMaxStart
    1870:1872:int getMinEnd(int) -> getMinEnd
    1828:1830:int getMinStart(int) -> getMinStart
    1954:1984:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    2251:2251:int getOrientation() -> getOrientation
    579:579:boolean getReverseLayout() -> getReverseLayout
    538:538:int getSpanCount() -> getSpanCount
    1505:1543:void handleUpdate(int,int,int) -> handleUpdate
    339:391:android.view.View hasGapsToFix() -> hasGapsToFix
    548:549:void invalidateSpanAssignments() -> invalidateSpanAssignments
    253:253:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    567:567:boolean isLayoutRTL() -> isLayoutRTL
    1136:1190:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1201:1211:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1460:1462:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1468:1470:void offsetChildrenVertical(int) -> offsetChildrenVertical
    611:613:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    322:329:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2258:2346:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1294:1308:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1481:1481:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1486:1487:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1492:1492:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1476:1476:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1498:1498:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    604:604:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    619:728:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    734:738:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1230:1236:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1244:1284:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    316:316:void onScrollStateChanged(int) -> onScrollStateChanged
    1944:1947:boolean preferLastSpan(int) -> preferLastSpan
    2136:2145:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1787:1788:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1740:1772:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1910:1933:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1881:1902:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    742:784:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    559:562:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2149:2172:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2007:2007:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2051:2056:void scrollToPosition(int) -> scrollToPosition
    2073:2078:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    2013:2013:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    512:522:void setGapStrategy(int) -> setGapStrategy
    1453:1455:void setLayoutStateDirection(int) -> setLayoutStateDirection
    586:599:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    449:459:void setOrientation(int) -> setOrientation
    476:481:void setReverseLayout(boolean) -> setReverseLayout
    428:437:void setSpanCount(int) -> setSpanCount
    2044:2046:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    943:943:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1793:1797:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    848:851:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    857:929:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    830:840:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1422:1449:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    935:938:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1802:1811:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1220:1223:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    215:215:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    218:218:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3243:3244:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3270:3271:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3275:3278:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3248:3254:void reset() -> reset
    3259:3265:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2424:2424:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2428:2428:void <init>(int,int) -> <init>
    2432:2432:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2436:2436:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2440:2440:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    2472:2475:int getSpanIndex() -> getSpanIndex
    2462:2462:boolean isFullSpan() -> isFullSpan
    2452:2452:void setFullSpan(boolean) -> setFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2812:2812:void <init>() -> <init>
    2983:3002:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2891:2894:void clear() -> clear
    2879:2886:void ensureSize(int) -> ensureSize
    2823:2831:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3027:3036:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3006:3011:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2858:2861:int getSpan(int) -> getSpan
    2838:2852:int invalidateAfter(int) -> invalidateAfter
    2957:2977:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2928:2936:void offsetForAddition(int,int) -> offsetForAddition
    2898:2906:void offsetForRemoval(int,int) -> offsetForRemoval
    2940:2948:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2910:2922:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2866:2867:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2871:2871:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3105:3105:void <clinit>() -> <clinit>
    3059:3066:void <init>(android.os.Parcel) -> <init>
    3070:3070:void <init>() -> <init>
    0:0:int describeContents() -> describeContents
    3074:3074:int getGapForSpan(int) -> getGapForSpan
    3097:3101:java.lang.String toString() -> toString
    3084:3091:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3106:3106:void <init>() -> <init>
    3106:3106:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3109:3109:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3106:3106:java.lang.Object[] newArray(int) -> newArray
    3114:3114:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3215:3215:void <clinit>() -> <clinit>
    3138:3138:void <init>() -> <init>
    3141:3161:void <init>(android.os.Parcel) -> <init>
    3164:3174:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    0:0:int describeContents() -> describeContents
    3186:3189:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3178:3182:void invalidateSpanInfo() -> invalidateSpanInfo
    3199:3212:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3216:3216:void <init>() -> <init>
    3216:3216:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3219:3219:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3216:3216:java.lang.Object[] newArray(int) -> newArray
    3224:3224:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2483:2490:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2574:2582:void appendToSpan(android.view.View) -> appendToSpan
    2590:2605:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2539:2546:void calculateCachedEnd() -> calculateCachedEnd
    2505:2512:void calculateCachedStart() -> calculateCachedStart
    2609:2611:void clear() -> clear
    2680:2682:int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    2674:2676:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2668:2670:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    2698:2700:int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    2692:2694:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2686:2688:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2730:2753:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2767:2767:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2761:2761:int findOneVisibleChild(int,int,boolean) -> findOneVisibleChild
    2651:2651:int getDeletedSize() -> getDeletedSize
    2527:2535:int getEndLine(int) -> getEndLine
    2553:2557:int getEndLine() -> getEndLine
    2777:2797:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2655:2655:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2494:2501:int getStartLine(int) -> getStartLine
    2519:2523:int getStartLine() -> getStartLine
    2615:2616:void invalidateCache() -> invalidateCache
    2659:2663:void onOffset(int) -> onOffset
    2624:2634:void popEnd() -> popEnd
    2638:2647:void popStart() -> popStart
    2561:2569:void prependToSpan(android.view.View) -> prependToSpan
    2620:2620:void setLine(int) -> setLine
androidx.recyclerview.widget.TileList -> androidx.recyclerview.widget.TileList:
    33:38:void <init>(int) -> <init>
    73:81:androidx.recyclerview.widget.TileList$Tile addOrReplace(androidx.recyclerview.widget.TileList$Tile) -> addOrReplace
    58:58:void clear() -> clear
    66:69:androidx.recyclerview.widget.TileList$Tile getAtIndex(int) -> getAtIndex
    42:50:java.lang.Object getItemAt(int) -> getItemAt
    87:91:androidx.recyclerview.widget.TileList$Tile removeAtPos(int) -> removeAtPos
    54:54:int size() -> size
androidx.recyclerview.widget.TileList$Tile -> androidx.recyclerview.widget.TileList$Tile:
    101:104:void <init>(java.lang.Class,int) -> <init>
    108:108:boolean containsPosition(int) -> containsPosition
    112:112:java.lang.Object getByPosition(int) -> getByPosition
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:133:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:233:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    248:253:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    148:148:void addFlags(int) -> addFlags
    166:185:boolean boundsMatch() -> boundsMatch
    0:0:int compare(int,int) -> compare
    152:152:void resetFlags() -> resetFlags
    141:144:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    36:47:void <init>() -> <init>
    145:151:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    198:203:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    132:132:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    182:188:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    64:70:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    54:55:void clear() -> clear
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    273:273:void onDetach() -> onDetach
    277:277:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    101:119:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    219:251:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    211:215:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    260:268:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    307:307:void <clinit>() -> <clinit>
    309:309:void <init>() -> <init>
    326:326:void drainCache() -> drainCache
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    318:321:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.recyclerview.widget.ViewTypeStorage$IsolatedViewTypeStorage -> androidx.recyclerview.widget.ViewTypeStorage$IsolatedViewTypeStorage:
    120:123:void <init>() -> <init>
    147:147:androidx.recyclerview.widget.ViewTypeStorage$ViewTypeLookup createViewTypeWrapper(androidx.recyclerview.widget.NestedAdapterWrapper) -> createViewTypeWrapper
    134:137:androidx.recyclerview.widget.NestedAdapterWrapper getWrapperForGlobalType(int) -> getWrapperForGlobalType
    126:127:int obtainViewType(androidx.recyclerview.widget.NestedAdapterWrapper) -> obtainViewType
    151:154:void removeWrapper(androidx.recyclerview.widget.NestedAdapterWrapper) -> removeWrapper
androidx.recyclerview.widget.ViewTypeStorage$IsolatedViewTypeStorage$WrapperViewTypeLookup -> androidx.recyclerview.widget.ViewTypeStorage$IsolatedViewTypeStorage$WrapperViewTypeLookup:
    160:165:void <init>(androidx.recyclerview.widget.ViewTypeStorage$IsolatedViewTypeStorage,androidx.recyclerview.widget.NestedAdapterWrapper) -> <init>
    193:193:void dispose() -> dispose
    183:188:int globalToLocal(int) -> globalToLocal
    170:177:int localToGlobal(int) -> localToGlobal
androidx.recyclerview.widget.ViewTypeStorage$SharedIdRangeViewTypeStorage -> androidx.recyclerview.widget.ViewTypeStorage$SharedIdRangeViewTypeStorage:
    50:53:void <init>() -> <init>
    72:72:androidx.recyclerview.widget.ViewTypeStorage$ViewTypeLookup createViewTypeWrapper(androidx.recyclerview.widget.NestedAdapterWrapper) -> createViewTypeWrapper
    58:65:androidx.recyclerview.widget.NestedAdapterWrapper getWrapperForGlobalType(int) -> getWrapperForGlobalType
    76:80:void removeWrapper(androidx.recyclerview.widget.NestedAdapterWrapper) -> removeWrapper
androidx.recyclerview.widget.ViewTypeStorage$SharedIdRangeViewTypeStorage$WrapperViewTypeLookup -> androidx.recyclerview.widget.ViewTypeStorage$SharedIdRangeViewTypeStorage$WrapperViewTypeLookup:
    89:90:void <init>(androidx.recyclerview.widget.ViewTypeStorage$SharedIdRangeViewTypeStorage,androidx.recyclerview.widget.NestedAdapterWrapper) -> <init>
    115:115:void dispose() -> dispose
    0:0:int globalToLocal(int) -> globalToLocal
    96:103:int localToGlobal(int) -> localToGlobal
androidx.swiperefreshlayout.R -> androidx.swiperefreshlayout.R:
    0:0:void <init>() -> <init>
androidx.swiperefreshlayout.R$attr -> androidx.swiperefreshlayout.R$attr:
    0:0:void <init>() -> <init>
androidx.swiperefreshlayout.R$styleable -> androidx.swiperefreshlayout.R$styleable:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
androidx.swiperefreshlayout.widget.CircleImageView -> androidx.swiperefreshlayout.widget.CircleImageView:
    58:89:void <init>(android.content.Context) -> <init>
    0:0:boolean elevationSupported() -> elevationSupported
    134:134:int getBackgroundColor() -> getBackgroundColor
    119:121:void onAnimationEnd() -> onAnimationEnd
    111:113:void onAnimationStart() -> onAnimationStart
    98:100:void onMeasure(int,int) -> onMeasure
    106:106:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    127:129:void setBackgroundColor(int) -> setBackgroundColor
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow -> androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow:
    143:147:void <init>(androidx.swiperefreshlayout.widget.CircleImageView,int) -> <init>
    158:161:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    152:153:void onResize(float,float) -> onResize
    165:165:void updateRadialGradient(int) -> updateRadialGradient
androidx.swiperefreshlayout.widget.CircularProgressDrawable -> androidx.swiperefreshlayout.widget.CircularProgressDrawable:
    67:97:void <clinit>() -> <clinit>
    138:145:void <init>(android.content.Context) -> <init>
    519:529:void applyFinishTranslation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> applyFinishTranslation
    537:564:void applyTransformation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring,boolean) -> applyTransformation
    399:403:void draw(android.graphics.Canvas) -> draw
    0:0:int evaluateColorChange(float,int,int) -> evaluateColorChange
    414:414:int getAlpha() -> getAlpha
    271:271:boolean getArrowEnabled() -> getArrowEnabled
    251:251:float getArrowHeight() -> getArrowHeight
    290:290:float getArrowScale() -> getArrowScale
    242:242:float getArrowWidth() -> getArrowWidth
    360:360:int getBackgroundColor() -> getBackgroundColor
    202:202:float getCenterRadius() -> getCenterRadius
    382:382:int[] getColorSchemeColors() -> getColorSchemeColors
    318:318:float getEndTrim() -> getEndTrim
    0:0:int getOpacity() -> getOpacity
    341:341:float getProgressRotation() -> getProgressRotation
    429:429:float getRotation() -> getRotation
    309:309:float getStartTrim() -> getStartTrim
    233:233:android.graphics.Paint$Cap getStrokeCap() -> getStrokeCap
    183:183:float getStrokeWidth() -> getStrokeWidth
    441:441:boolean isRunning() -> isRunning
    408:409:void setAlpha(int) -> setAlpha
    261:262:void setArrowDimensions(float,float) -> setArrowDimensions
    280:281:void setArrowEnabled(boolean) -> setArrowEnabled
    299:300:void setArrowScale(float) -> setArrowScale
    371:372:void setBackgroundColor(int) -> setBackgroundColor
    212:213:void setCenterRadius(float) -> setCenterRadius
    419:420:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    392:394:void setColorSchemeColors(int[]) -> setColorSchemeColors
    350:351:void setProgressRotation(float) -> setProgressRotation
    424:424:void setRotation(float) -> setRotation
    151:158:void setSizeParameters(float,float,float,float) -> setSizeParameters
    330:332:void setStartEndTrim(float,float) -> setStartEndTrim
    222:223:void setStrokeCap(android.graphics.Paint$Cap) -> setStrokeCap
    192:193:void setStrokeWidth(float) -> setStrokeWidth
    169:174:void setStyle(int) -> setStyle
    569:618:void setupAnimators() -> setupAnimators
    449:460:void start() -> start
    469:474:void stop() -> stop
    503:507:void updateRingColor(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> updateRingColor
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$1:
    571:571:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    574:577:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$2:
    583:583:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    0:0:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    0:0:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    602:614:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    587:587:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring:
    626:661:void <init>() -> <init>
    695:723:void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    727:754:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> drawTriangle
    838:838:int getAlpha() -> getAlpha
    688:688:float getArrowHeight() -> getArrowHeight
    923:923:float getArrowScale() -> getArrowScale
    684:684:float getArrowWidth() -> getArrowWidth
    792:792:int getBackgroundColor() -> getBackgroundColor
    897:897:float getCenterRadius() -> getCenterRadius
    770:770:int[] getColors() -> getColors
    878:878:float getEndTrim() -> getEndTrim
    808:808:int getNextColor() -> getNextColor
    812:812:int getNextColorIndex() -> getNextColorIndex
    886:886:float getRotation() -> getRotation
    910:910:boolean getShowArrow() -> getShowArrow
    858:858:float getStartTrim() -> getStartTrim
    870:870:int getStartingColor() -> getStartingColor
    866:866:float getStartingEndTrim() -> getStartingEndTrim
    930:930:float getStartingRotation() -> getStartingRotation
    862:862:float getStartingStartTrim() -> getStartingStartTrim
    680:680:android.graphics.Paint$Cap getStrokeCap() -> getStrokeCap
    850:850:float getStrokeWidth() -> getStrokeWidth
    820:820:void goToNextColor() -> goToNextColor
    947:952:void resetOriginals() -> resetOriginals
    831:831:void setAlpha(int) -> setAlpha
    671:672:void setArrowDimensions(float,float) -> setArrowDimensions
    917:918:void setArrowScale(float) -> setArrowScale
    788:788:void setBackgroundColor(int) -> setBackgroundColor
    893:893:void setCenterRadius(float) -> setCenterRadius
    781:781:void setColor(int) -> setColor
    824:824:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    800:801:void setColorIndex(int) -> setColorIndex
    764:766:void setColors(int[]) -> setColors
    874:874:void setEndTrim(float) -> setEndTrim
    882:882:void setRotation(float) -> setRotation
    904:905:void setShowArrow(boolean) -> setShowArrow
    854:854:void setStartTrim(float) -> setStartTrim
    676:676:void setStrokeCap(android.graphics.Paint$Cap) -> setStrokeCap
    845:846:void setStrokeWidth(float) -> setStrokeWidth
    938:940:void storeOriginals() -> storeOriginals
androidx.swiperefreshlayout.widget.SwipeRefreshLayout -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout:
    150:150:void <clinit>() -> <clinit>
    404:404:void <init>(android.content.Context) -> <init>
    118:1367:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1317:1325:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    1329:1341:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    736:742:boolean canChildScrollUp() -> canChildScrollUp
    462:467:void createProgressView() -> createProgressView
    1128:1128:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    1133:1133:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    1082:1082:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    1122:1122:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    1048:1048:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    1075:1075:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    1116:1116:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    651:655:void ensureTarget() -> ensureTarget
    1193:1221:void finishSpinner(float) -> finishSpinner
    447:447:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    1005:1005:int getNestedScrollAxes() -> getNestedScrollAxes
    728:728:int getProgressCircleDiameter() -> getProgressCircleDiameter
    344:344:int getProgressViewEndOffset() -> getProgressViewEndOffset
    336:336:int getProgressViewStartOffset() -> getProgressViewStartOffset
    1069:1069:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    1110:1110:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    1137:1137:boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    1095:1095:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    645:645:boolean isRefreshing() -> isRefreshing
    1141:1189:void moveSpinner(float) -> moveSpinner
    1362:1364:void moveToStart(float) -> moveToStart
    294:295:void onDetachedFromWindow() -> onDetachedFromWindow
    756:809:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    673:692:void onLayout(boolean,int,int,int,int) -> onLayout
    698:715:void onMeasure(int,int) -> onMeasure
    1038:1038:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1032:1032:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    949:949:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    975:999:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    873:904:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    940:940:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1025:1025:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    924:924:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    964:968:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    287:289:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    281:282:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1401:1407:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    913:913:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    957:957:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    933:933:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    1010:1019:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1227:1297:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    843:855:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    219:229:void reset() -> reset
    524:525:void setAnimationProgress(float) -> setAnimationProgress
    609:609:void setColorScheme(int[]) -> setColorScheme
    636:637:void setColorSchemeColors(int[]) -> setColorSchemeColors
    620:625:void setColorSchemeResources(int[]) -> setColorSchemeResources
    299:300:void setColorViewAlpha(int) -> setColorViewAlpha
    668:668:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    234:236:void setEnabled(boolean) -> setEnabled
    835:835:void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean) -> setLegacyRequestDisallowInterceptTouchEventEnabled
    1090:1090:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    751:751:void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    475:475:void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    583:583:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    601:601:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    592:592:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    361:363:void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    323:328:void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    485:498:void setRefreshing(boolean) -> setRefreshing
    529:536:void setRefreshing(boolean,boolean) -> setRefreshing
    384:395:void setSize(int) -> setSize
    374:374:void setSlingshotDistance(int) -> setSlingshotDistance
    1395:1397:void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    563:574:android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    1308:1312:void startDragging(float) -> startDragging
    1057:1057:boolean startNestedScroll(int,int) -> startNestedScroll
    1100:1100:boolean startNestedScroll(int) -> startNestedScroll
    559:559:void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    555:555:void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    542:551:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    1376:1391:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    503:516:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    1063:1063:void stopNestedScroll(int) -> stopNestedScroll
    1105:1105:void stopNestedScroll() -> stopNestedScroll
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1:
    191:191:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    202:213:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    0:0:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    0:0:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2:
    505:505:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    508:508:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3:
    542:542:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    545:545:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4:
    563:563:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,int,int) -> <init>
    566:566:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5:
    1201:1201:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1209:1210:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    0:0:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    0:0:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6:
    1345:1345:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1349:1357:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7:
    1367:1367:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1370:1370:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8:
    1378:1378:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1381:1383:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState:
    265:265:void <clinit>() -> <clinit>
    247:248:void <init>(android.os.Parcelable,boolean) -> <init>
    255:256:void <init>(android.os.Parcel) -> <init>
    261:262:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1:
    266:266:void <init>() -> <init>
    266:266:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    269:269:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    266:266:java.lang.Object[] newArray(int) -> newArray
    274:274:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState[] newArray(int) -> newArray
com.atakmap.gradle.takdev.BuildConfigLint -> com.atakmap.gradle.takdev.BuildConfigLint:
# {"id":"sourceFile","fileName":"BuildConfigLint.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    11:11:void <init>(org.gradle.api.Project) -> <init>
    0:0:groovy.lang.MetaClass getMetaClass() -> getMetaClass
    0:0:org.gradle.api.Project getProject() -> getProject
    27:28:java.lang.Object legacyPackagingOptionsEnabled() -> legacyPackagingOptionsEnabled
    15:16:java.lang.Object minifyEnabled() -> minifyEnabled
    38:64:java.lang.Object repackageCheck() -> repackageCheck
    0:0:void setMetaClass(groovy.lang.MetaClass) -> setMetaClass
    0:0:void setProject(org.gradle.api.Project) -> setProject
    21:22:java.lang.Object storeArchiveDisabled() -> storeArchiveDisabled
com.atakmap.gradle.takdev.TakDevLint -> com.atakmap.gradle.takdev.TakDevLint:
# {"id":"sourceFile","fileName":"TakDevLint.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>() -> <init>
    0:0:groovy.lang.MetaClass getMetaClass() -> getMetaClass
    0:0:void setMetaClass(groovy.lang.MetaClass) -> setMetaClass
    10:17:java.lang.Object takdevLint() -> takdevLint
com.atakmap.gradle.takdev.TakDevPlugin -> com.atakmap.gradle.takdev.TakDevPlugin:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>() -> <init>
    116:134:void addMetadataToAndroidManifest(org.gradle.api.Project,java.lang.String,java.util.Map) -> addMetadataToAndroidManifest
    330:330:void addTasks(org.gradle.api.Project) -> addTasks
    448:490:void addUtilities(java.lang.Object) -> addUtilities
    0:0:void apply(java.lang.Object) -> apply
    176:315:void apply(org.gradle.api.Project) -> apply
    987:996:java.lang.String computeHash(org.gradle.api.Project,org.gradle.api.artifacts.repositories.MavenArtifactRepository) -> computeHash
    641:693:void configureMaven(org.gradle.api.Project) -> configureMaven
    551:565:void configureOffline(org.gradle.api.Project,com.atakmap.gradle.takdev.TakDevPlugin$PathTuple) -> configureOffline
    50:51:void debugPrintln(java.lang.Object) -> debugPrintln
    354:359:java.util.LinkedHashMap findFlavor(java.util.List,java.lang.String) -> findFlavor
    409:438:void generateAllFlavors(org.gradle.api.Project,java.util.List,java.lang.String) -> generateAllFlavors
    523:530:com.atakmap.gradle.takdev.TakDevPlugin$PathTuple getAutoBuilder(org.gradle.api.Project) -> getAutoBuilder
    363:374:java.lang.String getBuildFlavor(org.gradle.api.Project) -> getBuildFlavor
    378:396:java.util.List getBuildFlavors(org.gradle.api.Project) -> getBuildFlavors
    1090:1095:java.lang.String getDesiredTpcFlavorName(java.lang.Object,java.lang.Boolean) -> getDesiredTpcFlavorName
    340:350:java.lang.String getGitInfo(org.gradle.api.Project,java.util.List) -> getGitInfo
    501:509:java.lang.String getLocalOrProjectProperty(org.gradle.api.Project,java.lang.String,java.lang.String,java.lang.String) -> getLocalOrProjectProperty
    0:0:groovy.lang.MetaClass getMetaClass() -> getMetaClass
    534:546:com.atakmap.gradle.takdev.TakDevPlugin$PathTuple getOfflineDevKit(org.gradle.api.Project) -> getOfflineDevKit
    55:64:java.lang.Object getValueFromPropertiesFile(java.io.File,java.lang.String) -> getValueFromPropertiesFile
    924:932:org.gradle.api.DomainObjectSet getVariantSet(org.gradle.api.Project) -> getVariantSet
    913:917:com.atakmap.gradle.takdev.TakDevPlugin$VariantType getVariantType(org.gradle.api.Project) -> getVariantType
    0:0:boolean getVerbose() -> getVerbose
    0:0:boolean isVerbose() -> isVerbose
    68:111:java.lang.Object populateKeystoreConfig(org.gradle.api.Project) -> populateKeystoreConfig
    938:951:java.lang.String readPluginProperty(org.gradle.api.Project,java.lang.String,java.lang.String) -> readPluginProperty
    513:519:java.lang.String resolvePathFromSet(java.lang.String[],java.lang.String) -> resolvePathFromSet
    0:0:void setMetaClass(groovy.lang.MetaClass) -> setMetaClass
    0:0:void setVerbose(boolean) -> setVerbose
    1047:1052:int[] splitVersionString(java.lang.String) -> splitVersionString
    0:0:java.lang.Object this$dist$get$1(java.lang.String) -> this$dist$get$1
    0:0:java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object) -> this$dist$invoke$1
    0:0:void this$dist$set$1(java.lang.String,java.lang.Object) -> this$dist$set$1
    1002:1040:boolean tryResolve(org.gradle.api.Project,org.gradle.api.artifacts.repositories.MavenArtifactRepository,java.util.Map) -> tryResolve
    1060:1080:int versionComparator(java.lang.String,java.lang.String) -> versionComparator
    958:983:void writePluginProperty(org.gradle.api.Project,java.lang.String,java.lang.String) -> writePluginProperty
com.atakmap.gradle.takdev.TakDevPlugin$PathTuple -> com.atakmap.gradle.takdev.TakDevPlugin$PathTuple:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object) -> $static_methodMissing
    0:0:java.lang.Object $static_propertyMissing(java.lang.String) -> $static_propertyMissing
    0:0:void $static_propertyMissing(java.lang.String,java.lang.Object) -> $static_propertyMissing
    0:0:void <init>(com.atakmap.gradle.takdev.TakDevPlugin) -> <init>
    0:0:java.io.File getApiJar() -> getApiJar
    0:0:java.io.File getCoreRules() -> getCoreRules
    0:0:java.io.File getKeystore() -> getKeystore
    0:0:java.io.File getMapping() -> getMapping
    0:0:groovy.lang.MetaClass getMetaClass() -> getMetaClass
    0:0:java.lang.Object methodMissing(java.lang.String,java.lang.Object) -> methodMissing
    0:0:java.lang.Object propertyMissing(java.lang.String) -> propertyMissing
    0:0:void propertyMissing(java.lang.String,java.lang.Object) -> propertyMissing
    0:0:void setApiJar(java.io.File) -> setApiJar
    0:0:void setCoreRules(java.io.File) -> setCoreRules
    0:0:void setKeystore(java.io.File) -> setKeystore
    0:0:void setMapping(java.io.File) -> setMapping
    0:0:void setMetaClass(groovy.lang.MetaClass) -> setMetaClass
    0:0:java.lang.String super$1$toString() -> super$1$toString
    43:43:java.lang.String toString() -> toString
com.atakmap.gradle.takdev.TakDevPlugin$VariantType -> com.atakmap.gradle.takdev.TakDevPlugin$VariantType:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:com.atakmap.gradle.takdev.TakDevPlugin$VariantType $INIT(java.lang.Object[]) -> $INIT
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(java.lang.String,int) -> <init>
    0:0:void <init>(java.lang.String,int,java.util.LinkedHashMap) -> <init>
    0:0:groovy.lang.MetaClass getMetaClass() -> getMetaClass
    0:0:com.atakmap.gradle.takdev.TakDevPlugin$VariantType next() -> next
    0:0:com.atakmap.gradle.takdev.TakDevPlugin$VariantType previous() -> previous
    0:0:void setMetaClass(groovy.lang.MetaClass) -> setMetaClass
    0:0:com.atakmap.gradle.takdev.TakDevPlugin$VariantType valueOf(java.lang.String) -> valueOf
    0:0:com.atakmap.gradle.takdev.TakDevPlugin$VariantType[] values() -> values
com.atakmap.gradle.takdev.TakDevPlugin$_addMetadataToAndroidManifest_closure1 -> com.atakmap.gradle.takdev.TakDevPlugin$_addMetadataToAndroidManifest_closure1:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    123:125:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getLowerVariant() -> getLowerVariant
    0:0:java.lang.Object getManifestFiles() -> getManifestFiles
com.atakmap.gradle.takdev.TakDevPlugin$_addMetadataToAndroidManifest_closure2 -> com.atakmap.gradle.takdev.TakDevPlugin$_addMetadataToAndroidManifest_closure2:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    136:171:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.util.Map getMetadata() -> getMetadata
com.atakmap.gradle.takdev.TakDevPlugin$_addMetadataToAndroidManifest_closure2$_closure18 -> com.atakmap.gradle.takdev.TakDevPlugin$_addMetadataToAndroidManifest_closure2$_closure18:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object call(java.lang.Object,java.lang.Object) -> call
    145:160:java.lang.Object doCall(java.lang.Object,java.lang.Object) -> doCall
    0:0:java.lang.Object getApplicationElement() -> getApplicationElement
    0:0:java.lang.Object getKey() -> getKey
com.atakmap.gradle.takdev.TakDevPlugin$_addMetadataToAndroidManifest_closure2$_closure18$_closure19 -> com.atakmap.gradle.takdev.TakDevPlugin$_addMetadataToAndroidManifest_closure2$_closure18$_closure19:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    149:150:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:groovy.util.Node getExistingElement() -> getExistingElement
    0:0:java.lang.Object getKey() -> getKey
com.atakmap.gradle.takdev.TakDevPlugin$_addTasks_closure6 -> com.atakmap.gradle.takdev.TakDevPlugin$_addTasks_closure6:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    331:333:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_addTasks_closure6$_closure23 -> com.atakmap.gradle.takdev.TakDevPlugin$_addTasks_closure6$_closure23:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    334:334:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_addUtilities_closure10 -> com.atakmap.gradle.takdev.TakDevPlugin$_addUtilities_closure10:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    463:483:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_addUtilities_closure11 -> com.atakmap.gradle.takdev.TakDevPlugin$_addUtilities_closure11:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object call(java.lang.Object,java.lang.Object) -> call
    493:496:java.lang.Object doCall(java.lang.Object,java.lang.Object) -> doCall
    0:0:java.lang.Object getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_addUtilities_closure9 -> com.atakmap.gradle.takdev.TakDevPlugin$_addUtilities_closure9:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    451:455:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure3 -> com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure3:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    190:202:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure3$_closure20 -> com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure3$_closure20:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    203:203:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getMatcher() -> getMatcher
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure3$_closure20$_closure21 -> com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure3$_closure20$_closure21:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    204:210:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getMatcher() -> getMatcher
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure4 -> com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure4:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    242:242:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure4$_closure22 -> com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure4$_closure22:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    243:243:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure5 -> com.atakmap.gradle.takdev.TakDevPlugin$_apply_closure5:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    316:322:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getDomesticFlavors() -> getDomesticFlavors
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure13 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure13:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    642:644:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure13$_closure35 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure13$_closure35:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    645:646:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure14 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure14:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    676:677:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getContestFiles() -> getContestFiles
    0:0:java.lang.Object getContestPath() -> getContestPath
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure15 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure15:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object) -> <init>
    689:690:java.lang.Object doCall(java.lang.Object) -> doCall
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    695:901:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.String getMavenVersion() -> getMavenVersion
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:org.gradle.api.artifacts.repositories.MavenArtifactRepository getTakrepo() -> getTakrepo
    0:0:java.lang.Object getUsesCoreMappingRules() -> getUsesCoreMappingRules
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    813:813:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getApkZipConfiguration() -> getApkZipConfiguration
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36$_closure41 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36$_closure41:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    814:814:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getApkZipConfiguration() -> getApkZipConfiguration
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36$_closure41$_closure42 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36$_closure41$_closure42:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    815:817:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getApkZipConfiguration() -> getApkZipConfiguration
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36$_closure41$_closure42$_closure43 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36$_closure41$_closure42$_closure43:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    818:824:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36$_closure41$_closure42$_closure43$_closure44 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36$_closure41$_closure42$_closure43$_closure44:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    820:820:java.lang.Object doCall(java.lang.Object) -> doCall
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36$_closure41$_closure42$_closure43$_closure45 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure36$_closure41$_closure42$_closure43$_closure45:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    825:827:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getMatcher() -> getMatcher
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getZipFileTree() -> getZipFileTree
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure37 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure37:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    840:840:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getMappingConfiguration() -> getMappingConfiguration
    0:0:java.lang.Object getMappingFqn() -> getMappingFqn
    0:0:java.lang.Object getMappingName() -> getMappingName
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure37$_closure46 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure37$_closure46:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    842:850:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getMappingConfiguration() -> getMappingConfiguration
    0:0:java.lang.Object getMappingFqn() -> getMappingFqn
    0:0:java.lang.Object getMappingName() -> getMappingName
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure37$_closure46$_closure47 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure37$_closure46$_closure47:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    843:845:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getMappingConfiguration() -> getMappingConfiguration
    0:0:java.lang.Object getMappingFqn() -> getMappingFqn
    0:0:java.lang.Object getMappingName() -> getMappingName
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure37$_closure46$_closure47$_closure48 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure37$_closure46$_closure47$_closure48:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    846:847:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getMappingFqn() -> getMappingFqn
    0:0:java.lang.Object getMappingName() -> getMappingName
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure38 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure38:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    863:863:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.NamedDomainObjectProvider getCoreRulesConfiguration() -> getCoreRulesConfiguration
    0:0:java.lang.Object getCoreRulesFqn() -> getCoreRulesFqn
    0:0:java.lang.Object getCoreRulesName() -> getCoreRulesName
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure38$_closure49 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure38$_closure49:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    865:877:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.NamedDomainObjectProvider getCoreRulesConfiguration() -> getCoreRulesConfiguration
    0:0:java.lang.Object getCoreRulesFqn() -> getCoreRulesFqn
    0:0:java.lang.Object getCoreRulesName() -> getCoreRulesName
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure38$_closure49$_closure50 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure38$_closure49$_closure50:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    866:868:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.NamedDomainObjectProvider getCoreRulesConfiguration() -> getCoreRulesConfiguration
    0:0:java.lang.Object getCoreRulesFqn() -> getCoreRulesFqn
    0:0:java.lang.Object getCoreRulesName() -> getCoreRulesName
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure38$_closure49$_closure50$_closure51 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure38$_closure49$_closure50$_closure51:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    869:870:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getCoreRulesFqn() -> getCoreRulesFqn
    0:0:java.lang.Object getCoreRulesName() -> getCoreRulesName
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure39 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure39:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    884:884:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getKeystoreConfiguration() -> getKeystoreConfiguration
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure39$_closure52 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure39$_closure52:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    886:888:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getKeystoreConfiguration() -> getKeystoreConfiguration
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure39$_closure52$_closure53 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure39$_closure52$_closure53:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    889:891:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getKeystoreConfiguration() -> getKeystoreConfiguration
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getStoreFqn() -> getStoreFqn
    0:0:java.lang.Object getStoreName() -> getStoreName
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure39$_closure52$_closure53$_closure54 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure39$_closure52$_closure53$_closure54:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    892:893:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getStoreFqn() -> getStoreFqn
    0:0:java.lang.Object getStoreName() -> getStoreName
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure40 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureMaven_closure16$_closure40:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    903:907:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getSigningClosure() -> getSigningClosure
com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    567:627:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:com.atakmap.gradle.takdev.TakDevPlugin$PathTuple getTuple() -> getTuple
com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure26 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure26:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    583:583:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getCoreRulesFqn() -> getCoreRulesFqn
    0:0:java.lang.Object getMappingFqn() -> getMappingFqn
    0:0:java.lang.Object getMappingName() -> getMappingName
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure26$_closure29 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure26$_closure29:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    584:605:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getCoreRulesFqn() -> getCoreRulesFqn
    0:0:java.lang.Object getMappingFqn() -> getMappingFqn
    0:0:java.lang.Object getMappingName() -> getMappingName
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getVariant() -> getVariant
com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure26$_closure29$_closure30 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure26$_closure29$_closure30:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    586:588:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getMappingFqn() -> getMappingFqn
    0:0:java.lang.Object getMappingName() -> getMappingName
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure26$_closure29$_closure30$_closure31 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure26$_closure29$_closure30$_closure31:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    589:589:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getMappingName() -> getMappingName
com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure27 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure27:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    612:612:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:com.atakmap.gradle.takdev.TakDevPlugin$PathTuple getTuple() -> getTuple
com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure27$_closure32 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure27$_closure32:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    614:615:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:com.atakmap.gradle.takdev.TakDevPlugin$PathTuple getTuple() -> getTuple
com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure27$_closure32$_closure33 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure27$_closure32$_closure33:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    616:618:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getStoreName() -> getStoreName
    0:0:com.atakmap.gradle.takdev.TakDevPlugin$PathTuple getTuple() -> getTuple
com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure27$_closure32$_closure33$_closure34 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure27$_closure32$_closure33$_closure34:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    619:619:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getStoreName() -> getStoreName
com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure28 -> com.atakmap.gradle.takdev.TakDevPlugin$_configureOffline_closure12$_closure28:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    629:633:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:org.gradle.api.Project getProject() -> getProject
    0:0:java.lang.Object getSigningClosure() -> getSigningClosure
com.atakmap.gradle.takdev.TakDevPlugin$_getBuildFlavors_closure8 -> com.atakmap.gradle.takdev.TakDevPlugin$_getBuildFlavors_closure8:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    381:381:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getFlavorSet() -> getFlavorSet
com.atakmap.gradle.takdev.TakDevPlugin$_getBuildFlavors_closure8$_closure25 -> com.atakmap.gradle.takdev.TakDevPlugin$_getBuildFlavors_closure8$_closure25:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference) -> <init>
    383:392:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.lang.Object getFlavorSet() -> getFlavorSet
com.atakmap.gradle.takdev.TakDevPlugin$_getGitInfo_closure7 -> com.atakmap.gradle.takdev.TakDevPlugin$_getGitInfo_closure7:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:void $createCallSiteArray_1(java.lang.String[]) -> $createCallSiteArray_1
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    342:348:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.util.List getArg_list() -> getArg_list
    0:0:java.lang.Object getInfo() -> getInfo
    0:0:org.gradle.api.Project getProject() -> getProject
com.atakmap.gradle.takdev.TakDevPlugin$_getGitInfo_closure7$_closure24 -> com.atakmap.gradle.takdev.TakDevPlugin$_getGitInfo_closure7$_closure24:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    343:346:java.lang.Object doCall(java.lang.Object) -> doCall
    0:0:java.util.List getArg_list() -> getArg_list
    0:0:java.lang.Object getOs() -> getOs
com.atakmap.gradle.takdev.TakDevPlugin$_splitVersionString_closure17 -> com.atakmap.gradle.takdev.TakDevPlugin$_splitVersionString_closure17:
# {"id":"sourceFile","fileName":"TakDevPlugin.groovy"}
    0:0:org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray() -> $createCallSiteArray
    0:0:org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray() -> $getCallSiteArray
    0:0:groovy.lang.MetaClass $getStaticMetaClass() -> $getStaticMetaClass
    0:0:void <init>(java.lang.Object,java.lang.Object) -> <init>
    0:0:java.lang.Object doCall() -> doCall
    1048:1048:java.lang.Object doCall(java.lang.Object) -> doCall
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    44:45:void <init>(java.lang.reflect.Field) -> <init>
    110:110:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    120:120:java.util.Collection getAnnotations() -> getAnnotations
    99:99:java.lang.Class getDeclaredClass() -> getDeclaredClass
    79:79:java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    52:52:java.lang.Class getDeclaringClass() -> getDeclaringClass
    59:59:java.lang.String getName() -> getName
    134:134:boolean hasModifier(int) -> hasModifier
    139:139:java.lang.String toString() -> toString
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    31:158:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int) -> <init>
    31:31:void <init>(java.lang.String,int,com.google.gson.FieldNamingPolicy$1) -> <init>
    169:177:java.lang.String separateCamelCase(java.lang.String,char) -> separateCamelCase
    184:197:java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    31:31:com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    31:31:com.google.gson.FieldNamingPolicy[] values() -> values
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    37:37:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    53:53:void <init>(java.lang.String,int) -> <init>
    55:55:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    72:72:void <init>(java.lang.String,int) -> <init>
    74:74:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    92:92:void <init>(java.lang.String,int) -> <init>
    94:94:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    110:110:void <init>(java.lang.String,int) -> <init>
    112:112:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$6 -> com.google.gson.FieldNamingPolicy$6:
    134:134:void <init>(java.lang.String,int) -> <init>
    136:136:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$7 -> com.google.gson.FieldNamingPolicy$7:
    158:158:void <init>(java.lang.String,int) -> <init>
    160:160:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    151:153:void <clinit>() -> <clinit>
    234:242:void <init>() -> <init>
    169:343:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,com.google.gson.ToNumberStrategy,com.google.gson.ToNumberStrategy,java.util.List) -> <init>
    1144:1150:void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    477:485:com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter) -> atomicLongAdapter
    489:512:com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter) -> atomicLongArrayAdapter
    447:448:void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    397:399:com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    363:363:com.google.gson.internal.Excluder excluder() -> excluder
    372:372:com.google.gson.FieldNamingStrategy fieldNamingStrategy() -> fieldNamingStrategy
    421:423:com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    982:983:java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    1014:1014:java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    1046:1047:java.lang.Object fromJson(java.lang.String,com.google.gson.reflect.TypeToken) -> fromJson
    1075:1076:java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    1107:1107:java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    1136:1138:java.lang.Object fromJson(java.io.Reader,com.google.gson.reflect.TypeToken) -> fromJson
    1186:1186:java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    1221:1246:java.lang.Object fromJson(com.google.gson.stream.JsonReader,com.google.gson.reflect.TypeToken) -> fromJson
    1271:1272:java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    1300:1300:java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    1329:1329:java.lang.Object fromJson(com.google.gson.JsonElement,com.google.gson.reflect.TypeToken) -> fromJson
    527:581:com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    667:667:com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    639:657:com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    392:392:boolean htmlSafe() -> htmlSafe
    455:458:com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    354:354:com.google.gson.GsonBuilder newBuilder() -> newBuilder
    919:920:com.google.gson.stream.JsonReader newJsonReader(java.io.Reader) -> newJsonReader
    897:906:com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    382:382:boolean serializeNulls() -> serializeNulls
    734:736:java.lang.String toJson(java.lang.Object) -> toJson
    758:760:java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    783:785:void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    811:814:void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    834:851:void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    862:864:java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    877:880:void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    938:954:void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    687:689:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    711:713:com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    1377:1377:java.lang.String toString() -> toString
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    399:399:void <init>(com.google.gson.Gson) -> <init>
    399:399:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    401:405:java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    399:399:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    409:414:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    423:423:void <init>(com.google.gson.Gson) -> <init>
    423:423:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    425:429:java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    423:423:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    433:441:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    458:458:void <init>() -> <init>
    458:458:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    460:464:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    458:458:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    468:471:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    477:477:void <init>(com.google.gson.TypeAdapter) -> <init>
    477:477:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    482:483:java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader) -> read
    477:477:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    479:479:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    489:489:void <init>(com.google.gson.TypeAdapter) -> <init>
    489:489:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    498:508:java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader) -> read
    489:489:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    491:495:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    1341:1342:void <init>() -> <init>
    1352:1356:com.google.gson.TypeAdapter delegate() -> delegate
    1363:1363:com.google.gson.TypeAdapter getSerializationDelegate() -> getSerializationDelegate
    1367:1367:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1345:1348:void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    1371:1371:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    87:115:void <init>() -> <init>
    87:144:void <init>(com.google.gson.Gson) -> <init>
    475:476:com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    740:741:com.google.gson.GsonBuilder addReflectionAccessFilter(com.google.gson.ReflectionAccessFilter) -> addReflectionAccessFilter
    454:455:com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    774:799:void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
    752:762:com.google.gson.Gson create() -> create
    514:514:com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    334:334:com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    715:715:com.google.gson.GsonBuilder disableJdkUnsafe() -> disableJdkUnsafe
    310:310:com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    185:186:com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    214:214:com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    200:200:com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    605:620:com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    638:639:com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    658:668:com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    226:226:com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    694:694:com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    536:536:com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    555:556:com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    576:578:com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    431:433:com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    358:358:com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    374:374:com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    502:502:com.google.gson.GsonBuilder setLenient() -> setLenient
    347:347:com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    400:400:com.google.gson.GsonBuilder setNumberToNumberStrategy(com.google.gson.ToNumberStrategy) -> setNumberToNumberStrategy
    387:387:com.google.gson.GsonBuilder setObjectToNumberStrategy(com.google.gson.ToNumberStrategy) -> setObjectToNumberStrategy
    487:487:com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    163:166:com.google.gson.GsonBuilder setVersion(double) -> setVersion
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    45:46:void <init>() -> <init>
    58:59:void <init>(int) -> <init>
    86:86:void add(java.lang.Boolean) -> add
    96:96:void add(java.lang.Character) -> add
    106:106:void add(java.lang.Number) -> add
    116:116:void add(java.lang.String) -> add
    126:128:void add(com.google.gson.JsonElement) -> add
    137:137:void addAll(com.google.gson.JsonArray) -> addAll
    412:412:java.util.List asList() -> asList
    186:186:boolean contains(com.google.gson.JsonElement) -> contains
    38:38:com.google.gson.JsonElement deepCopy() -> deepCopy
    69:76:com.google.gson.JsonArray deepCopy() -> deepCopy
    422:422:boolean equals(java.lang.Object) -> equals
    228:228:com.google.gson.JsonElement get(int) -> get
    289:289:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    303:303:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    397:397:boolean getAsBoolean() -> getAsBoolean
    355:355:byte getAsByte() -> getAsByte
    371:371:char getAsCharacter() -> getAsCharacter
    275:275:double getAsDouble() -> getAsDouble
    316:316:float getAsFloat() -> getAsFloat
    342:342:int getAsInt() -> getAsInt
    329:329:long getAsLong() -> getAsLong
    249:249:java.lang.Number getAsNumber() -> getAsNumber
    384:384:short getAsShort() -> getAsShort
    232:236:com.google.gson.JsonElement getAsSingleElement() -> getAsSingleElement
    262:262:java.lang.String getAsString() -> getAsString
    431:431:int hashCode() -> hashCode
    205:205:boolean isEmpty() -> isEmpty
    216:216:java.util.Iterator iterator() -> iterator
    161:161:boolean remove(com.google.gson.JsonElement) -> remove
    175:175:com.google.gson.JsonElement remove(int) -> remove
    149:149:com.google.gson.JsonElement set(int,com.google.gson.JsonElement) -> set
    195:195:int size() -> size
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    40:40:void <init>() -> <init>
    284:284:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    298:298:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    162:162:boolean getAsBoolean() -> getAsBoolean
    253:253:byte getAsByte() -> getAsByte
    270:270:char getAsCharacter() -> getAsCharacter
    200:200:double getAsDouble() -> getAsDouble
    213:213:float getAsFloat() -> getAsFloat
    239:239:int getAsInt() -> getAsInt
    114:117:com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    147:150:com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    98:101:com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    130:133:com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    226:226:long getAsLong() -> getAsLong
    175:175:java.lang.Number getAsNumber() -> getAsNumber
    311:311:short getAsShort() -> getAsShort
    187:187:java.lang.String getAsString() -> getAsString
    57:57:boolean isJsonArray() -> isJsonArray
    85:85:boolean isJsonNull() -> isJsonNull
    66:66:boolean isJsonObject() -> isJsonObject
    75:75:boolean isJsonPrimitive() -> isJsonPrimitive
    320:326:java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    29:29:void <init>(java.lang.String) -> <init>
    33:33:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:43:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    32:32:void <clinit>() -> <clinit>
    40:40:void <init>() -> <init>
    26:26:com.google.gson.JsonElement deepCopy() -> deepCopy
    51:51:com.google.gson.JsonNull deepCopy() -> deepCopy
    67:67:boolean equals(java.lang.Object) -> equals
    59:59:int hashCode() -> hashCode
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    37:43:void <init>() -> <init>
    69:69:void add(java.lang.String,com.google.gson.JsonElement) -> add
    92:92:void addProperty(java.lang.String,java.lang.String) -> addProperty
    103:103:void addProperty(java.lang.String,java.lang.Number) -> addProperty
    114:114:void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    125:125:void addProperty(java.lang.String,java.lang.Character) -> addProperty
    237:237:java.util.Map asMap() -> asMap
    36:36:com.google.gson.JsonElement deepCopy() -> deepCopy
    53:55:com.google.gson.JsonObject deepCopy() -> deepCopy
    135:135:java.util.Set entrySet() -> entrySet
    247:248:boolean equals(java.lang.Object) -> equals
    185:185:com.google.gson.JsonElement get(java.lang.String) -> get
    209:209:com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    221:221:com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    197:197:com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    175:175:boolean has(java.lang.String) -> has
    257:257:int hashCode() -> hashCode
    165:165:boolean isEmpty() -> isEmpty
    145:145:java.util.Set keySet() -> keySet
    81:81:com.google.gson.JsonElement remove(java.lang.String) -> remove
    155:155:int size() -> size
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    42:42:void <init>(java.lang.String) -> <init>
    52:52:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    62:62:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    36:36:void <init>() -> <init>
    115:115:com.google.gson.JsonElement parse(java.lang.String) -> parse
    121:121:com.google.gson.JsonElement parse(java.io.Reader) -> parse
    127:127:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    69:80:com.google.gson.JsonElement parseReader(java.io.Reader) -> parseReader
    99:109:com.google.gson.JsonElement parseReader(com.google.gson.stream.JsonReader) -> parseReader
    51:51:com.google.gson.JsonElement parseString(java.lang.String) -> parseString
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    42:43:void <init>(java.lang.Boolean) -> <init>
    52:53:void <init>(java.lang.Number) -> <init>
    62:63:void <init>(java.lang.String) -> <init>
    73:76:void <init>(java.lang.Character) -> <init>
    0:0:com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    32:32:com.google.gson.JsonElement deepCopy() -> deepCopy
    277:294:boolean equals(java.lang.Object) -> equals
    175:175:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    183:184:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    106:110:boolean getAsBoolean() -> getAsBoolean
    227:227:byte getAsByte() -> getAsByte
    239:243:char getAsCharacter() -> getAsCharacter
    167:167:double getAsDouble() -> getAsDouble
    192:192:float getAsFloat() -> getAsFloat
    219:219:int getAsInt() -> getAsInt
    203:203:long getAsLong() -> getAsLong
    132:137:java.lang.Number getAsNumber() -> getAsNumber
    211:211:short getAsShort() -> getAsShort
    152:159:java.lang.String getAsString() -> getAsString
    252:264:int hashCode() -> hashCode
    95:95:boolean isBoolean() -> isBoolean
    302:304:boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    119:119:boolean isNumber() -> isNumber
    146:146:boolean isString() -> isString
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    60:60:void <init>(java.lang.String) -> <init>
    67:70:void <init>(java.io.Reader) -> <init>
    105:113:boolean hasNext() -> hasNext
    51:51:java.lang.Object next() -> next
    84:93:com.google.gson.JsonElement next() -> next
    123:123:void remove() -> remove
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    30:30:void <init>(java.lang.String) -> <init>
    34:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:45:void <init>(java.lang.Throwable) -> <init>
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    27:52:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:void <init>(java.lang.String,int,com.google.gson.LongSerializationPolicy$1) -> <init>
    27:27:com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    27:27:com.google.gson.LongSerializationPolicy[] values() -> values
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    36:36:void <init>(java.lang.String,int) -> <init>
    39:41:com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    52:52:void <init>(java.lang.String,int) -> <init>
    55:57:com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.ReflectionAccessFilter -> com.google.gson.ReflectionAccessFilter:
    105:179:void <clinit>() -> <clinit>
com.google.gson.ReflectionAccessFilter$1 -> com.google.gson.ReflectionAccessFilter$1:
    105:105:void <init>() -> <init>
    107:109:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
com.google.gson.ReflectionAccessFilter$2 -> com.google.gson.ReflectionAccessFilter$2:
    130:130:void <init>() -> <init>
    132:134:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
com.google.gson.ReflectionAccessFilter$3 -> com.google.gson.ReflectionAccessFilter$3:
    154:154:void <init>() -> <init>
    156:158:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
com.google.gson.ReflectionAccessFilter$4 -> com.google.gson.ReflectionAccessFilter$4:
    179:179:void <init>() -> <init>
    181:183:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
com.google.gson.ReflectionAccessFilter$FilterResult -> com.google.gson.ReflectionAccessFilter$FilterResult:
    38:80:void <clinit>() -> <clinit>
    38:38:void <init>(java.lang.String,int) -> <init>
    38:38:com.google.gson.ReflectionAccessFilter$FilterResult valueOf(java.lang.String) -> valueOf
    38:38:com.google.gson.ReflectionAccessFilter$FilterResult[] values() -> values
com.google.gson.ToNumberPolicy -> com.google.gson.ToNumberPolicy:
    33:88:void <clinit>() -> <clinit>
    33:33:void <init>(java.lang.String,int) -> <init>
    33:33:void <init>(java.lang.String,int,com.google.gson.ToNumberPolicy$1) -> <init>
    33:33:com.google.gson.ToNumberPolicy valueOf(java.lang.String) -> valueOf
    33:33:com.google.gson.ToNumberPolicy[] values() -> values
com.google.gson.ToNumberPolicy$1 -> com.google.gson.ToNumberPolicy$1:
    39:39:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    41:41:java.lang.Double readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberPolicy$2 -> com.google.gson.ToNumberPolicy$2:
    50:50:void <init>(java.lang.String,int) -> <init>
    52:52:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberPolicy$3 -> com.google.gson.ToNumberPolicy$3:
    65:65:void <init>(java.lang.String,int) -> <init>
    67:78:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberPolicy$4 -> com.google.gson.ToNumberPolicy$4:
    88:88:void <init>(java.lang.String,int) -> <init>
    88:88:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    90:94:java.math.BigDecimal readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    124:124:void <init>() -> <init>
    268:269:java.lang.Object fromJson(java.io.Reader) -> fromJson
    285:285:java.lang.Object fromJson(java.lang.String) -> fromJson
    298:301:java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
    191:191:com.google.gson.TypeAdapter nullSafe() -> nullSafe
    146:147:void toJson(java.io.Writer,java.lang.Object) -> toJson
    220:226:java.lang.String toJson(java.lang.Object) -> toJson
    239:243:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    191:191:void <init>(com.google.gson.TypeAdapter) -> <init>
    200:204:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    194:196:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
# {"id":"sourceFile","fileName":"$Gson$Preconditions.java"}
    35:36:void <init>() -> <init>
    54:54:void checkArgument(boolean) -> checkArgument
    47:47:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    46:46:void <clinit>() -> <clinit>
    48:49:void <init>() -> <init>
    70:70:java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    110:125:java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    481:481:void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    474:476:java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    171:171:boolean equal(java.lang.Object,java.lang.Object) -> equal
    182:224:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    300:302:java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    310:315:java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    247:265:java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    328:338:java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    134:165:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    283:292:java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    461:466:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    60:60:java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    343:343:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    351:438:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map) -> resolve
    444:454:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    81:86:java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    96:101:java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    233:233:java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    556:558:void <init>(java.lang.reflect.Type) -> <init>
    566:567:boolean equals(java.lang.Object) -> equals
    562:562:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    571:571:int hashCode() -> hashCode
    575:575:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    489:505:void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> <init>
    522:523:boolean equals(java.lang.Object) -> equals
    510:510:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    518:518:java.lang.reflect.Type getOwnerType() -> getOwnerType
    514:514:java.lang.reflect.Type getRawType() -> getRawType
    531:533:int hashCode() -> hashCode
    527:527:int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    537:547:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
# {"id":"sourceFile","fileName":"$Gson$Types.java"}
    591:606:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    619:620:boolean equals(java.lang.Object) -> equals
    615:615:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    611:611:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    625:626:int hashCode() -> hashCode
    630:635:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    58:61:void <init>(java.util.Map,boolean,java.util.List) -> <init>
    71:78:java.lang.String checkInstantiable(java.lang.Class) -> checkInstantiable
    84:150:com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    206:258:com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class,com.google.gson.ReflectionAccessFilter$FilterResult) -> newDefaultConstructor
    298:353:com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    162:183:com.google.gson.internal.ObjectConstructor newSpecialCollectionConstructor(java.lang.reflect.Type,java.lang.Class) -> newSpecialCollectionConstructor
    365:383:com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.Class) -> newUnsafeAllocator
    392:392:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    92:92:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    94:94:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    300:300:void <init>() -> <init>
    302:302:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    306:306:void <init>() -> <init>
    308:308:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    312:312:void <init>() -> <init>
    314:314:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$13 -> com.google.gson.internal.ConstructorConstructor$13:
    318:318:void <init>() -> <init>
    320:320:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$14 -> com.google.gson.internal.ConstructorConstructor$14:
    328:328:void <init>() -> <init>
    330:330:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$15 -> com.google.gson.internal.ConstructorConstructor$15:
    334:334:void <init>() -> <init>
    336:336:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$16 -> com.google.gson.internal.ConstructorConstructor$16:
    340:340:void <init>() -> <init>
    342:342:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$17 -> com.google.gson.internal.ConstructorConstructor$17:
    347:347:void <init>() -> <init>
    349:349:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$18 -> com.google.gson.internal.ConstructorConstructor$18:
    353:353:void <init>() -> <init>
    355:355:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$19 -> com.google.gson.internal.ConstructorConstructor$19:
    366:366:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.Class) -> <init>
    370:373:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    104:104:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    106:106:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$20 -> com.google.gson.internal.ConstructorConstructor$20:
    383:383:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    385:385:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    134:134:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    136:136:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    150:150:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    152:152:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    163:163:void <init>(java.lang.reflect.Type) -> <init>
    165:175:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    183:183:void <init>(java.lang.reflect.Type) -> <init>
    185:195:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    226:226:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    246:246:void <init>(java.lang.String) -> <init>
    252:252:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    258:258:void <init>(java.lang.reflect.Constructor) -> <init>
    262:276:java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    52:52:void <clinit>() -> <clinit>
    50:59:void <init>() -> <init>
    50:50:java.lang.Object clone() -> clone
    63:65:com.google.gson.internal.Excluder clone() -> clone
    111:121:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    85:86:com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    205:206:boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    193:201:boolean excludeClassChecks(java.lang.Class) -> excludeClassChecks
    210:212:boolean excludeClassInStrategy(java.lang.Class,boolean) -> excludeClassInStrategy
    151:183:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    91:92:com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    220:221:boolean isAnonymousOrNonStaticLocal(java.lang.Class) -> isAnonymousOrNonStaticLocal
    225:225:boolean isInnerClass(java.lang.Class) -> isInnerClass
    229:229:boolean isStatic(java.lang.Class) -> isStatic
    238:239:boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    246:247:boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    233:233:boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    98:105:com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    76:79:com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    70:71:com.google.gson.internal.Excluder withVersion(double) -> withVersion
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    121:121:void <init>(com.google.gson.internal.Excluder,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> <init>
    142:145:com.google.gson.TypeAdapter delegate() -> delegate
    126:130:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    134:138:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.GsonBuildConfig -> com.google.gson.internal.GsonBuildConfig:
    31:31:void <init>() -> <init>
com.google.gson.internal.JavaVersion -> com.google.gson.internal.JavaVersion:
    26:26:void <clinit>() -> <clinit>
    91:91:void <init>() -> <init>
    29:30:int determineMajorJavaVersion() -> determineMajorJavaVersion
    62:71:int extractBeginningInt(java.lang.String) -> extractBeginningInt
    35:37:int getMajorJavaVersion(java.lang.String) -> getMajorJavaVersion
    81:81:int getMajorJavaVersion() -> getMajorJavaVersion
    88:88:boolean isJava9OrLater() -> isJava9OrLater
    48:51:int parseDotted(java.lang.String) -> parseDotted
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    25:25:void <init>() -> <init>
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    34:35:void <init>(java.lang.String) -> <init>
    67:67:double doubleValue() -> doubleValue
    99:101:boolean equals(java.lang.Object) -> equals
    62:62:float floatValue() -> floatValue
    91:91:int hashCode() -> hashCode
    41:46:int intValue() -> intValue
    54:56:long longValue() -> longValue
    86:86:void readObject(java.io.ObjectInputStream) -> readObject
    72:72:java.lang.String toString() -> toString
    81:81:java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    45:45:void <clinit>() -> <clinit>
    66:66:void <init>() -> <init>
    77:77:void <init>(boolean) -> <init>
    54:94:void <init>(java.util.Comparator,boolean) -> <init>
    124:130:void clear() -> clear
    107:107:boolean containsKey(java.lang.Object) -> containsKey
    453:454:java.util.Set entrySet() -> entrySet
    231:231:boolean equal(java.lang.Object,java.lang.Object) -> equal
    145:201:com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    225:226:com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    209:209:com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    102:103:java.lang.Object get(java.lang.Object) -> get
    458:459:java.util.Set keySet() -> keySet
    112:119:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    661:661:void readObject(java.io.ObjectInputStream) -> readObject
    334:385:void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    134:135:java.lang.Object remove(java.lang.Object) -> remove
    242:296:void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    300:302:com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    308:322:void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    397:418:void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    425:446:void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    98:98:int size() -> size
    656:656:java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    45:45:void <init>() -> <init>
    45:45:int compare(java.lang.Object,java.lang.Object) -> compare
    47:47:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    588:588:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    619:619:void clear() -> clear
    602:602:boolean contains(java.lang.Object) -> contains
    594:594:java.util.Iterator iterator() -> iterator
    606:614:boolean remove(java.lang.Object) -> remove
    590:590:int size() -> size
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    594:594:void <init>(com.google.gson.internal.LinkedTreeMap$EntrySet) -> <init>
    594:594:java.lang.Object next() -> next
    596:596:java.util.Map$Entry next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    623:623:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    645:645:void clear() -> clear
    637:637:boolean contains(java.lang.Object) -> contains
    629:629:java.util.Iterator iterator() -> iterator
    641:641:boolean remove(java.lang.Object) -> remove
    625:625:int size() -> size
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    629:629:void <init>(com.google.gson.internal.LinkedTreeMap$KeySet) -> <init>
    631:631:java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    555:559:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    563:563:boolean hasNext() -> hasNext
    567:575:com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    579:584:void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    474:477:void <init>(boolean) -> <init>
    481:489:void <init>(boolean,com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> <init>
    510:513:boolean equals(java.lang.Object) -> equals
    532:535:com.google.gson.internal.LinkedTreeMap$Node first() -> first
    493:493:java.lang.Object getKey() -> getKey
    497:497:java.lang.Object getValue() -> getValue
    519:520:int hashCode() -> hashCode
    545:548:com.google.gson.internal.LinkedTreeMap$Node last() -> last
    501:505:java.lang.Object setValue(java.lang.Object) -> setValue
    524:524:java.lang.String toString() -> toString
com.google.gson.internal.NonNullElementWrapperList -> com.google.gson.internal.NonNullElementWrapperList:
    20:21:void <init>(java.util.ArrayList) -> <init>
    44:44:void add(int,java.lang.Object) -> add
    54:54:void clear() -> clear
    70:70:boolean contains(java.lang.Object) -> contains
    90:90:boolean equals(java.lang.Object) -> equals
    25:25:java.lang.Object get(int) -> get
    94:94:int hashCode() -> hashCode
    74:74:int indexOf(java.lang.Object) -> indexOf
    78:78:int lastIndexOf(java.lang.Object) -> lastIndexOf
    34:34:java.lang.Object nonNull(java.lang.Object) -> nonNull
    48:48:java.lang.Object remove(int) -> remove
    58:58:boolean remove(java.lang.Object) -> remove
    62:62:boolean removeAll(java.util.Collection) -> removeAll
    66:66:boolean retainAll(java.util.Collection) -> retainAll
    40:40:java.lang.Object set(int,java.lang.Object) -> set
    29:29:int size() -> size
    82:82:java.lang.Object[] toArray() -> toArray
    86:86:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.gson.internal.PreJava9DateFormatProvider -> com.google.gson.internal.PreJava9DateFormatProvider:
    25:25:void <init>() -> <init>
    54:54:java.lang.String getDateFormatPattern(int) -> getDateFormatPattern
    69:69:java.lang.String getDatePartOfDateTimePattern(int) -> getDatePartOfDateTimePattern
    83:83:java.lang.String getTimePartOfDateTimePattern(int) -> getTimePartOfDateTimePattern
    31:31:java.text.DateFormat getUSDateFormat(int) -> getUSDateFormat
    39:40:java.text.DateFormat getUSDateTimeFormat(int,int) -> getUSDateTimeFormat
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    28:28:void <init>() -> <init>
    34:34:boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    44:44:boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    89:97:java.lang.Class unwrap(java.lang.Class) -> unwrap
    66:74:java.lang.Class wrap(java.lang.Class) -> wrap
com.google.gson.internal.ReflectionAccessFilterHelper -> com.google.gson.internal.ReflectionAccessFilterHelper:
    14:14:void <init>() -> <init>
    64:64:boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> canAccess
    51:57:com.google.gson.ReflectionAccessFilter$FilterResult getFilterResult(java.util.List,java.lang.Class) -> getFilterResult
    28:28:boolean isAndroidType(java.lang.Class) -> isAndroidType
    32:34:boolean isAndroidType(java.lang.String) -> isAndroidType
    38:42:boolean isAnyPlatformType(java.lang.Class) -> isAnyPlatformType
    20:20:boolean isJavaType(java.lang.Class) -> isJavaType
    24:24:boolean isJavaType(java.lang.String) -> isJavaType
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker -> com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker:
    72:96:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    67:67:void <init>(com.google.gson.internal.ReflectionAccessFilterHelper$1) -> <init>
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$1 -> com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$1:
    75:75:void <init>(java.lang.reflect.Method) -> <init>
    78:80:boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> canAccess
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$2 -> com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$2:
    89:89:void <init>() -> <init>
    0:0:boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> canAccess
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    37:38:void <init>() -> <init>
    47:65:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    73:73:void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    77:77:java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    86:89:void <init>(java.lang.Appendable) -> <init>
    84:84:java.lang.Appendable append(java.lang.CharSequence) -> append
    84:84:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    114:114:java.io.Writer append(java.lang.CharSequence) -> append
    119:119:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    0:0:void close() -> close
    0:0:void flush() -> flush
    93:94:void write(char[],int,int) -> write
    104:104:void write(int) -> write
    109:110:void write(java.lang.String,int,int) -> write
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    126:126:void <init>() -> <init>
    126:126:void <init>(com.google.gson.internal.Streams$1) -> <init>
    139:139:char charAt(int) -> charAt
    136:136:int length() -> length
    131:132:void setChars(char[]) -> setChars
    142:142:java.lang.CharSequence subSequence(int,int) -> subSequence
    147:150:java.lang.String toString() -> toString
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    45:45:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    30:30:void access$000(java.lang.Class) -> access$000
    39:41:void assertInstantiable(java.lang.Class) -> assertInstantiable
    53:114:com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    58:58:void <init>(java.lang.reflect.Method,java.lang.Object) -> <init>
    62:63:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    82:82:void <init>(java.lang.reflect.Method,int) -> <init>
    86:87:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    102:102:void <init>(java.lang.reflect.Method) -> <init>
    106:107:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    114:114:void <init>() -> <init>
    117:117:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    37:37:void <clinit>() -> <clinit>
    57:60:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class) -> <init>
    64:90:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    96:106:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    37:37:void <init>() -> <init>
    39:49:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    39:40:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    45:57:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    67:70:void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    61:61:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    74:85:java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    61:61:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    91:99:void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    47:47:void <clinit>() -> <clinit>
    58:66:void <init>() -> <init>
    79:90:java.util.Date deserializeToDate(com.google.gson.stream.JsonReader) -> deserializeToDate
    46:46:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    71:75:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    46:46:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    96:105:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    47:47:void <init>() -> <init>
    50:50:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.DefaultDateTypeAdapter -> com.google.gson.internal.bind.DefaultDateTypeAdapter:
    47:47:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,int,com.google.gson.internal.bind.DefaultDateTypeAdapter$1) -> <init>
    47:47:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,com.google.gson.internal.bind.DefaultDateTypeAdapter$1) -> <init>
    47:47:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,java.lang.String,com.google.gson.internal.bind.DefaultDateTypeAdapter$1) -> <init>
    92:98:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,java.lang.String) -> <init>
    92:109:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int) -> <init>
    92:120:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,int) -> <init>
    152:164:java.util.Date deserializeToDate(com.google.gson.stream.JsonReader) -> deserializeToDate
    47:47:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    143:148:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    170:174:java.lang.String toString() -> toString
    47:47:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    129:138:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType -> com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType:
    51:51:void <clinit>() -> <clinit>
    59:60:void <init>(java.lang.Class) -> <init>
    70:70:com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String) -> createAdapterFactory
    74:74:com.google.gson.TypeAdapterFactory createAdapterFactory(int) -> createAdapterFactory
    78:78:com.google.gson.TypeAdapterFactory createAdapterFactory(int,int) -> createAdapterFactory
    82:82:com.google.gson.TypeAdapterFactory createDefaultsAdapterFactory() -> createDefaultsAdapterFactory
    66:66:com.google.gson.TypeAdapterFactory createFactory(com.google.gson.internal.bind.DefaultDateTypeAdapter) -> createFactory
com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType$1 -> com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType$1:
    51:51:void <init>(java.lang.Class) -> <init>
    0:0:java.util.Date deserialize(java.util.Date) -> deserialize
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory -> com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:
    37:38:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    44:49:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    54:83:com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter) -> getTypeAdapter
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    40:48:void <clinit>() -> <clinit>
    53:69:void <init>(com.google.gson.JsonElement) -> <init>
    73:76:void beginArray() -> beginArray
    89:91:void beginObject() -> beginObject
    272:273:void close() -> close
    80:84:void endArray() -> endArray
    95:100:void endObject() -> endObject
    163:165:void expect(com.google.gson.stream.JsonToken) -> expect
    324:346:java.lang.String getPath(boolean) -> getPath
    354:354:java.lang.String getPath() -> getPath
    350:350:java.lang.String getPreviousPath() -> getPreviousPath
    105:106:boolean hasNext() -> hasNext
    358:358:java.lang.String locationString() -> locationString
    197:200:boolean nextBoolean() -> nextBoolean
    214:225:double nextDouble() -> nextDouble
    245:253:int nextInt() -> nextInt
    259:267:com.google.gson.JsonElement nextJsonElement() -> nextJsonElement
    231:239:long nextLong() -> nextLong
    170:175:java.lang.String nextName(boolean) -> nextName
    180:180:java.lang.String nextName() -> nextName
    206:209:void nextNull() -> nextNull
    184:191:java.lang.String nextString() -> nextString
    110:148:com.google.gson.stream.JsonToken peek() -> peek
    153:153:java.lang.Object peekStack() -> peekStack
    157:158:java.lang.Object popStack() -> popStack
    306:310:void promoteNameToValue() -> promoteNameToValue
    314:320:void push(java.lang.Object) -> push
    277:295:void skipValue() -> skipValue
    302:302:java.lang.String toString() -> toString
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    40:40:void <init>() -> <init>
    45:45:void close() -> close
    42:42:int read(char[],int,int) -> read
com.google.gson.internal.bind.JsonTreeReader$2 -> com.google.gson.internal.bind.JsonTreeReader$2:
    278:278:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    35:47:void <clinit>() -> <clinit>
    50:59:void <init>() -> <init>
    96:98:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    115:117:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    217:220:void close() -> close
    103:111:com.google.gson.stream.JsonWriter endArray() -> endArray
    122:130:com.google.gson.stream.JsonWriter endObject() -> endObject
    0:0:void flush() -> flush
    66:69:com.google.gson.JsonElement get() -> get
    155:155:com.google.gson.stream.JsonWriter jsonValue(java.lang.String) -> jsonValue
    134:143:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    159:159:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    73:73:com.google.gson.JsonElement peek() -> peek
    77:90:void put(com.google.gson.JsonElement) -> put
    148:150:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    164:164:com.google.gson.stream.JsonWriter value(boolean) -> value
    170:172:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    177:180:com.google.gson.stream.JsonWriter value(float) -> value
    185:188:com.google.gson.stream.JsonWriter value(double) -> value
    193:193:com.google.gson.stream.JsonWriter value(long) -> value
    199:209:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    35:35:void <init>() -> <init>
    43:43:void close() -> close
    40:40:void flush() -> flush
    37:37:void write(char[],int,int) -> write
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    110:112:void <init>(com.google.gson.internal.ConstructorConstructor,boolean) -> <init>
    116:130:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    139:141:com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    151:156:void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    245:259:java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    144:144:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    160:192:java.util.Map read(com.google.gson.stream.JsonReader) -> read
    144:144:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    199:240:void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
com.google.gson.internal.bind.NumberTypeAdapter -> com.google.gson.internal.bind.NumberTypeAdapter:
    39:39:void <clinit>() -> <clinit>
    43:44:void <init>(com.google.gson.ToNumberStrategy) -> <init>
    58:61:com.google.gson.TypeAdapterFactory getFactory(com.google.gson.ToNumberStrategy) -> getFactory
    48:49:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.ToNumberStrategy) -> newFactory
    35:35:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    66:75:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    35:35:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    80:80:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.NumberTypeAdapter$1 -> com.google.gson.internal.bind.NumberTypeAdapter$1:
    49:49:void <init>(com.google.gson.internal.bind.NumberTypeAdapter) -> <init>
    52:52:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.NumberTypeAdapter$2 -> com.google.gson.internal.bind.NumberTypeAdapter$2:
    67:67:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    44:44:void <clinit>() -> <clinit>
    40:40:void <init>(com.google.gson.Gson,com.google.gson.ToNumberStrategy,com.google.gson.internal.bind.ObjectTypeAdapter$1) -> <init>
    49:51:void <init>(com.google.gson.Gson,com.google.gson.ToNumberStrategy) -> <init>
    67:70:com.google.gson.TypeAdapterFactory getFactory(com.google.gson.ToNumberStrategy) -> getFactory
    55:55:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.ToNumberStrategy) -> newFactory
    112:164:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    93:105:java.lang.Object readTerminal(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> readTerminal
    79:85:java.lang.Object tryBeginNesting(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> tryBeginNesting
    171:183:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    55:55:void <init>(com.google.gson.ToNumberStrategy) -> <init>
    58:59:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    79:79:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    71:76:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder,com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory,java.util.List) -> <init>
    61:61:void access$000(java.lang.Object,java.lang.reflect.AccessibleObject) -> access$000
    134:136:void checkAccessible(java.lang.Object,java.lang.reflect.AccessibleObject) -> checkAccessible
    105:130:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    147:164:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.reflect.Method,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean,boolean) -> createBoundField
    230:306:java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class,boolean,boolean) -> getBoundFields
    85:99:java.util.List getFieldNames(java.lang.reflect.Field) -> getFieldNames
    80:80:boolean includeField(java.lang.reflect.Field,boolean) -> includeField
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    164:164:void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,java.lang.reflect.Field,boolean,boolean,boolean,java.lang.reflect.Method,boolean,com.google.gson.TypeAdapter,com.google.gson.Gson,com.google.gson.reflect.TypeToken,boolean,boolean) -> <init>
    201:206:void readIntoArray(com.google.gson.stream.JsonReader,int,java.lang.Object[]) -> readIntoArray
    212:222:void readIntoField(com.google.gson.stream.JsonReader,java.lang.Object) -> readIntoField
    167:196:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    354:355:void <init>(java.util.Map) -> <init>
    378:402:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    361:373:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    319:324:void <init>(java.lang.String,java.lang.reflect.Field,boolean,boolean) -> <init>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$FieldReflectionAdapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$FieldReflectionAdapter:
    421:422:void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map) -> <init>
    427:427:java.lang.Object createAccumulator() -> createAccumulator
    0:0:java.lang.Object finalize(java.lang.Object) -> finalize
    433:433:void readField(java.lang.Object,com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> readField
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter:
    443:443:void <clinit>() -> <clinit>
    450:474:void <init>(java.lang.Class,java.util.Map,boolean) -> <init>
    442:442:java.lang.Object createAccumulator() -> createAccumulator
    493:493:java.lang.Object[] createAccumulator() -> createAccumulator
    442:442:java.lang.Object finalize(java.lang.Object) -> finalize
    515:530:java.lang.Object finalize(java.lang.Object[]) -> finalize
    479:487:java.util.Map primitiveDefaults() -> primitiveDefaults
    442:442:void readField(java.lang.Object,com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> readField
    499:509:void readField(java.lang.Object[],com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> readField
com.google.gson.internal.bind.SerializationDelegatingTypeAdapter -> com.google.gson.internal.bind.SerializationDelegatingTypeAdapter:
    8:8:void <init>() -> <init>
com.google.gson.internal.bind.TreeTypeAdapter -> com.google.gson.internal.bind.TreeTypeAdapter:
    47:60:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,boolean) -> <init>
    65:65:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory) -> <init>
    94:97:com.google.gson.TypeAdapter delegate() -> delegate
    106:106:com.google.gson.TypeAdapter getSerializationDelegate() -> getSerializationDelegate
    113:113:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    123:124:com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    133:133:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
    69:76:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    80:89:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl -> com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl:
    170:170:void <init>(com.google.gson.internal.bind.TreeTypeAdapter) -> <init>
    170:170:void <init>(com.google.gson.internal.bind.TreeTypeAdapter,com.google.gson.internal.bind.TreeTypeAdapter$1) -> <init>
    179:179:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
    172:172:com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    175:175:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory:
    144:154:void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class) -> <init>
    160:164:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    32:35:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type) -> <init>
    96:97:java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
    80:89:boolean isReflective(com.google.gson.TypeAdapter) -> isReflective
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    51:70:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    72:920:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    937:937:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    947:947:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    960:960:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    975:975:com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    994:994:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    72:72:void <init>() -> <init>
    72:72:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    80:80:java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    72:72:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    75:76:void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    292:292:void <init>() -> <init>
    292:292:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    294:308:java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader) -> read
    292:292:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    313:317:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    323:323:void <init>() -> <init>
    323:323:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    326:333:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    323:323:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    339:341:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    346:346:void <init>() -> <init>
    346:346:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    349:353:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    346:346:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    358:363:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    368:368:void <init>() -> <init>
    368:368:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    371:375:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    368:368:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    380:382:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    387:387:void <init>() -> <init>
    387:387:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    390:398:java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    387:387:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    402:402:void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    409:409:void <init>() -> <init>
    409:409:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    412:421:java.lang.String read(com.google.gson.stream.JsonReader) -> read
    409:409:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    425:425:void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    429:429:void <init>() -> <init>
    429:429:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    431:439:java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    429:429:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    444:444:void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    448:448:void <init>() -> <init>
    448:448:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    450:458:java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    448:448:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    463:463:void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    467:467:void <init>() -> <init>
    467:467:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    472:476:com.google.gson.internal.LazilyParsedNumber read(com.google.gson.stream.JsonReader) -> read
    467:467:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    480:480:void write(com.google.gson.stream.JsonWriter,com.google.gson.internal.LazilyParsedNumber) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    486:486:void <init>() -> <init>
    486:486:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    489:493:java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    486:486:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    497:497:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    87:87:void <init>() -> <init>
    87:87:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    89:119:java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    87:87:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    124:129:void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    504:504:void <init>() -> <init>
    504:504:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    507:511:java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    504:504:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    515:515:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    522:522:void <init>() -> <init>
    522:522:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    525:530:java.net.URL read(com.google.gson.stream.JsonReader) -> read
    522:522:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    534:534:void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    540:540:void <init>() -> <init>
    540:540:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    543:551:java.net.URI read(com.google.gson.stream.JsonReader) -> read
    540:540:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    556:556:void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    562:562:void <init>() -> <init>
    562:562:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    565:570:java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    562:562:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    574:574:void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    581:581:void <init>() -> <init>
    581:581:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    584:592:java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    581:581:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    597:597:void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    603:603:void <init>() -> <init>
    603:603:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    606:610:java.util.Currency read(com.google.gson.stream.JsonReader) -> read
    603:603:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    615:615:void write(com.google.gson.stream.JsonWriter,java.util.Currency) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    620:620:void <init>() -> <init>
    620:620:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    630:659:java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    620:620:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    665:681:void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    688:688:void <init>() -> <init>
    688:688:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    691:714:java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    688:688:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    719:719:void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    725:725:void <init>() -> <init>
    725:725:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    763:817:com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    745:758:com.google.gson.JsonElement readTerminal(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> readTerminal
    731:737:com.google.gson.JsonElement tryBeginNesting(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> tryBeginNesting
    725:725:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    823:851:void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    920:920:void <init>() -> <init>
    922:930:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    135:135:void <init>() -> <init>
    135:135:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    138:146:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    135:135:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    150:150:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    937:937:void <init>(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> <init>
    940:940:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    947:947:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    950:950:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    953:953:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    960:960:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    963:964:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    967:968:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$33 -> com.google.gson.internal.bind.TypeAdapters$33:
    975:975:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    978:979:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    982:983:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$34 -> com.google.gson.internal.bind.TypeAdapters$34:
    994:994:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    997:1001:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    1017:1017:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$34$1 -> com.google.gson.internal.bind.TypeAdapters$34$1:
    1001:1001:void <init>(com.google.gson.internal.bind.TypeAdapters$34,java.lang.Class) -> <init>
    1007:1010:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1003:1003:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$35 -> com.google.gson.internal.bind.TypeAdapters$35:
    95:95:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    158:158:void <init>() -> <init>
    158:158:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    160:164:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    158:158:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    168:168:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    175:175:void <init>() -> <init>
    175:175:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    178:193:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    175:175:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    198:200:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    208:208:void <init>() -> <init>
    208:208:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    211:226:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    208:208:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    231:233:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    241:241:void <init>() -> <init>
    241:241:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    244:251:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    241:241:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    257:259:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    266:266:void <init>() -> <init>
    266:266:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    269:271:java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader) -> read
    266:266:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    275:275:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    281:281:void <init>() -> <init>
    281:281:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    283:283:java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader) -> read
    281:281:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    286:286:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    860:902:void <init>(java.lang.Class) -> <init>
    859:859:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    906:912:java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    859:859:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    916:916:void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter$1 -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter$1:
    869:869:void <init>(com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter,java.lang.Class) -> <init>
    869:869:java.lang.Object run() -> run
    871:880:java.lang.reflect.Field[] run() -> run
com.google.gson.internal.bind.util.ISO8601Utils -> com.google.gson.internal.bind.util.ISO8601Utils:
    34:34:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    293:293:boolean checkOffset(java.lang.String,int,char) -> checkOffset
    49:49:java.lang.String format(java.util.Date) -> format
    60:60:java.lang.String format(java.util.Date,boolean) -> format
    72:109:java.lang.String format(java.util.Date,boolean,java.util.TimeZone) -> format
    350:354:int indexOfNonDigit(java.lang.String,int) -> indexOfNonDigit
    339:343:void padInt(java.lang.StringBuilder,int,int) -> padInt
    130:281:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    306:323:int parseInt(java.lang.String,int,int) -> parseInt
com.google.gson.internal.reflect.ReflectionHelper -> com.google.gson.internal.reflect.ReflectionHelper:
    18:22:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    10:10:java.lang.RuntimeException access$300(java.lang.ReflectiveOperationException) -> access$300
    98:110:void appendExecutableParameters(java.lang.reflect.AccessibleObject,java.lang.StringBuilder) -> appendExecutableParameters
    90:93:java.lang.String constructorToString(java.lang.reflect.Constructor) -> constructorToString
    162:162:java.lang.RuntimeException createExceptionForRecordReflectionException(java.lang.ReflectiveOperationException) -> createExceptionForRecordReflectionException
    153:153:java.lang.RuntimeException createExceptionForUnexpectedIllegalAccess(java.lang.IllegalAccessException) -> createExceptionForUnexpectedIllegalAccess
    82:82:java.lang.String fieldToString(java.lang.reflect.Field) -> fieldToString
    55:72:java.lang.String getAccessibleObjectDescription(java.lang.reflect.AccessibleObject,boolean) -> getAccessibleObjectDescription
    144:144:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> getAccessor
    148:148:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> getCanonicalRecordConstructor
    139:139:java.lang.String[] getRecordComponentNames(java.lang.Class) -> getRecordComponentNames
    135:135:boolean isRecord(java.lang.Class) -> isRecord
    35:38:void makeAccessible(java.lang.reflect.AccessibleObject) -> makeAccessible
    123:129:java.lang.String tryMakeAccessible(java.lang.reflect.Constructor) -> tryMakeAccessible
com.google.gson.internal.reflect.ReflectionHelper$RecordHelper -> com.google.gson.internal.reflect.ReflectionHelper$RecordHelper:
    173:173:void <init>() -> <init>
    173:173:void <init>(com.google.gson.internal.reflect.ReflectionHelper$1) -> <init>
com.google.gson.internal.reflect.ReflectionHelper$RecordNotSupportedHelper -> com.google.gson.internal.reflect.ReflectionHelper$RecordNotSupportedHelper:
    252:252:void <init>() -> <init>
    252:252:void <init>(com.google.gson.internal.reflect.ReflectionHelper$1) -> <init>
    273:273:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> getAccessor
    267:267:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> getCanonicalRecordConstructor
    261:261:java.lang.String[] getRecordComponentNames(java.lang.Class) -> getRecordComponentNames
    0:0:boolean isRecord(java.lang.Class) -> isRecord
com.google.gson.internal.reflect.ReflectionHelper$RecordSupportedHelper -> com.google.gson.internal.reflect.ReflectionHelper$RecordSupportedHelper:
    183:183:void <init>(com.google.gson.internal.reflect.ReflectionHelper$1) -> <init>
    189:195:void <init>() -> <init>
    242:244:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> getAccessor
    224:233:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> getCanonicalRecordConstructor
    210:217:java.lang.String[] getRecordComponentNames(java.lang.Class) -> getRecordComponentNames
    201:203:boolean isRecord(java.lang.Class) -> isRecord
com.google.gson.internal.sql.SqlDateTypeAdapter -> com.google.gson.internal.sql.SqlDateTypeAdapter:
    40:40:void <clinit>() -> <clinit>
    39:39:void <init>(com.google.gson.internal.sql.SqlDateTypeAdapter$1) -> <init>
    48:50:void <init>() -> <init>
    39:39:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    55:67:java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    39:39:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    74:81:void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
com.google.gson.internal.sql.SqlDateTypeAdapter$1 -> com.google.gson.internal.sql.SqlDateTypeAdapter$1:
    40:40:void <init>() -> <init>
    43:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTimeTypeAdapter -> com.google.gson.internal.sql.SqlTimeTypeAdapter:
    41:41:void <clinit>() -> <clinit>
    40:40:void <init>(com.google.gson.internal.sql.SqlTimeTypeAdapter$1) -> <init>
    48:50:void <init>() -> <init>
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    54:65:java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    40:40:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    71:78:void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
com.google.gson.internal.sql.SqlTimeTypeAdapter$1 -> com.google.gson.internal.sql.SqlTimeTypeAdapter$1:
    41:41:void <init>() -> <init>
    44:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTimestampTypeAdapter -> com.google.gson.internal.sql.SqlTimestampTypeAdapter:
    15:15:void <clinit>() -> <clinit>
    14:14:void <init>(com.google.gson.TypeAdapter,com.google.gson.internal.sql.SqlTimestampTypeAdapter$1) -> <init>
    29:30:void <init>(com.google.gson.TypeAdapter) -> <init>
    14:14:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    35:36:java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    14:14:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    41:41:void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
com.google.gson.internal.sql.SqlTimestampTypeAdapter$1 -> com.google.gson.internal.sql.SqlTimestampTypeAdapter$1:
    15:15:void <init>() -> <init>
    18:20:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTypesSupport -> com.google.gson.internal.sql.SqlTypesSupport:
    37:65:void <clinit>() -> <clinit>
    69:69:void <init>() -> <init>
com.google.gson.internal.sql.SqlTypesSupport$1 -> com.google.gson.internal.sql.SqlTypesSupport$1:
    45:45:void <init>(java.lang.Class) -> <init>
    45:45:java.util.Date deserialize(java.util.Date) -> deserialize
    47:47:java.sql.Date deserialize(java.util.Date) -> deserialize
com.google.gson.internal.sql.SqlTypesSupport$2 -> com.google.gson.internal.sql.SqlTypesSupport$2:
    50:50:void <init>(java.lang.Class) -> <init>
    50:50:java.util.Date deserialize(java.util.Date) -> deserialize
    52:52:java.sql.Timestamp deserialize(java.util.Date) -> deserialize
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    69:72:void <init>() -> <init>
    79:82:void <init>(java.lang.reflect.Type) -> <init>
    275:283:java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    302:303:boolean equals(java.lang.Object) -> equals
    314:314:com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    321:321:com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
    383:383:com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type) -> getArray
    342:376:com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[]) -> getParameterized
    112:112:java.lang.Class getRawType() -> getRawType
    119:119:java.lang.reflect.Type getType() -> getType
    91:105:java.lang.reflect.Type getTypeTokenTypeArgument() -> getTypeTokenTypeArgument
    298:298:int hashCode() -> hashCode
    130:130:boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    145:158:boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    171:171:boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    179:191:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    210:249:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    291:293:boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    307:307:java.lang.String toString() -> toString
    258:262:boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    1685:1685:void <clinit>() -> <clinit>
    230:291:void <init>(java.io.Reader) -> <init>
    349:358:void beginArray() -> beginArray
    385:393:void beginObject() -> beginObject
    1464:1465:void checkLenient() -> checkLenient
    1230:1233:void close() -> close
    1667:1681:void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    471:603:int doPeek() -> doPeek
    367:376:void endArray() -> endArray
    402:412:void endObject() -> endObject
    1340:1357:boolean fillBuffer(int) -> fillBuffer
    1520:1546:java.lang.String getPath(boolean) -> getPath
    1581:1581:java.lang.String getPath() -> getPath
    1563:1563:java.lang.String getPreviousPath() -> getPreviousPath
    420:422:boolean hasNext() -> hasNext
    341:341:boolean isLenient() -> isLenient
    763:763:boolean isLiteral(char) -> isLiteral
    1514:1516:java.lang.String locationString() -> locationString
    851:864:boolean nextBoolean() -> nextBoolean
    899:929:double nextDouble() -> nextDouble
    1177:1222:int nextInt() -> nextInt
    944:984:long nextLong() -> nextLong
    788:803:java.lang.String nextName() -> nextName
    1383:1457:int nextNonWhitespace(boolean) -> nextNonWhitespace
    875:883:void nextNull() -> nextNull
    1000:1044:java.lang.String nextQuotedValue(char) -> nextQuotedValue
    816:839:java.lang.String nextString() -> nextString
    1059:1104:java.lang.String nextUnquotedValue() -> nextUnquotedValue
    431:465:com.google.gson.stream.JsonToken peek() -> peek
    608:647:int peekKeyword() -> peekKeyword
    652:749:int peekNumber() -> peekNumber
    1325:1331:void push(int) -> push
    1595:1650:char readEscapeCharacter() -> readEscapeCharacter
    334:334:void setLenient(boolean) -> setLenient
    1110:1132:void skipQuotedValue(char) -> skipQuotedValue
    1491:1500:boolean skipTo(java.lang.String) -> skipTo
    1475:1479:void skipToEndOfLine() -> skipToEndOfLine
    1139:1163:void skipUnquotedValue() -> skipUnquotedValue
    1254:1321:void skipValue() -> skipValue
    1659:1659:java.io.IOException syntaxError(java.lang.String) -> syntaxError
    1510:1510:java.lang.String toString() -> toString
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    1685:1685:void <init>() -> <init>
    1687:1703:void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    25:25:void <init>() -> <init>
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    25:84:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    25:25:com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
    25:25:com.google.gson.stream.JsonToken[] values() -> values
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    139:170:void <clinit>() -> <clinit>
    176:207:void <init>(java.io.Writer) -> <init>
    663:670:void beforeName() -> beforeName
    680:707:void beforeValue() -> beforeValue
    291:292:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    311:312:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    341:353:com.google.gson.stream.JsonWriter close(int,int,char) -> close
    606:612:void close() -> close
    301:301:com.google.gson.stream.JsonWriter endArray() -> endArray
    321:321:com.google.gson.stream.JsonWriter endObject() -> endObject
    594:597:void flush() -> flush
    281:281:boolean getSerializeNulls() -> getSerializeNulls
    265:265:boolean isHtmlSafe() -> isHtmlSafe
    246:246:boolean isLenient() -> isLenient
    550:550:boolean isTrustedNumberType(java.lang.Class) -> isTrustedNumberType
    436:440:com.google.gson.stream.JsonWriter jsonValue(java.lang.String) -> jsonValue
    388:395:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    648:654:void newline() -> newline
    450:459:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    329:331:com.google.gson.stream.JsonWriter open(int,char) -> open
    368:371:int peek() -> peek
    358:361:void push(int) -> push
    378:378:void replaceTop(int) -> replaceTop
    257:257:void setHtmlSafe(boolean) -> setHtmlSafe
    219:224:void setIndent(java.lang.String) -> setIndent
    239:239:void setLenient(boolean) -> setLenient
    273:273:void setSerializeNulls(boolean) -> setSerializeNulls
    616:644:void string(java.lang.String) -> string
    415:419:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    469:471:com.google.gson.stream.JsonWriter value(boolean) -> value
    483:487:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    503:508:com.google.gson.stream.JsonWriter value(float) -> value
    522:527:com.google.gson.stream.JsonWriter value(double) -> value
    537:539:com.google.gson.stream.JsonWriter value(long) -> value
    567:585:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    400:403:void writeDeferredName() -> writeDeferredName
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    29:29:void <init>(java.lang.String) -> <init>
    33:33:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    37:37:void <init>(java.lang.Throwable) -> <init>
com.skyfi.atak.plugin.AOIManager -> com.skyfi.atak.plugin.AOIManager:
    24:29:void <clinit>() -> <clinit>
    61:65:void <init>(android.content.Context) -> <init>
    83:89:com.skyfi.atak.plugin.AOIManager$AOI createAOI(java.lang.String,java.util.List,double,java.lang.String) -> createAOI
    137:150:java.util.List createMinimumAOIAroundPoint(com.atakmap.coremap.maps.coords.GeoPoint,java.lang.String) -> createMinimumAOIAroundPoint
    106:108:boolean deleteAOI(java.lang.String) -> deleteAOI
    119:119:com.skyfi.atak.plugin.AOIManager$AOI getAOI(java.lang.String) -> getAOI
    115:115:java.util.List getAllAOIs() -> getAllAOIs
    128:131:double getMinimumAreaForPoint(com.atakmap.coremap.maps.coords.GeoPoint,java.lang.String) -> getMinimumAreaForPoint
    123:123:double getMinimumAreaForSensor(java.lang.String) -> getMinimumAreaForSensor
    69:73:void loadAOIs() -> loadAOIs
    94:99:boolean renameAOI(java.lang.String,java.lang.String) -> renameAOI
    78:79:void saveAOIs() -> saveAOIs
com.skyfi.atak.plugin.AOIManager$$ExternalSyntheticApiModelOutline0 -> com.skyfi.atak.plugin.AOIManager$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object com.skyfi.atak.plugin.AOIManager$$InternalSyntheticApiModelOutline$1$3b2b89429898d339a9ceeba46db28e545531388e132b5477b8d112936d668d93$0.m(java.util.Map,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.AOIManager$1 -> com.skyfi.atak.plugin.AOIManager$1:
    70:70:void <init>(com.skyfi.atak.plugin.AOIManager) -> <init>
com.skyfi.atak.plugin.AOIManager$AOI -> com.skyfi.atak.plugin.AOIManager$AOI:
    46:49:void <init>() -> <init>
    53:57:void <init>(java.lang.String,java.util.List,double) -> <init>
com.skyfi.atak.plugin.AORFilterManager -> com.skyfi.atak.plugin.AORFilterManager:
    33:70:void <init>(android.content.Context) -> <init>
    114:117:void addAOR(java.lang.String,java.lang.String,java.util.List) -> addAOR
    204:211:com.atakmap.coremap.maps.coords.GeoPoint extractCenterFromFootprint(java.lang.String) -> extractCenterFromFootprint
    136:162:java.util.List filterArchivesByAOR(java.util.List) -> filterArchivesByAOR
    121:123:java.util.List getAvailableAORs() -> getAvailableAORs
    132:132:java.lang.String getSelectedAOR() -> getSelectedAOR
    88:109:void initializeDefaultAORs() -> initializeDefaultAORs
    167:190:boolean isArchiveInAOR(com.skyfi.atak.plugin.skyfiapi.Archive,org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.GeometryFactory) -> isArchiveInAOR
    74:78:void loadAORDefinitions() -> loadAORDefinitions
    83:84:void saveAORDefinitions() -> saveAORDefinitions
    128:128:void setSelectedAOR(java.lang.String) -> setSelectedAOR
com.skyfi.atak.plugin.AORFilterManager$1 -> com.skyfi.atak.plugin.AORFilterManager$1:
    75:75:void <init>(com.skyfi.atak.plugin.AORFilterManager) -> <init>
com.skyfi.atak.plugin.AORFilterManager$AORDefinition -> com.skyfi.atak.plugin.AORFilterManager$AORDefinition:
    41:45:void <init>(java.lang.String,java.lang.String,java.util.List) -> <init>
    49:61:java.lang.String convertToWKT(java.util.List) -> convertToWKT
com.skyfi.atak.plugin.APIClient -> com.skyfi.atak.plugin.APIClient:
    23:46:void <init>() -> <init>
    50:50:com.skyfi.atak.plugin.skyfiapi.SkyFiAPI getApiClient() -> getApiClient
com.skyfi.atak.plugin.APIClient$1 -> com.skyfi.atak.plugin.APIClient$1:
    28:28:void <init>(com.skyfi.atak.plugin.APIClient,com.skyfi.atak.plugin.Preferences) -> <init>
    32:34:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
com.skyfi.atak.plugin.ArchiveOrderFragment -> com.skyfi.atak.plugin.ArchiveOrderFragment:
    26:30:void <init>(com.atakmap.android.maps.MapView,android.content.Context,java.lang.String) -> <init>
    0:0:void disposeImpl() -> disposeImpl
    0:0:void onDropDownClose() -> onDropDownClose
    0:0:void onDropDownSelectionRemoved() -> onDropDownSelectionRemoved
    0:0:void onDropDownSizeChanged(double,double) -> onDropDownSizeChanged
    0:0:void onDropDownVisible(boolean) -> onDropDownVisible
    0:0:void onItemClick(android.view.View,int) -> onItemClick
    0:0:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.skyfi.atak.plugin.ArchiveRecyclerViewAdapter -> com.skyfi.atak.plugin.ArchiveRecyclerViewAdapter:
    0:0:com.skyfi.atak.plugin.ArchiveRecyclerViewAdapter$ItemClickListener -$$Nest$fgetmClickListener(com.skyfi.atak.plugin.ArchiveRecyclerViewAdapter) -> -$$Nest$fgetmClickListener
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$fputselectedPosition(com.skyfi.atak.plugin.ArchiveRecyclerViewAdapter,int) -> -$$Nest$fputselectedPosition
      # {"id":"com.android.tools.r8.synthesized"}
    21:27:void <init>(android.content.Context,com.skyfi.atak.plugin.skyfiapi.ArchiveResponse) -> <init>
    0:0:int getItemCount() -> getItemCount
    0:0:void onBindViewHolder(com.skyfi.atak.plugin.ArchiveRecyclerViewAdapter$ViewHolder,int) -> onBindViewHolder
    15:15:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    15:15:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    34:35:com.skyfi.atak.plugin.ArchiveRecyclerViewAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    87:87:void setClickListener(com.skyfi.atak.plugin.ArchiveRecyclerViewAdapter$ItemClickListener) -> setClickListener
com.skyfi.atak.plugin.ArchiveRecyclerViewAdapter$ViewHolder -> com.skyfi.atak.plugin.ArchiveRecyclerViewAdapter$ViewHolder:
    59:69:void <init>(com.skyfi.atak.plugin.ArchiveRecyclerViewAdapter,android.view.View) -> <init>
    74:77:void onClick(android.view.View) -> onClick
com.skyfi.atak.plugin.ArchiveSearch -> com.skyfi.atak.plugin.ArchiveSearch:
    0:0:void $r8$lambda$Q6V3SSWeHdnLCzMB5sEPaPQ0RYM(com.skyfi.atak.plugin.ArchiveSearch,android.widget.DatePicker,int,int,int) -> $r8$lambda$Q6V3SSWeHdnLCzMB5sEPaPQ0RYM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$_NHI7OAcgdyBClQkl_3ChCQhmJw(com.skyfi.atak.plugin.ArchiveSearch,android.widget.DatePicker,int,int,int) -> $r8$lambda$_NHI7OAcgdyBClQkl_3ChCQhmJw
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.widget.EditText -$$Nest$fgetmaxCloudCoverage(com.skyfi.atak.plugin.ArchiveSearch) -> -$$Nest$fgetmaxCloudCoverage
      # {"id":"com.android.tools.r8.synthesized"}
    33:219:void <init>(com.atakmap.android.maps.MapView,android.content.Context,java.lang.String) -> <init>
    0:0:void disposeImpl() -> disposeImpl
    297:307:void lambda$onClick$0(android.widget.DatePicker,int,int,int) -> lambda$onClick$0
    319:329:void lambda$onClick$1(android.widget.DatePicker,int,int,int) -> lambda$onClick$1
    289:495:void onClick(android.view.View) -> onClick
    0:0:void onDropDownClose() -> onDropDownClose
    0:0:void onDropDownSelectionRemoved() -> onDropDownSelectionRemoved
    0:0:void onDropDownSizeChanged(double,double) -> onDropDownSizeChanged
    0:0:void onDropDownVisible(boolean) -> onDropDownVisible
    268:282:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.skyfi.atak.plugin.ArchiveSearch$$ExternalSyntheticApiModelOutline0 -> com.skyfi.atak.plugin.ArchiveSearch$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.icu.util.Calendar com.skyfi.atak.plugin.ArchiveSearch$$InternalSyntheticApiModelOutline$1$999bd3aad2f1b80fe7f3eacbfbc7d806c773434432f267c5e1bfcff950db6291$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchiveSearch$$ExternalSyntheticApiModelOutline1 -> com.skyfi.atak.plugin.ArchiveSearch$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.skyfi.atak.plugin.ArchiveSearch$$InternalSyntheticApiModelOutline$1$999bd3aad2f1b80fe7f3eacbfbc7d806c773434432f267c5e1bfcff950db6291$2.m(android.icu.util.Calendar,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchiveSearch$$ExternalSyntheticLambda2 -> com.skyfi.atak.plugin.ArchiveSearch$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchiveSearch com.skyfi.atak.plugin.ArchiveSearch$$InternalSyntheticLambda$1$999bd3aad2f1b80fe7f3eacbfbc7d806c773434432f267c5e1bfcff950db6291$1.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ArchiveSearch$$InternalSyntheticLambda$1$999bd3aad2f1b80fe7f3eacbfbc7d806c773434432f267c5e1bfcff950db6291$1.<init>(com.skyfi.atak.plugin.ArchiveSearch) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchiveSearch$$InternalSyntheticLambda$1$999bd3aad2f1b80fe7f3eacbfbc7d806c773434432f267c5e1bfcff950db6291$1.onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchiveSearch$$ExternalSyntheticLambda3 -> com.skyfi.atak.plugin.ArchiveSearch$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchiveSearch com.skyfi.atak.plugin.ArchiveSearch$$InternalSyntheticLambda$1$999bd3aad2f1b80fe7f3eacbfbc7d806c773434432f267c5e1bfcff950db6291$6.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ArchiveSearch$$InternalSyntheticLambda$1$999bd3aad2f1b80fe7f3eacbfbc7d806c773434432f267c5e1bfcff950db6291$6.<init>(com.skyfi.atak.plugin.ArchiveSearch) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchiveSearch$$InternalSyntheticLambda$1$999bd3aad2f1b80fe7f3eacbfbc7d806c773434432f267c5e1bfcff950db6291$6.onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchiveSearch$1 -> com.skyfi.atak.plugin.ArchiveSearch$1:
    174:174:void <init>(com.skyfi.atak.plugin.ArchiveSearch,android.content.Context) -> <init>
    0:0:void afterTextChanged(android.text.Editable) -> afterTextChanged
    0:0:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    181:188:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.skyfi.atak.plugin.ArchiveSearch$2 -> com.skyfi.atak.plugin.ArchiveSearch$2:
    197:197:void <init>(com.skyfi.atak.plugin.ArchiveSearch,android.content.Context) -> <init>
    0:0:void afterTextChanged(android.text.Editable) -> afterTextChanged
    0:0:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    204:210:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.skyfi.atak.plugin.ArchiveSearch$3 -> com.skyfi.atak.plugin.ArchiveSearch$3:
    219:219:void <init>(com.skyfi.atak.plugin.ArchiveSearch,android.content.Context) -> <init>
    0:0:void afterTextChanged(android.text.Editable) -> afterTextChanged
    0:0:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    226:232:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.skyfi.atak.plugin.ArchivesBrowser -> com.skyfi.atak.plugin.ArchivesBrowser:
    0:0:void $r8$lambda$4ecHMFcIJGmYowZM4F_58rSUFtI(com.skyfi.atak.plugin.ArchivesBrowser,android.view.View) -> $r8$lambda$4ecHMFcIJGmYowZM4F_58rSUFtI
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$AlQ59z3MqU_YojLxIPU4wx9Tmew(com.skyfi.atak.plugin.ArchivesBrowser,java.lang.String[],java.lang.String[],android.content.DialogInterface,int) -> $r8$lambda$AlQ59z3MqU_YojLxIPU4wx9Tmew
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$B2fJZeDD8RaH3QJI_xVyAuyuPTo(com.skyfi.atak.plugin.ArchivesBrowser,com.skyfi.atak.plugin.skyfiapi.Archive,android.content.DialogInterface,int) -> $r8$lambda$B2fJZeDD8RaH3QJI_xVyAuyuPTo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$CKMcGEzfl0WvUnI3VabWzP5dHJo(com.skyfi.atak.plugin.ArchivesBrowser,java.util.List,android.content.DialogInterface,int) -> $r8$lambda$CKMcGEzfl0WvUnI3VabWzP5dHJo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$LXxYUR0hO16Xcb-Kjk1cMiAF6iU(com.skyfi.atak.plugin.ArchivesBrowser) -> $r8$lambda$LXxYUR0hO16Xcb-Kjk1cMiAF6iU
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int $r8$lambda$TON-5rrfFusFFJ-mHouH2ZpD9oc(com.skyfi.atak.plugin.ArchivesBrowser,com.skyfi.atak.plugin.skyfiapi.Archive,com.skyfi.atak.plugin.skyfiapi.Archive) -> $r8$lambda$TON-5rrfFusFFJ-mHouH2ZpD9oc
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$V6nYe8R-3whgj9yMvzm4GTOgWJ4(com.skyfi.atak.plugin.ArchivesBrowser,android.view.View) -> $r8$lambda$V6nYe8R-3whgj9yMvzm4GTOgWJ4
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$_yJkCCgBqO_xVMz7fuqVlL28HdQ(com.skyfi.atak.plugin.ArchivesBrowser,android.view.View) -> $r8$lambda$_yJkCCgBqO_xVMz7fuqVlL28HdQ
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$fRxnLFIqKoYICr3RB6fkPk9TM5I(com.skyfi.atak.plugin.ArchivesBrowser,android.view.View) -> $r8$lambda$fRxnLFIqKoYICr3RB6fkPk9TM5I
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$m25D75GCqubeksSDfQfr007rGDg(com.skyfi.atak.plugin.ArchivesBrowser,android.view.View) -> $r8$lambda$m25D75GCqubeksSDfQfr007rGDg
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.content.Context -$$Nest$fgetcontext(com.skyfi.atak.plugin.ArchivesBrowser) -> -$$Nest$fgetcontext
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$mparseResponse(com.skyfi.atak.plugin.ArchivesBrowser,retrofit2.Call,retrofit2.Response) -> -$$Nest$mparseResponse
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$mshowError(com.skyfi.atak.plugin.ArchivesBrowser,java.lang.String,java.lang.String) -> -$$Nest$mshowError
      # {"id":"com.android.tools.r8.synthesized"}
    45:123:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    447:461:void applyCurrentFilter() -> applyCurrentFilter
    359:395:void cacheCurrentImages() -> cacheCurrentImages
    0:0:void disposeImpl() -> disposeImpl
    132:133:void getArchives() -> getArchives
    90:94:void lambda$new$0(android.view.View) -> lambda$new$0
    98:107:void lambda$new$1(android.view.View) -> lambda$new$1
    111:111:void lambda$new$2(android.view.View) -> lambda$new$2
    115:115:void lambda$new$3(android.view.View) -> lambda$new$3
    119:119:void lambda$new$4(android.view.View) -> lambda$new$4
    124:127:void lambda$new$5() -> lambda$new$5
    302:302:void lambda$onItemClick$6(com.skyfi.atak.plugin.skyfiapi.Archive,android.content.DialogInterface,int) -> lambda$onItemClick$6
    437:440:void lambda$showAORFilterDialog$7(java.util.List,android.content.DialogInterface,int) -> lambda$showAORFilterDialog$7
    486:489:void lambda$showSortDialog$8(java.lang.String[],java.lang.String[],android.content.DialogInterface,int) -> lambda$showSortDialog$8
    499:506:int lambda$sortArchives$9(com.skyfi.atak.plugin.skyfiapi.Archive,com.skyfi.atak.plugin.skyfiapi.Archive) -> lambda$sortArchives$9
    0:0:void onDropDownClose() -> onDropDownClose
    0:0:void onDropDownSelectionRemoved() -> onDropDownSelectionRemoved
    0:0:void onDropDownSizeChanged(double,double) -> onDropDownSizeChanged
    0:0:void onDropDownVisible(boolean) -> onDropDownVisible
    297:305:void onItemClick(android.view.View,int) -> onItemClick
    274:291:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    167:234:void parseResponse(retrofit2.Call,retrofit2.Response) -> parseResponse
    309:315:void placeOrder(com.skyfi.atak.plugin.skyfiapi.Archive) -> placeOrder
    149:153:void postArchives() -> postArchives
    422:443:void showAORFilterDialog() -> showAORFilterDialog
    240:244:void showError(java.lang.String,java.lang.String) -> showError
    467:492:void showSortDialog() -> showSortDialog
    496:514:void sortArchives() -> sortArchives
com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda0 -> com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchivesBrowser com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$5c778f9ab9dd803f7d64aeb1ce356c76a188f0a820e6eece982b4159136d8938$0.f$0 -> f$0
    com.skyfi.atak.plugin.skyfiapi.Archive com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$5c778f9ab9dd803f7d64aeb1ce356c76a188f0a820e6eece982b4159136d8938$0.f$1 -> f$1
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$5c778f9ab9dd803f7d64aeb1ce356c76a188f0a820e6eece982b4159136d8938$0.<init>(com.skyfi.atak.plugin.ArchivesBrowser,com.skyfi.atak.plugin.skyfiapi.Archive) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$5c778f9ab9dd803f7d64aeb1ce356c76a188f0a820e6eece982b4159136d8938$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda1 -> com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchivesBrowser com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$66f57e2a8996c4a1a07be49e62e0aa8d2aae33bdbf913a844db52b935edac86d$0.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$66f57e2a8996c4a1a07be49e62e0aa8d2aae33bdbf913a844db52b935edac86d$0.<init>(com.skyfi.atak.plugin.ArchivesBrowser) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$66f57e2a8996c4a1a07be49e62e0aa8d2aae33bdbf913a844db52b935edac86d$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda2 -> com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchivesBrowser com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$0.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$0.<init>(com.skyfi.atak.plugin.ArchivesBrowser) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda3 -> com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchivesBrowser com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$1.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$1.<init>(com.skyfi.atak.plugin.ArchivesBrowser) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda4 -> com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchivesBrowser com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$2.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$2.<init>(com.skyfi.atak.plugin.ArchivesBrowser) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$2.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda5 -> com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchivesBrowser com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$3.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$3.<init>(com.skyfi.atak.plugin.ArchivesBrowser) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$3.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda6 -> com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchivesBrowser com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$4.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$4.<init>(com.skyfi.atak.plugin.ArchivesBrowser) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$4.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda7 -> com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchivesBrowser com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$5.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$5.<init>(com.skyfi.atak.plugin.ArchivesBrowser) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$79e98e3038ae4462d79d6f152b6bf220cca5db695844f23af1e246ac7feb72ff$5.onRefresh() -> onRefresh
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda8 -> com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchivesBrowser com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$b488dc68c559534debe094ff8268e1d56c38560de6cb8c0313ea98cd54f3b3ee$0.f$0 -> f$0
    java.lang.String[] com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$b488dc68c559534debe094ff8268e1d56c38560de6cb8c0313ea98cd54f3b3ee$0.f$2 -> f$2
    java.lang.String[] com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$b488dc68c559534debe094ff8268e1d56c38560de6cb8c0313ea98cd54f3b3ee$0.f$1 -> f$1
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$b488dc68c559534debe094ff8268e1d56c38560de6cb8c0313ea98cd54f3b3ee$0.<init>(com.skyfi.atak.plugin.ArchivesBrowser,java.lang.String[],java.lang.String[]) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$b488dc68c559534debe094ff8268e1d56c38560de6cb8c0313ea98cd54f3b3ee$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda9 -> com.skyfi.atak.plugin.ArchivesBrowser$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ArchivesBrowser com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$cb4bae353773b4ca3d846c2a41a9bfdbcd6f0d4e2fb5598b204a041769cdcd00$0.f$0 -> f$0
    java.util.List com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$cb4bae353773b4ca3d846c2a41a9bfdbcd6f0d4e2fb5598b204a041769cdcd00$0.f$1 -> f$1
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$cb4bae353773b4ca3d846c2a41a9bfdbcd6f0d4e2fb5598b204a041769cdcd00$0.<init>(com.skyfi.atak.plugin.ArchivesBrowser,java.util.List) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$$InternalSyntheticLambda$1$cb4bae353773b4ca3d846c2a41a9bfdbcd6f0d4e2fb5598b204a041769cdcd00$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowser$1 -> com.skyfi.atak.plugin.ArchivesBrowser$1:
    133:133:void <init>(com.skyfi.atak.plugin.ArchivesBrowser) -> <init>
    141:142:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    136:136:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
com.skyfi.atak.plugin.ArchivesBrowser$2 -> com.skyfi.atak.plugin.ArchivesBrowser$2:
    153:153:void <init>(com.skyfi.atak.plugin.ArchivesBrowser) -> <init>
    0:0:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    156:156:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
com.skyfi.atak.plugin.ArchivesBrowser$3 -> com.skyfi.atak.plugin.ArchivesBrowser$3:
    315:315:void <init>(com.skyfi.atak.plugin.ArchivesBrowser) -> <init>
    346:353:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    318:339:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
com.skyfi.atak.plugin.ArchivesBrowser$4 -> com.skyfi.atak.plugin.ArchivesBrowser$4:
    0:0:void $r8$lambda$-FrVYpPKRz9M7de1dxD8sBJVop0(android.app.AlertDialog,int,int) -> $r8$lambda$-FrVYpPKRz9M7de1dxD8sBJVop0
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$C8ci78JkE-dYwb7YUbEzZtN2S1c(com.skyfi.atak.plugin.ArchivesBrowser$4,android.app.AlertDialog,boolean,java.lang.String) -> $r8$lambda$C8ci78JkE-dYwb7YUbEzZtN2S1c
      # {"id":"com.android.tools.r8.synthesized"}
    395:395:void <init>(com.skyfi.atak.plugin.ArchivesBrowser,android.app.AlertDialog) -> <init>
    410:415:void lambda$onComplete$1(android.app.AlertDialog,boolean,java.lang.String) -> lambda$onComplete$1
    400:401:void lambda$onProgress$0(android.app.AlertDialog,int,int) -> lambda$onProgress$0
    409:409:void onComplete(boolean,java.lang.String) -> onComplete
    399:399:void onProgress(int,int) -> onProgress
com.skyfi.atak.plugin.ArchivesBrowser$4$$ExternalSyntheticLambda0 -> com.skyfi.atak.plugin.ArchivesBrowser$4$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.AlertDialog com.skyfi.atak.plugin.ArchivesBrowser$4$$InternalSyntheticLambda$1$d4a80babb2d5f50ac08f829f1ad12a5db179319cdb36d646d028d495a5628fa0$0.f$1 -> f$1
    com.skyfi.atak.plugin.ArchivesBrowser$4 com.skyfi.atak.plugin.ArchivesBrowser$4$$InternalSyntheticLambda$1$d4a80babb2d5f50ac08f829f1ad12a5db179319cdb36d646d028d495a5628fa0$0.f$0 -> f$0
    java.lang.String com.skyfi.atak.plugin.ArchivesBrowser$4$$InternalSyntheticLambda$1$d4a80babb2d5f50ac08f829f1ad12a5db179319cdb36d646d028d495a5628fa0$0.f$3 -> f$3
    boolean com.skyfi.atak.plugin.ArchivesBrowser$4$$InternalSyntheticLambda$1$d4a80babb2d5f50ac08f829f1ad12a5db179319cdb36d646d028d495a5628fa0$0.f$2 -> f$2
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$4$$InternalSyntheticLambda$1$d4a80babb2d5f50ac08f829f1ad12a5db179319cdb36d646d028d495a5628fa0$0.<init>(com.skyfi.atak.plugin.ArchivesBrowser$4,android.app.AlertDialog,boolean,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$4$$InternalSyntheticLambda$1$d4a80babb2d5f50ac08f829f1ad12a5db179319cdb36d646d028d495a5628fa0$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowser$4$$ExternalSyntheticLambda1 -> com.skyfi.atak.plugin.ArchivesBrowser$4$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.AlertDialog com.skyfi.atak.plugin.ArchivesBrowser$4$$InternalSyntheticLambda$1$fb89d98b26f77f1f27258b601422e41a244deec0e5576a529609ec01d2135298$0.f$0 -> f$0
    int com.skyfi.atak.plugin.ArchivesBrowser$4$$InternalSyntheticLambda$1$fb89d98b26f77f1f27258b601422e41a244deec0e5576a529609ec01d2135298$0.f$2 -> f$2
    int com.skyfi.atak.plugin.ArchivesBrowser$4$$InternalSyntheticLambda$1$fb89d98b26f77f1f27258b601422e41a244deec0e5576a529609ec01d2135298$0.f$1 -> f$1
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$4$$InternalSyntheticLambda$1$fb89d98b26f77f1f27258b601422e41a244deec0e5576a529609ec01d2135298$0.<init>(android.app.AlertDialog,int,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowser$4$$InternalSyntheticLambda$1$fb89d98b26f77f1f27258b601422e41a244deec0e5576a529609ec01d2135298$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter -> com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter:
    0:0:void $r8$lambda$E2xc2D_1zfhxljXA6iOGvLMyvGo(com.skyfi.atak.plugin.skyfiapi.Archive,android.os.Handler,com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder) -> $r8$lambda$E2xc2D_1zfhxljXA6iOGvLMyvGo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$kpOgjCW416e7rhgY1wMSbDD2ehc(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder,android.graphics.Bitmap) -> $r8$lambda$kpOgjCW416e7rhgY1wMSbDD2ehc
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:com.skyfi.atak.plugin.ImagePreferencesManager -$$Nest$fgetimagePrefsManager(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter) -> -$$Nest$fgetimagePrefsManager
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ItemClickListener -$$Nest$fgetmClickListener(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter) -> -$$Nest$fgetmClickListener
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.ArrayList -$$Nest$fgetmData(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter) -> -$$Nest$fgetmData
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$fputselectedPosition(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter,int) -> -$$Nest$fputselectedPosition
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$mupdateButtonStates(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter,com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder,java.lang.String) -> -$$Nest$mupdateButtonStates
      # {"id":"com.android.tools.r8.synthesized"}
    33:41:void <init>(android.content.Context,java.util.ArrayList) -> <init>
    157:157:com.skyfi.atak.plugin.skyfiapi.Archive getItem(int) -> getItem
    100:100:int getItemCount() -> getItemCount
    72:73:void lambda$onBindViewHolder$0(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder,android.graphics.Bitmap) -> lambda$onBindViewHolder$0
    65:77:void lambda$onBindViewHolder$1(com.skyfi.atak.plugin.skyfiapi.Archive,android.os.Handler,com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder) -> lambda$onBindViewHolder$1
    27:27:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    53:94:void onBindViewHolder(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder,int) -> onBindViewHolder
    27:27:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    47:48:com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    162:162:void setClickListener(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ItemClickListener) -> setClickListener
    171:179:void updateButtonStates(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder,java.lang.String) -> updateButtonStates
com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$ExternalSyntheticLambda0 -> com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.graphics.Bitmap com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$InternalSyntheticLambda$1$ae2239920fa7725cc308e7efb94507f9643d8189c83f69c25728443347683f86$0.f$1 -> f$1
    com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$InternalSyntheticLambda$1$ae2239920fa7725cc308e7efb94507f9643d8189c83f69c25728443347683f86$0.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$InternalSyntheticLambda$1$ae2239920fa7725cc308e7efb94507f9643d8189c83f69c25728443347683f86$0.<init>(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder,android.graphics.Bitmap) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$InternalSyntheticLambda$1$ae2239920fa7725cc308e7efb94507f9643d8189c83f69c25728443347683f86$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$ExternalSyntheticLambda1 -> com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.skyfiapi.Archive com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$InternalSyntheticLambda$1$e5426c0cdfb2dfe1a74d35bf4e5b372d3af5a50c43dec2bbd5f01b5797158f37$0.f$0 -> f$0
    android.os.Handler com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$InternalSyntheticLambda$1$e5426c0cdfb2dfe1a74d35bf4e5b372d3af5a50c43dec2bbd5f01b5797158f37$0.f$1 -> f$1
    com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$InternalSyntheticLambda$1$e5426c0cdfb2dfe1a74d35bf4e5b372d3af5a50c43dec2bbd5f01b5797158f37$0.f$2 -> f$2
    0:0:void com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$InternalSyntheticLambda$1$e5426c0cdfb2dfe1a74d35bf4e5b372d3af5a50c43dec2bbd5f01b5797158f37$0.<init>(com.skyfi.atak.plugin.skyfiapi.Archive,android.os.Handler,com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$$InternalSyntheticLambda$1$e5426c0cdfb2dfe1a74d35bf4e5b372d3af5a50c43dec2bbd5f01b5797158f37$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder -> com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter$ViewHolder:
    115:129:void <init>(com.skyfi.atak.plugin.ArchivesBrowserRecyclerViewAdapter,android.view.View) -> <init>
    134:149:void onClick(android.view.View) -> onClick
com.skyfi.atak.plugin.BuildConfig -> com.skyfi.atak.plugin.BuildConfig:
    6:6:void <init>() -> <init>
com.skyfi.atak.plugin.Constants -> com.skyfi.atak.plugin.Constants:
    0:0:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
com.skyfi.atak.plugin.CoordinateInputDialog -> com.skyfi.atak.plugin.CoordinateInputDialog:
    0:0:void $r8$lambda$BjIp2nMYZ-RDUCsOrpCRCkNM86o(android.app.AlertDialog,android.widget.RadioGroup,android.widget.EditText,android.widget.EditText,android.content.Context,android.widget.EditText,com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener,android.content.DialogInterface) -> $r8$lambda$BjIp2nMYZ-RDUCsOrpCRCkNM86o
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$N1vz5Dl_1A2hi-JNha62o1rQ8JM(android.widget.RadioGroup,android.widget.EditText,android.widget.EditText,android.content.Context,android.widget.EditText,com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener,android.app.AlertDialog,android.view.View) -> $r8$lambda$N1vz5Dl_1A2hi-JNha62o1rQ8JM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$O8BStWIFxcLH08y8Bgihb0ZN3-U(com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener,android.content.DialogInterface,int) -> $r8$lambda$O8BStWIFxcLH08y8Bgihb0ZN3-U
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$uAH8HJROG5clYrGOjgsmEe6EO6k(android.widget.EditText,android.widget.EditText,android.widget.EditText,android.widget.TextView,android.content.Context,android.widget.RadioGroup,int) -> $r8$lambda$uAH8HJROG5clYrGOjgsmEe6EO6k
      # {"id":"com.android.tools.r8.synthesized"}
    20:20:void <init>() -> <init>
    132:132:com.atakmap.coremap.maps.coords.GeoPoint getCurrentLocation(android.content.Context) -> getCurrentLocation
    39:55:void lambda$show$0(android.widget.EditText,android.widget.EditText,android.widget.EditText,android.widget.TextView,android.content.Context,android.widget.RadioGroup,int) -> lambda$show$0
    68:68:void lambda$show$1(com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener,android.content.DialogInterface,int) -> lambda$show$1
    81:120:void lambda$show$2(android.widget.RadioGroup,android.widget.EditText,android.widget.EditText,android.content.Context,android.widget.EditText,com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener,android.app.AlertDialog,android.view.View) -> lambda$show$2
    76:77:void lambda$show$3(android.app.AlertDialog,android.widget.RadioGroup,android.widget.EditText,android.widget.EditText,android.content.Context,android.widget.EditText,com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener,android.content.DialogInterface) -> lambda$show$3
    28:125:void show(android.content.Context,com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener) -> show
com.skyfi.atak.plugin.CoordinateInputDialog$$ExternalSyntheticLambda0 -> com.skyfi.atak.plugin.CoordinateInputDialog$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.EditText com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$0.f$1 -> f$1
    android.widget.EditText com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$0.f$2 -> f$2
    android.widget.TextView com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$0.f$3 -> f$3
    android.widget.EditText com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$0.f$0 -> f$0
    android.content.Context com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$0.f$4 -> f$4
    0:0:void com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$0.<init>(android.widget.EditText,android.widget.EditText,android.widget.EditText,android.widget.TextView,android.content.Context) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$0.onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.CoordinateInputDialog$$ExternalSyntheticLambda1 -> com.skyfi.atak.plugin.CoordinateInputDialog$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$1.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$1.<init>(com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.CoordinateInputDialog$$ExternalSyntheticLambda2 -> com.skyfi.atak.plugin.CoordinateInputDialog$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.app.AlertDialog com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$2.f$0 -> f$0
    android.widget.EditText com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$2.f$5 -> f$5
    android.widget.EditText com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$2.f$2 -> f$2
    android.widget.EditText com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$2.f$3 -> f$3
    android.content.Context com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$2.f$4 -> f$4
    android.widget.RadioGroup com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$2.f$1 -> f$1
    com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$2.f$6 -> f$6
    0:0:void com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$2.<init>(android.app.AlertDialog,android.widget.RadioGroup,android.widget.EditText,android.widget.EditText,android.content.Context,android.widget.EditText,com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$5c74421356671b504975d0e1919700b4b1c8fae677ca478b7bca7deaaa0a84a5$2.onShow(android.content.DialogInterface) -> onShow
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.CoordinateInputDialog$$ExternalSyntheticLambda3 -> com.skyfi.atak.plugin.CoordinateInputDialog$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.EditText com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$e9722bc92045d2e672914150f426ca25b3c6a9e487b38814fc06eb5010d0299b$0.f$1 -> f$1
    android.widget.EditText com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$e9722bc92045d2e672914150f426ca25b3c6a9e487b38814fc06eb5010d0299b$0.f$2 -> f$2
    android.app.AlertDialog com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$e9722bc92045d2e672914150f426ca25b3c6a9e487b38814fc06eb5010d0299b$0.f$6 -> f$6
    android.widget.EditText com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$e9722bc92045d2e672914150f426ca25b3c6a9e487b38814fc06eb5010d0299b$0.f$4 -> f$4
    android.widget.RadioGroup com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$e9722bc92045d2e672914150f426ca25b3c6a9e487b38814fc06eb5010d0299b$0.f$0 -> f$0
    com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$e9722bc92045d2e672914150f426ca25b3c6a9e487b38814fc06eb5010d0299b$0.f$5 -> f$5
    android.content.Context com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$e9722bc92045d2e672914150f426ca25b3c6a9e487b38814fc06eb5010d0299b$0.f$3 -> f$3
    0:0:void com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$e9722bc92045d2e672914150f426ca25b3c6a9e487b38814fc06eb5010d0299b$0.<init>(android.widget.RadioGroup,android.widget.EditText,android.widget.EditText,android.content.Context,android.widget.EditText,com.skyfi.atak.plugin.CoordinateInputDialog$CoordinateSelectedListener,android.app.AlertDialog) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.CoordinateInputDialog$$InternalSyntheticLambda$1$e9722bc92045d2e672914150f426ca25b3c6a9e487b38814fc06eb5010d0299b$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ImageCacheManager -> com.skyfi.atak.plugin.ImageCacheManager:
    0:0:void $r8$lambda$07sIi2td0T6WO9WYzfK8WxnK-cM(com.skyfi.atak.plugin.ImageCacheManager) -> $r8$lambda$07sIi2td0T6WO9WYzfK8WxnK-cM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$3dcqdaF1GbWWvzCjZ3x6T-Obrvs(com.skyfi.atak.plugin.ImageCacheManager,java.lang.String,android.graphics.Bitmap,com.skyfi.atak.plugin.ImageCacheManager$CacheCallback) -> $r8$lambda$3dcqdaF1GbWWvzCjZ3x6T-Obrvs
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int $r8$lambda$5M0JM19HITXOebR9lSmFNoWgQNE(java.io.File,java.io.File) -> $r8$lambda$5M0JM19HITXOebR9lSmFNoWgQNE
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$Y8BzhuI4SjKYBDeabdykw-PXXUA(com.skyfi.atak.plugin.ImageCacheManager,java.util.List,com.skyfi.atak.plugin.ImageCacheManager$ProgressCallback) -> $r8$lambda$Y8BzhuI4SjKYBDeabdykw-PXXUA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$_CieQLEG7DCm3UpZ04XJlKzKjxk(com.skyfi.atak.plugin.ImageCacheManager,byte[],java.lang.String,com.skyfi.atak.plugin.ImageCacheManager$CacheCallback) -> $r8$lambda$_CieQLEG7DCm3UpZ04XJlKzKjxk
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$_CwyORdyx_vhyzq5hrR_E5Y0mPg(com.skyfi.atak.plugin.ImageCacheManager) -> $r8$lambda$_CwyORdyx_vhyzq5hrR_E5Y0mPg
      # {"id":"com.android.tools.r8.synthesized"}
    38:57:void <init>(android.content.Context) -> <init>
    267:274:void cacheHighResImages(java.util.List,com.skyfi.atak.plugin.ImageCacheManager$ProgressCallback) -> cacheHighResImages
    69:79:void cacheImage(java.lang.String,android.graphics.Bitmap,com.skyfi.atak.plugin.ImageCacheManager$CacheCallback) -> cacheImage
    89:93:void cacheImageData(java.lang.String,byte[],com.skyfi.atak.plugin.ImageCacheManager$CacheCallback) -> cacheImageData
    240:240:void cleanupOldCache() -> cleanupOldCache
    150:152:void clearCache() -> clearCache
    175:185:java.lang.String generateKey(java.lang.String) -> generateKey
    164:167:long getCacheSize() -> getCacheSize
    116:128:android.graphics.Bitmap getFromCache(java.lang.String) -> getFromCache
    61:64:com.skyfi.atak.plugin.ImageCacheManager getInstance(android.content.Context) -> getInstance
    137:146:boolean isCached(java.lang.String) -> isCached
    333:335:boolean isHighResCached(java.lang.String) -> isHighResCached
    275:322:void lambda$cacheHighResImages$5(java.util.List,com.skyfi.atak.plugin.ImageCacheManager$ProgressCallback) -> lambda$cacheHighResImages$5
    80:82:void lambda$cacheImage$0(java.lang.String,android.graphics.Bitmap,com.skyfi.atak.plugin.ImageCacheManager$CacheCallback) -> lambda$cacheImage$0
    95:108:void lambda$cacheImageData$1(byte[],java.lang.String,com.skyfi.atak.plugin.ImageCacheManager$CacheCallback) -> lambda$cacheImageData$1
    248:248:int lambda$cleanupOldCache$3(java.io.File,java.io.File) -> lambda$cleanupOldCache$3
    241:253:void lambda$cleanupOldCache$4() -> lambda$cleanupOldCache$4
    153:156:void lambda$clearCache$2() -> lambda$clearCache$2
    232:234:android.graphics.Bitmap loadFromDisk(java.lang.String) -> loadFromDisk
    211:228:boolean saveRawToDisk(java.lang.String,byte[]) -> saveRawToDisk
    190:207:boolean saveToDisk(java.lang.String,android.graphics.Bitmap) -> saveToDisk
com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda0 -> com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ImageCacheManager com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$078d1d6d9b733571613509b8346313dd99f023809116f5cc0cef45f21a7d02b6$0.f$0 -> f$0
    java.lang.String com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$078d1d6d9b733571613509b8346313dd99f023809116f5cc0cef45f21a7d02b6$0.f$2 -> f$2
    byte[] com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$078d1d6d9b733571613509b8346313dd99f023809116f5cc0cef45f21a7d02b6$0.f$1 -> f$1
    com.skyfi.atak.plugin.ImageCacheManager$CacheCallback com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$078d1d6d9b733571613509b8346313dd99f023809116f5cc0cef45f21a7d02b6$0.f$3 -> f$3
    0:0:void com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$078d1d6d9b733571613509b8346313dd99f023809116f5cc0cef45f21a7d02b6$0.<init>(com.skyfi.atak.plugin.ImageCacheManager,byte[],java.lang.String,com.skyfi.atak.plugin.ImageCacheManager$CacheCallback) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$078d1d6d9b733571613509b8346313dd99f023809116f5cc0cef45f21a7d02b6$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda1 -> com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$145053b3fca35a9c91cf3e8dc437edb00a640ed54a91be955d20a165a974e745$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$145053b3fca35a9c91cf3e8dc437edb00a640ed54a91be955d20a165a974e745$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda2 -> com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ImageCacheManager com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$215854fcd4e4d63d347bb24b01d7b7f3a1c6362972159bce33f61cd0045f486a$0.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$215854fcd4e4d63d347bb24b01d7b7f3a1c6362972159bce33f61cd0045f486a$0.<init>(com.skyfi.atak.plugin.ImageCacheManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$215854fcd4e4d63d347bb24b01d7b7f3a1c6362972159bce33f61cd0045f486a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda3 -> com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ImageCacheManager com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$4a839f4a0a204b63220ddb058fd8bc9beab0d7f8600d17f025ed669ca040ab32$0.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$4a839f4a0a204b63220ddb058fd8bc9beab0d7f8600d17f025ed669ca040ab32$0.<init>(com.skyfi.atak.plugin.ImageCacheManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$4a839f4a0a204b63220ddb058fd8bc9beab0d7f8600d17f025ed669ca040ab32$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda4 -> com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.List com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$73a5da7226cf189b69dbfc4f5bd625b7e8a73017b053d2034f3e2247d74127d8$0.f$1 -> f$1
    com.skyfi.atak.plugin.ImageCacheManager com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$73a5da7226cf189b69dbfc4f5bd625b7e8a73017b053d2034f3e2247d74127d8$0.f$0 -> f$0
    com.skyfi.atak.plugin.ImageCacheManager$ProgressCallback com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$73a5da7226cf189b69dbfc4f5bd625b7e8a73017b053d2034f3e2247d74127d8$0.f$2 -> f$2
    0:0:void com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$73a5da7226cf189b69dbfc4f5bd625b7e8a73017b053d2034f3e2247d74127d8$0.<init>(com.skyfi.atak.plugin.ImageCacheManager,java.util.List,com.skyfi.atak.plugin.ImageCacheManager$ProgressCallback) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$73a5da7226cf189b69dbfc4f5bd625b7e8a73017b053d2034f3e2247d74127d8$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda5 -> com.skyfi.atak.plugin.ImageCacheManager$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.ImageCacheManager com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$7704f1f4de387a4c6731f2a5212f7bdbe7d937bbd9e958adee66fc7ae3e4e4a4$0.f$0 -> f$0
    android.graphics.Bitmap com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$7704f1f4de387a4c6731f2a5212f7bdbe7d937bbd9e958adee66fc7ae3e4e4a4$0.f$2 -> f$2
    com.skyfi.atak.plugin.ImageCacheManager$CacheCallback com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$7704f1f4de387a4c6731f2a5212f7bdbe7d937bbd9e958adee66fc7ae3e4e4a4$0.f$3 -> f$3
    java.lang.String com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$7704f1f4de387a4c6731f2a5212f7bdbe7d937bbd9e958adee66fc7ae3e4e4a4$0.f$1 -> f$1
    0:0:void com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$7704f1f4de387a4c6731f2a5212f7bdbe7d937bbd9e958adee66fc7ae3e4e4a4$0.<init>(com.skyfi.atak.plugin.ImageCacheManager,java.lang.String,android.graphics.Bitmap,com.skyfi.atak.plugin.ImageCacheManager$CacheCallback) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.ImageCacheManager$$InternalSyntheticLambda$1$7704f1f4de387a4c6731f2a5212f7bdbe7d937bbd9e958adee66fc7ae3e4e4a4$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.ImageCacheManager$1 -> com.skyfi.atak.plugin.ImageCacheManager$1:
    43:43:void <init>(com.skyfi.atak.plugin.ImageCacheManager,int) -> <init>
    43:43:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    46:46:int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
com.skyfi.atak.plugin.ImagePreferencesManager -> com.skyfi.atak.plugin.ImagePreferencesManager:
    27:31:void <init>(android.content.Context) -> <init>
    107:109:void clearArchived() -> clearArchived
    113:115:void clearFavorites() -> clearFavorites
    99:99:java.util.Set getArchivedImages() -> getArchivedImages
    103:103:java.util.Set getFavoriteImages() -> getFavoriteImages
    35:38:com.skyfi.atak.plugin.ImagePreferencesManager getInstance(android.content.Context) -> getInstance
    69:69:boolean isArchived(java.lang.String) -> isArchived
    73:73:boolean isFavorite(java.lang.String) -> isFavorite
    43:54:void loadPreferences() -> loadPreferences
    59:60:void saveArchivedImages() -> saveArchivedImages
    64:65:void saveFavoriteImages() -> saveFavoriteImages
    77:84:void toggleArchived(java.lang.String) -> toggleArchived
    88:95:void toggleFavorite(java.lang.String) -> toggleFavorite
com.skyfi.atak.plugin.ImagePreferencesManager$1 -> com.skyfi.atak.plugin.ImagePreferencesManager$1:
    44:44:void <init>(com.skyfi.atak.plugin.ImagePreferencesManager) -> <init>
com.skyfi.atak.plugin.MainRecyclerViewAdapter -> com.skyfi.atak.plugin.MainRecyclerViewAdapter:
    0:0:com.skyfi.atak.plugin.MainRecyclerViewAdapter$ItemClickListener -$$Nest$fgetmClickListener(com.skyfi.atak.plugin.MainRecyclerViewAdapter) -> -$$Nest$fgetmClickListener
      # {"id":"com.android.tools.r8.synthesized"}
    21:23:void <init>(android.content.Context,java.util.List) -> <init>
    65:65:java.lang.String getItem(int) -> getItem
    43:43:int getItemCount() -> getItemCount
    14:14:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    37:37:void onBindViewHolder(com.skyfi.atak.plugin.MainRecyclerViewAdapter$ViewHolder,int) -> onBindViewHolder
    14:14:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    30:31:com.skyfi.atak.plugin.MainRecyclerViewAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    70:70:void setClickListener(com.skyfi.atak.plugin.MainRecyclerViewAdapter$ItemClickListener) -> setClickListener
com.skyfi.atak.plugin.MainRecyclerViewAdapter$ViewHolder -> com.skyfi.atak.plugin.MainRecyclerViewAdapter$ViewHolder:
    51:54:void <init>(com.skyfi.atak.plugin.MainRecyclerViewAdapter,android.view.View) -> <init>
    59:59:void onClick(android.view.View) -> onClick
com.skyfi.atak.plugin.NewOrderFragment -> com.skyfi.atak.plugin.NewOrderFragment:
    30:43:void <init>(com.atakmap.android.maps.MapView,android.content.Context,java.lang.String) -> <init>
    0:0:void disposeImpl() -> disposeImpl
    0:0:void onDropDownClose() -> onDropDownClose
    0:0:void onDropDownSelectionRemoved() -> onDropDownSelectionRemoved
    0:0:void onDropDownSizeChanged(double,double) -> onDropDownSizeChanged
    0:0:void onDropDownVisible(boolean) -> onDropDownVisible
    96:107:void onItemClick(android.view.View,int) -> onItemClick
    77:89:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    0:0:void searchArchives() -> searchArchives
com.skyfi.atak.plugin.OpacityControlDialog -> com.skyfi.atak.plugin.OpacityControlDialog:
    0:0:void $r8$lambda$EurDXFHloMJQMa_92-IW0aDjUDo(android.content.DialogInterface,int) -> $r8$lambda$EurDXFHloMJQMa_92-IW0aDjUDo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$U_Bf9LKJZrm0acuIQXeyIq-hOEg(com.skyfi.atak.plugin.OpacityControlDialog$OpacityChangeListener,int,android.content.DialogInterface,int) -> $r8$lambda$U_Bf9LKJZrm0acuIQXeyIq-hOEg
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$smupdatePreviewText(android.widget.TextView,int) -> -$$Nest$smupdatePreviewText
      # {"id":"com.android.tools.r8.synthesized"}
    10:10:void <init>() -> <init>
    0:0:void lambda$show$0(android.content.DialogInterface,int) -> lambda$show$0
    55:55:void lambda$show$1(com.skyfi.atak.plugin.OpacityControlDialog$OpacityChangeListener,int,android.content.DialogInterface,int) -> lambda$show$1
    17:59:void show(android.content.Context,java.lang.String,int,com.skyfi.atak.plugin.OpacityControlDialog$OpacityChangeListener) -> show
    64:74:void updatePreviewText(android.widget.TextView,int) -> updatePreviewText
com.skyfi.atak.plugin.OpacityControlDialog$$ExternalSyntheticLambda0 -> com.skyfi.atak.plugin.OpacityControlDialog$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.OpacityControlDialog$$InternalSyntheticLambda$1$d7c2bb2743266f12582fb128c76fdbfe3e68933e0d89531d2cbddb86cf2dcc31$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.OpacityControlDialog$$InternalSyntheticLambda$1$d7c2bb2743266f12582fb128c76fdbfe3e68933e0d89531d2cbddb86cf2dcc31$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.OpacityControlDialog$$ExternalSyntheticLambda1 -> com.skyfi.atak.plugin.OpacityControlDialog$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.OpacityControlDialog$OpacityChangeListener com.skyfi.atak.plugin.OpacityControlDialog$$InternalSyntheticLambda$1$d7c2bb2743266f12582fb128c76fdbfe3e68933e0d89531d2cbddb86cf2dcc31$1.f$0 -> f$0
    int com.skyfi.atak.plugin.OpacityControlDialog$$InternalSyntheticLambda$1$d7c2bb2743266f12582fb128c76fdbfe3e68933e0d89531d2cbddb86cf2dcc31$1.f$1 -> f$1
    0:0:void com.skyfi.atak.plugin.OpacityControlDialog$$InternalSyntheticLambda$1$d7c2bb2743266f12582fb128c76fdbfe3e68933e0d89531d2cbddb86cf2dcc31$1.<init>(com.skyfi.atak.plugin.OpacityControlDialog$OpacityChangeListener,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.OpacityControlDialog$$InternalSyntheticLambda$1$d7c2bb2743266f12582fb128c76fdbfe3e68933e0d89531d2cbddb86cf2dcc31$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.OpacityControlDialog$1 -> com.skyfi.atak.plugin.OpacityControlDialog$1:
    29:29:void <init>(android.widget.TextView,android.widget.TextView,com.skyfi.atak.plugin.OpacityControlDialog$OpacityChangeListener) -> <init>
    32:35:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    0:0:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    0:0:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.skyfi.atak.plugin.OrderUtility -> com.skyfi.atak.plugin.OrderUtility:
    39:43:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    0:0:void disposeImpl() -> disposeImpl
    122:122:com.atakmap.android.maps.MapItem findTarget(java.lang.String) -> findTarget
    116:116:java.lang.String getMenu() -> getMenu
    91:109:java.lang.String getWkt(com.atakmap.coremap.maps.coords.GeoPoint[]) -> getWkt
    129:155:void onMapEvent(com.atakmap.android.maps.MapEvent) -> onMapEvent
    53:85:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.skyfi.atak.plugin.Orders -> com.skyfi.atak.plugin.Orders:
    0:0:void $r8$lambda$9ZJM-Q8b5RVFMfYomSOOGaehFEQ(com.skyfi.atak.plugin.Orders,android.view.View) -> $r8$lambda$9ZJM-Q8b5RVFMfYomSOOGaehFEQ
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$XXjk9TtrmR1zyULpnxokzdNXAAk(com.skyfi.atak.plugin.skyfiapi.Order) -> $r8$lambda$XXjk9TtrmR1zyULpnxokzdNXAAk
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$nmvi17YXlMpiGVIBBKMAv_7kBsQ(com.skyfi.atak.plugin.Orders) -> $r8$lambda$nmvi17YXlMpiGVIBBKMAv_7kBsQ
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$olcEPsB-S2QpUjz62AqqKNXXhNA(android.content.DialogInterface,int) -> $r8$lambda$olcEPsB-S2QpUjz62AqqKNXXhNA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$pfNQBa5WuINyp3AzsdJ0NVh_NIE(com.skyfi.atak.plugin.Orders,android.view.View) -> $r8$lambda$pfNQBa5WuINyp3AzsdJ0NVh_NIE
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$wZOYB2xBElYAL8JISXgghv8bZAM(android.content.DialogInterface,int) -> $r8$lambda$wZOYB2xBElYAL8JISXgghv8bZAM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.content.Context -$$Nest$fgetcontext(com.skyfi.atak.plugin.Orders) -> -$$Nest$fgetcontext
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.ArrayList -$$Nest$fgetorders(com.skyfi.atak.plugin.Orders) -> -$$Nest$fgetorders
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:com.skyfi.atak.plugin.OrdersRecyclerViewAdapter -$$Nest$fgetordersRecyclerViewAdapter(com.skyfi.atak.plugin.Orders) -> -$$Nest$fgetordersRecyclerViewAdapter
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int -$$Nest$fgetpageNumber(com.skyfi.atak.plugin.Orders) -> -$$Nest$fgetpageNumber
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int -$$Nest$fgetpageSize(com.skyfi.atak.plugin.Orders) -> -$$Nest$fgetpageSize
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:androidx.recyclerview.widget.RecyclerView -$$Nest$fgetrecyclerView(com.skyfi.atak.plugin.Orders) -> -$$Nest$fgetrecyclerView
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$fputpageNumber(com.skyfi.atak.plugin.Orders,int) -> -$$Nest$fputpageNumber
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$fputpageSize(com.skyfi.atak.plugin.Orders,int) -> -$$Nest$fputpageSize
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$mshowAlert(com.skyfi.atak.plugin.Orders,java.lang.String,java.lang.String) -> -$$Nest$mshowAlert
      # {"id":"com.android.tools.r8.synthesized"}
    59:97:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    0:0:void disposeImpl() -> disposeImpl
    101:107:void getOrders() -> getOrders
    87:88:void lambda$new$0(android.view.View) -> lambda$new$0
    92:93:void lambda$new$1(android.view.View) -> lambda$new$1
    0:0:void lambda$onItemClick$3(android.content.DialogInterface,int) -> lambda$onItemClick$3
    267:272:void lambda$onItemClick$4(com.skyfi.atak.plugin.skyfiapi.Order) -> lambda$onItemClick$4
    0:0:void lambda$showAlert$2(android.content.DialogInterface,int) -> lambda$showAlert$2
    0:0:void onDropDownClose() -> onDropDownClose
    0:0:void onDropDownSelectionRemoved() -> onDropDownSelectionRemoved
    0:0:void onDropDownSizeChanged(double,double) -> onDropDownSizeChanged
    0:0:void onDropDownVisible(boolean) -> onDropDownVisible
    214:289:void onItemClick(android.view.View,int) -> onItemClick
    171:182:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    162:166:void showAlert(java.lang.String,java.lang.String) -> showAlert
com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda0 -> com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.Orders com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$6c445dc02e75c3a51afc2ee9c4fbba44f56aa0b6d35efc78e286387772f37462$0.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$6c445dc02e75c3a51afc2ee9c4fbba44f56aa0b6d35efc78e286387772f37462$0.<init>(com.skyfi.atak.plugin.Orders) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$6c445dc02e75c3a51afc2ee9c4fbba44f56aa0b6d35efc78e286387772f37462$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda1 -> com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.Orders com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$6c445dc02e75c3a51afc2ee9c4fbba44f56aa0b6d35efc78e286387772f37462$1.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$6c445dc02e75c3a51afc2ee9c4fbba44f56aa0b6d35efc78e286387772f37462$1.<init>(com.skyfi.atak.plugin.Orders) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$6c445dc02e75c3a51afc2ee9c4fbba44f56aa0b6d35efc78e286387772f37462$1.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda2 -> com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.Orders com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$6c445dc02e75c3a51afc2ee9c4fbba44f56aa0b6d35efc78e286387772f37462$2.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$6c445dc02e75c3a51afc2ee9c4fbba44f56aa0b6d35efc78e286387772f37462$2.<init>(com.skyfi.atak.plugin.Orders) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$6c445dc02e75c3a51afc2ee9c4fbba44f56aa0b6d35efc78e286387772f37462$2.onRefresh() -> onRefresh
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda3 -> com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$92677965e91f8c3678636ed6fde86cc883e078253c19ac997f2b86c60aa8f7fe$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$92677965e91f8c3678636ed6fde86cc883e078253c19ac997f2b86c60aa8f7fe$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda4 -> com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$ca3ddcf9b90e446831593460adb9aa3a8836096efa1ed70b2942f5e595ab6148$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$ca3ddcf9b90e446831593460adb9aa3a8836096efa1ed70b2942f5e595ab6148$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda5 -> com.skyfi.atak.plugin.Orders$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.skyfiapi.Order com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$ca3ddcf9b90e446831593460adb9aa3a8836096efa1ed70b2942f5e595ab6148$1.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$ca3ddcf9b90e446831593460adb9aa3a8836096efa1ed70b2942f5e595ab6148$1.<init>(com.skyfi.atak.plugin.skyfiapi.Order) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.Orders$$InternalSyntheticLambda$1$ca3ddcf9b90e446831593460adb9aa3a8836096efa1ed70b2942f5e595ab6148$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.Orders$1 -> com.skyfi.atak.plugin.Orders$1:
    107:107:void <init>(com.skyfi.atak.plugin.Orders) -> <init>
    154:156:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    110:148:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
com.skyfi.atak.plugin.OrdersRecyclerViewAdapter -> com.skyfi.atak.plugin.OrdersRecyclerViewAdapter:
    0:0:com.skyfi.atak.plugin.OrdersRecyclerViewAdapter$ItemClickListener -$$Nest$fgetmClickListener(com.skyfi.atak.plugin.OrdersRecyclerViewAdapter) -> -$$Nest$fgetmClickListener
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$fputselectedPosition(com.skyfi.atak.plugin.OrdersRecyclerViewAdapter,int) -> -$$Nest$fputselectedPosition
      # {"id":"com.android.tools.r8.synthesized"}
    25:32:void <init>(android.content.Context,java.util.List) -> <init>
    127:127:com.skyfi.atak.plugin.skyfiapi.Order getItem(int) -> getItem
    85:85:int getItemCount() -> getItemCount
    19:19:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    48:78:void onBindViewHolder(com.skyfi.atak.plugin.OrdersRecyclerViewAdapter$ViewHolder,int) -> onBindViewHolder
    19:19:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    41:42:com.skyfi.atak.plugin.OrdersRecyclerViewAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    132:132:void setClickListener(com.skyfi.atak.plugin.OrdersRecyclerViewAdapter$ItemClickListener) -> setClickListener
com.skyfi.atak.plugin.OrdersRecyclerViewAdapter$$ExternalSyntheticApiModelOutline0 -> com.skyfi.atak.plugin.OrdersRecyclerViewAdapter$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.skyfi.atak.plugin.OrdersRecyclerViewAdapter$$InternalSyntheticApiModelOutline$1$d30f25c6634fb306f004614a92fe429ced5c708d8e6337966eae691a22c70b7e$0.m(android.content.Context,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.OrdersRecyclerViewAdapter$ViewHolder -> com.skyfi.atak.plugin.OrdersRecyclerViewAdapter$ViewHolder:
    101:111:void <init>(com.skyfi.atak.plugin.OrdersRecyclerViewAdapter,android.view.View) -> <init>
    116:119:void onClick(android.view.View) -> onClick
com.skyfi.atak.plugin.PluginNativeLoader -> com.skyfi.atak.plugin.PluginNativeLoader:
    0:0:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
    21:32:void init(android.content.Context) -> init
    42:49:void loadLibrary(java.lang.String) -> loadLibrary
com.skyfi.atak.plugin.PolygonDrawingHandler -> com.skyfi.atak.plugin.PolygonDrawingHandler:
    40:56:void <init>(android.content.Context,com.atakmap.android.maps.MapView) -> <init>
    185:202:double calculatePolygonArea(java.util.List) -> calculatePolygonArea
    207:210:void clearDrawing() -> clearDrawing
    151:181:void completePolygon() -> completePolygon
    96:116:void onMapEvent(com.atakmap.android.maps.MapEvent) -> onMapEvent
    61:74:void startPolygonDrawing(com.skyfi.atak.plugin.PolygonDrawingHandler$PolygonCompleteListener) -> startPolygonDrawing
    78:91:void stopPolygonDrawing() -> stopPolygonDrawing
    123:147:void updatePolygonDisplay() -> updatePolygonDisplay
com.skyfi.atak.plugin.Preferences -> com.skyfi.atak.plugin.Preferences:
    11:13:void <init>() -> <init>
    17:17:java.lang.String getApiKey() -> getApiKey
    21:22:void setApiKey(java.lang.String) -> setApiKey
com.skyfi.atak.plugin.PreferencesFragment -> com.skyfi.atak.plugin.PreferencesFragment:
    android.content.Context pluginContext -> g
    23:23:void <init>() -> <init>
    28:29:void <init>(android.content.Context) -> <init>
    49:49:java.lang.String getSubTitle() -> a
    34:34:void onCreate(android.os.Bundle) -> onCreate
    0:0:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    0:0:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.skyfi.atak.plugin.Profile -> com.skyfi.atak.plugin.Profile:
    0:0:android.widget.TextView -$$Nest$fgetbudgetUsage(com.skyfi.atak.plugin.Profile) -> -$$Nest$fgetbudgetUsage
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.widget.TextView -$$Nest$fgetccOnFile(com.skyfi.atak.plugin.Profile) -> -$$Nest$fgetccOnFile
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.content.Context -$$Nest$fgetcontext(com.skyfi.atak.plugin.Profile) -> -$$Nest$fgetcontext
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.widget.TextView -$$Nest$fgetemail(com.skyfi.atak.plugin.Profile) -> -$$Nest$fgetemail
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.widget.TextView -$$Nest$fgetname(com.skyfi.atak.plugin.Profile) -> -$$Nest$fgetname
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.widget.TextView -$$Nest$fgetremainingBudget(com.skyfi.atak.plugin.Profile) -> -$$Nest$fgetremainingBudget
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.widget.TextView -$$Nest$fgettotalBudget(com.skyfi.atak.plugin.Profile) -> -$$Nest$fgettotalBudget
      # {"id":"com.android.tools.r8.synthesized"}
    35:44:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    0:0:void disposeImpl() -> disposeImpl
    48:48:void getProfile() -> getProfile
    0:0:void onDropDownClose() -> onDropDownClose
    0:0:void onDropDownSelectionRemoved() -> onDropDownSelectionRemoved
    0:0:void onDropDownSizeChanged(double,double) -> onDropDownSizeChanged
    0:0:void onDropDownVisible(boolean) -> onDropDownVisible
    0:0:void onItemClick(android.view.View,int) -> onItemClick
    134:143:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.skyfi.atak.plugin.Profile$1 -> com.skyfi.atak.plugin.Profile$1:
    48:48:void <init>(com.skyfi.atak.plugin.Profile) -> <init>
    88:102:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    51:82:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
com.skyfi.atak.plugin.R -> com.skyfi.atak.plugin.R:
    0:0:void <init>() -> <init>
com.skyfi.atak.plugin.R$attr -> com.skyfi.atak.plugin.R$attr:
    0:0:void <init>() -> <init>
com.skyfi.atak.plugin.R$color -> com.skyfi.atak.plugin.R$color:
    0:0:void <init>() -> <init>
com.skyfi.atak.plugin.R$dimen -> com.skyfi.atak.plugin.R$dimen:
    0:0:void <init>() -> <init>
com.skyfi.atak.plugin.R$drawable -> com.skyfi.atak.plugin.R$drawable:
    0:0:void <init>() -> <init>
com.skyfi.atak.plugin.R$id -> com.skyfi.atak.plugin.R$id:
    0:0:void <init>() -> <init>
com.skyfi.atak.plugin.R$layout -> com.skyfi.atak.plugin.R$layout:
    0:0:void <init>() -> <init>
com.skyfi.atak.plugin.R$string -> com.skyfi.atak.plugin.R$string:
    0:0:void <init>() -> <init>
com.skyfi.atak.plugin.R$style -> com.skyfi.atak.plugin.R$style:
    0:0:void <init>() -> <init>
com.skyfi.atak.plugin.R$styleable -> com.skyfi.atak.plugin.R$styleable:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
com.skyfi.atak.plugin.R$xml -> com.skyfi.atak.plugin.R$xml:
    0:0:void <init>() -> <init>
com.skyfi.atak.plugin.SkyFiPlugin -> com.skyfi.atak.plugin.SkyFiPlugin:
    0:0:void $r8$lambda$KtF1TbTc6rBjBUVfMEXOj28pI-c(com.skyfi.atak.plugin.Preferences,android.widget.EditText,android.content.DialogInterface,int) -> $r8$lambda$KtF1TbTc6rBjBUVfMEXOj28pI-c
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$MaLSVmxyss0uhl7cqeD4eazA92E(com.skyfi.atak.plugin.SkyFiPlugin,java.util.List,com.skyfi.atak.plugin.AOIManager,android.content.DialogInterface,int) -> $r8$lambda$MaLSVmxyss0uhl7cqeD4eazA92E
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$Mg8tAW2o63uQs8J3PbyqCbLSt4g(com.skyfi.atak.plugin.SkyFiPlugin,com.skyfi.atak.plugin.AOIManager,com.skyfi.atak.plugin.AOIManager$AOI,android.content.DialogInterface,int) -> $r8$lambda$Mg8tAW2o63uQs8J3PbyqCbLSt4g
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$MmeO999YOBssQZNlUCk-UE8nWsg(com.skyfi.atak.plugin.SkyFiPlugin,android.widget.EditText,com.skyfi.atak.plugin.AOIManager$AOI,com.skyfi.atak.plugin.AOIManager,android.content.DialogInterface,int) -> $r8$lambda$MmeO999YOBssQZNlUCk-UE8nWsg
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$UEIQ_zKS8BdxEoZ5w3BzoBgLfoE(com.skyfi.atak.plugin.SkyFiPlugin,android.widget.SeekBar,android.content.DialogInterface,int) -> $r8$lambda$UEIQ_zKS8BdxEoZ5w3BzoBgLfoE
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$Vf1BEaP6sHydPC1Nno2sLlPvCwk(com.skyfi.atak.plugin.SkyFiPlugin,android.widget.EditText,android.content.DialogInterface,int) -> $r8$lambda$Vf1BEaP6sHydPC1Nno2sLlPvCwk
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$gGMHBej8jzYgvMuBw-Mai78hsmw(com.skyfi.atak.plugin.SkyFiPlugin,com.skyfi.atak.plugin.AOIManager,com.skyfi.atak.plugin.AOIManager$AOI,android.content.DialogInterface,int) -> $r8$lambda$gGMHBej8jzYgvMuBw-Mai78hsmw
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$l4vnEARLcWFXpYOy8Q3W0g4iYuU(com.skyfi.atak.plugin.SkyFiPlugin,android.widget.EditText,android.widget.EditText,android.content.DialogInterface,int) -> $r8$lambda$l4vnEARLcWFXpYOy8Q3W0g4iYuU
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$lZLbSUV2TILE67bTvH26OXsHAck(com.skyfi.atak.plugin.SkyFiPlugin,java.lang.String,android.content.DialogInterface,int) -> $r8$lambda$lZLbSUV2TILE67bTvH26OXsHAck
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$q-UAp5-zDxbBgWJ2tfQ4OtUaEQU(com.skyfi.atak.plugin.SkyFiPlugin,android.content.DialogInterface,int) -> $r8$lambda$q-UAp5-zDxbBgWJ2tfQ4OtUaEQU
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$rYvJs6NfsKTOZs3QPfGstQA2bzg(com.skyfi.atak.plugin.SkyFiPlugin,android.content.DialogInterface,int) -> $r8$lambda$rYvJs6NfsKTOZs3QPfGstQA2bzg
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$uPrbnlc71dwZJhrCRwG_4XrOCw8(com.skyfi.atak.plugin.SkyFiPlugin,com.skyfi.atak.plugin.AOIManager,android.content.DialogInterface,int) -> $r8$lambda$uPrbnlc71dwZJhrCRwG_4XrOCw8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:com.atakmap.android.maps.MapView -$$Nest$fgetmapView(com.skyfi.atak.plugin.SkyFiPlugin) -> -$$Nest$fgetmapView
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:android.widget.TextView -$$Nest$fgetradiusTextView(com.skyfi.atak.plugin.SkyFiPlugin) -> -$$Nest$fgetradiusTextView
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$mcreateOrderFromCoordinates(com.skyfi.atak.plugin.SkyFiPlugin,double,double) -> -$$Nest$mcreateOrderFromCoordinates
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$mshowPane(com.skyfi.atak.plugin.SkyFiPlugin) -> -$$Nest$mshowPane
      # {"id":"com.android.tools.r8.synthesized"}
    69:69:void <init>() -> <init>
    71:132:void <init>(gov.tak.api.plugin.IServiceController) -> <init>
    743:747:double calculateAreaFromWKT(java.lang.String) -> calculateAreaFromWKT
    721:736:java.lang.String convertPointsToWKT(java.util.List) -> convertPointsToWKT
    683:716:void createOrderFromCoordinates(double,double) -> createOrderFromCoordinates
    663:678:void enablePindropMode() -> enablePindropMode
    702:712:void lambda$createOrderFromCoordinates$11(java.lang.String,android.content.DialogInterface,int) -> lambda$createOrderFromCoordinates$11
    302:308:void lambda$onItemClick$0(android.widget.SeekBar,android.content.DialogInterface,int) -> lambda$onItemClick$0
    342:342:void lambda$onItemClick$1(com.skyfi.atak.plugin.Preferences,android.widget.EditText,android.content.DialogInterface,int) -> lambda$onItemClick$1
    430:431:void lambda$showAOIManagementDialog$2(java.util.List,com.skyfi.atak.plugin.AOIManager,android.content.DialogInterface,int) -> lambda$showAOIManagementDialog$2
    434:434:void lambda$showAOIManagementDialog$3(com.skyfi.atak.plugin.AOIManager,android.content.DialogInterface,int) -> lambda$showAOIManagementDialog$3
    451:454:void lambda$showAOIOptionsDialog$4(com.skyfi.atak.plugin.AOIManager,com.skyfi.atak.plugin.AOIManager$AOI,android.content.DialogInterface,int) -> lambda$showAOIOptionsDialog$4
    572:578:void lambda$showCoordinateInputDialog$7(android.content.DialogInterface,int) -> lambda$showCoordinateInputDialog$7
    498:509:void lambda$showDeleteAOIDialog$6(com.skyfi.atak.plugin.AOIManager,com.skyfi.atak.plugin.AOIManager$AOI,android.content.DialogInterface,int) -> lambda$showDeleteAOIDialog$6
    596:609:void lambda$showLatLonInputDialog$8(android.widget.EditText,android.widget.EditText,android.content.DialogInterface,int) -> lambda$showLatLonInputDialog$8
    624:640:void lambda$showMGRSInputDialog$9(android.widget.EditText,android.content.DialogInterface,int) -> lambda$showMGRSInputDialog$9
    472:485:void lambda$showRenameAOIDialog$5(android.widget.EditText,com.skyfi.atak.plugin.AOIManager$AOI,com.skyfi.atak.plugin.AOIManager,android.content.DialogInterface,int) -> lambda$showRenameAOIDialog$5
    655:655:void lambda$startPindropTasking$10(android.content.DialogInterface,int) -> lambda$startPindropTasking$10
    242:348:void onItemClick(android.view.View,int) -> onItemClick
    140:148:void onStart() -> onStart
    191:194:void onStop() -> onStop
    153:185:void registerDropDownReceivers() -> registerDropDownReceivers
    409:437:void showAOIManagementDialog() -> showAOIManagementDialog
    441:459:void showAOIOptionsDialog(com.skyfi.atak.plugin.AOIManager,com.skyfi.atak.plugin.AOIManager$AOI) -> showAOIOptionsDialog
    561:583:void showCoordinateInputDialog() -> showCoordinateInputDialog
    494:513:void showDeleteAOIDialog(com.skyfi.atak.plugin.AOIManager,com.skyfi.atak.plugin.AOIManager$AOI) -> showDeleteAOIDialog
    587:613:void showLatLonInputDialog() -> showLatLonInputDialog
    617:645:void showMGRSInputDialog() -> showMGRSInputDialog
    199:234:void showPane() -> showPane
    463:490:void showRenameAOIDialog(com.skyfi.atak.plugin.AOIManager,com.skyfi.atak.plugin.AOIManager$AOI) -> showRenameAOIDialog
    355:402:java.lang.String squareWkt(double) -> squareWkt
    517:519:void startAOIDrawing(com.skyfi.atak.plugin.AOIManager) -> startAOIDrawing
    651:658:void startPindropTasking() -> startPindropTasking
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticApiModelOutline0 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticApiModelOutline$1$194111945cb2eecaafbbbf13a63a0f8dbb2c531d3df646d3d0c08bfa54df1706$0.m(android.widget.SeekBar,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda1 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.SkyFiPlugin com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$11942bb5659b2c7974be5a4374a9d663de61b5f4e5530f050c0c6ecd4024ec74$0.f$0 -> f$0
    android.widget.EditText com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$11942bb5659b2c7974be5a4374a9d663de61b5f4e5530f050c0c6ecd4024ec74$0.f$1 -> f$1
    com.skyfi.atak.plugin.AOIManager$AOI com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$11942bb5659b2c7974be5a4374a9d663de61b5f4e5530f050c0c6ecd4024ec74$0.f$2 -> f$2
    com.skyfi.atak.plugin.AOIManager com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$11942bb5659b2c7974be5a4374a9d663de61b5f4e5530f050c0c6ecd4024ec74$0.f$3 -> f$3
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$11942bb5659b2c7974be5a4374a9d663de61b5f4e5530f050c0c6ecd4024ec74$0.<init>(com.skyfi.atak.plugin.SkyFiPlugin,android.widget.EditText,com.skyfi.atak.plugin.AOIManager$AOI,com.skyfi.atak.plugin.AOIManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$11942bb5659b2c7974be5a4374a9d663de61b5f4e5530f050c0c6ecd4024ec74$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda10 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.SkyFiPlugin com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$cd05e16b5ec96d5fb1532d44f21bd06c33bfe44b5468bc35849102d62d2883ce$0.f$0 -> f$0
    android.widget.EditText com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$cd05e16b5ec96d5fb1532d44f21bd06c33bfe44b5468bc35849102d62d2883ce$0.f$1 -> f$1
    android.widget.EditText com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$cd05e16b5ec96d5fb1532d44f21bd06c33bfe44b5468bc35849102d62d2883ce$0.f$2 -> f$2
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$cd05e16b5ec96d5fb1532d44f21bd06c33bfe44b5468bc35849102d62d2883ce$0.<init>(com.skyfi.atak.plugin.SkyFiPlugin,android.widget.EditText,android.widget.EditText) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$cd05e16b5ec96d5fb1532d44f21bd06c33bfe44b5468bc35849102d62d2883ce$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda11 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.SkyFiPlugin com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$e737e8515fa06c93659056758dc5890b39eee239b70a0f0ba8c586477a736d9b$0.f$0 -> f$0
    java.lang.String com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$e737e8515fa06c93659056758dc5890b39eee239b70a0f0ba8c586477a736d9b$0.f$1 -> f$1
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$e737e8515fa06c93659056758dc5890b39eee239b70a0f0ba8c586477a736d9b$0.<init>(com.skyfi.atak.plugin.SkyFiPlugin,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$e737e8515fa06c93659056758dc5890b39eee239b70a0f0ba8c586477a736d9b$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda12 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.SkyFiPlugin com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$e86b2d26d0979f9079c411ec7e1859f84f729d8778480a89e31361c6331e8259$0.f$0 -> f$0
    com.skyfi.atak.plugin.AOIManager com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$e86b2d26d0979f9079c411ec7e1859f84f729d8778480a89e31361c6331e8259$0.f$1 -> f$1
    com.skyfi.atak.plugin.AOIManager$AOI com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$e86b2d26d0979f9079c411ec7e1859f84f729d8778480a89e31361c6331e8259$0.f$2 -> f$2
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$e86b2d26d0979f9079c411ec7e1859f84f729d8778480a89e31361c6331e8259$0.<init>(com.skyfi.atak.plugin.SkyFiPlugin,com.skyfi.atak.plugin.AOIManager,com.skyfi.atak.plugin.AOIManager$AOI) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$e86b2d26d0979f9079c411ec7e1859f84f729d8778480a89e31361c6331e8259$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda2 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.SkyFiPlugin com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$18540e92a68febdd1eae954d1ff0b7793bc677edcfdcdf08dd2fe52c0b6d6e8a$0.f$0 -> f$0
    android.widget.EditText com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$18540e92a68febdd1eae954d1ff0b7793bc677edcfdcdf08dd2fe52c0b6d6e8a$0.f$1 -> f$1
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$18540e92a68febdd1eae954d1ff0b7793bc677edcfdcdf08dd2fe52c0b6d6e8a$0.<init>(com.skyfi.atak.plugin.SkyFiPlugin,android.widget.EditText) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$18540e92a68febdd1eae954d1ff0b7793bc677edcfdcdf08dd2fe52c0b6d6e8a$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda3 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.SkyFiPlugin com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$194111945cb2eecaafbbbf13a63a0f8dbb2c531d3df646d3d0c08bfa54df1706$1.f$0 -> f$0
    android.widget.SeekBar com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$194111945cb2eecaafbbbf13a63a0f8dbb2c531d3df646d3d0c08bfa54df1706$1.f$1 -> f$1
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$194111945cb2eecaafbbbf13a63a0f8dbb2c531d3df646d3d0c08bfa54df1706$1.<init>(com.skyfi.atak.plugin.SkyFiPlugin,android.widget.SeekBar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$194111945cb2eecaafbbbf13a63a0f8dbb2c531d3df646d3d0c08bfa54df1706$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda4 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.EditText com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$194111945cb2eecaafbbbf13a63a0f8dbb2c531d3df646d3d0c08bfa54df1706$2.f$1 -> f$1
    com.skyfi.atak.plugin.Preferences com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$194111945cb2eecaafbbbf13a63a0f8dbb2c531d3df646d3d0c08bfa54df1706$2.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$194111945cb2eecaafbbbf13a63a0f8dbb2c531d3df646d3d0c08bfa54df1706$2.<init>(com.skyfi.atak.plugin.Preferences,android.widget.EditText) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$194111945cb2eecaafbbbf13a63a0f8dbb2c531d3df646d3d0c08bfa54df1706$2.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda5 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.SkyFiPlugin com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$1e417c82f81cf69ced557a80d6a607b7af330ebdd6b68aebcd0da7f42099caca$0.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$1e417c82f81cf69ced557a80d6a607b7af330ebdd6b68aebcd0da7f42099caca$0.<init>(com.skyfi.atak.plugin.SkyFiPlugin) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$1e417c82f81cf69ced557a80d6a607b7af330ebdd6b68aebcd0da7f42099caca$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda6 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.SkyFiPlugin com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$28735e895c61878d4054a0ac2dcc20d683c1a59f800c8b40000c9a27eba521a8$0.f$0 -> f$0
    com.skyfi.atak.plugin.AOIManager com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$28735e895c61878d4054a0ac2dcc20d683c1a59f800c8b40000c9a27eba521a8$0.f$1 -> f$1
    com.skyfi.atak.plugin.AOIManager$AOI com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$28735e895c61878d4054a0ac2dcc20d683c1a59f800c8b40000c9a27eba521a8$0.f$2 -> f$2
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$28735e895c61878d4054a0ac2dcc20d683c1a59f800c8b40000c9a27eba521a8$0.<init>(com.skyfi.atak.plugin.SkyFiPlugin,com.skyfi.atak.plugin.AOIManager,com.skyfi.atak.plugin.AOIManager$AOI) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$28735e895c61878d4054a0ac2dcc20d683c1a59f800c8b40000c9a27eba521a8$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda7 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.SkyFiPlugin com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$631cd6eda503b06b5772146390f366277c48b0e291ae53f44255a4c9148830d6$0.f$0 -> f$0
    java.util.List com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$631cd6eda503b06b5772146390f366277c48b0e291ae53f44255a4c9148830d6$0.f$1 -> f$1
    com.skyfi.atak.plugin.AOIManager com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$631cd6eda503b06b5772146390f366277c48b0e291ae53f44255a4c9148830d6$0.f$2 -> f$2
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$631cd6eda503b06b5772146390f366277c48b0e291ae53f44255a4c9148830d6$0.<init>(com.skyfi.atak.plugin.SkyFiPlugin,java.util.List,com.skyfi.atak.plugin.AOIManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$631cd6eda503b06b5772146390f366277c48b0e291ae53f44255a4c9148830d6$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda8 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.SkyFiPlugin com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$631cd6eda503b06b5772146390f366277c48b0e291ae53f44255a4c9148830d6$1.f$0 -> f$0
    com.skyfi.atak.plugin.AOIManager com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$631cd6eda503b06b5772146390f366277c48b0e291ae53f44255a4c9148830d6$1.f$1 -> f$1
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$631cd6eda503b06b5772146390f366277c48b0e291ae53f44255a4c9148830d6$1.<init>(com.skyfi.atak.plugin.SkyFiPlugin,com.skyfi.atak.plugin.AOIManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$631cd6eda503b06b5772146390f366277c48b0e291ae53f44255a4c9148830d6$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda9 -> com.skyfi.atak.plugin.SkyFiPlugin$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.SkyFiPlugin com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$71871466787007a24944a1220e10503ce9121218c219622769c14a8e9e607c4b$0.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$71871466787007a24944a1220e10503ce9121218c219622769c14a8e9e607c4b$0.<init>(com.skyfi.atak.plugin.SkyFiPlugin) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$$InternalSyntheticLambda$1$71871466787007a24944a1220e10503ce9121218c219622769c14a8e9e607c4b$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$1 -> com.skyfi.atak.plugin.SkyFiPlugin$1:
    96:96:void <init>(com.skyfi.atak.plugin.SkyFiPlugin) -> <init>
    99:99:void onClick(gov.tak.api.ui.ToolbarItem) -> a
com.skyfi.atak.plugin.SkyFiPlugin$2 -> com.skyfi.atak.plugin.SkyFiPlugin$2:
    113:113:void <init>(com.skyfi.atak.plugin.SkyFiPlugin) -> <init>
    121:121:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    116:116:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
com.skyfi.atak.plugin.SkyFiPlugin$3 -> com.skyfi.atak.plugin.SkyFiPlugin$3:
    274:274:void <init>(com.skyfi.atak.plugin.SkyFiPlugin) -> <init>
    277:277:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    0:0:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    0:0:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.skyfi.atak.plugin.SkyFiPlugin$4 -> com.skyfi.atak.plugin.SkyFiPlugin$4:
    0:0:void $r8$lambda$lDHcK-pbCukb31f1ndB-L7aImEg(com.skyfi.atak.plugin.SkyFiPlugin$4,android.widget.EditText,com.skyfi.atak.plugin.AOIManager,java.util.List,double,android.content.DialogInterface,int) -> $r8$lambda$lDHcK-pbCukb31f1ndB-L7aImEg
      # {"id":"com.android.tools.r8.synthesized"}
    519:519:void <init>(com.skyfi.atak.plugin.SkyFiPlugin,com.skyfi.atak.plugin.AOIManager) -> <init>
    535:547:void lambda$onPolygonComplete$0(android.widget.EditText,com.skyfi.atak.plugin.AOIManager,java.util.List,double,android.content.DialogInterface,int) -> lambda$onPolygonComplete$0
    0:0:void onPolygonCancelled() -> onPolygonCancelled
    523:550:void onPolygonComplete(java.util.List,double) -> onPolygonComplete
com.skyfi.atak.plugin.SkyFiPlugin$4$$ExternalSyntheticLambda0 -> com.skyfi.atak.plugin.SkyFiPlugin$4$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.List com.skyfi.atak.plugin.SkyFiPlugin$4$$InternalSyntheticLambda$1$7f0e39aa23b5047b54bbec5a8135da6fa3821a49e5954ea9fbccceb85330a3ce$0.f$3 -> f$3
    android.widget.EditText com.skyfi.atak.plugin.SkyFiPlugin$4$$InternalSyntheticLambda$1$7f0e39aa23b5047b54bbec5a8135da6fa3821a49e5954ea9fbccceb85330a3ce$0.f$1 -> f$1
    com.skyfi.atak.plugin.SkyFiPlugin$4 com.skyfi.atak.plugin.SkyFiPlugin$4$$InternalSyntheticLambda$1$7f0e39aa23b5047b54bbec5a8135da6fa3821a49e5954ea9fbccceb85330a3ce$0.f$0 -> f$0
    com.skyfi.atak.plugin.AOIManager com.skyfi.atak.plugin.SkyFiPlugin$4$$InternalSyntheticLambda$1$7f0e39aa23b5047b54bbec5a8135da6fa3821a49e5954ea9fbccceb85330a3ce$0.f$2 -> f$2
    double com.skyfi.atak.plugin.SkyFiPlugin$4$$InternalSyntheticLambda$1$7f0e39aa23b5047b54bbec5a8135da6fa3821a49e5954ea9fbccceb85330a3ce$0.f$4 -> f$4
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$4$$InternalSyntheticLambda$1$7f0e39aa23b5047b54bbec5a8135da6fa3821a49e5954ea9fbccceb85330a3ce$0.<init>(com.skyfi.atak.plugin.SkyFiPlugin$4,android.widget.EditText,com.skyfi.atak.plugin.AOIManager,java.util.List,double) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.SkyFiPlugin$4$$InternalSyntheticLambda$1$7f0e39aa23b5047b54bbec5a8135da6fa3821a49e5954ea9fbccceb85330a3ce$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.SkyFiPlugin$5 -> com.skyfi.atak.plugin.SkyFiPlugin$5:
    663:663:void <init>(com.skyfi.atak.plugin.SkyFiPlugin) -> <init>
    666:673:void onMapEvent(com.atakmap.android.maps.MapEvent) -> onMapEvent
com.skyfi.atak.plugin.TaskingOrderFragment -> com.skyfi.atak.plugin.TaskingOrderFragment:
    0:0:void $r8$lambda$dSNNKGtsnb0-ps4bSsJ1sooAPNM(com.skyfi.atak.plugin.TaskingOrderFragment,android.widget.DatePicker,int,int,int) -> $r8$lambda$dSNNKGtsnb0-ps4bSsJ1sooAPNM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$hsT0BOXa5eNLdrkgoJ9cjgMiTPA(com.skyfi.atak.plugin.TaskingOrderFragment,android.content.DialogInterface,int) -> $r8$lambda$hsT0BOXa5eNLdrkgoJ9cjgMiTPA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$i0SGkwoPveiDMRN5UBO7R9vum3M(com.skyfi.atak.plugin.TaskingOrderFragment,android.widget.DatePicker,int,int,int) -> $r8$lambda$i0SGkwoPveiDMRN5UBO7R9vum3M
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:com.skyfi.atak.plugin.skyfiapi.TaskingOrder -$$Nest$fgettaskingOrder(com.skyfi.atak.plugin.TaskingOrderFragment) -> -$$Nest$fgettaskingOrder
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void -$$Nest$mshowError(com.skyfi.atak.plugin.TaskingOrderFragment,java.lang.String,java.lang.String) -> -$$Nest$mshowError
      # {"id":"com.android.tools.r8.synthesized"}
    88:191:void <init>(com.atakmap.android.maps.MapView,android.content.Context) -> <init>
    643:655:double calculatePolygonArea(org.locationtech.jts.geom.Coordinate[]) -> calculatePolygonArea
    0:0:void disposeImpl() -> disposeImpl
    553:554:void getPricing() -> getPricing
    222:232:void lambda$onClick$0(android.widget.DatePicker,int,int,int) -> lambda$onClick$0
    244:254:void lambda$onClick$1(android.widget.DatePicker,int,int,int) -> lambda$onClick$1
    449:449:void lambda$onClick$2(android.content.DialogInterface,int) -> lambda$onClick$2
    214:458:void onClick(android.view.View) -> onClick
    0:0:void onDropDownClose() -> onDropDownClose
    0:0:void onDropDownSelectionRemoved() -> onDropDownSelectionRemoved
    0:0:void onDropDownSizeChanged(double,double) -> onDropDownSizeChanged
    0:0:void onDropDownVisible(boolean) -> onDropDownVisible
    722:742:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    472:521:void placeOrder() -> placeOrder
    684:717:void resetForm() -> resetForm
    462:468:void resetProviders() -> resetProviders
    586:591:void showError(java.lang.String,java.lang.String) -> showError
    595:632:void updateTotalPrice() -> updateTotalPrice
com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline0 -> com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.time.format.DateTimeFormatter com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticApiModelOutline$1$d94530073789c5fbfa6037ef3afdc024c9fba6e4245b05c224df1103db00b542$0.m(java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline1 -> com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.time.LocalDate com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticApiModelOutline$1$d94530073789c5fbfa6037ef3afdc024c9fba6e4245b05c224df1103db00b542$10.m(java.lang.CharSequence,java.time.format.DateTimeFormatter) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline2 -> com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticApiModelOutline$1$d94530073789c5fbfa6037ef3afdc024c9fba6e4245b05c224df1103db00b542$12.m(java.time.LocalDate) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline3 -> com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticApiModelOutline$1$d94530073789c5fbfa6037ef3afdc024c9fba6e4245b05c224df1103db00b542$13.m(java.time.LocalDate) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline4 -> com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticApiModelOutline$1$d94530073789c5fbfa6037ef3afdc024c9fba6e4245b05c224df1103db00b542$14.m(java.time.LocalDate) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline5 -> com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticApiModelOutline$1$d94530073789c5fbfa6037ef3afdc024c9fba6e4245b05c224df1103db00b542$15.m(android.icu.util.Calendar,int,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline6 -> com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticApiModelOutline$1$d94530073789c5fbfa6037ef3afdc024c9fba6e4245b05c224df1103db00b542$16.m(android.icu.util.Calendar,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline7 -> com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticApiModelOutline$1$d94530073789c5fbfa6037ef3afdc024c9fba6e4245b05c224df1103db00b542$8.m(android.icu.util.Calendar,int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticLambda10 -> com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticLambda10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.TaskingOrderFragment com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticLambda$1$43e9ecb0b5bb5b7278d4ec8e574ecf8f545abfdb5ab59c48e992927309d2ab58$6.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticLambda$1$43e9ecb0b5bb5b7278d4ec8e574ecf8f545abfdb5ab59c48e992927309d2ab58$6.<init>(com.skyfi.atak.plugin.TaskingOrderFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticLambda$1$43e9ecb0b5bb5b7278d4ec8e574ecf8f545abfdb5ab59c48e992927309d2ab58$6.onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticLambda8 -> com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.TaskingOrderFragment com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticLambda$1$43e9ecb0b5bb5b7278d4ec8e574ecf8f545abfdb5ab59c48e992927309d2ab58$10.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticLambda$1$43e9ecb0b5bb5b7278d4ec8e574ecf8f545abfdb5ab59c48e992927309d2ab58$10.<init>(com.skyfi.atak.plugin.TaskingOrderFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticLambda$1$43e9ecb0b5bb5b7278d4ec8e574ecf8f545abfdb5ab59c48e992927309d2ab58$10.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticLambda9 -> com.skyfi.atak.plugin.TaskingOrderFragment$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.skyfi.atak.plugin.TaskingOrderFragment com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticLambda$1$43e9ecb0b5bb5b7278d4ec8e574ecf8f545abfdb5ab59c48e992927309d2ab58$1.f$0 -> f$0
    0:0:void com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticLambda$1$43e9ecb0b5bb5b7278d4ec8e574ecf8f545abfdb5ab59c48e992927309d2ab58$1.<init>(com.skyfi.atak.plugin.TaskingOrderFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void com.skyfi.atak.plugin.TaskingOrderFragment$$InternalSyntheticLambda$1$43e9ecb0b5bb5b7278d4ec8e574ecf8f545abfdb5ab59c48e992927309d2ab58$1.onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
      # {"id":"com.android.tools.r8.synthesized"}
com.skyfi.atak.plugin.TaskingOrderFragment$1 -> com.skyfi.atak.plugin.TaskingOrderFragment$1:
    170:170:void <init>(com.skyfi.atak.plugin.TaskingOrderFragment,android.content.Context) -> <init>
    0:0:void afterTextChanged(android.text.Editable) -> afterTextChanged
    0:0:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    177:182:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.skyfi.atak.plugin.TaskingOrderFragment$2 -> com.skyfi.atak.plugin.TaskingOrderFragment$2:
    191:191:void <init>(com.skyfi.atak.plugin.TaskingOrderFragment,android.content.Context) -> <init>
    0:0:void afterTextChanged(android.text.Editable) -> afterTextChanged
    0:0:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    198:203:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.skyfi.atak.plugin.TaskingOrderFragment$3 -> com.skyfi.atak.plugin.TaskingOrderFragment$3:
    521:521:void <init>(com.skyfi.atak.plugin.TaskingOrderFragment) -> <init>
    546:547:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    524:539:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
com.skyfi.atak.plugin.TaskingOrderFragment$4 -> com.skyfi.atak.plugin.TaskingOrderFragment$4:
    554:554:void <init>(com.skyfi.atak.plugin.TaskingOrderFragment) -> <init>
    579:580:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    557:572:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
com.skyfi.atak.plugin.skyfiapi.Archive -> com.skyfi.atak.plugin.skyfiapi.Archive:
    8:8:void <init>() -> <init>
    62:62:java.lang.String getArchiveId() -> getArchiveId
    70:70:java.util.Date getCaptureTimestamp() -> getCaptureTimestamp
    78:78:float getCloudCoveragePercent() -> getCloudCoveragePercent
    86:86:java.lang.String getConstellation() -> getConstellation
    94:94:float getDeliveryTimeHours() -> getDeliveryTimeHours
    102:102:java.lang.String getFootprint() -> getFootprint
    110:110:float getGsd() -> getGsd
    118:118:float getMaxSqKm() -> getMaxSqKm
    126:126:float getMinSqKm() -> getMinSqKm
    134:134:float getOffNadirAngle() -> getOffNadirAngle
    150:150:float getOverlapRatio() -> getOverlapRatio
    158:158:float getOverlapSqkm() -> getOverlapSqkm
    166:166:float getPlatformResolution() -> getPlatformResolution
    174:174:float getPriceForOneSquareKm() -> getPriceForOneSquareKm
    182:182:float getPriceFullScene() -> getPriceFullScene
    190:190:java.lang.String getProductType() -> getProductType
    198:198:java.lang.String getProvider() -> getProvider
    206:206:java.lang.String getResolution() -> getResolution
    230:230:java.util.HashMap getThumbnailUrls() -> getThumbnailUrls
    214:214:java.lang.String getTitlesUrl() -> getTitlesUrl
    222:222:float getTotalAreaSquareKm() -> getTotalAreaSquareKm
    142:142:boolean isOpenData() -> isOpenData
    66:66:void setArchiveId(java.lang.String) -> setArchiveId
    74:74:void setCaptureTimestamp(java.util.Date) -> setCaptureTimestamp
    82:82:void setCloudCoveragePercent(float) -> setCloudCoveragePercent
    90:90:void setConstellation(java.lang.String) -> setConstellation
    98:98:void setDeliveryTimeHours(float) -> setDeliveryTimeHours
    106:106:void setFootprint(java.lang.String) -> setFootprint
    114:114:void setGsd(float) -> setGsd
    122:122:void setMaxSqKm(float) -> setMaxSqKm
    130:130:void setMinSqKm(float) -> setMinSqKm
    138:138:void setOffNadirAngle(float) -> setOffNadirAngle
    146:146:void setOpenData(boolean) -> setOpenData
    154:154:void setOverlapRatio(float) -> setOverlapRatio
    162:162:void setOverlapSqkm(float) -> setOverlapSqkm
    170:170:void setPlatformResolution(float) -> setPlatformResolution
    178:178:void setPriceForOneSquareKm(float) -> setPriceForOneSquareKm
    186:186:void setPriceFullScene(float) -> setPriceFullScene
    194:194:void setProductType(java.lang.String) -> setProductType
    202:202:void setProvider(java.lang.String) -> setProvider
    210:210:void setResolution(java.lang.String) -> setResolution
    234:234:void setThumbnailUrls(java.util.HashMap) -> setThumbnailUrls
    218:218:void setTitlesUrl(java.lang.String) -> setTitlesUrl
    226:226:void setTotalAreaSquareKm(float) -> setTotalAreaSquareKm
    35:35:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.ArchiveOrder -> com.skyfi.atak.plugin.skyfiapi.ArchiveOrder:
    5:11:void <init>() -> <init>
    31:31:java.lang.String getAoi() -> getAoi
    39:39:java.lang.String getArchiveId() -> getArchiveId
    47:47:java.lang.String getDeliveryDriver() -> getDeliveryDriver
    55:55:com.skyfi.atak.plugin.skyfiapi.DeliveryParams getDeliveryParams() -> getDeliveryParams
    63:63:java.lang.String getLabel() -> getLabel
    71:71:java.lang.Object getMetadata() -> getMetadata
    79:79:java.lang.String getOrderLabel() -> getOrderLabel
    87:87:java.lang.String getWebhookUrl() -> getWebhookUrl
    35:35:void setAoi(java.lang.String) -> setAoi
    43:43:void setArchiveId(java.lang.String) -> setArchiveId
    51:51:void setDeliveryDriver(java.lang.String) -> setDeliveryDriver
    59:59:void setDeliveryParams(com.skyfi.atak.plugin.skyfiapi.DeliveryParams) -> setDeliveryParams
    67:67:void setLabel(java.lang.String) -> setLabel
    75:75:void setMetadata(java.lang.Object) -> setMetadata
    83:83:void setOrderLabel(java.lang.String) -> setOrderLabel
    91:91:void setWebhookUrl(java.lang.String) -> setWebhookUrl
    18:18:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.ArchiveResponse -> com.skyfi.atak.plugin.skyfiapi.ArchiveResponse:
    7:7:void <init>() -> <init>
    27:27:com.skyfi.atak.plugin.skyfiapi.Archive getArchive() -> getArchive
    35:35:java.util.ArrayList getArchives() -> getArchives
    43:43:java.lang.String getNextPage() -> getNextPage
    51:51:com.skyfi.atak.plugin.skyfiapi.ArchivesRequest getRequest() -> getRequest
    59:59:java.lang.Integer getTotal() -> getTotal
    31:31:void setArchive(com.skyfi.atak.plugin.skyfiapi.Archive) -> setArchive
    39:39:void setArchives(java.util.ArrayList) -> setArchives
    47:47:void setNextPage(java.lang.String) -> setNextPage
    55:55:void setRequest(com.skyfi.atak.plugin.skyfiapi.ArchivesRequest) -> setRequest
    63:63:void setTotal(java.lang.Integer) -> setTotal
    17:17:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.ArchivesRequest -> com.skyfi.atak.plugin.skyfiapi.ArchivesRequest:
    15:50:void <init>() -> <init>
    141:141:void addProductType(java.lang.String) -> addProductType
    157:157:void addProvider(java.lang.String) -> addProvider
    173:173:void addResolution(java.lang.String) -> addResolution
    73:73:java.lang.String getAoi() -> getAoi
    81:81:java.lang.String getFromDate() -> getFromDate
    89:89:java.lang.Float getMaxCloudCoveragePercent() -> getMaxCloudCoveragePercent
    97:97:java.lang.Float getMaxOffNadirAngle() -> getMaxOffNadirAngle
    105:105:java.lang.Float getMinOverlapRatio() -> getMinOverlapRatio
    121:121:int getPageNumber() -> getPageNumber
    129:129:int getPageSize() -> getPageSize
    137:137:java.util.ArrayList getProductTypes() -> getProductTypes
    153:153:java.util.ArrayList getProviders() -> getProviders
    169:169:java.util.ArrayList getResolutions() -> getResolutions
    185:185:java.lang.String getToDate() -> getToDate
    113:113:java.lang.Boolean isOpenData() -> isOpenData
    145:145:void removeProductType(java.lang.String) -> removeProductType
    161:161:void removeProvider(java.lang.String) -> removeProvider
    177:177:void removeResolution(java.lang.String) -> removeResolution
    77:77:void setAoi(java.lang.String) -> setAoi
    85:85:void setFromDate(java.lang.String) -> setFromDate
    93:93:void setMaxCloudCoveragePercent(java.lang.Float) -> setMaxCloudCoveragePercent
    101:101:void setMaxOffNadirAngle(java.lang.Float) -> setMaxOffNadirAngle
    109:109:void setMinOverlapRatio(java.lang.Float) -> setMinOverlapRatio
    117:117:void setOpenData(java.lang.Boolean) -> setOpenData
    125:125:void setPageNumber(int) -> setPageNumber
    133:133:void setPageSize(int) -> setPageSize
    149:149:void setProductTypes(java.util.ArrayList) -> setProductTypes
    165:165:void setProviders(java.util.ArrayList) -> setProviders
    181:181:void setResolutions(java.util.ArrayList) -> setResolutions
    189:189:void setToDate(java.lang.String) -> setToDate
    56:56:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.DeliveryParams -> com.skyfi.atak.plugin.skyfiapi.DeliveryParams:
    5:5:void <init>() -> <init>
    27:27:java.lang.String getLabel() -> getLabel
    35:35:int getMaxCloudCoverPercent() -> getMaxCloudCoverPercent
    43:43:int getMaxOffNadirAngle() -> getMaxOffNadirAngle
    51:51:java.lang.Object getMetadata() -> getMetadata
    59:59:java.lang.String getOrderLabel() -> getOrderLabel
    75:75:java.lang.String getProductType() -> getProductType
    83:83:java.lang.String getRequiredProvider() -> getRequiredProvider
    91:91:java.lang.String getResolution() -> getResolution
    99:99:float getSarAzimuthAngleMax() -> getSarAzimuthAngleMax
    107:107:float getSarAzimuthAngleMin() -> getSarAzimuthAngleMin
    115:115:float getSarGrazingAngleMax() -> getSarGrazingAngleMax
    123:123:float getSarGrazingAngleMin() -> getSarGrazingAngleMin
    131:131:int getSarNumberOfLooks() -> getSarNumberOfLooks
    139:139:java.lang.String getSarPolarization() -> getSarPolarization
    147:147:java.util.ArrayList getSarProductTypes() -> getSarProductTypes
    155:155:java.lang.String getWebhookUrl() -> getWebhookUrl
    163:163:java.lang.String getWindowEnd() -> getWindowEnd
    171:171:java.lang.String getWindowStart() -> getWindowStart
    67:67:boolean isPriorityItem() -> isPriorityItem
    31:31:void setLabel(java.lang.String) -> setLabel
    39:39:void setMaxCloudCoverPercent(int) -> setMaxCloudCoverPercent
    47:47:void setMaxOffNadirAngle(int) -> setMaxOffNadirAngle
    55:55:void setMetadata(java.lang.Object) -> setMetadata
    63:63:void setOrderLabel(java.lang.String) -> setOrderLabel
    71:71:void setPriorityItem(boolean) -> setPriorityItem
    79:79:void setProductType(java.lang.String) -> setProductType
    87:87:void setRequiredProvider(java.lang.String) -> setRequiredProvider
    95:95:void setResolution(java.lang.String) -> setResolution
    103:103:void setSarAzimuthAngleMax(float) -> setSarAzimuthAngleMax
    111:111:void setSarAzimuthAngleMin(float) -> setSarAzimuthAngleMin
    119:119:void setSarGrazingAngleMax(float) -> setSarGrazingAngleMax
    127:127:void setSarGrazingAngleMin(float) -> setSarGrazingAngleMin
    135:135:void setSarNumberOfLooks(int) -> setSarNumberOfLooks
    143:143:void setSarPolarization(java.lang.String) -> setSarPolarization
    151:151:void setSarProductTypes(java.util.ArrayList) -> setSarProductTypes
    159:159:void setWebhookUrl(java.lang.String) -> setWebhookUrl
    167:167:void setWindowEnd(java.lang.String) -> setWindowEnd
    175:175:void setWindowStart(java.lang.String) -> setWindowStart
com.skyfi.atak.plugin.skyfiapi.HealthCheck -> com.skyfi.atak.plugin.skyfiapi.HealthCheck:
    3:3:void <init>() -> <init>
    7:7:java.lang.String getStatus() -> getStatus
    11:11:void setStatus(java.lang.String) -> setStatus
com.skyfi.atak.plugin.skyfiapi.MyProfile -> com.skyfi.atak.plugin.skyfiapi.MyProfile:
    5:5:void <init>() -> <init>
    33:33:java.lang.Integer getBudgetAmount() -> getBudgetAmount
    105:112:int getBudgetRemaining() -> getBudgetRemaining
    41:41:java.lang.Integer getCurrentBudgetUsage() -> getCurrentBudgetUsage
    81:81:java.lang.Boolean getDemoAccount() -> getDemoAccount
    49:49:java.lang.String getEmail() -> getEmail
    57:57:java.lang.String getFirstName() -> getFirstName
    65:65:java.lang.Boolean getHasValidSharedCard() -> getHasValidSharedCard
    73:73:java.lang.String getId() -> getId
    89:89:java.lang.String getLastName() -> getLastName
    97:97:java.lang.String getOrganizationId() -> getOrganizationId
    37:37:void setBudgetAmount(java.lang.Integer) -> setBudgetAmount
    45:45:void setCurrentBudgetUsage(java.lang.Integer) -> setCurrentBudgetUsage
    85:85:void setDemoAccount(java.lang.Boolean) -> setDemoAccount
    53:53:void setEmail(java.lang.String) -> setEmail
    61:61:void setFirstName(java.lang.String) -> setFirstName
    69:69:void setHasValidSharedCard(java.lang.Boolean) -> setHasValidSharedCard
    77:77:void setId(java.lang.String) -> setId
    93:93:void setLastName(java.lang.String) -> setLastName
    101:101:void setOrganizationId(java.lang.String) -> setOrganizationId
    19:19:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.Order -> com.skyfi.atak.plugin.skyfiapi.Order:
    8:8:void <init>() -> <init>
    83:83:java.lang.String getAoi() -> getAoi
    91:91:float getAoiSqkm() -> getAoiSqkm
    339:339:com.skyfi.atak.plugin.skyfiapi.Archive getArchive() -> getArchive
    99:99:java.util.Date getCreatedAt() -> getCreatedAt
    107:107:java.lang.String getDeliveryDriver() -> getDeliveryDriver
    115:115:java.lang.String getDownloadImageUrl() -> getDownloadImageUrl
    123:123:java.lang.String getDownloadPayloadUrl() -> getDownloadPayloadUrl
    307:307:java.lang.String getGeocodeLocation() -> getGeocodeLocation
    131:131:java.lang.String getId() -> getId
    347:347:java.lang.String getLabel() -> getLabel
    139:139:float getMaxCloudCoveragePercent() -> getMaxCloudCoveragePercent
    147:147:float getMaxOffNadirAngle() -> getMaxOffNadirAngle
    315:315:java.lang.String getOrderCode() -> getOrderCode
    155:155:float getOrderCost() -> getOrderCost
    323:323:java.lang.String getOrderLabel() -> getOrderLabel
    332:335:java.lang.String getOrderName() -> getOrderName
    163:163:java.lang.String getOrderType() -> getOrderType
    171:171:java.lang.String getOwnerId() -> getOwnerId
    187:187:java.lang.String getProductType() -> getProductType
    195:195:java.lang.String getRequiredProvider() -> getRequiredProvider
    203:203:java.lang.String getResolution() -> getResolution
    211:211:float getSarAzimuthAngleMax() -> getSarAzimuthAngleMax
    219:219:float getSarAzimuthAngleMin() -> getSarAzimuthAngleMin
    227:227:float getSarGrazingAngleMax() -> getSarGrazingAngleMax
    235:235:float getSarGrazingAngleMin() -> getSarGrazingAngleMin
    243:243:int getSarNumberOfLooks() -> getSarNumberOfLooks
    251:251:java.lang.String getSarPolarisation() -> getSarPolarisation
    259:259:java.lang.String[] getSarProductTypes() -> getSarProductTypes
    267:267:java.lang.String getStatus() -> getStatus
    275:275:java.lang.String getTilesUrl() -> getTilesUrl
    283:283:java.lang.String getWebhookUrl() -> getWebhookUrl
    291:291:java.util.Date getWindowEnd() -> getWindowEnd
    299:299:java.util.Date getWindowStart() -> getWindowStart
    179:179:boolean isPriorityItem() -> isPriorityItem
    87:87:void setAoi(java.lang.String) -> setAoi
    95:95:void setAoiSqkm(float) -> setAoiSqkm
    343:343:void setArchive(com.skyfi.atak.plugin.skyfiapi.Archive) -> setArchive
    103:103:void setCreatedAt(java.util.Date) -> setCreatedAt
    111:111:void setDeliveryDriver(java.lang.String) -> setDeliveryDriver
    119:119:void setDownloadImageUrl(java.lang.String) -> setDownloadImageUrl
    127:127:void setDownloadPayloadUrl(java.lang.String) -> setDownloadPayloadUrl
    311:311:void setGeocodeLocation(java.lang.String) -> setGeocodeLocation
    135:135:void setId(java.lang.String) -> setId
    351:351:void setLabel(java.lang.String) -> setLabel
    143:143:void setMaxCloudCoveragePercent(float) -> setMaxCloudCoveragePercent
    151:151:void setMaxOffNadirAngle(float) -> setMaxOffNadirAngle
    319:319:void setOrderCode(java.lang.String) -> setOrderCode
    159:159:void setOrderCost(float) -> setOrderCost
    327:327:void setOrderLabel(java.lang.String) -> setOrderLabel
    167:167:void setOrderType(java.lang.String) -> setOrderType
    175:175:void setOwnerId(java.lang.String) -> setOwnerId
    183:183:void setPriorityItem(boolean) -> setPriorityItem
    191:191:void setProductType(java.lang.String) -> setProductType
    199:199:void setRequiredProvider(java.lang.String) -> setRequiredProvider
    207:207:void setResolution(java.lang.String) -> setResolution
    215:215:void setSarAzimuthAngleMax(float) -> setSarAzimuthAngleMax
    223:223:void setSarAzimuthAngleMin(float) -> setSarAzimuthAngleMin
    231:231:void setSarGrazingAngleMax(float) -> setSarGrazingAngleMax
    239:239:void setSarGrazingAngleMin(float) -> setSarGrazingAngleMin
    247:247:void setSarNumberOfLooks(int) -> setSarNumberOfLooks
    255:255:void setSarPolarisation(java.lang.String) -> setSarPolarisation
    263:263:void setSarProductTypes(java.lang.String[]) -> setSarProductTypes
    271:271:void setStatus(java.lang.String) -> setStatus
    279:279:void setTilesUrl(java.lang.String) -> setTilesUrl
    287:287:void setWebhookUrl(java.lang.String) -> setWebhookUrl
    295:295:void setWindowEnd(java.util.Date) -> setWindowEnd
    303:303:void setWindowStart(java.util.Date) -> setWindowStart
    46:68:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.OrderRequest -> com.skyfi.atak.plugin.skyfiapi.OrderRequest:
    3:3:void <init>() -> <init>
    9:9:java.lang.String getOrderType() -> getOrderType
    17:17:int getPageNumber() -> getPageNumber
    25:25:int getPageSize() -> getPageSize
    13:13:void setOrderType(java.lang.String) -> setOrderType
    21:21:void setPageNumber(int) -> setPageNumber
    29:29:void setPageSize(int) -> setPageSize
com.skyfi.atak.plugin.skyfiapi.OrderResponse -> com.skyfi.atak.plugin.skyfiapi.OrderResponse:
    5:5:void <init>() -> <init>
    11:11:com.skyfi.atak.plugin.skyfiapi.Order[] getOrders() -> getOrders
    28:28:com.skyfi.atak.plugin.skyfiapi.OrderRequest getRequest() -> getRequest
    36:36:int getTotal() -> getTotal
    24:24:void setOrders(com.skyfi.atak.plugin.skyfiapi.Order[]) -> setOrders
    32:32:void setRequest(com.skyfi.atak.plugin.skyfiapi.OrderRequest) -> setRequest
    40:40:void setTotal(int) -> setTotal
    16:17:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.Pong -> com.skyfi.atak.plugin.skyfiapi.Pong:
    3:3:void <init>() -> <init>
    7:7:java.lang.String getMessage() -> getMessage
    11:11:void setMessage(java.lang.String) -> setMessage
com.skyfi.atak.plugin.skyfiapi.PricingQuery -> com.skyfi.atak.plugin.skyfiapi.PricingQuery:
    8:9:void <init>(java.lang.String) -> <init>
    21:21:java.lang.String getAoi() -> getAoi
    25:25:void setAoi(java.lang.String) -> setAoi
    15:15:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.PricingResponse -> com.skyfi.atak.plugin.skyfiapi.PricingResponse:
    8:8:void <init>() -> <init>
    20:20:java.util.ArrayList getProductTypes() -> getProductTypes
    24:24:void setProductTypes(java.util.ArrayList) -> setProductTypes
    14:14:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType -> com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType:
    27:27:void <init>(com.skyfi.atak.plugin.skyfiapi.PricingResponse) -> <init>
    41:41:java.lang.String getProductType() -> getProductType
    49:49:java.util.ArrayList getResolutions() -> getResolutions
    45:45:void setProductType(java.lang.String) -> setProductType
    53:53:void setResolutions(java.util.ArrayList) -> setResolutions
    34:34:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType$Pricing -> com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType$Pricing:
    116:116:void <init>(com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType) -> <init>
    138:138:java.lang.Boolean getPriorityEnabled() -> getPriorityEnabled
    146:146:java.lang.Float getPriorityTaskingPriceOneSqkm() -> getPriorityTaskingPriceOneSqkm
    154:154:java.lang.Float getTaskingMaxAoiSideKm() -> getTaskingMaxAoiSideKm
    162:162:java.lang.Float getTaskingMaxSqkm() -> getTaskingMaxSqkm
    170:170:java.lang.Float getTaskingMinSqkm() -> getTaskingMinSqkm
    178:178:java.lang.Float getTaskingPriceOneSqkm() -> getTaskingPriceOneSqkm
    142:142:void setPriorityEnabled(java.lang.Boolean) -> setPriorityEnabled
    150:150:void setPriorityTaskingPriceOneSqkm(java.lang.Float) -> setPriorityTaskingPriceOneSqkm
    158:158:void setTaskingMaxAoiSideKm(java.lang.Float) -> setTaskingMaxAoiSideKm
    166:166:void setTaskingMaxSqkm(java.lang.Float) -> setTaskingMaxSqkm
    174:174:void setTaskingMinSqkm(java.lang.Float) -> setTaskingMinSqkm
    182:182:void setTaskingPriceOneSqkm(java.lang.Float) -> setTaskingPriceOneSqkm
    127:127:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType$Provider -> com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType$Provider:
    186:186:void <init>(com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType) -> <init>
    212:212:java.lang.Boolean getPriorityEnabled() -> getPriorityEnabled
    220:220:java.lang.Float getPriorityTaskingPriceOneSqkm() -> getPriorityTaskingPriceOneSqkm
    228:228:java.lang.String getProvider() -> getProvider
    236:236:java.lang.String getProviderOperational() -> getProviderOperational
    244:244:java.lang.Float getTaskingMaxAoiSideKm() -> getTaskingMaxAoiSideKm
    252:252:java.lang.Float getTaskingMaxSqkm() -> getTaskingMaxSqkm
    260:260:java.lang.Float getTaskingMinSqkm() -> getTaskingMinSqkm
    268:268:java.lang.Float getTaskingPriceOneSqkm() -> getTaskingPriceOneSqkm
    216:216:void setPriorityEnabled(java.lang.Boolean) -> setPriorityEnabled
    224:224:void setPriorityTaskingPriceOneSqkm(java.lang.Float) -> setPriorityTaskingPriceOneSqkm
    232:232:void setProvider(java.lang.String) -> setProvider
    240:240:void setProviderOperational(java.lang.String) -> setProviderOperational
    248:248:void setTaskingMaxAoiSideKm(java.lang.Float) -> setTaskingMaxAoiSideKm
    256:256:void setTaskingMaxSqkm(java.lang.Float) -> setTaskingMaxSqkm
    264:264:void setTaskingMinSqkm(java.lang.Float) -> setTaskingMinSqkm
    272:272:void setTaskingPriceOneSqkm(java.lang.Float) -> setTaskingPriceOneSqkm
    199:199:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType$Resolution -> com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType$Resolution:
    56:56:void <init>(com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType) -> <init>
    76:76:java.lang.Boolean getComingSoon() -> getComingSoon
    92:92:com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType$Pricing getPricing() -> getPricing
    100:100:java.util.HashMap getProviders() -> getProviders
    108:108:java.lang.String getResolution() -> getResolution
    84:84:java.lang.Boolean getSupported() -> getSupported
    80:80:void setComingSoon(java.lang.Boolean) -> setComingSoon
    96:96:void setPricing(com.skyfi.atak.plugin.skyfiapi.PricingResponse$ProductType$Pricing) -> setPricing
    104:104:void setProviders(java.util.HashMap) -> setProviders
    112:112:void setResolution(java.lang.String) -> setResolution
    88:88:void setSupported(java.lang.Boolean) -> setSupported
    66:66:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.TaskingOrder -> com.skyfi.atak.plugin.skyfiapi.TaskingOrder:
    3:5:void <init>() -> <init>
    34:34:java.lang.String getAoi() -> getAoi
    42:42:java.lang.String getDeliveryDriver() -> getDeliveryDriver
    50:50:com.skyfi.atak.plugin.skyfiapi.DeliveryParams getDeliveryParams() -> getDeliveryParams
    58:58:java.lang.Float getMaxCloudCoveragePercent() -> getMaxCloudCoveragePercent
    66:66:java.lang.Float getMaxOffNadirAngle() -> getMaxOffNadirAngle
    82:82:java.lang.String getProductType() -> getProductType
    114:114:java.lang.String getRequiredProvider() -> getRequiredProvider
    90:90:java.lang.String getResolution() -> getResolution
    98:98:java.lang.String getWindowEnd() -> getWindowEnd
    106:106:java.lang.String getWindowStart() -> getWindowStart
    74:74:boolean isPriorityItem() -> isPriorityItem
    38:38:void setAoi(java.lang.String) -> setAoi
    46:46:void setDeliveryDriver(java.lang.String) -> setDeliveryDriver
    54:54:void setDeliveryParams(com.skyfi.atak.plugin.skyfiapi.DeliveryParams) -> setDeliveryParams
    62:62:void setMaxCloudCoveragePercent(java.lang.Float) -> setMaxCloudCoveragePercent
    70:70:void setMaxOffNadirAngle(java.lang.Float) -> setMaxOffNadirAngle
    78:78:void setPriorityItem(boolean) -> setPriorityItem
    86:86:void setProductType(java.lang.String) -> setProductType
    118:118:void setRequiredProvider(java.lang.String) -> setRequiredProvider
    94:94:void setResolution(java.lang.String) -> setResolution
    102:102:void setWindowEnd(java.lang.String) -> setWindowEnd
    110:110:void setWindowStart(java.lang.String) -> setWindowStart
    18:18:java.lang.String toString() -> toString
com.skyfi.atak.plugin.skyfiapi.User -> com.skyfi.atak.plugin.skyfiapi.User:
    3:3:void <init>() -> <init>
    14:14:int getCurrentBudgetUsage() -> getCurrentBudgetUsage
    22:22:java.lang.String getEmail() -> getEmail
    30:30:java.lang.String getFirstName() -> getFirstName
    46:46:java.lang.String getId() -> getId
    62:62:java.lang.String getLastName() -> getLastName
    70:70:java.lang.String getOrganizationId() -> getOrganizationId
    54:54:boolean isDemoAccount() -> isDemoAccount
    38:38:boolean isHasValidSharedCard() -> isHasValidSharedCard
    18:18:void setCurrentBudgetUsage(int) -> setCurrentBudgetUsage
    58:58:void setDemoAccount(boolean) -> setDemoAccount
    26:26:void setEmail(java.lang.String) -> setEmail
    34:34:void setFirstName(java.lang.String) -> setFirstName
    42:42:void setHasValidSharedCard(boolean) -> setHasValidSharedCard
    50:50:void setId(java.lang.String) -> setId
    66:66:void setLastName(java.lang.String) -> setLastName
    74:74:void setOrganizationId(java.lang.String) -> setOrganizationId
com.skyfi.atak.plugin.skyfiapi.UserAgentInterceptor -> com.skyfi.atak.plugin.skyfiapi.UserAgentInterceptor:
    17:17:void <init>() -> <init>
    29:42:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    22:22:void userAgent(android.content.Context) -> userAgent
kotlin.ArrayIntrinsicsKt -> kotlin.ArrayIntrinsicsKt:
# {"id":"sourceFile","fileName":"ArrayIntrinsics.kt"}
    26:26:java.lang.Object[] emptyArray() -> emptyArray
kotlin.BuilderInference -> kotlin.BuilderInference:
# {"id":"sourceFile","fileName":"Inference.kt"}
kotlin.CharCodeJVMKt -> kotlin.CharCodeJVMKt:
# {"id":"sourceFile","fileName":"CharCodeJVM.kt"}
    0:0:char Char-xj2QHRw(short) -> Char-xj2QHRw
kotlin.CharCodeKt -> kotlin.CharCodeKt:
# {"id":"sourceFile","fileName":"CharCode.kt"}
    23:23:char Char(int) -> Char
    0:0:int getCode(char) -> getCode
    0:0:void getCode$annotations(char) -> getCode$annotations
kotlin.CompareToKt -> kotlin.CompareToKt:
# {"id":"sourceFile","fileName":"compareTo.kt"}
    20:20:int compareTo(java.lang.Comparable,java.lang.Object) -> compareTo
kotlin.ContextFunctionTypeParams -> kotlin.ContextFunctionTypeParams:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.DeepRecursiveFunction -> kotlin.DeepRecursiveFunction:
# {"id":"sourceFile","fileName":"DeepRecursive.kt"}
    70:73:void <init>(kotlin.jvm.functions.Function3) -> <init>
    73:73:kotlin.jvm.functions.Function3 getBlock$kotlin_stdlib() -> getBlock$kotlin_stdlib
kotlin.DeepRecursiveKt -> kotlin.DeepRecursiveKt:
# {"id":"sourceFile","fileName":"DeepRecursive.kt"}
    128:128:void <clinit>() -> <clinit>
    1:1:java.lang.Object access$getUNDEFINED_RESULT$p() -> access$getUNDEFINED_RESULT$p
    0:0:void getUNDEFINED_RESULT$annotations() -> getUNDEFINED_RESULT$annotations
    86:86:java.lang.Object invoke(kotlin.DeepRecursiveFunction,java.lang.Object) -> invoke
kotlin.DeepRecursiveScope -> kotlin.DeepRecursiveScope:
# {"id":"sourceFile","fileName":"DeepRecursive.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    95:95:void <init>() -> <init>
    120:120:java.lang.Void invoke(kotlin.DeepRecursiveFunction,java.lang.Object) -> invoke
kotlin.DeepRecursiveScopeImpl -> kotlin.DeepRecursiveScopeImpl:
# {"id":"sourceFile","fileName":"DeepRecursive.kt"}
    134:145:void <init>(kotlin.jvm.functions.Function3,java.lang.Object) -> <init>
    130:130:void access$setCont$p(kotlin.DeepRecursiveScopeImpl,kotlin.coroutines.Continuation) -> access$setCont$p
    130:130:void access$setFunction$p(kotlin.DeepRecursiveScopeImpl,kotlin.jvm.functions.Function3) -> access$setFunction$p
    130:130:void access$setResult$p(kotlin.DeepRecursiveScopeImpl,java.lang.Object) -> access$setResult$p
    155:159:java.lang.Object callRecursive(java.lang.Object,kotlin.coroutines.Continuation) -> callRecursive
    162:177:java.lang.Object callRecursive(kotlin.DeepRecursiveFunction,java.lang.Object,kotlin.coroutines.Continuation) -> callRecursive
    183:183:kotlin.coroutines.Continuation crossFunctionCompletion(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> crossFunctionCompletion
    148:148:kotlin.coroutines.CoroutineContext getContext() -> getContext
    151:152:void resumeWith(java.lang.Object) -> resumeWith
    195:214:java.lang.Object runCallLoop() -> runCallLoop
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1 -> kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1:
# {"id":"sourceFile","fileName":"Continuation.kt"}
    66:66:void <init>(kotlin.coroutines.CoroutineContext,kotlin.DeepRecursiveScopeImpl,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> <init>
    68:68:kotlin.coroutines.CoroutineContext getContext() -> getContext
    162:166:void resumeWith(java.lang.Object) -> resumeWith
kotlin.Deprecated -> kotlin.Deprecated:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.DeprecatedSinceKotlin -> kotlin.DeprecatedSinceKotlin:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.DeprecationLevel -> kotlin.DeprecationLevel:
# {"id":"sourceFile","fileName":"Annotations.kt"}
    0:0:kotlin.DeprecationLevel[] $values() -> $values
    86:90:void <clinit>() -> <clinit>
    84:84:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.DeprecationLevel valueOf(java.lang.String) -> valueOf
    0:0:kotlin.DeprecationLevel[] values() -> values
kotlin.DslMarker -> kotlin.DslMarker:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.ExceptionsKt -> kotlin.ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    1:1:void <init>() -> <init>
    0:0:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ExceptionsKt__ExceptionsKt -> kotlin.ExceptionsKt__ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    0:0:void <init>() -> <init>
    71:71:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    43:43:java.lang.StackTraceElement[] getStackTrace(java.lang.Throwable) -> getStackTrace
    0:0:void getStackTrace$annotations(java.lang.Throwable) -> getStackTrace$annotations
    84:84:java.util.List getSuppressedExceptions(java.lang.Throwable) -> getSuppressedExceptions
    0:0:void getSuppressedExceptions$annotations(java.lang.Throwable) -> getSuppressedExceptions$annotations
    21:21:void printStackTrace(java.lang.Throwable) -> printStackTrace
    28:28:void printStackTrace(java.lang.Throwable,java.io.PrintWriter) -> printStackTrace
    35:35:void printStackTrace(java.lang.Throwable,java.io.PrintStream) -> printStackTrace
    56:60:java.lang.String stackTraceToString(java.lang.Throwable) -> stackTraceToString
kotlin.ExperimentalMultiplatform -> kotlin.ExperimentalMultiplatform:
# {"id":"sourceFile","fileName":"Multiplatform.kt"}
kotlin.ExperimentalStdlibApi -> kotlin.ExperimentalStdlibApi:
# {"id":"sourceFile","fileName":"ExperimentalStdlibApi.kt"}
kotlin.ExperimentalSubclassOptIn -> kotlin.ExperimentalSubclassOptIn:
# {"id":"sourceFile","fileName":"OptIn.kt"}
kotlin.ExperimentalUnsignedTypes -> kotlin.ExperimentalUnsignedTypes:
# {"id":"sourceFile","fileName":"Unsigned.kt"}
kotlin.ExtensionFunctionType -> kotlin.ExtensionFunctionType:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.Function -> kotlin.Function:
# {"id":"sourceFile","fileName":"Function.kt"}
kotlin.HashCodeKt -> kotlin.HashCodeKt:
# {"id":"sourceFile","fileName":"HashCode.kt"}
    18:18:int hashCode(java.lang.Object) -> hashCode
kotlin.InitializedLazyImpl -> kotlin.InitializedLazyImpl:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    95:95:void <init>(java.lang.Object) -> <init>
    95:95:java.lang.Object getValue() -> getValue
    0:0:boolean isInitialized() -> isInitialized
    99:99:java.lang.String toString() -> toString
kotlin.KotlinNothingValueException -> kotlin.KotlinNothingValueException:
# {"id":"sourceFile","fileName":"ExceptionsH.kt"}
    119:119:void <init>() -> <init>
    120:120:void <init>(java.lang.String) -> <init>
    121:121:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    122:122:void <init>(java.lang.Throwable) -> <init>
kotlin.KotlinNullPointerException -> kotlin.KotlinNullPointerException:
# {"id":"sourceFile","fileName":"KotlinNullPointerException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.KotlinVersion -> kotlin.KotlinVersion:
# {"id":"sourceFile","fileName":"KotlinVersion.kt"}
    75:75:void <clinit>() -> <clinit>
    16:23:void <init>(int,int,int) -> <init>
    21:21:void <init>(int,int) -> <init>
    16:16:int compareTo(java.lang.Object) -> compareTo
    45:45:int compareTo(kotlin.KotlinVersion) -> compareTo
    39:40:boolean equals(java.lang.Object) -> equals
    17:17:int getMajor() -> getMajor
    17:17:int getMinor() -> getMinor
    17:17:int getPatch() -> getPatch
    43:43:int hashCode() -> hashCode
    52:53:boolean isAtLeast(int,int) -> isAtLeast
    60:62:boolean isAtLeast(int,int,int) -> isAtLeast
    35:35:java.lang.String toString() -> toString
    26:27:int versionOf(int,int,int) -> versionOf
kotlin.KotlinVersion$Companion -> kotlin.KotlinVersion$Companion:
# {"id":"sourceFile","fileName":"KotlinVersion.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    64:64:void <init>() -> <init>
kotlin.KotlinVersionCurrentValue -> kotlin.KotlinVersionCurrentValue:
# {"id":"sourceFile","fileName":"KotlinVersion.kt"}
    0:0:void <clinit>() -> <clinit>
    80:80:void <init>() -> <init>
    82:82:kotlin.KotlinVersion get() -> get
kotlin.LateinitKt -> kotlin.LateinitKt:
# {"id":"sourceFile","fileName":"Lateinit.kt"}
    23:23:boolean isInitialized(kotlin.reflect.KProperty0) -> isInitialized
    0:0:void isInitialized$annotations(kotlin.reflect.KProperty0) -> isInitialized$annotations
kotlin.Lazy -> kotlin.Lazy:
# {"id":"sourceFile","fileName":"Lazy.kt"}
kotlin.LazyKt -> kotlin.LazyKt:
    1:1:void <init>() -> <init>
    0:0:kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> lazy
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.LazyKt__LazyJVMKt -> kotlin.LazyKt__LazyJVMKt:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    0:0:void <init>() -> <init>
    21:21:kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> lazy
    34:37:kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0) -> lazy
    51:51:kotlin.Lazy lazy(java.lang.Object,kotlin.jvm.functions.Function0) -> lazy
kotlin.LazyKt__LazyJVMKt$WhenMappings -> kotlin.LazyKt__LazyJVMKt$WhenMappings:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.LazyKt__LazyKt -> kotlin.LazyKt__LazyKt:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    0:0:void <init>() -> <init>
    44:44:java.lang.Object getValue(kotlin.Lazy,java.lang.Object,kotlin.reflect.KProperty) -> getValue
    35:35:kotlin.Lazy lazyOf(java.lang.Object) -> lazyOf
kotlin.LazyThreadSafetyMode -> kotlin.LazyThreadSafetyMode:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    0:0:kotlin.LazyThreadSafetyMode[] $values() -> $values
    54:67:void <clinit>() -> <clinit>
    49:49:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.LazyThreadSafetyMode valueOf(java.lang.String) -> valueOf
    0:0:kotlin.LazyThreadSafetyMode[] values() -> values
kotlin.Metadata -> kotlin.Metadata:
# {"id":"sourceFile","fileName":"Metadata.kt"}
kotlin.Metadata$DefaultImpls -> kotlin.Metadata$DefaultImpls:
# {"id":"sourceFile","fileName":"Metadata.kt"}
    0:0:void bv$annotations() -> bv$annotations
    0:0:void pn$annotations() -> pn$annotations
    0:0:void xi$annotations() -> xi$annotations
kotlin.NoWhenBranchMatchedException -> kotlin.NoWhenBranchMatchedException:
# {"id":"sourceFile","fileName":"NoWhenBranchMatchedException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
    13:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    15:15:void <init>(java.lang.Throwable) -> <init>
kotlin.NotImplementedError -> kotlin.NotImplementedError:
# {"id":"sourceFile","fileName":"Standard.kt"}
    0:0:void <init>() -> <init>
    15:15:void <init>(java.lang.String) -> <init>
    15:15:void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.NumbersKt -> kotlin.NumbersKt:
    1:1:void <init>() -> <init>
kotlin.NumbersKt__BigDecimalsKt -> kotlin.NumbersKt__BigDecimalsKt:
# {"id":"sourceFile","fileName":"BigDecimals.kt"}
    0:0:void <init>() -> <init>
    66:66:java.math.BigDecimal dec(java.math.BigDecimal) -> dec
    40:40:java.math.BigDecimal div(java.math.BigDecimal,java.math.BigDecimal) -> div
    59:59:java.math.BigDecimal inc(java.math.BigDecimal) -> inc
    25:25:java.math.BigDecimal minus(java.math.BigDecimal,java.math.BigDecimal) -> minus
    19:19:java.math.BigDecimal plus(java.math.BigDecimal,java.math.BigDecimal) -> plus
    46:46:java.math.BigDecimal rem(java.math.BigDecimal,java.math.BigDecimal) -> rem
    31:31:java.math.BigDecimal times(java.math.BigDecimal,java.math.BigDecimal) -> times
    73:73:java.math.BigDecimal toBigDecimal(int) -> toBigDecimal
    82:82:java.math.BigDecimal toBigDecimal(int,java.math.MathContext) -> toBigDecimal
    89:89:java.math.BigDecimal toBigDecimal(long) -> toBigDecimal
    97:97:java.math.BigDecimal toBigDecimal(long,java.math.MathContext) -> toBigDecimal
    107:107:java.math.BigDecimal toBigDecimal(float) -> toBigDecimal
    118:118:java.math.BigDecimal toBigDecimal(float,java.math.MathContext) -> toBigDecimal
    127:127:java.math.BigDecimal toBigDecimal(double) -> toBigDecimal
    138:138:java.math.BigDecimal toBigDecimal(double,java.math.MathContext) -> toBigDecimal
    52:52:java.math.BigDecimal unaryMinus(java.math.BigDecimal) -> unaryMinus
kotlin.NumbersKt__BigIntegersKt -> kotlin.NumbersKt__BigIntegersKt:
# {"id":"sourceFile","fileName":"BigIntegers.kt"}
    0:0:void <init>() -> <init>
    74:74:java.math.BigInteger and(java.math.BigInteger,java.math.BigInteger) -> and
    64:64:java.math.BigInteger dec(java.math.BigInteger) -> dec
    37:37:java.math.BigInteger div(java.math.BigInteger,java.math.BigInteger) -> div
    57:57:java.math.BigInteger inc(java.math.BigInteger) -> inc
    69:69:java.math.BigInteger inv(java.math.BigInteger) -> inv
    25:25:java.math.BigInteger minus(java.math.BigInteger,java.math.BigInteger) -> minus
    79:79:java.math.BigInteger or(java.math.BigInteger,java.math.BigInteger) -> or
    19:19:java.math.BigInteger plus(java.math.BigInteger,java.math.BigInteger) -> plus
    44:44:java.math.BigInteger rem(java.math.BigInteger,java.math.BigInteger) -> rem
    89:89:java.math.BigInteger shl(java.math.BigInteger,int) -> shl
    94:94:java.math.BigInteger shr(java.math.BigInteger,int) -> shr
    31:31:java.math.BigInteger times(java.math.BigInteger,java.math.BigInteger) -> times
    116:116:java.math.BigDecimal toBigDecimal(java.math.BigInteger) -> toBigDecimal
    128:128:java.math.BigDecimal toBigDecimal(java.math.BigInteger,int,java.math.MathContext) -> toBigDecimal
    127:128:java.math.BigDecimal toBigDecimal$default(java.math.BigInteger,int,java.math.MathContext,int,java.lang.Object) -> toBigDecimal$default
    102:102:java.math.BigInteger toBigInteger(int) -> toBigInteger
    109:109:java.math.BigInteger toBigInteger(long) -> toBigInteger
    50:50:java.math.BigInteger unaryMinus(java.math.BigInteger) -> unaryMinus
    84:84:java.math.BigInteger xor(java.math.BigInteger,java.math.BigInteger) -> xor
kotlin.NumbersKt__FloorDivModKt -> kotlin.NumbersKt__FloorDivModKt:
# {"id":"sourceFile","fileName":"FloorDivMod.kt"}
    0:0:void <init>() -> <init>
    19:19:int floorDiv(byte,byte) -> floorDiv
    37:37:int floorDiv(byte,short) -> floorDiv
    55:55:int floorDiv(byte,int) -> floorDiv
    73:73:long floorDiv(byte,long) -> floorDiv
    91:91:int floorDiv(short,byte) -> floorDiv
    109:109:int floorDiv(short,short) -> floorDiv
    127:127:int floorDiv(short,int) -> floorDiv
    145:145:long floorDiv(short,long) -> floorDiv
    163:163:int floorDiv(int,byte) -> floorDiv
    181:181:int floorDiv(int,short) -> floorDiv
    199:199:int floorDiv(int,int) -> floorDiv
    222:222:long floorDiv(int,long) -> floorDiv
    240:240:long floorDiv(long,byte) -> floorDiv
    258:258:long floorDiv(long,short) -> floorDiv
    276:276:long floorDiv(long,int) -> floorDiv
    294:294:long floorDiv(long,long) -> floorDiv
    30:30:byte mod(byte,byte) -> mod
    48:48:short mod(byte,short) -> mod
    66:66:int mod(byte,int) -> mod
    84:84:long mod(byte,long) -> mod
    102:102:byte mod(short,byte) -> mod
    120:120:short mod(short,short) -> mod
    138:138:int mod(short,int) -> mod
    156:156:long mod(short,long) -> mod
    174:174:byte mod(int,byte) -> mod
    192:192:short mod(int,short) -> mod
    213:213:int mod(int,int) -> mod
    233:233:long mod(int,long) -> mod
    251:251:byte mod(long,byte) -> mod
    269:269:short mod(long,short) -> mod
    287:287:int mod(long,int) -> mod
    308:308:long mod(long,long) -> mod
    324:324:float mod(float,float) -> mod
    338:338:double mod(float,double) -> mod
    351:351:double mod(double,float) -> mod
    365:365:double mod(double,double) -> mod
kotlin.NumbersKt__NumbersJVMKt -> kotlin.NumbersKt__NumbersJVMKt:
# {"id":"sourceFile","fileName":"NumbersJVM.kt"}
    0:0:void <init>() -> <init>
    111:111:int countLeadingZeroBits(int) -> countLeadingZeroBits
    185:185:int countLeadingZeroBits(long) -> countLeadingZeroBits
    103:103:int countOneBits(int) -> countOneBits
    177:177:int countOneBits(long) -> countOneBits
    119:119:int countTrailingZeroBits(int) -> countTrailingZeroBits
    193:193:int countTrailingZeroBits(long) -> countTrailingZeroBits
    70:70:double fromBits(kotlin.jvm.internal.DoubleCompanionObject,long) -> fromBits
    94:94:float fromBits(kotlin.jvm.internal.FloatCompanionObject,int) -> fromBits
    40:40:boolean isFinite(double) -> isFinite
    46:46:boolean isFinite(float) -> isFinite
    28:28:boolean isInfinite(double) -> isInfinite
    34:34:boolean isInfinite(float) -> isInfinite
    15:15:boolean isNaN(double) -> isNaN
    22:22:boolean isNaN(float) -> isNaN
    152:152:int rotateLeft(int,int) -> rotateLeft
    226:226:long rotateLeft(long,int) -> rotateLeft
    168:168:int rotateRight(int,int) -> rotateRight
    241:241:long rotateRight(long,int) -> rotateRight
    128:128:int takeHighestOneBit(int) -> takeHighestOneBit
    202:202:long takeHighestOneBit(long) -> takeHighestOneBit
    137:137:int takeLowestOneBit(int) -> takeLowestOneBit
    211:211:long takeLowestOneBit(long) -> takeLowestOneBit
    54:54:long toBits(double) -> toBits
    78:78:int toBits(float) -> toBits
    63:63:long toRawBits(double) -> toRawBits
    87:87:int toRawBits(float) -> toRawBits
kotlin.NumbersKt__NumbersKt -> kotlin.NumbersKt__NumbersKt:
# {"id":"sourceFile","fileName":"Numbers.kt"}
    0:0:void <init>() -> <init>
    156:156:int countLeadingZeroBits(byte) -> countLeadingZeroBits
    230:230:int countLeadingZeroBits(short) -> countLeadingZeroBits
    148:148:int countOneBits(byte) -> countOneBits
    221:221:int countOneBits(short) -> countOneBits
    164:164:int countTrailingZeroBits(byte) -> countTrailingZeroBits
    238:238:int countTrailingZeroBits(short) -> countTrailingZeroBits
    0:0:byte rotateLeft(byte,int) -> rotateLeft
    0:0:short rotateLeft(short,int) -> rotateLeft
    0:0:byte rotateRight(byte,int) -> rotateRight
    0:0:short rotateRight(short,int) -> rotateRight
    173:173:byte takeHighestOneBit(byte) -> takeHighestOneBit
    247:247:short takeHighestOneBit(short) -> takeHighestOneBit
    182:182:byte takeLowestOneBit(byte) -> takeLowestOneBit
    256:256:short takeLowestOneBit(short) -> takeLowestOneBit
kotlin.OptIn -> kotlin.OptIn:
# {"id":"sourceFile","fileName":"OptIn.kt"}
kotlin.OptionalExpectation -> kotlin.OptionalExpectation:
# {"id":"sourceFile","fileName":"Multiplatform.kt"}
kotlin.OverloadResolutionByLambdaReturnType -> kotlin.OverloadResolutionByLambdaReturnType:
# {"id":"sourceFile","fileName":"Inference.kt"}
kotlin.Pair -> kotlin.Pair:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    26:28:void <init>(java.lang.Object,java.lang.Object) -> <init>
    0:0:java.lang.Object component1() -> component1
    0:0:java.lang.Object component2() -> component2
    0:0:kotlin.Pair copy(java.lang.Object,java.lang.Object) -> copy
    0:0:kotlin.Pair copy$default(kotlin.Pair,java.lang.Object,java.lang.Object,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    27:27:java.lang.Object getFirst() -> getFirst
    28:28:java.lang.Object getSecond() -> getSecond
    0:0:int hashCode() -> hashCode
    34:34:java.lang.String toString() -> toString
kotlin.ParameterName -> kotlin.ParameterName:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.PreconditionsKt -> kotlin.PreconditionsKt:
    1:1:void <init>() -> <init>
kotlin.PreconditionsKt__AssertionsJVMKt -> kotlin.PreconditionsKt__AssertionsJVMKt:
# {"id":"sourceFile","fileName":"AssertionsJVM.kt"}
    0:0:void <init>() -> <init>
    0:0:void assert(boolean) -> assert
    0:0:void assert(boolean,kotlin.jvm.functions.Function0) -> assert
kotlin.PreconditionsKt__PreconditionsKt -> kotlin.PreconditionsKt__PreconditionsKt:
# {"id":"sourceFile","fileName":"Preconditions.kt"}
    0:0:void <init>() -> <init>
    83:83:void check(boolean) -> check
    97:98:void check(boolean,kotlin.jvm.functions.Function0) -> check
    113:113:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    129:130:java.lang.Object checkNotNull(java.lang.Object,kotlin.jvm.functions.Function0) -> checkNotNull
    143:143:java.lang.Void error(java.lang.Object) -> error
    23:23:void require(boolean) -> require
    37:38:void require(boolean,kotlin.jvm.functions.Function0) -> require
    50:50:java.lang.Object requireNotNull(java.lang.Object) -> requireNotNull
    66:67:java.lang.Object requireNotNull(java.lang.Object,kotlin.jvm.functions.Function0) -> requireNotNull
kotlin.PropertyReferenceDelegatesKt -> kotlin.PropertyReferenceDelegatesKt:
# {"id":"sourceFile","fileName":"PropertyReferenceDelegates.kt"}
    32:32:java.lang.Object getValue(kotlin.reflect.KProperty0,java.lang.Object,kotlin.reflect.KProperty) -> getValue
    81:81:java.lang.Object getValue(kotlin.reflect.KProperty1,java.lang.Object,kotlin.reflect.KProperty) -> getValue
    58:58:void setValue(kotlin.reflect.KMutableProperty0,java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
    105:105:void setValue(kotlin.reflect.KMutableProperty1,java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
kotlin.PublishedApi -> kotlin.PublishedApi:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.ReplaceWith -> kotlin.ReplaceWith:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.RequiresOptIn -> kotlin.RequiresOptIn:
# {"id":"sourceFile","fileName":"OptIn.kt"}
kotlin.RequiresOptIn$Level -> kotlin.RequiresOptIn$Level:
# {"id":"sourceFile","fileName":"OptIn.kt"}
    0:0:kotlin.RequiresOptIn$Level[] $values() -> $values
    108:111:void <clinit>() -> <clinit>
    106:106:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.RequiresOptIn$Level valueOf(java.lang.String) -> valueOf
    0:0:kotlin.RequiresOptIn$Level[] values() -> values
kotlin.Result -> kotlin.Result:
# {"id":"sourceFile","fileName":"Result.kt"}
    0:0:void <clinit>() -> <clinit>
    22:22:void <init>(java.lang.Object) -> <init>
    0:0:kotlin.Result box-impl(java.lang.Object) -> box-impl
    0:0:java.lang.Object constructor-impl(java.lang.Object) -> constructor-impl
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(java.lang.Object,java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(java.lang.Object,java.lang.Object) -> equals-impl0
    64:64:java.lang.Throwable exceptionOrNull-impl(java.lang.Object) -> exceptionOrNull-impl
    52:52:java.lang.Object getOrNull-impl(java.lang.Object) -> getOrNull-impl
    0:0:void getValue$annotations() -> getValue$annotations
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(java.lang.Object) -> hashCode-impl
    38:38:boolean isFailure-impl(java.lang.Object) -> isFailure-impl
    32:32:boolean isSuccess-impl(java.lang.Object) -> isSuccess-impl
    73:73:java.lang.String toString() -> toString
    75:76:java.lang.String toString-impl(java.lang.Object) -> toString-impl
    0:0:java.lang.Object unbox-impl() -> unbox-impl
kotlin.Result$Companion -> kotlin.Result$Companion:
# {"id":"sourceFile","fileName":"Result.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    85:85:void <init>() -> <init>
    102:102:java.lang.Object failure(java.lang.Throwable) -> failure
    93:93:java.lang.Object success(java.lang.Object) -> success
kotlin.Result$Failure -> kotlin.Result$Failure:
# {"id":"sourceFile","fileName":"Result.kt"}
    105:106:void <init>(java.lang.Throwable) -> <init>
    109:109:boolean equals(java.lang.Object) -> equals
    110:110:int hashCode() -> hashCode
    111:111:java.lang.String toString() -> toString
kotlin.ResultKt -> kotlin.ResultKt:
# {"id":"sourceFile","fileName":"Result.kt"}
    122:122:java.lang.Object createFailure(java.lang.Throwable) -> createFailure
    227:229:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> fold
    207:207:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    192:194:java.lang.Object getOrElse(java.lang.Object,kotlin.jvm.functions.Function1) -> getOrElse
    174:174:java.lang.Object getOrThrow(java.lang.Object) -> getOrThrow
    250:251:java.lang.Object map(java.lang.Object,kotlin.jvm.functions.Function1) -> map
    267:268:java.lang.Object mapCatching(java.lang.Object,kotlin.jvm.functions.Function1) -> mapCatching
    321:321:java.lang.Object onFailure(java.lang.Object,kotlin.jvm.functions.Function1) -> onFailure
    335:335:java.lang.Object onSuccess(java.lang.Object,kotlin.jvm.functions.Function1) -> onSuccess
    286:288:java.lang.Object recover(java.lang.Object,kotlin.jvm.functions.Function1) -> recover
    303:305:java.lang.Object recoverCatching(java.lang.Object,kotlin.jvm.functions.Function1) -> recoverCatching
    143:145:java.lang.Object runCatching(kotlin.jvm.functions.Function0) -> runCatching
    157:159:java.lang.Object runCatching(java.lang.Object,kotlin.jvm.functions.Function1) -> runCatching
    132:132:void throwOnFailure(java.lang.Object) -> throwOnFailure
kotlin.SafePublicationLazyImpl -> kotlin.SafePublicationLazyImpl:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    124:124:void <clinit>() -> <clinit>
    90:94:void <init>(kotlin.jvm.functions.Function0) -> <init>
    98:114:java.lang.Object getValue() -> getValue
    117:117:boolean isInitialized() -> isInitialized
    119:119:java.lang.String toString() -> toString
    121:121:java.lang.Object writeReplace() -> writeReplace
kotlin.SafePublicationLazyImpl$$ExternalSyntheticBackportWithForwarding0 -> kotlin.SafePublicationLazyImpl$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.SafePublicationLazyImpl$$InternalSyntheticBackportWithForwarding$1$4bb09ac4ea9ee019bdc96f1a7824fb2e5ca3ee0b09b00ed4129ec1d661f04798$0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.SafePublicationLazyImpl$Companion -> kotlin.SafePublicationLazyImpl$Companion:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    123:123:void <init>() -> <init>
kotlin.SinceKotlin -> kotlin.SinceKotlin:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.StandardKt -> kotlin.StandardKt:
    1:1:void <init>() -> <init>
kotlin.StandardKt__StandardKt -> kotlin.StandardKt__StandardKt:
# {"id":"sourceFile","fileName":"Standard.kt"}
    0:0:void <init>() -> <init>
    22:22:java.lang.Void TODO() -> TODO
    30:30:java.lang.Void TODO(java.lang.String) -> TODO
    98:98:java.lang.Object also(java.lang.Object,kotlin.jvm.functions.Function1) -> also
    83:83:java.lang.Object apply(java.lang.Object,kotlin.jvm.functions.Function1) -> apply
    112:112:java.lang.Object let(java.lang.Object,kotlin.jvm.functions.Function1) -> let
    155:155:void repeat(int,kotlin.jvm.functions.Function1) -> repeat
    44:44:java.lang.Object run(kotlin.jvm.functions.Function0) -> run
    57:57:java.lang.Object run(java.lang.Object,kotlin.jvm.functions.Function1) -> run
    126:126:java.lang.Object takeIf(java.lang.Object,kotlin.jvm.functions.Function1) -> takeIf
    140:140:java.lang.Object takeUnless(java.lang.Object,kotlin.jvm.functions.Function1) -> takeUnless
    70:70:java.lang.Object with(java.lang.Object,kotlin.jvm.functions.Function1) -> with
kotlin.StandardKt__SynchronizedKt -> kotlin.StandardKt__SynchronizedKt:
# {"id":"sourceFile","fileName":"Synchronized.kt"}
    0:0:void <init>() -> <init>
    28:34:java.lang.Object synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> synchronized
kotlin.SubclassOptInRequired -> kotlin.SubclassOptInRequired:
# {"id":"sourceFile","fileName":"OptIn.kt"}
kotlin.Suppress -> kotlin.Suppress:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.SuspendKt -> kotlin.SuspendKt:
# {"id":"sourceFile","fileName":"Suspend.kt"}
    0:0:kotlin.jvm.functions.Function1 suspend(kotlin.jvm.functions.Function1) -> suspend
kotlin.SynchronizedLazyImpl -> kotlin.SynchronizedLazyImpl:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    55:59:void <init>(kotlin.jvm.functions.Function0,java.lang.Object) -> <init>
    55:55:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    63:76:java.lang.Object getValue() -> getValue
    82:82:boolean isInitialized() -> isInitialized
    84:84:java.lang.String toString() -> toString
    86:86:java.lang.Object writeReplace() -> writeReplace
kotlin.ThrowsKt -> kotlin.ThrowsKt:
# {"id":"sourceFile","fileName":"Throws.kt"}
    0:0:void Throws$annotations() -> Throws$annotations
kotlin.Triple -> kotlin.Triple:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    66:69:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    0:0:java.lang.Object component1() -> component1
    0:0:java.lang.Object component2() -> component2
    0:0:java.lang.Object component3() -> component3
    0:0:kotlin.Triple copy(java.lang.Object,java.lang.Object,java.lang.Object) -> copy
    0:0:kotlin.Triple copy$default(kotlin.Triple,java.lang.Object,java.lang.Object,java.lang.Object,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    67:67:java.lang.Object getFirst() -> getFirst
    68:68:java.lang.Object getSecond() -> getSecond
    69:69:java.lang.Object getThird() -> getThird
    0:0:int hashCode() -> hashCode
    75:75:java.lang.String toString() -> toString
kotlin.TuplesKt -> kotlin.TuplesKt:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    43:43:kotlin.Pair to(java.lang.Object,java.lang.Object) -> to
    49:49:java.util.List toList(kotlin.Pair) -> toList
    82:82:java.util.List toList(kotlin.Triple) -> toList
kotlin.TypeAliasesKt -> kotlin.TypeAliasesKt:
# {"id":"sourceFile","fileName":"TypeAliases.kt"}
    0:0:void ArithmeticException$annotations() -> ArithmeticException$annotations
    0:0:void AssertionError$annotations() -> AssertionError$annotations
    0:0:void ClassCastException$annotations() -> ClassCastException$annotations
    0:0:void Comparator$annotations() -> Comparator$annotations
    0:0:void ConcurrentModificationException$annotations() -> ConcurrentModificationException$annotations
    0:0:void Error$annotations() -> Error$annotations
    0:0:void Exception$annotations() -> Exception$annotations
    0:0:void IllegalArgumentException$annotations() -> IllegalArgumentException$annotations
    0:0:void IllegalStateException$annotations() -> IllegalStateException$annotations
    0:0:void IndexOutOfBoundsException$annotations() -> IndexOutOfBoundsException$annotations
    0:0:void NoSuchElementException$annotations() -> NoSuchElementException$annotations
    0:0:void NullPointerException$annotations() -> NullPointerException$annotations
    0:0:void NumberFormatException$annotations() -> NumberFormatException$annotations
    0:0:void RuntimeException$annotations() -> RuntimeException$annotations
    0:0:void UnsupportedOperationException$annotations() -> UnsupportedOperationException$annotations
kotlin.TypeCastException -> kotlin.TypeCastException:
# {"id":"sourceFile","fileName":"TypeCastException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.UByte -> kotlin.UByte:
# {"id":"sourceFile","fileName":"UByte.kt"}
    0:0:void <clinit>() -> <clinit>
    16:16:void <init>(byte) -> <init>
    252:252:byte and-7apg3OU(byte,byte) -> and-7apg3OU
    0:0:kotlin.UByte box-impl(byte) -> box-impl
    13:13:int compareTo(java.lang.Object) -> compareTo
    47:47:int compareTo-7apg3OU(byte) -> compareTo-7apg3OU
    47:47:int compareTo-7apg3OU(byte,byte) -> compareTo-7apg3OU
    71:71:int compareTo-VKZWuLQ(byte,long) -> compareTo-VKZWuLQ
    63:63:int compareTo-WZ4Q5Ns(byte,int) -> compareTo-WZ4Q5Ns
    55:55:int compareTo-xj2QHRw(byte,short) -> compareTo-xj2QHRw
    0:0:byte constructor-impl(byte) -> constructor-impl
    234:234:byte dec-w2LRezQ(byte) -> dec-w2LRezQ
    114:114:int div-7apg3OU(byte,byte) -> div-7apg3OU
    123:123:long div-VKZWuLQ(byte,long) -> div-VKZWuLQ
    120:120:int div-WZ4Q5Ns(byte,int) -> div-WZ4Q5Ns
    117:117:int div-xj2QHRw(byte,short) -> div-xj2QHRw
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(byte,java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(byte,byte) -> equals-impl0
    160:160:int floorDiv-7apg3OU(byte,byte) -> floorDiv-7apg3OU
    181:181:long floorDiv-VKZWuLQ(byte,long) -> floorDiv-VKZWuLQ
    174:174:int floorDiv-WZ4Q5Ns(byte,int) -> floorDiv-WZ4Q5Ns
    167:167:int floorDiv-xj2QHRw(byte,short) -> floorDiv-xj2QHRw
    0:0:void getData$annotations() -> getData$annotations
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(byte) -> hashCode-impl
    226:226:byte inc-w2LRezQ(byte) -> inc-w2LRezQ
    261:261:byte inv-w2LRezQ(byte) -> inv-w2LRezQ
    88:88:int minus-7apg3OU(byte,byte) -> minus-7apg3OU
    97:97:long minus-VKZWuLQ(byte,long) -> minus-VKZWuLQ
    94:94:int minus-WZ4Q5Ns(byte,int) -> minus-WZ4Q5Ns
    91:91:int minus-xj2QHRw(byte,short) -> minus-xj2QHRw
    191:191:byte mod-7apg3OU(byte,byte) -> mod-7apg3OU
    218:218:long mod-VKZWuLQ(byte,long) -> mod-VKZWuLQ
    209:209:int mod-WZ4Q5Ns(byte,int) -> mod-WZ4Q5Ns
    200:200:short mod-xj2QHRw(byte,short) -> mod-xj2QHRw
    255:255:byte or-7apg3OU(byte,byte) -> or-7apg3OU
    75:75:int plus-7apg3OU(byte,byte) -> plus-7apg3OU
    84:84:long plus-VKZWuLQ(byte,long) -> plus-VKZWuLQ
    81:81:int plus-WZ4Q5Ns(byte,int) -> plus-WZ4Q5Ns
    78:78:int plus-xj2QHRw(byte,short) -> plus-xj2QHRw
    238:238:kotlin.ranges.UIntRange rangeTo-7apg3OU(byte,byte) -> rangeTo-7apg3OU
    248:248:kotlin.ranges.UIntRange rangeUntil-7apg3OU(byte,byte) -> rangeUntil-7apg3OU
    131:131:int rem-7apg3OU(byte,byte) -> rem-7apg3OU
    152:152:long rem-VKZWuLQ(byte,long) -> rem-VKZWuLQ
    145:145:int rem-WZ4Q5Ns(byte,int) -> rem-WZ4Q5Ns
    138:138:int rem-xj2QHRw(byte,short) -> rem-xj2QHRw
    101:101:int times-7apg3OU(byte,byte) -> times-7apg3OU
    110:110:long times-VKZWuLQ(byte,long) -> times-VKZWuLQ
    107:107:int times-WZ4Q5Ns(byte,int) -> times-WZ4Q5Ns
    104:104:int times-xj2QHRw(byte,short) -> times-xj2QHRw
    0:0:byte toByte-impl(byte) -> toByte-impl
    0:0:double toDouble-impl(byte) -> toDouble-impl
    0:0:float toFloat-impl(byte) -> toFloat-impl
    0:0:int toInt-impl(byte) -> toInt-impl
    0:0:long toLong-impl(byte) -> toLong-impl
    0:0:short toShort-impl(byte) -> toShort-impl
    353:353:java.lang.String toString() -> toString
    353:353:java.lang.String toString-impl(byte) -> toString-impl
    0:0:byte toUByte-w2LRezQ(byte) -> toUByte-w2LRezQ
    326:326:int toUInt-pVg5ArA(byte) -> toUInt-pVg5ArA
    336:336:long toULong-s-VKNKU(byte) -> toULong-s-VKNKU
    316:316:short toUShort-Mh2AYeg(byte) -> toUShort-Mh2AYeg
    0:0:byte unbox-impl() -> unbox-impl
    258:258:byte xor-7apg3OU(byte,byte) -> xor-7apg3OU
kotlin.UByte$$ExternalSyntheticBackport0 -> kotlin.UByte$$ExternalSyntheticBackport0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.UByte$$InternalSyntheticBackport$1$0015384b9c13501a288a19c8ba08be51b0748d1e1afd3d8b9c6b7f1a9a857b62$0.m(int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.UByte$$ExternalSyntheticBackport1 -> kotlin.UByte$$ExternalSyntheticBackport1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.UByte$$InternalSyntheticBackport$1$0b132fee2945a97b28b3c98eb7627c11f97ead6696c6cb73d04ec56354c4cbbe$0.m(int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.UByte$$ExternalSyntheticBackport2 -> kotlin.UByte$$ExternalSyntheticBackport2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.UByte$$InternalSyntheticBackport$1$1c5a47706721369965c8ee8dee59ae254fdc8bd540850bd0d1c6a0410f810215$0.m(int,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.UByte$$ExternalSyntheticBackport3 -> kotlin.UByte$$ExternalSyntheticBackport3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:long kotlin.UByte$$InternalSyntheticBackport$1$38e247a1eee1a18eef4831973e041b0a3384acca409f0affcf7e6375d36f47d6$0.m(long,long) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.UByte$$ExternalSyntheticBackport4 -> kotlin.UByte$$ExternalSyntheticBackport4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.UByte$$InternalSyntheticBackport$1$5217bac362b4b0e920c5df58bbb459bd1d500aacef169ed31d17b27b85b87121$0.m(long,long) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.UByte$$ExternalSyntheticBackport5 -> kotlin.UByte$$ExternalSyntheticBackport5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:long kotlin.UByte$$InternalSyntheticBackport$1$ce93ec8c1e8d6b13a6b8feefa77f68a3130ccdb4e9d0131d5669991859ac93de$0.m(long,long) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.UByte$Companion -> kotlin.UByte$Companion:
# {"id":"sourceFile","fileName":"UByte.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    18:18:void <init>() -> <init>
kotlin.UByteArray -> kotlin.UByteArray:
# {"id":"sourceFile","fileName":"UByteArray.kt"}
    17:17:void <init>(byte[]) -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean add-7apg3OU(byte) -> add-7apg3OU
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:kotlin.UByteArray box-impl(byte[]) -> box-impl
    0:0:void clear() -> clear
    0:0:byte[] constructor-impl(byte[]) -> constructor-impl
    20:20:byte[] constructor-impl(int) -> constructor-impl
    12:12:boolean contains(java.lang.Object) -> contains
    52:52:boolean contains-7apg3OU(byte) -> contains-7apg3OU
    58:58:boolean contains-7apg3OU(byte[],byte) -> contains-7apg3OU
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    62:88:boolean containsAll-impl(byte[],java.util.Collection) -> containsAll-impl
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(byte[],java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(byte[],byte[]) -> equals-impl0
    28:28:byte get-w2LRezQ(byte[],int) -> get-w2LRezQ
    41:41:int getSize() -> getSize
    41:41:int getSize-impl(byte[]) -> getSize-impl
    0:0:void getStorage$annotations() -> getStorage$annotations
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(byte[]) -> hashCode-impl
    65:65:boolean isEmpty() -> isEmpty
    65:65:boolean isEmpty-impl(byte[]) -> isEmpty-impl
    44:44:java.util.Iterator iterator() -> iterator
    44:44:java.util.Iterator iterator-impl(byte[]) -> iterator-impl
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    37:37:void set-VurrAj0(byte[],int,byte) -> set-VurrAj0
    12:12:int size() -> size
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    0:0:java.lang.String toString() -> toString
    0:0:java.lang.String toString-impl(byte[]) -> toString-impl
    0:0:byte[] unbox-impl() -> unbox-impl
kotlin.UByteArray$Iterator -> kotlin.UByteArray$Iterator:
# {"id":"sourceFile","fileName":"UByteArray.kt"}
    46:46:void <init>(byte[]) -> <init>
    48:48:boolean hasNext() -> hasNext
    46:46:java.lang.Object next() -> next
    49:49:byte next-w2LRezQ() -> next-w2LRezQ
    0:0:void remove() -> remove
kotlin.UByteArrayKt -> kotlin.UByteArrayKt:
# {"id":"sourceFile","fileName":"UByteArray.kt"}
    79:79:byte[] UByteArray(int,kotlin.jvm.functions.Function1) -> UByteArray
    0:0:byte[] ubyteArrayOf-GBYM_sE(byte[]) -> ubyteArrayOf-GBYM_sE
kotlin.UByteKt -> kotlin.UByteKt:
# {"id":"sourceFile","fileName":"UByte.kt"}
    367:367:byte toUByte(byte) -> toUByte
    379:379:byte toUByte(short) -> toUByte
    391:391:byte toUByte(int) -> toUByte
    403:403:byte toUByte(long) -> toUByte
kotlin.UInt -> kotlin.UInt:
# {"id":"sourceFile","fileName":"UInt.kt"}
    0:0:void <clinit>() -> <clinit>
    16:16:void <init>(int) -> <init>
    270:270:int and-WZ4Q5Ns(int,int) -> and-WZ4Q5Ns
    0:0:kotlin.UInt box-impl(int) -> box-impl
    13:13:int compareTo(java.lang.Object) -> compareTo
    46:46:int compareTo-7apg3OU(int,byte) -> compareTo-7apg3OU
    71:71:int compareTo-VKZWuLQ(int,long) -> compareTo-VKZWuLQ
    63:63:int compareTo-WZ4Q5Ns(int) -> compareTo-WZ4Q5Ns
    63:63:int compareTo-WZ4Q5Ns(int,int) -> compareTo-WZ4Q5Ns
    54:54:int compareTo-xj2QHRw(int,short) -> compareTo-xj2QHRw
    0:0:int constructor-impl(int) -> constructor-impl
    234:234:int dec-pVg5ArA(int) -> dec-pVg5ArA
    114:114:int div-7apg3OU(int,byte) -> div-7apg3OU
    123:123:long div-VKZWuLQ(int,long) -> div-VKZWuLQ
    120:120:int div-WZ4Q5Ns(int,int) -> div-WZ4Q5Ns
    117:117:int div-xj2QHRw(int,short) -> div-xj2QHRw
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(int,java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(int,int) -> equals-impl0
    160:160:int floorDiv-7apg3OU(int,byte) -> floorDiv-7apg3OU
    181:181:long floorDiv-VKZWuLQ(int,long) -> floorDiv-VKZWuLQ
    174:174:int floorDiv-WZ4Q5Ns(int,int) -> floorDiv-WZ4Q5Ns
    167:167:int floorDiv-xj2QHRw(int,short) -> floorDiv-xj2QHRw
    0:0:void getData$annotations() -> getData$annotations
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(int) -> hashCode-impl
    226:226:int inc-pVg5ArA(int) -> inc-pVg5ArA
    279:279:int inv-pVg5ArA(int) -> inv-pVg5ArA
    88:88:int minus-7apg3OU(int,byte) -> minus-7apg3OU
    97:97:long minus-VKZWuLQ(int,long) -> minus-VKZWuLQ
    94:94:int minus-WZ4Q5Ns(int,int) -> minus-WZ4Q5Ns
    91:91:int minus-xj2QHRw(int,short) -> minus-xj2QHRw
    191:191:byte mod-7apg3OU(int,byte) -> mod-7apg3OU
    218:218:long mod-VKZWuLQ(int,long) -> mod-VKZWuLQ
    209:209:int mod-WZ4Q5Ns(int,int) -> mod-WZ4Q5Ns
    200:200:short mod-xj2QHRw(int,short) -> mod-xj2QHRw
    273:273:int or-WZ4Q5Ns(int,int) -> or-WZ4Q5Ns
    75:75:int plus-7apg3OU(int,byte) -> plus-7apg3OU
    84:84:long plus-VKZWuLQ(int,long) -> plus-VKZWuLQ
    81:81:int plus-WZ4Q5Ns(int,int) -> plus-WZ4Q5Ns
    78:78:int plus-xj2QHRw(int,short) -> plus-xj2QHRw
    238:238:kotlin.ranges.UIntRange rangeTo-WZ4Q5Ns(int,int) -> rangeTo-WZ4Q5Ns
    248:248:kotlin.ranges.UIntRange rangeUntil-WZ4Q5Ns(int,int) -> rangeUntil-WZ4Q5Ns
    131:131:int rem-7apg3OU(int,byte) -> rem-7apg3OU
    152:152:long rem-VKZWuLQ(int,long) -> rem-VKZWuLQ
    145:145:int rem-WZ4Q5Ns(int,int) -> rem-WZ4Q5Ns
    138:138:int rem-xj2QHRw(int,short) -> rem-xj2QHRw
    257:257:int shl-pVg5ArA(int,int) -> shl-pVg5ArA
    266:266:int shr-pVg5ArA(int,int) -> shr-pVg5ArA
    101:101:int times-7apg3OU(int,byte) -> times-7apg3OU
    110:110:long times-VKZWuLQ(int,long) -> times-VKZWuLQ
    107:107:int times-WZ4Q5Ns(int,int) -> times-WZ4Q5Ns
    104:104:int times-xj2QHRw(int,short) -> times-xj2QHRw
    0:0:byte toByte-impl(int) -> toByte-impl
    373:373:double toDouble-impl(int) -> toDouble-impl
    366:366:float toFloat-impl(int) -> toFloat-impl
    0:0:int toInt-impl(int) -> toInt-impl
    0:0:long toLong-impl(int) -> toLong-impl
    0:0:short toShort-impl(int) -> toShort-impl
    375:375:java.lang.String toString() -> toString
    375:375:java.lang.String toString-impl(int) -> toString-impl
    333:333:byte toUByte-w2LRezQ(int) -> toUByte-w2LRezQ
    0:0:int toUInt-pVg5ArA(int) -> toUInt-pVg5ArA
    356:356:long toULong-s-VKNKU(int) -> toULong-s-VKNKU
    343:343:short toUShort-Mh2AYeg(int) -> toUShort-Mh2AYeg
    0:0:int unbox-impl() -> unbox-impl
    276:276:int xor-WZ4Q5Ns(int,int) -> xor-WZ4Q5Ns
kotlin.UInt$Companion -> kotlin.UInt$Companion:
# {"id":"sourceFile","fileName":"UInt.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    18:18:void <init>() -> <init>
kotlin.UIntArray -> kotlin.UIntArray:
# {"id":"sourceFile","fileName":"UIntArray.kt"}
    17:17:void <init>(int[]) -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean add-WZ4Q5Ns(int) -> add-WZ4Q5Ns
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:kotlin.UIntArray box-impl(int[]) -> box-impl
    0:0:void clear() -> clear
    0:0:int[] constructor-impl(int[]) -> constructor-impl
    20:20:int[] constructor-impl(int) -> constructor-impl
    12:12:boolean contains(java.lang.Object) -> contains
    52:52:boolean contains-WZ4Q5Ns(int) -> contains-WZ4Q5Ns
    58:58:boolean contains-WZ4Q5Ns(int[],int) -> contains-WZ4Q5Ns
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    62:88:boolean containsAll-impl(int[],java.util.Collection) -> containsAll-impl
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(int[],java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(int[],int[]) -> equals-impl0
    28:28:int get-pVg5ArA(int[],int) -> get-pVg5ArA
    41:41:int getSize() -> getSize
    41:41:int getSize-impl(int[]) -> getSize-impl
    0:0:void getStorage$annotations() -> getStorage$annotations
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(int[]) -> hashCode-impl
    65:65:boolean isEmpty() -> isEmpty
    65:65:boolean isEmpty-impl(int[]) -> isEmpty-impl
    44:44:java.util.Iterator iterator() -> iterator
    44:44:java.util.Iterator iterator-impl(int[]) -> iterator-impl
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    37:37:void set-VXSXFK8(int[],int,int) -> set-VXSXFK8
    12:12:int size() -> size
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    0:0:java.lang.String toString() -> toString
    0:0:java.lang.String toString-impl(int[]) -> toString-impl
    0:0:int[] unbox-impl() -> unbox-impl
kotlin.UIntArray$Iterator -> kotlin.UIntArray$Iterator:
# {"id":"sourceFile","fileName":"UIntArray.kt"}
    46:46:void <init>(int[]) -> <init>
    48:48:boolean hasNext() -> hasNext
    46:46:java.lang.Object next() -> next
    49:49:int next-pVg5ArA() -> next-pVg5ArA
    0:0:void remove() -> remove
kotlin.UIntArrayKt -> kotlin.UIntArrayKt:
# {"id":"sourceFile","fileName":"UIntArray.kt"}
    79:79:int[] UIntArray(int,kotlin.jvm.functions.Function1) -> UIntArray
    0:0:int[] uintArrayOf--ajY-9A(int[]) -> uintArrayOf--ajY-9A
kotlin.UIntKt -> kotlin.UIntKt:
# {"id":"sourceFile","fileName":"UInt.kt"}
    390:390:int toUInt(byte) -> toUInt
    402:402:int toUInt(short) -> toUInt
    413:413:int toUInt(int) -> toUInt
    425:425:int toUInt(long) -> toUInt
    436:436:int toUInt(float) -> toUInt
    446:446:int toUInt(double) -> toUInt
kotlin.ULong -> kotlin.ULong:
# {"id":"sourceFile","fileName":"ULong.kt"}
    0:0:void <clinit>() -> <clinit>
    16:16:void <init>(long) -> <init>
    270:270:long and-VKZWuLQ(long,long) -> and-VKZWuLQ
    0:0:kotlin.ULong box-impl(long) -> box-impl
    13:13:int compareTo(java.lang.Object) -> compareTo
    46:46:int compareTo-7apg3OU(long,byte) -> compareTo-7apg3OU
    71:71:int compareTo-VKZWuLQ(long) -> compareTo-VKZWuLQ
    71:71:int compareTo-VKZWuLQ(long,long) -> compareTo-VKZWuLQ
    62:62:int compareTo-WZ4Q5Ns(long,int) -> compareTo-WZ4Q5Ns
    54:54:int compareTo-xj2QHRw(long,short) -> compareTo-xj2QHRw
    0:0:long constructor-impl(long) -> constructor-impl
    234:234:long dec-s-VKNKU(long) -> dec-s-VKNKU
    114:114:long div-7apg3OU(long,byte) -> div-7apg3OU
    123:123:long div-VKZWuLQ(long,long) -> div-VKZWuLQ
    120:120:long div-WZ4Q5Ns(long,int) -> div-WZ4Q5Ns
    117:117:long div-xj2QHRw(long,short) -> div-xj2QHRw
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(long,java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(long,long) -> equals-impl0
    160:160:long floorDiv-7apg3OU(long,byte) -> floorDiv-7apg3OU
    181:181:long floorDiv-VKZWuLQ(long,long) -> floorDiv-VKZWuLQ
    174:174:long floorDiv-WZ4Q5Ns(long,int) -> floorDiv-WZ4Q5Ns
    167:167:long floorDiv-xj2QHRw(long,short) -> floorDiv-xj2QHRw
    0:0:void getData$annotations() -> getData$annotations
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(long) -> hashCode-impl
    226:226:long inc-s-VKNKU(long) -> inc-s-VKNKU
    279:279:long inv-s-VKNKU(long) -> inv-s-VKNKU
    88:88:long minus-7apg3OU(long,byte) -> minus-7apg3OU
    97:97:long minus-VKZWuLQ(long,long) -> minus-VKZWuLQ
    94:94:long minus-WZ4Q5Ns(long,int) -> minus-WZ4Q5Ns
    91:91:long minus-xj2QHRw(long,short) -> minus-xj2QHRw
    191:191:byte mod-7apg3OU(long,byte) -> mod-7apg3OU
    218:218:long mod-VKZWuLQ(long,long) -> mod-VKZWuLQ
    209:209:int mod-WZ4Q5Ns(long,int) -> mod-WZ4Q5Ns
    200:200:short mod-xj2QHRw(long,short) -> mod-xj2QHRw
    273:273:long or-VKZWuLQ(long,long) -> or-VKZWuLQ
    75:75:long plus-7apg3OU(long,byte) -> plus-7apg3OU
    84:84:long plus-VKZWuLQ(long,long) -> plus-VKZWuLQ
    81:81:long plus-WZ4Q5Ns(long,int) -> plus-WZ4Q5Ns
    78:78:long plus-xj2QHRw(long,short) -> plus-xj2QHRw
    238:238:kotlin.ranges.ULongRange rangeTo-VKZWuLQ(long,long) -> rangeTo-VKZWuLQ
    248:248:kotlin.ranges.ULongRange rangeUntil-VKZWuLQ(long,long) -> rangeUntil-VKZWuLQ
    131:131:long rem-7apg3OU(long,byte) -> rem-7apg3OU
    152:152:long rem-VKZWuLQ(long,long) -> rem-VKZWuLQ
    145:145:long rem-WZ4Q5Ns(long,int) -> rem-WZ4Q5Ns
    138:138:long rem-xj2QHRw(long,short) -> rem-xj2QHRw
    257:257:long shl-s-VKNKU(long,int) -> shl-s-VKNKU
    266:266:long shr-s-VKNKU(long,int) -> shr-s-VKNKU
    101:101:long times-7apg3OU(long,byte) -> times-7apg3OU
    110:110:long times-VKZWuLQ(long,long) -> times-VKZWuLQ
    107:107:long times-WZ4Q5Ns(long,int) -> times-WZ4Q5Ns
    104:104:long times-xj2QHRw(long,short) -> times-xj2QHRw
    0:0:byte toByte-impl(long) -> toByte-impl
    376:376:double toDouble-impl(long) -> toDouble-impl
    367:367:float toFloat-impl(long) -> toFloat-impl
    0:0:int toInt-impl(long) -> toInt-impl
    0:0:long toLong-impl(long) -> toLong-impl
    0:0:short toShort-impl(long) -> toShort-impl
    378:378:java.lang.String toString() -> toString
    378:378:java.lang.String toString-impl(long) -> toString-impl
    334:334:byte toUByte-w2LRezQ(long) -> toUByte-w2LRezQ
    354:354:int toUInt-pVg5ArA(long) -> toUInt-pVg5ArA
    0:0:long toULong-s-VKNKU(long) -> toULong-s-VKNKU
    344:344:short toUShort-Mh2AYeg(long) -> toUShort-Mh2AYeg
    0:0:long unbox-impl() -> unbox-impl
    276:276:long xor-VKZWuLQ(long,long) -> xor-VKZWuLQ
kotlin.ULong$$ExternalSyntheticBackport0 -> kotlin.ULong$$ExternalSyntheticBackport0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.ULong$$InternalSyntheticBackport$1$e15d3503916cc1972c7106d018ec0a8ac0634588a4c03f967f28eaae265a45cc$0.m(long) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ULong$Companion -> kotlin.ULong$Companion:
# {"id":"sourceFile","fileName":"ULong.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    18:18:void <init>() -> <init>
kotlin.ULongArray -> kotlin.ULongArray:
# {"id":"sourceFile","fileName":"ULongArray.kt"}
    17:17:void <init>(long[]) -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean add-VKZWuLQ(long) -> add-VKZWuLQ
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:kotlin.ULongArray box-impl(long[]) -> box-impl
    0:0:void clear() -> clear
    0:0:long[] constructor-impl(long[]) -> constructor-impl
    20:20:long[] constructor-impl(int) -> constructor-impl
    12:12:boolean contains(java.lang.Object) -> contains
    52:52:boolean contains-VKZWuLQ(long) -> contains-VKZWuLQ
    58:58:boolean contains-VKZWuLQ(long[],long) -> contains-VKZWuLQ
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    62:88:boolean containsAll-impl(long[],java.util.Collection) -> containsAll-impl
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(long[],java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(long[],long[]) -> equals-impl0
    28:28:long get-s-VKNKU(long[],int) -> get-s-VKNKU
    41:41:int getSize() -> getSize
    41:41:int getSize-impl(long[]) -> getSize-impl
    0:0:void getStorage$annotations() -> getStorage$annotations
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(long[]) -> hashCode-impl
    65:65:boolean isEmpty() -> isEmpty
    65:65:boolean isEmpty-impl(long[]) -> isEmpty-impl
    44:44:java.util.Iterator iterator() -> iterator
    44:44:java.util.Iterator iterator-impl(long[]) -> iterator-impl
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    37:37:void set-k8EXiF4(long[],int,long) -> set-k8EXiF4
    12:12:int size() -> size
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    0:0:java.lang.String toString() -> toString
    0:0:java.lang.String toString-impl(long[]) -> toString-impl
    0:0:long[] unbox-impl() -> unbox-impl
kotlin.ULongArray$Iterator -> kotlin.ULongArray$Iterator:
# {"id":"sourceFile","fileName":"ULongArray.kt"}
    46:46:void <init>(long[]) -> <init>
    48:48:boolean hasNext() -> hasNext
    46:46:java.lang.Object next() -> next
    49:49:long next-s-VKNKU() -> next-s-VKNKU
    0:0:void remove() -> remove
kotlin.ULongArrayKt -> kotlin.ULongArrayKt:
# {"id":"sourceFile","fileName":"ULongArray.kt"}
    79:79:long[] ULongArray(int,kotlin.jvm.functions.Function1) -> ULongArray
    0:0:long[] ulongArrayOf-QwZRm1k(long[]) -> ulongArrayOf-QwZRm1k
kotlin.ULongKt -> kotlin.ULongKt:
# {"id":"sourceFile","fileName":"ULong.kt"}
    393:393:long toULong(byte) -> toULong
    405:405:long toULong(short) -> toULong
    417:417:long toULong(int) -> toULong
    428:428:long toULong(long) -> toULong
    439:439:long toULong(float) -> toULong
    449:449:long toULong(double) -> toULong
kotlin.UNINITIALIZED_VALUE -> kotlin.UNINITIALIZED_VALUE:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    0:0:void <clinit>() -> <clinit>
    71:71:void <init>() -> <init>
kotlin.UNumbersKt -> kotlin.UNumbersKt:
# {"id":"sourceFile","fileName":"UNumbers.kt"}
    169:169:int countLeadingZeroBits-7apg3OU(byte) -> countLeadingZeroBits-7apg3OU
    97:97:int countLeadingZeroBits-VKZWuLQ(long) -> countLeadingZeroBits-VKZWuLQ
    23:23:int countLeadingZeroBits-WZ4Q5Ns(int) -> countLeadingZeroBits-WZ4Q5Ns
    242:242:int countLeadingZeroBits-xj2QHRw(short) -> countLeadingZeroBits-xj2QHRw
    161:161:int countOneBits-7apg3OU(byte) -> countOneBits-7apg3OU
    89:89:int countOneBits-VKZWuLQ(long) -> countOneBits-VKZWuLQ
    15:15:int countOneBits-WZ4Q5Ns(int) -> countOneBits-WZ4Q5Ns
    234:234:int countOneBits-xj2QHRw(short) -> countOneBits-xj2QHRw
    177:177:int countTrailingZeroBits-7apg3OU(byte) -> countTrailingZeroBits-7apg3OU
    105:105:int countTrailingZeroBits-VKZWuLQ(long) -> countTrailingZeroBits-VKZWuLQ
    31:31:int countTrailingZeroBits-WZ4Q5Ns(int) -> countTrailingZeroBits-WZ4Q5Ns
    250:250:int countTrailingZeroBits-xj2QHRw(short) -> countTrailingZeroBits-xj2QHRw
    138:138:long rotateLeft-JSWoG40(long,int) -> rotateLeft-JSWoG40
    211:211:byte rotateLeft-LxnNnR4(byte,int) -> rotateLeft-LxnNnR4
    64:64:int rotateLeft-V7xB4Y4(int,int) -> rotateLeft-V7xB4Y4
    284:284:short rotateLeft-olVBNx4(short,int) -> rotateLeft-olVBNx4
    153:153:long rotateRight-JSWoG40(long,int) -> rotateRight-JSWoG40
    226:226:byte rotateRight-LxnNnR4(byte,int) -> rotateRight-LxnNnR4
    80:80:int rotateRight-V7xB4Y4(int,int) -> rotateRight-V7xB4Y4
    299:299:short rotateRight-olVBNx4(short,int) -> rotateRight-olVBNx4
    186:186:byte takeHighestOneBit-7apg3OU(byte) -> takeHighestOneBit-7apg3OU
    114:114:long takeHighestOneBit-VKZWuLQ(long) -> takeHighestOneBit-VKZWuLQ
    40:40:int takeHighestOneBit-WZ4Q5Ns(int) -> takeHighestOneBit-WZ4Q5Ns
    259:259:short takeHighestOneBit-xj2QHRw(short) -> takeHighestOneBit-xj2QHRw
    195:195:byte takeLowestOneBit-7apg3OU(byte) -> takeLowestOneBit-7apg3OU
    123:123:long takeLowestOneBit-VKZWuLQ(long) -> takeLowestOneBit-VKZWuLQ
    49:49:int takeLowestOneBit-WZ4Q5Ns(int) -> takeLowestOneBit-WZ4Q5Ns
    268:268:short takeLowestOneBit-xj2QHRw(short) -> takeLowestOneBit-xj2QHRw
kotlin.UShort -> kotlin.UShort:
# {"id":"sourceFile","fileName":"UShort.kt"}
    0:0:void <clinit>() -> <clinit>
    16:16:void <init>(short) -> <init>
    252:252:short and-xj2QHRw(short,short) -> and-xj2QHRw
    0:0:kotlin.UShort box-impl(short) -> box-impl
    13:13:int compareTo(java.lang.Object) -> compareTo
    46:46:int compareTo-7apg3OU(short,byte) -> compareTo-7apg3OU
    71:71:int compareTo-VKZWuLQ(short,long) -> compareTo-VKZWuLQ
    63:63:int compareTo-WZ4Q5Ns(short,int) -> compareTo-WZ4Q5Ns
    55:55:int compareTo-xj2QHRw(short) -> compareTo-xj2QHRw
    55:55:int compareTo-xj2QHRw(short,short) -> compareTo-xj2QHRw
    0:0:short constructor-impl(short) -> constructor-impl
    234:234:short dec-Mh2AYeg(short) -> dec-Mh2AYeg
    114:114:int div-7apg3OU(short,byte) -> div-7apg3OU
    123:123:long div-VKZWuLQ(short,long) -> div-VKZWuLQ
    120:120:int div-WZ4Q5Ns(short,int) -> div-WZ4Q5Ns
    117:117:int div-xj2QHRw(short,short) -> div-xj2QHRw
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(short,java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(short,short) -> equals-impl0
    160:160:int floorDiv-7apg3OU(short,byte) -> floorDiv-7apg3OU
    181:181:long floorDiv-VKZWuLQ(short,long) -> floorDiv-VKZWuLQ
    174:174:int floorDiv-WZ4Q5Ns(short,int) -> floorDiv-WZ4Q5Ns
    167:167:int floorDiv-xj2QHRw(short,short) -> floorDiv-xj2QHRw
    0:0:void getData$annotations() -> getData$annotations
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(short) -> hashCode-impl
    226:226:short inc-Mh2AYeg(short) -> inc-Mh2AYeg
    261:261:short inv-Mh2AYeg(short) -> inv-Mh2AYeg
    88:88:int minus-7apg3OU(short,byte) -> minus-7apg3OU
    97:97:long minus-VKZWuLQ(short,long) -> minus-VKZWuLQ
    94:94:int minus-WZ4Q5Ns(short,int) -> minus-WZ4Q5Ns
    91:91:int minus-xj2QHRw(short,short) -> minus-xj2QHRw
    191:191:byte mod-7apg3OU(short,byte) -> mod-7apg3OU
    218:218:long mod-VKZWuLQ(short,long) -> mod-VKZWuLQ
    209:209:int mod-WZ4Q5Ns(short,int) -> mod-WZ4Q5Ns
    200:200:short mod-xj2QHRw(short,short) -> mod-xj2QHRw
    255:255:short or-xj2QHRw(short,short) -> or-xj2QHRw
    75:75:int plus-7apg3OU(short,byte) -> plus-7apg3OU
    84:84:long plus-VKZWuLQ(short,long) -> plus-VKZWuLQ
    81:81:int plus-WZ4Q5Ns(short,int) -> plus-WZ4Q5Ns
    78:78:int plus-xj2QHRw(short,short) -> plus-xj2QHRw
    238:238:kotlin.ranges.UIntRange rangeTo-xj2QHRw(short,short) -> rangeTo-xj2QHRw
    248:248:kotlin.ranges.UIntRange rangeUntil-xj2QHRw(short,short) -> rangeUntil-xj2QHRw
    131:131:int rem-7apg3OU(short,byte) -> rem-7apg3OU
    152:152:long rem-VKZWuLQ(short,long) -> rem-VKZWuLQ
    145:145:int rem-WZ4Q5Ns(short,int) -> rem-WZ4Q5Ns
    138:138:int rem-xj2QHRw(short,short) -> rem-xj2QHRw
    101:101:int times-7apg3OU(short,byte) -> times-7apg3OU
    110:110:long times-VKZWuLQ(short,long) -> times-VKZWuLQ
    107:107:int times-WZ4Q5Ns(short,int) -> times-WZ4Q5Ns
    104:104:int times-xj2QHRw(short,short) -> times-xj2QHRw
    0:0:byte toByte-impl(short) -> toByte-impl
    0:0:double toDouble-impl(short) -> toDouble-impl
    0:0:float toFloat-impl(short) -> toFloat-impl
    0:0:int toInt-impl(short) -> toInt-impl
    0:0:long toLong-impl(short) -> toLong-impl
    0:0:short toShort-impl(short) -> toShort-impl
    354:354:java.lang.String toString() -> toString
    354:354:java.lang.String toString-impl(short) -> toString-impl
    314:314:byte toUByte-w2LRezQ(short) -> toUByte-w2LRezQ
    327:327:int toUInt-pVg5ArA(short) -> toUInt-pVg5ArA
    337:337:long toULong-s-VKNKU(short) -> toULong-s-VKNKU
    0:0:short toUShort-Mh2AYeg(short) -> toUShort-Mh2AYeg
    0:0:short unbox-impl() -> unbox-impl
    258:258:short xor-xj2QHRw(short,short) -> xor-xj2QHRw
kotlin.UShort$Companion -> kotlin.UShort$Companion:
# {"id":"sourceFile","fileName":"UShort.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    18:18:void <init>() -> <init>
kotlin.UShortArray -> kotlin.UShortArray:
# {"id":"sourceFile","fileName":"UShortArray.kt"}
    17:17:void <init>(short[]) -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean add-xj2QHRw(short) -> add-xj2QHRw
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:kotlin.UShortArray box-impl(short[]) -> box-impl
    0:0:void clear() -> clear
    0:0:short[] constructor-impl(short[]) -> constructor-impl
    20:20:short[] constructor-impl(int) -> constructor-impl
    12:12:boolean contains(java.lang.Object) -> contains
    52:52:boolean contains-xj2QHRw(short) -> contains-xj2QHRw
    58:58:boolean contains-xj2QHRw(short[],short) -> contains-xj2QHRw
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    62:88:boolean containsAll-impl(short[],java.util.Collection) -> containsAll-impl
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(short[],java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(short[],short[]) -> equals-impl0
    28:28:short get-Mh2AYeg(short[],int) -> get-Mh2AYeg
    41:41:int getSize() -> getSize
    41:41:int getSize-impl(short[]) -> getSize-impl
    0:0:void getStorage$annotations() -> getStorage$annotations
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(short[]) -> hashCode-impl
    65:65:boolean isEmpty() -> isEmpty
    65:65:boolean isEmpty-impl(short[]) -> isEmpty-impl
    44:44:java.util.Iterator iterator() -> iterator
    44:44:java.util.Iterator iterator-impl(short[]) -> iterator-impl
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    37:37:void set-01HTLdE(short[],int,short) -> set-01HTLdE
    12:12:int size() -> size
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    0:0:java.lang.String toString() -> toString
    0:0:java.lang.String toString-impl(short[]) -> toString-impl
    0:0:short[] unbox-impl() -> unbox-impl
kotlin.UShortArray$Iterator -> kotlin.UShortArray$Iterator:
# {"id":"sourceFile","fileName":"UShortArray.kt"}
    46:46:void <init>(short[]) -> <init>
    48:48:boolean hasNext() -> hasNext
    46:46:java.lang.Object next() -> next
    49:49:short next-Mh2AYeg() -> next-Mh2AYeg
    0:0:void remove() -> remove
kotlin.UShortArrayKt -> kotlin.UShortArrayKt:
# {"id":"sourceFile","fileName":"UShortArray.kt"}
    79:79:short[] UShortArray(int,kotlin.jvm.functions.Function1) -> UShortArray
    0:0:short[] ushortArrayOf-rL5Bavg(short[]) -> ushortArrayOf-rL5Bavg
kotlin.UShortKt -> kotlin.UShortKt:
# {"id":"sourceFile","fileName":"UShort.kt"}
    369:369:short toUShort(byte) -> toUShort
    380:380:short toUShort(short) -> toUShort
    392:392:short toUShort(int) -> toUShort
    404:404:short toUShort(long) -> toUShort
kotlin.UninitializedPropertyAccessException -> kotlin.UninitializedPropertyAccessException:
# {"id":"sourceFile","fileName":"UninitializedPropertyAccessException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
    13:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    15:15:void <init>(java.lang.Throwable) -> <init>
kotlin.Unit -> kotlin.Unit:
# {"id":"sourceFile","fileName":"Unit.kt"}
    0:0:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    0:0:java.lang.String toString() -> toString
kotlin.UnsafeLazyImpl -> kotlin.UnsafeLazyImpl:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    74:76:void <init>(kotlin.jvm.functions.Function0) -> <init>
    80:85:java.lang.Object getValue() -> getValue
    88:88:boolean isInitialized() -> isInitialized
    90:90:java.lang.String toString() -> toString
    92:92:java.lang.Object writeReplace() -> writeReplace
kotlin.UnsafeVariance -> kotlin.UnsafeVariance:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.UnsignedKt -> kotlin.UnsignedKt:
# {"id":"sourceFile","fileName":"UnsignedUtils.kt"}
    66:70:int doubleToUInt(double) -> doubleToUInt
    75:81:long doubleToULong(double) -> doubleToULong
    9:9:int uintCompare(int,int) -> uintCompare
    14:14:int uintDivide-J1ME1BU(int,int) -> uintDivide-J1ME1BU
    16:16:int uintRemainder-J1ME1BU(int,int) -> uintRemainder-J1ME1BU
    0:0:double uintToDouble(int) -> uintToDouble
    11:11:int ulongCompare(long,long) -> ulongCompare
    26:37:long ulongDivide-eb3DHEI(long,long) -> ulongDivide-eb3DHEI
    46:61:long ulongRemainder-eb3DHEI(long,long) -> ulongRemainder-eb3DHEI
    0:0:double ulongToDouble(long) -> ulongToDouble
    92:92:java.lang.String ulongToString(long) -> ulongToString
    95:103:java.lang.String ulongToString(long,int) -> ulongToString
kotlin.WasExperimental -> kotlin.WasExperimental:
# {"id":"sourceFile","fileName":"WasExperimental.kt"}
kotlin._Assertions -> kotlin._Assertions:
# {"id":"sourceFile","fileName":"AssertionsJVM.kt"}
    0:0:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    0:0:void getENABLED$annotations() -> getENABLED$annotations
kotlin.annotation.AnnotationRetention -> kotlin.annotation.AnnotationRetention:
# {"id":"sourceFile","fileName":"Annotations.kt"}
    0:0:kotlin.annotation.AnnotationRetention[] $values() -> $values
    65:69:void <clinit>() -> <clinit>
    63:63:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.annotation.AnnotationRetention valueOf(java.lang.String) -> valueOf
    0:0:kotlin.annotation.AnnotationRetention[] values() -> values
kotlin.annotation.AnnotationTarget -> kotlin.annotation.AnnotationTarget:
# {"id":"sourceFile","fileName":"Annotations.kt"}
    0:0:kotlin.annotation.AnnotationTarget[] $values() -> $values
    26:54:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.annotation.AnnotationTarget valueOf(java.lang.String) -> valueOf
    0:0:kotlin.annotation.AnnotationTarget[] values() -> values
kotlin.annotation.MustBeDocumented -> kotlin.annotation.MustBeDocumented:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.annotation.Repeatable -> kotlin.annotation.Repeatable:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.annotation.Retention -> kotlin.annotation.Retention:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.annotation.Target -> kotlin.annotation.Target:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.collections.AbstractCollection -> kotlin.collections.AbstractCollection:
# {"id":"sourceFile","fileName":"AbstractCollection.kt"}
    14:14:void <init>() -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    19:44:boolean contains(java.lang.Object) -> contains
    22:47:boolean containsAll(java.util.Collection) -> containsAll
    24:24:boolean isEmpty() -> isEmpty
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    14:14:int size() -> size
    34:34:java.lang.Object[] toArray() -> toArray
    40:40:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    26:26:java.lang.String toString() -> toString
kotlin.collections.AbstractCollection$toString$1 -> kotlin.collections.AbstractCollection$toString$1:
# {"id":"sourceFile","fileName":"AbstractCollection.kt"}
    0:0:void <init>(kotlin.collections.AbstractCollection) -> <init>
    26:26:java.lang.Object invoke(java.lang.Object) -> invoke
    27:27:java.lang.CharSequence invoke(java.lang.Object) -> invoke
kotlin.collections.AbstractIterator -> kotlin.collections.AbstractIterator:
# {"id":"sourceFile","fileName":"AbstractIterator.kt"}
    20:21:void <init>() -> <init>
    70:70:void done() -> done
    25:29:boolean hasNext() -> hasNext
    34:37:java.lang.Object next() -> next
    0:0:void remove() -> remove
    62:63:void setNext(java.lang.Object) -> setNext
    41:43:boolean tryToComputeNext() -> tryToComputeNext
kotlin.collections.AbstractIterator$WhenMappings -> kotlin.collections.AbstractIterator$WhenMappings:
# {"id":"sourceFile","fileName":"AbstractIterator.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.collections.AbstractList -> kotlin.collections.AbstractList:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    0:0:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    0:0:void add(int,java.lang.Object) -> add
    0:0:boolean addAll(int,java.util.Collection) -> addAll
    61:63:boolean equals(java.lang.Object) -> equals
    69:69:int hashCode() -> hashCode
    27:159:int indexOf(java.lang.Object) -> indexOf
    25:25:java.util.Iterator iterator() -> iterator
    29:168:int lastIndexOf(java.lang.Object) -> lastIndexOf
    31:31:java.util.ListIterator listIterator() -> listIterator
    33:33:java.util.ListIterator listIterator(int) -> listIterator
    0:0:java.lang.Object remove(int) -> remove
    0:0:java.lang.Object set(int,java.lang.Object) -> set
    35:35:java.util.List subList(int,int) -> subList
kotlin.collections.AbstractList$Companion -> kotlin.collections.AbstractList$Companion:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    105:105:void <init>() -> <init>
    129:132:void checkBoundsIndexes$kotlin_stdlib(int,int,int) -> checkBoundsIndexes$kotlin_stdlib
    108:108:void checkElementIndex$kotlin_stdlib(int,int) -> checkElementIndex$kotlin_stdlib
    114:114:void checkPositionIndex$kotlin_stdlib(int,int) -> checkPositionIndex$kotlin_stdlib
    120:123:void checkRangeIndexes$kotlin_stdlib(int,int,int) -> checkRangeIndexes$kotlin_stdlib
    145:150:boolean orderedEquals$kotlin_stdlib(java.util.Collection,java.util.Collection) -> orderedEquals$kotlin_stdlib
    138:139:int orderedHashCode$kotlin_stdlib(java.util.Collection) -> orderedHashCode$kotlin_stdlib
kotlin.collections.AbstractList$IteratorImpl -> kotlin.collections.AbstractList$IteratorImpl:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    71:71:void <init>(kotlin.collections.AbstractList) -> <init>
    73:73:int getIndex() -> getIndex
    75:75:boolean hasNext() -> hasNext
    78:79:java.lang.Object next() -> next
    0:0:void remove() -> remove
    73:73:void setIndex(int) -> setIndex
kotlin.collections.AbstractList$ListIteratorImpl -> kotlin.collections.AbstractList$ListIteratorImpl:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    86:90:void <init>(kotlin.collections.AbstractList,int) -> <init>
    0:0:void add(java.lang.Object) -> add
    93:93:boolean hasPrevious() -> hasPrevious
    95:95:int nextIndex() -> nextIndex
    98:99:java.lang.Object previous() -> previous
    102:102:int previousIndex() -> previousIndex
    0:0:void set(java.lang.Object) -> set
kotlin.collections.AbstractList$SubList -> kotlin.collections.AbstractList$SubList:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    37:42:void <init>(kotlin.collections.AbstractList,int,int) -> <init>
    46:48:java.lang.Object get(int) -> get
    51:51:int getSize() -> getSize
kotlin.collections.AbstractMap -> kotlin.collections.AbstractMap:
# {"id":"sourceFile","fileName":"AbstractMap.kt"}
    0:0:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    21:21:java.lang.String access$toString(kotlin.collections.AbstractMap,java.util.Map$Entry) -> access$toString
    0:0:void clear() -> clear
    33:42:boolean containsEntry$kotlin_stdlib(java.util.Map$Entry) -> containsEntry$kotlin_stdlib
    25:25:boolean containsKey(java.lang.Object) -> containsKey
    28:155:boolean containsValue(java.lang.Object) -> containsValue
    21:21:java.util.Set entrySet() -> entrySet
    57:158:boolean equals(java.lang.Object) -> equals
    63:63:java.lang.Object get(java.lang.Object) -> get
    84:99:java.util.Set getKeys() -> getKeys
    74:74:int getSize() -> getSize
    120:135:java.util.Collection getValues() -> getValues
    71:71:int hashCode() -> hashCode
    141:161:java.util.Map$Entry implFindEntry(java.lang.Object) -> implFindEntry
    73:73:boolean isEmpty() -> isEmpty
    21:21:java.util.Set keySet() -> keySet
    0:0:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    0:0:void putAll(java.util.Map) -> putAll
    0:0:java.lang.Object remove(java.lang.Object) -> remove
    21:21:int size() -> size
    106:106:java.lang.String toString() -> toString
    108:108:java.lang.String toString(java.util.Map$Entry) -> toString
    110:110:java.lang.String toString(java.lang.Object) -> toString
    21:21:java.util.Collection values() -> values
kotlin.collections.AbstractMap$Companion -> kotlin.collections.AbstractMap$Companion:
# {"id":"sourceFile","fileName":"AbstractMap.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    143:143:void <init>() -> <init>
    148:149:boolean entryEquals$kotlin_stdlib(java.util.Map$Entry,java.lang.Object) -> entryEquals$kotlin_stdlib
    145:145:int entryHashCode$kotlin_stdlib(java.util.Map$Entry) -> entryHashCode$kotlin_stdlib
    146:146:java.lang.String entryToString$kotlin_stdlib(java.util.Map$Entry) -> entryToString$kotlin_stdlib
kotlin.collections.AbstractMap$keys$1 -> kotlin.collections.AbstractMap$keys$1:
# {"id":"sourceFile","fileName":"AbstractMap.kt"}
    85:85:void <init>(kotlin.collections.AbstractMap) -> <init>
    86:86:boolean contains(java.lang.Object) -> contains
    96:96:int getSize() -> getSize
    89:90:java.util.Iterator iterator() -> iterator
kotlin.collections.AbstractMap$keys$1$iterator$1 -> kotlin.collections.AbstractMap$keys$1$iterator$1:
# {"id":"sourceFile","fileName":"AbstractMap.kt"}
    90:90:void <init>(java.util.Iterator) -> <init>
    91:91:boolean hasNext() -> hasNext
    92:92:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.collections.AbstractMap$toString$1 -> kotlin.collections.AbstractMap$toString$1:
# {"id":"sourceFile","fileName":"AbstractMap.kt"}
    0:0:void <init>(kotlin.collections.AbstractMap) -> <init>
    106:106:java.lang.CharSequence invoke(java.util.Map$Entry) -> invoke
    106:106:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.collections.AbstractMap$values$1 -> kotlin.collections.AbstractMap$values$1:
# {"id":"sourceFile","fileName":"AbstractMap.kt"}
    121:121:void <init>(kotlin.collections.AbstractMap) -> <init>
    122:122:boolean contains(java.lang.Object) -> contains
    132:132:int getSize() -> getSize
    125:126:java.util.Iterator iterator() -> iterator
kotlin.collections.AbstractMap$values$1$iterator$1 -> kotlin.collections.AbstractMap$values$1$iterator$1:
# {"id":"sourceFile","fileName":"AbstractMap.kt"}
    126:126:void <init>(java.util.Iterator) -> <init>
    127:127:boolean hasNext() -> hasNext
    128:128:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.collections.AbstractMutableCollection -> kotlin.collections.AbstractMutableCollection:
# {"id":"sourceFile","fileName":"AbstractMutableCollection.kt"}
    16:16:void <init>() -> <init>
    15:15:int size() -> size
kotlin.collections.AbstractMutableList -> kotlin.collections.AbstractMutableList:
# {"id":"sourceFile","fileName":"AbstractMutableList.kt"}
    16:16:void <init>() -> <init>
    15:15:java.lang.Object remove(int) -> remove
    15:15:int size() -> size
kotlin.collections.AbstractMutableMap -> kotlin.collections.AbstractMutableMap:
# {"id":"sourceFile","fileName":"AbstractMutableMap.kt"}
    19:19:void <init>() -> <init>
    18:18:java.util.Set entrySet() -> entrySet
    18:18:java.util.Set getKeys() -> getKeys
    18:18:int getSize() -> getSize
    18:18:java.util.Collection getValues() -> getValues
    18:18:java.util.Set keySet() -> keySet
    18:18:int size() -> size
    18:18:java.util.Collection values() -> values
kotlin.collections.AbstractMutableSet -> kotlin.collections.AbstractMutableSet:
# {"id":"sourceFile","fileName":"AbstractMutableSet.kt"}
    16:16:void <init>() -> <init>
    15:15:int size() -> size
kotlin.collections.AbstractSet -> kotlin.collections.AbstractSet:
# {"id":"sourceFile","fileName":"AbstractSet.kt"}
    0:0:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    24:25:boolean equals(java.lang.Object) -> equals
    31:31:int hashCode() -> hashCode
    0:0:java.util.Iterator iterator() -> iterator
kotlin.collections.AbstractSet$Companion -> kotlin.collections.AbstractSet$Companion:
# {"id":"sourceFile","fileName":"AbstractSet.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    33:33:void <init>() -> <init>
    43:44:boolean setEquals$kotlin_stdlib(java.util.Set,java.util.Set) -> setEquals$kotlin_stdlib
    36:37:int unorderedHashCode$kotlin_stdlib(java.util.Collection) -> unorderedHashCode$kotlin_stdlib
kotlin.collections.ArrayAsCollection -> kotlin.collections.ArrayAsCollection:
# {"id":"sourceFile","fileName":"Collections.kt"}
    57:57:void <init>(java.lang.Object[],boolean) -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    60:60:boolean contains(java.lang.Object) -> contains
    61:483:boolean containsAll(java.util.Collection) -> containsAll
    58:58:int getSize() -> getSize
    57:57:java.lang.Object[] getValues() -> getValues
    59:59:boolean isEmpty() -> isEmpty
    57:57:boolean isVarargs() -> isVarargs
    62:62:java.util.Iterator iterator() -> iterator
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    57:57:int size() -> size
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    64:64:java.lang.Object[] toArray() -> toArray
kotlin.collections.ArrayDeque -> kotlin.collections.ArrayDeque:
# {"id":"sourceFile","fileName":"ArrayDeque.kt"}
    562:562:void <clinit>() -> <clinit>
    28:32:void <init>(int) -> <init>
    39:40:void <init>() -> <init>
    46:585:void <init>(java.util.Collection) -> <init>
    179:179:boolean add(java.lang.Object) -> add
    184:253:void add(int,java.lang.Object) -> add
    272:274:boolean addAll(java.util.Collection) -> addAll
    279:350:boolean addAll(int,java.util.Collection) -> addAll
    124:128:void addFirst(java.lang.Object) -> addFirst
    135:138:void addLast(java.lang.Object) -> addLast
    521:529:void clear() -> clear
    372:372:boolean contains(java.lang.Object) -> contains
    257:268:void copyCollectionElements(int,java.util.Collection) -> copyCollectionElements
    74:78:void copyElements(int) -> copyElements
    96:96:int decremented(int) -> decremented
    59:67:void ensureCapacity(int) -> ensureCapacity
    467:515:boolean filterInPlace(kotlin.jvm.functions.Function1) -> filterInPlace
    103:103:java.lang.Object first() -> first
    108:108:java.lang.Object firstOrNull() -> firstOrNull
    357:359:java.lang.Object get(int) -> get
    22:22:int getSize() -> getSize
    94:94:int incremented(int) -> incremented
    375:386:int indexOf(java.lang.Object) -> indexOf
    84:84:java.lang.Object internalGet(int) -> internalGet
    92:92:int internalIndex(int) -> internalIndex
    579:581:void internalStructure$kotlin_stdlib(kotlin.jvm.functions.Function2) -> internalStructure$kotlin_stdlib
    98:98:boolean isEmpty() -> isEmpty
    113:113:java.lang.Object last() -> last
    394:405:int lastIndexOf(java.lang.Object) -> lastIndexOf
    118:118:java.lang.Object lastOrNull() -> lastOrNull
    89:89:int negativeMod(int) -> negativeMod
    87:87:int positiveMod(int) -> positiveMod
    413:415:boolean remove(java.lang.Object) -> remove
    462:634:boolean removeAll(java.util.Collection) -> removeAll
    420:457:java.lang.Object removeAt(int) -> removeAt
    145:150:java.lang.Object removeFirst() -> removeFirst
    157:157:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
    163:168:java.lang.Object removeLast() -> removeLast
    175:175:java.lang.Object removeLastOrNull() -> removeLastOrNull
    464:685:boolean retainAll(java.util.Collection) -> retainAll
    363:367:java.lang.Object set(int,java.lang.Object) -> set
    558:558:java.lang.Object[] testToArray$kotlin_stdlib(java.lang.Object[]) -> testToArray$kotlin_stdlib
    559:559:java.lang.Object[] testToArray$kotlin_stdlib() -> testToArray$kotlin_stdlib
    535:545:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    554:554:java.lang.Object[] toArray() -> toArray
kotlin.collections.ArrayDeque$Companion -> kotlin.collections.ArrayDeque$Companion:
# {"id":"sourceFile","fileName":"ArrayDeque.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    561:561:void <init>() -> <init>
    0:0:int newCapacity$kotlin_stdlib(int,int) -> newCapacity$kotlin_stdlib
kotlin.collections.ArraysKt -> kotlin.collections.ArraysKt:
    1:1:void <init>() -> <init>
    0:0:boolean any(byte[]) -> any
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean any(int[]) -> any
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean any(long[]) -> any
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean any(short[]) -> any
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List asList(double[]) -> asList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List asList(int[]) -> asList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List asList(long[]) -> asList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List asList(java.lang.Object[]) -> asList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence asSequence(java.lang.Object[]) -> asSequence
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contains(byte[],byte) -> contains
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contains(char[],char) -> contains
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contains(int[],int) -> contains
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contains(long[],long) -> contains
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contains(java.lang.Object[],java.lang.Object) -> contains
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contains(short[],short) -> contains
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] copyInto(byte[],byte[],int,int,int) -> copyInto
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int[] copyInto(int[],int[],int,int,int) -> copyInto
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long[] copyInto(long[],long[],int,int,int) -> copyInto
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int) -> copyInto
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:short[] copyInto(short[],short[],int,int,int) -> copyInto
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object) -> copyInto$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] copyOfRange(byte[],int,int) -> copyOfRange
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int[] copyOfRange(int[],int,int) -> copyOfRange
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long[] copyOfRange(long[],int,int) -> copyOfRange
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object[] copyOfRange(java.lang.Object[],int,int) -> copyOfRange
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:short[] copyOfRange(short[],int,int) -> copyOfRange
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void fill(byte[],byte,int,int) -> fill
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void fill(int[],int,int,int) -> fill
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void fill(long[],long,int,int) -> fill
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void fill(java.lang.Object[],java.lang.Object,int,int) -> fill
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void fill(short[],short,int,int) -> fill
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void fill$default(int[],int,int,int,int,java.lang.Object) -> fill$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object) -> fill$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte first(byte[]) -> first
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int first(int[]) -> first
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long first(long[]) -> first
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:short first(short[]) -> first
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntRange getIndices(byte[]) -> getIndices
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntRange getIndices(int[]) -> getIndices
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntRange getIndices(long[]) -> getIndices
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntRange getIndices(short[]) -> getIndices
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getLastIndex(byte[]) -> getLastIndex
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getLastIndex(int[]) -> getLastIndex
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getLastIndex(long[]) -> getLastIndex
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getLastIndex(java.lang.Object[]) -> getLastIndex
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getLastIndex(short[]) -> getLastIndex
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object getOrNull(java.lang.Object[],int) -> getOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int indexOf(byte[],byte) -> indexOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int indexOf(int[],int) -> indexOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int indexOf(long[],long) -> indexOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int indexOf(short[],short) -> indexOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Appendable joinTo$default(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte last(byte[]) -> last
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int last(int[]) -> last
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long last(long[]) -> last
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:short last(short[]) -> last
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int lastIndexOf(byte[],byte) -> lastIndexOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int lastIndexOf(int[],int) -> lastIndexOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int lastIndexOf(long[],long) -> lastIndexOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int lastIndexOf(short[],short) -> lastIndexOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] plus(byte[],byte) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] plus(byte[],byte[]) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int[] plus(int[],int) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int[] plus(int[],int[]) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long[] plus(long[],long) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long[] plus(long[],long[]) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:short[] plus(short[],short) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:short[] plus(short[],short[]) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void reverse(byte[]) -> reverse
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void reverse(byte[],int,int) -> reverse
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void reverse(int[]) -> reverse
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void reverse(int[],int,int) -> reverse
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void reverse(long[]) -> reverse
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void reverse(long[],int,int) -> reverse
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void reverse(short[]) -> reverse
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void reverse(short[],int,int) -> reverse
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] reversedArray(byte[]) -> reversedArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int[] reversedArray(int[]) -> reversedArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long[] reversedArray(long[]) -> reversedArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:short[] reversedArray(short[]) -> reversedArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte single(byte[]) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:char single(char[]) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int single(int[]) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long single(long[]) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:short single(short[]) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object singleOrNull(java.lang.Object[]) -> singleOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] sliceArray(byte[],java.util.Collection) -> sliceArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] sliceArray(byte[],kotlin.ranges.IntRange) -> sliceArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int[] sliceArray(int[],java.util.Collection) -> sliceArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int[] sliceArray(int[],kotlin.ranges.IntRange) -> sliceArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long[] sliceArray(long[],java.util.Collection) -> sliceArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long[] sliceArray(long[],kotlin.ranges.IntRange) -> sliceArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:short[] sliceArray(short[],java.util.Collection) -> sliceArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:short[] sliceArray(short[],kotlin.ranges.IntRange) -> sliceArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int sum(int[]) -> sum
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long sum(long[]) -> sum
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List toList(java.lang.Object[]) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List toMutableList(java.lang.Object[]) -> toMutableList
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.ArraysKt__ArraysJVMKt -> kotlin.collections.ArraysKt__ArraysJVMKt:
# {"id":"sourceFile","fileName":"ArraysJVM.kt"}
    0:0:void <init>() -> <init>
    44:44:java.lang.Object[] arrayOfNulls(java.lang.Object[],int) -> arrayOfNulls
    60:60:int contentDeepHashCode(java.lang.Object[]) -> contentDeepHashCode
    49:49:void copyOfRangeToIndexCheck(int,int) -> copyOfRangeToIndexCheck
    62:62:java.lang.Object[] orEmpty(java.lang.Object[]) -> orEmpty
    25:25:java.lang.String toString(byte[],java.nio.charset.Charset) -> toString
    38:38:java.lang.Object[] toTypedArray(java.util.Collection) -> toTypedArray
kotlin.collections.ArraysKt__ArraysKt -> kotlin.collections.ArraysKt__ArraysKt:
# {"id":"sourceFile","fileName":"Arrays.kt"}
    0:0:void <init>() -> <init>
    77:105:boolean contentDeepEquals(java.lang.Object[],java.lang.Object[]) -> contentDeepEquals
    118:120:java.lang.String contentDeepToString(java.lang.Object[]) -> contentDeepToString
    126:160:void contentDeepToStringInternal$ArraysKt__ArraysKt(java.lang.Object[],java.lang.StringBuilder,java.util.List) -> contentDeepToStringInternal$ArraysKt__ArraysKt
    20:22:java.util.List flatten(java.lang.Object[][]) -> flatten
    67:67:java.lang.Object ifEmpty(java.lang.Object[],kotlin.jvm.functions.Function0) -> ifEmpty
    54:54:boolean isNullOrEmpty(java.lang.Object[]) -> isNullOrEmpty
    34:40:kotlin.Pair unzip(kotlin.Pair[]) -> unzip
kotlin.collections.ArraysKt___ArraysJvmKt -> kotlin.collections.ArraysKt___ArraysJvmKt:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    0:0:void <init>() -> <init>
    133:133:java.util.List asList(java.lang.Object[]) -> asList
    140:140:java.util.List asList(byte[]) -> asList
    154:154:java.util.List asList(short[]) -> asList
    168:168:java.util.List asList(int[]) -> asList
    182:182:java.util.List asList(long[]) -> asList
    196:196:java.util.List asList(float[]) -> asList
    210:210:java.util.List asList(double[]) -> asList
    224:224:java.util.List asList(boolean[]) -> asList
    238:238:java.util.List asList(char[]) -> asList
    268:268:int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int) -> binarySearch
    290:290:int binarySearch(java.lang.Object[],java.lang.Object,int,int) -> binarySearch
    312:312:int binarySearch(byte[],byte,int,int) -> binarySearch
    334:334:int binarySearch(short[],short,int,int) -> binarySearch
    356:356:int binarySearch(int[],int,int,int) -> binarySearch
    378:378:int binarySearch(long[],long,int,int) -> binarySearch
    400:400:int binarySearch(float[],float,int,int) -> binarySearch
    422:422:int binarySearch(double[],double,int,int) -> binarySearch
    444:444:int binarySearch(char[],char,int,int) -> binarySearch
    267:267:int binarySearch$default(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int,int,java.lang.Object) -> binarySearch$default
    289:289:int binarySearch$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object) -> binarySearch$default
    311:311:int binarySearch$default(byte[],byte,int,int,int,java.lang.Object) -> binarySearch$default
    333:333:int binarySearch$default(short[],short,int,int,int,java.lang.Object) -> binarySearch$default
    355:355:int binarySearch$default(int[],int,int,int,int,java.lang.Object) -> binarySearch$default
    377:377:int binarySearch$default(long[],long,int,int,int,java.lang.Object) -> binarySearch$default
    399:399:int binarySearch$default(float[],float,int,int,int,java.lang.Object) -> binarySearch$default
    421:421:int binarySearch$default(double[],double,int,int,int,java.lang.Object) -> binarySearch$default
    443:443:int binarySearch$default(char[],char,int,int,int,java.lang.Object) -> binarySearch$default
    462:462:boolean contentDeepEqualsInline(java.lang.Object[],java.lang.Object[]) -> contentDeepEqualsInline
    481:484:boolean contentDeepEqualsNullable(java.lang.Object[],java.lang.Object[]) -> contentDeepEqualsNullable
    498:498:int contentDeepHashCodeInline(java.lang.Object[]) -> contentDeepHashCodeInline
    511:514:int contentDeepHashCodeNullable(java.lang.Object[]) -> contentDeepHashCodeNullable
    531:531:java.lang.String contentDeepToStringInline(java.lang.Object[]) -> contentDeepToStringInline
    547:550:java.lang.String contentDeepToStringNullable(java.lang.Object[]) -> contentDeepToStringNullable
    563:563:boolean contentEquals(java.lang.Object[],java.lang.Object[]) -> contentEquals
    576:576:boolean contentEquals(byte[],byte[]) -> contentEquals
    589:589:boolean contentEquals(short[],short[]) -> contentEquals
    602:602:boolean contentEquals(int[],int[]) -> contentEquals
    615:615:boolean contentEquals(long[],long[]) -> contentEquals
    628:628:boolean contentEquals(float[],float[]) -> contentEquals
    641:641:boolean contentEquals(double[],double[]) -> contentEquals
    654:654:boolean contentEquals(boolean[],boolean[]) -> contentEquals
    667:667:boolean contentEquals(char[],char[]) -> contentEquals
    676:676:int contentHashCode(java.lang.Object[]) -> contentHashCode
    685:685:int contentHashCode(byte[]) -> contentHashCode
    694:694:int contentHashCode(short[]) -> contentHashCode
    703:703:int contentHashCode(int[]) -> contentHashCode
    712:712:int contentHashCode(long[]) -> contentHashCode
    721:721:int contentHashCode(float[]) -> contentHashCode
    730:730:int contentHashCode(double[]) -> contentHashCode
    739:739:int contentHashCode(boolean[]) -> contentHashCode
    748:748:int contentHashCode(char[]) -> contentHashCode
    759:759:java.lang.String contentToString(java.lang.Object[]) -> contentToString
    770:770:java.lang.String contentToString(byte[]) -> contentToString
    781:781:java.lang.String contentToString(short[]) -> contentToString
    792:792:java.lang.String contentToString(int[]) -> contentToString
    803:803:java.lang.String contentToString(long[]) -> contentToString
    814:814:java.lang.String contentToString(float[]) -> contentToString
    825:825:java.lang.String contentToString(double[]) -> contentToString
    836:836:java.lang.String contentToString(boolean[]) -> contentToString
    847:847:java.lang.String contentToString(char[]) -> contentToString
    869:869:java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int) -> copyInto
    892:892:byte[] copyInto(byte[],byte[],int,int,int) -> copyInto
    915:915:short[] copyInto(short[],short[],int,int,int) -> copyInto
    938:938:int[] copyInto(int[],int[],int,int,int) -> copyInto
    961:961:long[] copyInto(long[],long[],int,int,int) -> copyInto
    984:984:float[] copyInto(float[],float[],int,int,int) -> copyInto
    1007:1007:double[] copyInto(double[],double[],int,int,int) -> copyInto
    1030:1030:boolean[] copyInto(boolean[],boolean[],int,int,int) -> copyInto
    1053:1053:char[] copyInto(char[],char[],int,int,int) -> copyInto
    868:868:java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object) -> copyInto$default
    891:891:byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object) -> copyInto$default
    914:914:short[] copyInto$default(short[],short[],int,int,int,int,java.lang.Object) -> copyInto$default
    937:937:int[] copyInto$default(int[],int[],int,int,int,int,java.lang.Object) -> copyInto$default
    960:960:long[] copyInto$default(long[],long[],int,int,int,int,java.lang.Object) -> copyInto$default
    983:983:float[] copyInto$default(float[],float[],int,int,int,int,java.lang.Object) -> copyInto$default
    1006:1006:double[] copyInto$default(double[],double[],int,int,int,int,java.lang.Object) -> copyInto$default
    1029:1029:boolean[] copyInto$default(boolean[],boolean[],int,int,int,int,java.lang.Object) -> copyInto$default
    1052:1052:char[] copyInto$default(char[],char[],int,int,int,int,java.lang.Object) -> copyInto$default
    1064:1064:java.lang.Object[] copyOf(java.lang.Object[]) -> copyOf
    1074:1074:byte[] copyOf(byte[]) -> copyOf
    1084:1084:short[] copyOf(short[]) -> copyOf
    1094:1094:int[] copyOf(int[]) -> copyOf
    1104:1104:long[] copyOf(long[]) -> copyOf
    1114:1114:float[] copyOf(float[]) -> copyOf
    1124:1124:double[] copyOf(double[]) -> copyOf
    1134:1134:boolean[] copyOf(boolean[]) -> copyOf
    1144:1144:char[] copyOf(char[]) -> copyOf
    1158:1158:byte[] copyOf(byte[],int) -> copyOf
    1172:1172:short[] copyOf(short[],int) -> copyOf
    1186:1186:int[] copyOf(int[],int) -> copyOf
    1200:1200:long[] copyOf(long[],int) -> copyOf
    1214:1214:float[] copyOf(float[],int) -> copyOf
    1228:1228:double[] copyOf(double[],int) -> copyOf
    1242:1242:boolean[] copyOf(boolean[],int) -> copyOf
    1256:1256:char[] copyOf(char[],int) -> copyOf
    1270:1270:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    1457:1458:java.lang.Object[] copyOfRange(java.lang.Object[],int,int) -> copyOfRange
    1465:1466:byte[] copyOfRange(byte[],int,int) -> copyOfRange
    1473:1474:short[] copyOfRange(short[],int,int) -> copyOfRange
    1481:1482:int[] copyOfRange(int[],int,int) -> copyOfRange
    1489:1490:long[] copyOfRange(long[],int,int) -> copyOfRange
    1497:1498:float[] copyOfRange(float[],int,int) -> copyOfRange
    1505:1506:double[] copyOfRange(double[],int,int) -> copyOfRange
    1513:1514:boolean[] copyOfRange(boolean[],int,int) -> copyOfRange
    1521:1522:char[] copyOfRange(char[],int,int) -> copyOfRange
    1285:1289:java.lang.Object[] copyOfRangeInline(java.lang.Object[],int,int) -> copyOfRangeInline
    1305:1309:byte[] copyOfRangeInline(byte[],int,int) -> copyOfRangeInline
    1325:1329:short[] copyOfRangeInline(short[],int,int) -> copyOfRangeInline
    1345:1349:int[] copyOfRangeInline(int[],int,int) -> copyOfRangeInline
    1365:1369:long[] copyOfRangeInline(long[],int,int) -> copyOfRangeInline
    1385:1389:float[] copyOfRangeInline(float[],int,int) -> copyOfRangeInline
    1405:1409:double[] copyOfRangeInline(double[],int,int) -> copyOfRangeInline
    1425:1429:boolean[] copyOfRangeInline(boolean[],int,int) -> copyOfRangeInline
    1445:1449:char[] copyOfRangeInline(char[],int,int) -> copyOfRangeInline
    26:26:java.lang.Object elementAt(java.lang.Object[],int) -> elementAt
    36:36:byte elementAt(byte[],int) -> elementAt
    46:46:short elementAt(short[],int) -> elementAt
    56:56:int elementAt(int[],int) -> elementAt
    66:66:long elementAt(long[],int) -> elementAt
    76:76:float elementAt(float[],int) -> elementAt
    86:86:double elementAt(double[],int) -> elementAt
    96:96:boolean elementAt(boolean[],int) -> elementAt
    106:106:char elementAt(char[],int) -> elementAt
    1536:1536:void fill(java.lang.Object[],java.lang.Object,int,int) -> fill
    1550:1550:void fill(byte[],byte,int,int) -> fill
    1564:1564:void fill(short[],short,int,int) -> fill
    1578:1578:void fill(int[],int,int,int) -> fill
    1592:1592:void fill(long[],long,int,int) -> fill
    1606:1606:void fill(float[],float,int,int) -> fill
    1620:1620:void fill(double[],double,int,int) -> fill
    1634:1634:void fill(boolean[],boolean,int,int) -> fill
    1648:1648:void fill(char[],char,int,int) -> fill
    1535:1535:void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object) -> fill$default
    1549:1549:void fill$default(byte[],byte,int,int,int,java.lang.Object) -> fill$default
    1563:1563:void fill$default(short[],short,int,int,int,java.lang.Object) -> fill$default
    1577:1577:void fill$default(int[],int,int,int,int,java.lang.Object) -> fill$default
    1591:1591:void fill$default(long[],long,int,int,int,java.lang.Object) -> fill$default
    1605:1605:void fill$default(float[],float,int,int,int,java.lang.Object) -> fill$default
    1619:1619:void fill$default(double[],double,int,int,int,java.lang.Object) -> fill$default
    1633:1633:void fill$default(boolean[],boolean,int,int,int,java.lang.Object) -> fill$default
    1647:1647:void fill$default(char[],char,int,int,int,java.lang.Object) -> fill$default
    115:115:java.util.List filterIsInstance(java.lang.Object[],java.lang.Class) -> filterIsInstance
    125:125:java.util.Collection filterIsInstanceTo(java.lang.Object[],java.util.Collection,java.lang.Class) -> filterIsInstanceTo
    2363:2363:java.lang.Double max(java.lang.Double[]) -> max
    2371:2371:java.lang.Float max(java.lang.Float[]) -> max
    2378:2378:java.lang.Comparable max(java.lang.Comparable[]) -> max
    2385:2385:java.lang.Byte max(byte[]) -> max
    2392:2392:java.lang.Short max(short[]) -> max
    2399:2399:java.lang.Integer max(int[]) -> max
    2406:2406:java.lang.Long max(long[]) -> max
    2413:2413:java.lang.Float max(float[]) -> max
    2420:2420:java.lang.Double max(double[]) -> max
    2427:2427:java.lang.Character max(char[]) -> max
    3043:3051:java.lang.Object maxBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> maxBy
    3057:3070:java.lang.Byte maxBy(byte[],kotlin.jvm.functions.Function1) -> maxBy
    3071:3084:java.lang.Short maxBy(short[],kotlin.jvm.functions.Function1) -> maxBy
    3085:3098:java.lang.Integer maxBy(int[],kotlin.jvm.functions.Function1) -> maxBy
    3099:3112:java.lang.Long maxBy(long[],kotlin.jvm.functions.Function1) -> maxBy
    3113:3126:java.lang.Float maxBy(float[],kotlin.jvm.functions.Function1) -> maxBy
    3127:3140:java.lang.Double maxBy(double[],kotlin.jvm.functions.Function1) -> maxBy
    3141:3154:java.lang.Boolean maxBy(boolean[],kotlin.jvm.functions.Function1) -> maxBy
    3155:3168:java.lang.Character maxBy(char[],kotlin.jvm.functions.Function1) -> maxBy
    2497:2497:java.lang.Object maxWith(java.lang.Object[],java.util.Comparator) -> maxWith
    2504:2504:java.lang.Byte maxWith(byte[],java.util.Comparator) -> maxWith
    2511:2511:java.lang.Short maxWith(short[],java.util.Comparator) -> maxWith
    2518:2518:java.lang.Integer maxWith(int[],java.util.Comparator) -> maxWith
    2525:2525:java.lang.Long maxWith(long[],java.util.Comparator) -> maxWith
    2532:2532:java.lang.Float maxWith(float[],java.util.Comparator) -> maxWith
    2539:2539:java.lang.Double maxWith(double[],java.util.Comparator) -> maxWith
    2546:2546:java.lang.Boolean maxWith(boolean[],java.util.Comparator) -> maxWith
    2553:2553:java.lang.Character maxWith(char[],java.util.Comparator) -> maxWith
    2561:2561:java.lang.Double min(java.lang.Double[]) -> min
    2569:2569:java.lang.Float min(java.lang.Float[]) -> min
    2576:2576:java.lang.Comparable min(java.lang.Comparable[]) -> min
    2583:2583:java.lang.Byte min(byte[]) -> min
    2590:2590:java.lang.Short min(short[]) -> min
    2597:2597:java.lang.Integer min(int[]) -> min
    2604:2604:java.lang.Long min(long[]) -> min
    2611:2611:java.lang.Float min(float[]) -> min
    2618:2618:java.lang.Double min(double[]) -> min
    2625:2625:java.lang.Character min(char[]) -> min
    3169:3177:java.lang.Object minBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> minBy
    3183:3196:java.lang.Byte minBy(byte[],kotlin.jvm.functions.Function1) -> minBy
    3197:3210:java.lang.Short minBy(short[],kotlin.jvm.functions.Function1) -> minBy
    3211:3224:java.lang.Integer minBy(int[],kotlin.jvm.functions.Function1) -> minBy
    3225:3238:java.lang.Long minBy(long[],kotlin.jvm.functions.Function1) -> minBy
    3239:3252:java.lang.Float minBy(float[],kotlin.jvm.functions.Function1) -> minBy
    3253:3266:java.lang.Double minBy(double[],kotlin.jvm.functions.Function1) -> minBy
    3267:3280:java.lang.Boolean minBy(boolean[],kotlin.jvm.functions.Function1) -> minBy
    3281:3294:java.lang.Character minBy(char[],kotlin.jvm.functions.Function1) -> minBy
    2695:2695:java.lang.Object minWith(java.lang.Object[],java.util.Comparator) -> minWith
    2702:2702:java.lang.Byte minWith(byte[],java.util.Comparator) -> minWith
    2709:2709:java.lang.Short minWith(short[],java.util.Comparator) -> minWith
    2716:2716:java.lang.Integer minWith(int[],java.util.Comparator) -> minWith
    2723:2723:java.lang.Long minWith(long[],java.util.Comparator) -> minWith
    2730:2730:java.lang.Float minWith(float[],java.util.Comparator) -> minWith
    2737:2737:java.lang.Double minWith(double[],java.util.Comparator) -> minWith
    2744:2744:java.lang.Boolean minWith(boolean[],java.util.Comparator) -> minWith
    2751:2751:java.lang.Character minWith(char[],java.util.Comparator) -> minWith
    1655:1658:java.lang.Object[] plus(java.lang.Object[],java.lang.Object) -> plus
    1665:1668:byte[] plus(byte[],byte) -> plus
    1675:1678:short[] plus(short[],short) -> plus
    1685:1688:int[] plus(int[],int) -> plus
    1695:1698:long[] plus(long[],long) -> plus
    1705:1708:float[] plus(float[],float) -> plus
    1715:1718:double[] plus(double[],double) -> plus
    1725:1728:boolean[] plus(boolean[],boolean) -> plus
    1735:1738:char[] plus(char[],char) -> plus
    1745:1748:java.lang.Object[] plus(java.lang.Object[],java.util.Collection) -> plus
    1755:1758:byte[] plus(byte[],java.util.Collection) -> plus
    1765:1768:short[] plus(short[],java.util.Collection) -> plus
    1775:1778:int[] plus(int[],java.util.Collection) -> plus
    1785:1788:long[] plus(long[],java.util.Collection) -> plus
    1795:1798:float[] plus(float[],java.util.Collection) -> plus
    1805:1808:double[] plus(double[],java.util.Collection) -> plus
    1815:1818:boolean[] plus(boolean[],java.util.Collection) -> plus
    1825:1828:char[] plus(char[],java.util.Collection) -> plus
    1835:1839:java.lang.Object[] plus(java.lang.Object[],java.lang.Object[]) -> plus
    1846:1850:byte[] plus(byte[],byte[]) -> plus
    1857:1861:short[] plus(short[],short[]) -> plus
    1868:1872:int[] plus(int[],int[]) -> plus
    1879:1883:long[] plus(long[],long[]) -> plus
    1890:1894:float[] plus(float[],float[]) -> plus
    1901:1905:double[] plus(double[],double[]) -> plus
    1912:1916:boolean[] plus(boolean[],boolean[]) -> plus
    1923:1927:char[] plus(char[],char[]) -> plus
    1935:1935:java.lang.Object[] plusElement(java.lang.Object[],java.lang.Object) -> plusElement
    1944:1944:void sort(int[]) -> sort
    1953:1953:void sort(long[]) -> sort
    1962:1962:void sort(byte[]) -> sort
    1971:1971:void sort(short[]) -> sort
    1980:1980:void sort(double[]) -> sort
    1989:1989:void sort(float[]) -> sort
    1998:1998:void sort(char[]) -> sort
    2011:2011:void sort(java.lang.Comparable[]) -> sort
    2022:2022:void sort(java.lang.Object[]) -> sort
    2041:2041:void sort(java.lang.Comparable[],int,int) -> sort
    2057:2057:void sort(byte[],int,int) -> sort
    2073:2073:void sort(short[],int,int) -> sort
    2089:2089:void sort(int[],int,int) -> sort
    2105:2105:void sort(long[],int,int) -> sort
    2121:2121:void sort(float[],int,int) -> sort
    2137:2137:void sort(double[],int,int) -> sort
    2153:2153:void sort(char[],int,int) -> sort
    2170:2170:void sort(java.lang.Object[],int,int) -> sort
    2040:2040:void sort$default(java.lang.Comparable[],int,int,int,java.lang.Object) -> sort$default
    2056:2056:void sort$default(byte[],int,int,int,java.lang.Object) -> sort$default
    2072:2072:void sort$default(short[],int,int,int,java.lang.Object) -> sort$default
    2088:2088:void sort$default(int[],int,int,int,java.lang.Object) -> sort$default
    2104:2104:void sort$default(long[],int,int,int,java.lang.Object) -> sort$default
    2120:2120:void sort$default(float[],int,int,int,java.lang.Object) -> sort$default
    2136:2136:void sort$default(double[],int,int,int,java.lang.Object) -> sort$default
    2152:2152:void sort$default(char[],int,int,int,java.lang.Object) -> sort$default
    2169:2169:void sort$default(java.lang.Object[],int,int,int,java.lang.Object) -> sort$default
    2179:2179:void sortWith(java.lang.Object[],java.util.Comparator) -> sortWith
    2195:2195:void sortWith(java.lang.Object[],java.util.Comparator,int,int) -> sortWith
    2194:2194:void sortWith$default(java.lang.Object[],java.util.Comparator,int,int,int,java.lang.Object) -> sortWith$default
    2763:2765:java.math.BigDecimal sumOfBigDecimal(java.lang.Object[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    2779:2781:java.math.BigDecimal sumOfBigDecimal(byte[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    2795:2797:java.math.BigDecimal sumOfBigDecimal(short[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    2811:2813:java.math.BigDecimal sumOfBigDecimal(int[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    2827:2829:java.math.BigDecimal sumOfBigDecimal(long[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    2843:2845:java.math.BigDecimal sumOfBigDecimal(float[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    2859:2861:java.math.BigDecimal sumOfBigDecimal(double[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    2875:2877:java.math.BigDecimal sumOfBigDecimal(boolean[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    2891:2893:java.math.BigDecimal sumOfBigDecimal(char[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    2907:2909:java.math.BigInteger sumOfBigInteger(java.lang.Object[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    2923:2925:java.math.BigInteger sumOfBigInteger(byte[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    2939:2941:java.math.BigInteger sumOfBigInteger(short[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    2955:2957:java.math.BigInteger sumOfBigInteger(int[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    2971:2973:java.math.BigInteger sumOfBigInteger(long[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    2987:2989:java.math.BigInteger sumOfBigInteger(float[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    3003:3005:java.math.BigInteger sumOfBigInteger(double[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    3019:3021:java.math.BigInteger sumOfBigInteger(boolean[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    3035:3037:java.math.BigInteger sumOfBigInteger(char[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    2290:2290:java.util.SortedSet toSortedSet(java.lang.Comparable[]) -> toSortedSet
    2297:2297:java.util.SortedSet toSortedSet(byte[]) -> toSortedSet
    2304:2304:java.util.SortedSet toSortedSet(short[]) -> toSortedSet
    2311:2311:java.util.SortedSet toSortedSet(int[]) -> toSortedSet
    2318:2318:java.util.SortedSet toSortedSet(long[]) -> toSortedSet
    2325:2325:java.util.SortedSet toSortedSet(float[]) -> toSortedSet
    2332:2332:java.util.SortedSet toSortedSet(double[]) -> toSortedSet
    2339:2339:java.util.SortedSet toSortedSet(boolean[]) -> toSortedSet
    2346:2346:java.util.SortedSet toSortedSet(char[]) -> toSortedSet
    2355:2355:java.util.SortedSet toSortedSet(java.lang.Object[],java.util.Comparator) -> toSortedSet
    2202:2204:java.lang.Byte[] toTypedArray(byte[]) -> toTypedArray
    2213:2215:java.lang.Short[] toTypedArray(short[]) -> toTypedArray
    2224:2226:java.lang.Integer[] toTypedArray(int[]) -> toTypedArray
    2235:2237:java.lang.Long[] toTypedArray(long[]) -> toTypedArray
    2246:2248:java.lang.Float[] toTypedArray(float[]) -> toTypedArray
    2257:2259:java.lang.Double[] toTypedArray(double[]) -> toTypedArray
    2268:2270:java.lang.Boolean[] toTypedArray(boolean[]) -> toTypedArray
    2279:2281:java.lang.Character[] toTypedArray(char[]) -> toTypedArray
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$1:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    140:140:void <init>(byte[]) -> <init>
    140:140:boolean contains(java.lang.Object) -> contains
    143:143:boolean contains(byte) -> contains
    140:140:java.lang.Object get(int) -> get
    144:144:java.lang.Byte get(int) -> get
    141:141:int getSize() -> getSize
    140:140:int indexOf(java.lang.Object) -> indexOf
    145:145:int indexOf(byte) -> indexOf
    142:142:boolean isEmpty() -> isEmpty
    140:140:int lastIndexOf(java.lang.Object) -> lastIndexOf
    146:146:int lastIndexOf(byte) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$2:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    154:154:void <init>(short[]) -> <init>
    154:154:boolean contains(java.lang.Object) -> contains
    157:157:boolean contains(short) -> contains
    154:154:java.lang.Object get(int) -> get
    158:158:java.lang.Short get(int) -> get
    155:155:int getSize() -> getSize
    154:154:int indexOf(java.lang.Object) -> indexOf
    159:159:int indexOf(short) -> indexOf
    156:156:boolean isEmpty() -> isEmpty
    154:154:int lastIndexOf(java.lang.Object) -> lastIndexOf
    160:160:int lastIndexOf(short) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$3:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    168:168:void <init>(int[]) -> <init>
    168:168:boolean contains(java.lang.Object) -> contains
    171:171:boolean contains(int) -> contains
    168:168:java.lang.Object get(int) -> get
    172:172:java.lang.Integer get(int) -> get
    169:169:int getSize() -> getSize
    168:168:int indexOf(java.lang.Object) -> indexOf
    173:173:int indexOf(int) -> indexOf
    170:170:boolean isEmpty() -> isEmpty
    168:168:int lastIndexOf(java.lang.Object) -> lastIndexOf
    174:174:int lastIndexOf(int) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$4:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    182:182:void <init>(long[]) -> <init>
    182:182:boolean contains(java.lang.Object) -> contains
    185:185:boolean contains(long) -> contains
    182:182:java.lang.Object get(int) -> get
    186:186:java.lang.Long get(int) -> get
    183:183:int getSize() -> getSize
    182:182:int indexOf(java.lang.Object) -> indexOf
    187:187:int indexOf(long) -> indexOf
    184:184:boolean isEmpty() -> isEmpty
    182:182:int lastIndexOf(java.lang.Object) -> lastIndexOf
    188:188:int lastIndexOf(long) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$5:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    196:196:void <init>(float[]) -> <init>
    196:196:boolean contains(java.lang.Object) -> contains
    199:3043:boolean contains(float) -> contains
    196:196:java.lang.Object get(int) -> get
    200:200:java.lang.Float get(int) -> get
    197:197:int getSize() -> getSize
    196:196:int indexOf(java.lang.Object) -> indexOf
    201:3046:int indexOf(float) -> indexOf
    198:198:boolean isEmpty() -> isEmpty
    196:196:int lastIndexOf(java.lang.Object) -> lastIndexOf
    202:3052:int lastIndexOf(float) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$6:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    210:210:void <init>(double[]) -> <init>
    210:210:boolean contains(java.lang.Object) -> contains
    213:3043:boolean contains(double) -> contains
    210:210:java.lang.Object get(int) -> get
    214:214:java.lang.Double get(int) -> get
    211:211:int getSize() -> getSize
    210:210:int indexOf(java.lang.Object) -> indexOf
    215:3046:int indexOf(double) -> indexOf
    212:212:boolean isEmpty() -> isEmpty
    210:210:int lastIndexOf(java.lang.Object) -> lastIndexOf
    216:3052:int lastIndexOf(double) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$7:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    224:224:void <init>(boolean[]) -> <init>
    224:224:boolean contains(java.lang.Object) -> contains
    227:227:boolean contains(boolean) -> contains
    224:224:java.lang.Object get(int) -> get
    228:228:java.lang.Boolean get(int) -> get
    225:225:int getSize() -> getSize
    224:224:int indexOf(java.lang.Object) -> indexOf
    229:229:int indexOf(boolean) -> indexOf
    226:226:boolean isEmpty() -> isEmpty
    224:224:int lastIndexOf(java.lang.Object) -> lastIndexOf
    230:230:int lastIndexOf(boolean) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8 -> kotlin.collections.ArraysKt___ArraysJvmKt$asList$8:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    238:238:void <init>(char[]) -> <init>
    238:238:boolean contains(java.lang.Object) -> contains
    241:241:boolean contains(char) -> contains
    238:238:java.lang.Object get(int) -> get
    242:242:java.lang.Character get(int) -> get
    239:239:int getSize() -> getSize
    238:238:int indexOf(java.lang.Object) -> indexOf
    243:243:int indexOf(char) -> indexOf
    240:240:boolean isEmpty() -> isEmpty
    238:238:int lastIndexOf(java.lang.Object) -> lastIndexOf
    244:244:int lastIndexOf(char) -> lastIndexOf
kotlin.collections.ArraysKt___ArraysKt -> kotlin.collections.ArraysKt___ArraysKt:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    0:0:void <init>() -> <init>
    12271:12271:boolean all(java.lang.Object[],kotlin.jvm.functions.Function1) -> all
    12285:12285:boolean all(byte[],kotlin.jvm.functions.Function1) -> all
    12299:12299:boolean all(short[],kotlin.jvm.functions.Function1) -> all
    12313:12313:boolean all(int[],kotlin.jvm.functions.Function1) -> all
    12327:12327:boolean all(long[],kotlin.jvm.functions.Function1) -> all
    12341:12341:boolean all(float[],kotlin.jvm.functions.Function1) -> all
    12355:12355:boolean all(double[],kotlin.jvm.functions.Function1) -> all
    12369:12369:boolean all(boolean[],kotlin.jvm.functions.Function1) -> all
    12383:12383:boolean all(char[],kotlin.jvm.functions.Function1) -> all
    12393:12393:boolean any(java.lang.Object[]) -> any
    12402:12402:boolean any(byte[]) -> any
    12411:12411:boolean any(short[]) -> any
    12420:12420:boolean any(int[]) -> any
    12429:12429:boolean any(long[]) -> any
    12438:12438:boolean any(float[]) -> any
    12447:12447:boolean any(double[]) -> any
    12456:12456:boolean any(boolean[]) -> any
    12465:12465:boolean any(char[]) -> any
    12474:12474:boolean any(java.lang.Object[],kotlin.jvm.functions.Function1) -> any
    12484:12484:boolean any(byte[],kotlin.jvm.functions.Function1) -> any
    12494:12494:boolean any(short[],kotlin.jvm.functions.Function1) -> any
    12504:12504:boolean any(int[],kotlin.jvm.functions.Function1) -> any
    12514:12514:boolean any(long[],kotlin.jvm.functions.Function1) -> any
    12524:12524:boolean any(float[],kotlin.jvm.functions.Function1) -> any
    12534:12534:boolean any(double[],kotlin.jvm.functions.Function1) -> any
    12544:12544:boolean any(boolean[],kotlin.jvm.functions.Function1) -> any
    12554:12554:boolean any(char[],kotlin.jvm.functions.Function1) -> any
    23965:23966:java.lang.Iterable asIterable(java.lang.Object[]) -> asIterable
    23973:23974:java.lang.Iterable asIterable(byte[]) -> asIterable
    23981:23982:java.lang.Iterable asIterable(short[]) -> asIterable
    23989:23990:java.lang.Iterable asIterable(int[]) -> asIterable
    23997:23998:java.lang.Iterable asIterable(long[]) -> asIterable
    24005:24006:java.lang.Iterable asIterable(float[]) -> asIterable
    24013:24014:java.lang.Iterable asIterable(double[]) -> asIterable
    24021:24022:java.lang.Iterable asIterable(boolean[]) -> asIterable
    24029:24030:java.lang.Iterable asIterable(char[]) -> asIterable
    24039:24040:kotlin.sequences.Sequence asSequence(java.lang.Object[]) -> asSequence
    24049:24050:kotlin.sequences.Sequence asSequence(byte[]) -> asSequence
    24059:24060:kotlin.sequences.Sequence asSequence(short[]) -> asSequence
    24069:24070:kotlin.sequences.Sequence asSequence(int[]) -> asSequence
    24079:24080:kotlin.sequences.Sequence asSequence(long[]) -> asSequence
    24089:24090:kotlin.sequences.Sequence asSequence(float[]) -> asSequence
    24099:24100:kotlin.sequences.Sequence asSequence(double[]) -> asSequence
    24109:24110:kotlin.sequences.Sequence asSequence(boolean[]) -> asSequence
    24119:24120:kotlin.sequences.Sequence asSequence(char[]) -> asSequence
    8406:24621:java.util.Map associate(java.lang.Object[],kotlin.jvm.functions.Function1) -> associate
    8421:24625:java.util.Map associate(byte[],kotlin.jvm.functions.Function1) -> associate
    8436:24629:java.util.Map associate(short[],kotlin.jvm.functions.Function1) -> associate
    8451:24633:java.util.Map associate(int[],kotlin.jvm.functions.Function1) -> associate
    8466:24637:java.util.Map associate(long[],kotlin.jvm.functions.Function1) -> associate
    8481:24641:java.util.Map associate(float[],kotlin.jvm.functions.Function1) -> associate
    8496:24645:java.util.Map associate(double[],kotlin.jvm.functions.Function1) -> associate
    8511:24649:java.util.Map associate(boolean[],kotlin.jvm.functions.Function1) -> associate
    8526:24653:java.util.Map associate(char[],kotlin.jvm.functions.Function1) -> associate
    8541:24657:java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> associateBy
    8556:24661:java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1) -> associateBy
    8571:24665:java.util.Map associateBy(short[],kotlin.jvm.functions.Function1) -> associateBy
    8586:24669:java.util.Map associateBy(int[],kotlin.jvm.functions.Function1) -> associateBy
    8601:24673:java.util.Map associateBy(long[],kotlin.jvm.functions.Function1) -> associateBy
    8616:24677:java.util.Map associateBy(float[],kotlin.jvm.functions.Function1) -> associateBy
    8631:24681:java.util.Map associateBy(double[],kotlin.jvm.functions.Function1) -> associateBy
    8646:24685:java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1) -> associateBy
    8661:24689:java.util.Map associateBy(char[],kotlin.jvm.functions.Function1) -> associateBy
    8675:24693:java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    8689:24697:java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    8703:24701:java.util.Map associateBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    8717:24705:java.util.Map associateBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    8731:24709:java.util.Map associateBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    8745:24713:java.util.Map associateBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    8759:24717:java.util.Map associateBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    8773:24721:java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    8787:24725:java.util.Map associateBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    8801:8802:java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    8817:8818:java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    8833:8834:java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    8849:8850:java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    8865:8866:java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    8881:8882:java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    8897:8898:java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    8913:8914:java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    8929:8930:java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    8945:8946:java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    8961:8962:java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    8977:8978:java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    8993:8994:java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    9009:9010:java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    9025:9026:java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    9041:9042:java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    9057:9058:java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    9073:9074:java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    9088:9089:java.util.Map associateTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    9103:9104:java.util.Map associateTo(byte[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    9118:9119:java.util.Map associateTo(short[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    9133:9134:java.util.Map associateTo(int[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    9148:9149:java.util.Map associateTo(long[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    9163:9164:java.util.Map associateTo(float[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    9178:9179:java.util.Map associateTo(double[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    9193:9194:java.util.Map associateTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    9208:9209:java.util.Map associateTo(char[],java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    9226:24729:java.util.Map associateWith(java.lang.Object[],kotlin.jvm.functions.Function1) -> associateWith
    9243:9244:java.util.Map associateWith(byte[],kotlin.jvm.functions.Function1) -> associateWith
    9260:9261:java.util.Map associateWith(short[],kotlin.jvm.functions.Function1) -> associateWith
    9277:9278:java.util.Map associateWith(int[],kotlin.jvm.functions.Function1) -> associateWith
    9294:9295:java.util.Map associateWith(long[],kotlin.jvm.functions.Function1) -> associateWith
    9311:9312:java.util.Map associateWith(float[],kotlin.jvm.functions.Function1) -> associateWith
    9328:9329:java.util.Map associateWith(double[],kotlin.jvm.functions.Function1) -> associateWith
    9345:9346:java.util.Map associateWith(boolean[],kotlin.jvm.functions.Function1) -> associateWith
    9362:9363:java.util.Map associateWith(char[],kotlin.jvm.functions.Function1) -> associateWith
    9376:9377:java.util.Map associateWithTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    9393:9394:java.util.Map associateWithTo(byte[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    9410:9411:java.util.Map associateWithTo(short[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    9427:9428:java.util.Map associateWithTo(int[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    9444:9445:java.util.Map associateWithTo(long[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    9461:9462:java.util.Map associateWithTo(float[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    9478:9479:java.util.Map associateWithTo(double[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    9495:9496:java.util.Map associateWithTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    9512:9513:java.util.Map associateWithTo(char[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    24213:24213:double average(byte[]) -> average
    24226:24226:double average(short[]) -> average
    24239:24239:double average(int[]) -> average
    24252:24252:double average(long[]) -> average
    24265:24265:double average(float[]) -> average
    24278:24278:double average(double[]) -> average
    24130:24130:double averageOfByte(java.lang.Byte[]) -> averageOfByte
    24200:24200:double averageOfDouble(java.lang.Double[]) -> averageOfDouble
    24186:24186:double averageOfFloat(java.lang.Float[]) -> averageOfFloat
    24158:24158:double averageOfInt(java.lang.Integer[]) -> averageOfInt
    24172:24172:double averageOfLong(java.lang.Long[]) -> averageOfLong
    24144:24144:double averageOfShort(java.lang.Short[]) -> averageOfShort
    28:28:java.lang.Object component1(java.lang.Object[]) -> component1
    39:39:byte component1(byte[]) -> component1
    50:50:short component1(short[]) -> component1
    61:61:int component1(int[]) -> component1
    72:72:long component1(long[]) -> component1
    83:83:float component1(float[]) -> component1
    94:94:double component1(double[]) -> component1
    105:105:boolean component1(boolean[]) -> component1
    116:116:char component1(char[]) -> component1
    127:127:java.lang.Object component2(java.lang.Object[]) -> component2
    138:138:byte component2(byte[]) -> component2
    149:149:short component2(short[]) -> component2
    160:160:int component2(int[]) -> component2
    171:171:long component2(long[]) -> component2
    182:182:float component2(float[]) -> component2
    193:193:double component2(double[]) -> component2
    204:204:boolean component2(boolean[]) -> component2
    215:215:char component2(char[]) -> component2
    226:226:java.lang.Object component3(java.lang.Object[]) -> component3
    237:237:byte component3(byte[]) -> component3
    248:248:short component3(short[]) -> component3
    259:259:int component3(int[]) -> component3
    270:270:long component3(long[]) -> component3
    281:281:float component3(float[]) -> component3
    292:292:double component3(double[]) -> component3
    303:303:boolean component3(boolean[]) -> component3
    314:314:char component3(char[]) -> component3
    325:325:java.lang.Object component4(java.lang.Object[]) -> component4
    336:336:byte component4(byte[]) -> component4
    347:347:short component4(short[]) -> component4
    358:358:int component4(int[]) -> component4
    369:369:long component4(long[]) -> component4
    380:380:float component4(float[]) -> component4
    391:391:double component4(double[]) -> component4
    402:402:boolean component4(boolean[]) -> component4
    413:413:char component4(char[]) -> component4
    424:424:java.lang.Object component5(java.lang.Object[]) -> component5
    435:435:byte component5(byte[]) -> component5
    446:446:short component5(short[]) -> component5
    457:457:int component5(int[]) -> component5
    468:468:long component5(long[]) -> component5
    479:479:float component5(float[]) -> component5
    490:490:double component5(double[]) -> component5
    501:501:boolean component5(boolean[]) -> component5
    512:512:char component5(char[]) -> component5
    519:519:boolean contains(java.lang.Object[],java.lang.Object) -> contains
    526:526:boolean contains(byte[],byte) -> contains
    533:533:boolean contains(short[],short) -> contains
    540:540:boolean contains(int[],int) -> contains
    547:547:boolean contains(long[],long) -> contains
    572:572:boolean contains(boolean[],boolean) -> contains
    579:579:boolean contains(char[],char) -> contains
    24424:24424:boolean contains(float[],float) -> contains
    24426:24426:boolean contains(double[],double) -> contains
    12563:12563:int count(java.lang.Object[]) -> count
    12571:12571:int count(byte[]) -> count
    12579:12579:int count(short[]) -> count
    12587:12587:int count(int[]) -> count
    12595:12595:int count(long[]) -> count
    12603:12603:int count(float[]) -> count
    12611:12611:int count(double[]) -> count
    12619:12619:int count(boolean[]) -> count
    12627:12627:int count(char[]) -> count
    12635:12635:int count(java.lang.Object[],kotlin.jvm.functions.Function1) -> count
    12644:12644:int count(byte[],kotlin.jvm.functions.Function1) -> count
    12653:12653:int count(short[],kotlin.jvm.functions.Function1) -> count
    12662:12662:int count(int[],kotlin.jvm.functions.Function1) -> count
    12671:12671:int count(long[],kotlin.jvm.functions.Function1) -> count
    12680:12680:int count(float[],kotlin.jvm.functions.Function1) -> count
    12689:12689:int count(double[],kotlin.jvm.functions.Function1) -> count
    12698:12698:int count(boolean[],kotlin.jvm.functions.Function1) -> count
    12707:12707:int count(char[],kotlin.jvm.functions.Function1) -> count
    11566:11566:java.util.List distinct(java.lang.Object[]) -> distinct
    11577:11577:java.util.List distinct(byte[]) -> distinct
    11588:11588:java.util.List distinct(short[]) -> distinct
    11599:11599:java.util.List distinct(int[]) -> distinct
    11610:11610:java.util.List distinct(long[]) -> distinct
    11621:11621:java.util.List distinct(float[]) -> distinct
    11632:11632:java.util.List distinct(double[]) -> distinct
    11643:11643:java.util.List distinct(boolean[]) -> distinct
    11654:11654:java.util.List distinct(char[]) -> distinct
    11667:11672:java.util.List distinctBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> distinctBy
    11686:11691:java.util.List distinctBy(byte[],kotlin.jvm.functions.Function1) -> distinctBy
    11705:11710:java.util.List distinctBy(short[],kotlin.jvm.functions.Function1) -> distinctBy
    11724:11729:java.util.List distinctBy(int[],kotlin.jvm.functions.Function1) -> distinctBy
    11743:11748:java.util.List distinctBy(long[],kotlin.jvm.functions.Function1) -> distinctBy
    11762:11767:java.util.List distinctBy(float[],kotlin.jvm.functions.Function1) -> distinctBy
    11781:11786:java.util.List distinctBy(double[],kotlin.jvm.functions.Function1) -> distinctBy
    11800:11805:java.util.List distinctBy(boolean[],kotlin.jvm.functions.Function1) -> distinctBy
    11819:11824:java.util.List distinctBy(char[],kotlin.jvm.functions.Function1) -> distinctBy
    3290:3291:java.util.List drop(java.lang.Object[],int) -> drop
    3302:3303:java.util.List drop(byte[],int) -> drop
    3314:3315:java.util.List drop(short[],int) -> drop
    3326:3327:java.util.List drop(int[],int) -> drop
    3338:3339:java.util.List drop(long[],int) -> drop
    3350:3351:java.util.List drop(float[],int) -> drop
    3362:3363:java.util.List drop(double[],int) -> drop
    3374:3375:java.util.List drop(boolean[],int) -> drop
    3386:3387:java.util.List drop(char[],int) -> drop
    3398:3399:java.util.List dropLast(java.lang.Object[],int) -> dropLast
    3410:3411:java.util.List dropLast(byte[],int) -> dropLast
    3422:3423:java.util.List dropLast(short[],int) -> dropLast
    3434:3435:java.util.List dropLast(int[],int) -> dropLast
    3446:3447:java.util.List dropLast(long[],int) -> dropLast
    3458:3459:java.util.List dropLast(float[],int) -> dropLast
    3470:3471:java.util.List dropLast(double[],int) -> dropLast
    3482:3483:java.util.List dropLast(boolean[],int) -> dropLast
    3494:3495:java.util.List dropLast(char[],int) -> dropLast
    3504:3509:java.util.List dropLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3518:3523:java.util.List dropLastWhile(byte[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3532:3537:java.util.List dropLastWhile(short[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3546:3551:java.util.List dropLastWhile(int[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3560:3565:java.util.List dropLastWhile(long[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3574:3579:java.util.List dropLastWhile(float[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3588:3593:java.util.List dropLastWhile(double[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3602:3607:java.util.List dropLastWhile(boolean[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3616:3621:java.util.List dropLastWhile(char[],kotlin.jvm.functions.Function1) -> dropLastWhile
    3631:3636:java.util.List dropWhile(java.lang.Object[],kotlin.jvm.functions.Function1) -> dropWhile
    3649:3654:java.util.List dropWhile(byte[],kotlin.jvm.functions.Function1) -> dropWhile
    3667:3672:java.util.List dropWhile(short[],kotlin.jvm.functions.Function1) -> dropWhile
    3685:3690:java.util.List dropWhile(int[],kotlin.jvm.functions.Function1) -> dropWhile
    3703:3708:java.util.List dropWhile(long[],kotlin.jvm.functions.Function1) -> dropWhile
    3721:3726:java.util.List dropWhile(float[],kotlin.jvm.functions.Function1) -> dropWhile
    3739:3744:java.util.List dropWhile(double[],kotlin.jvm.functions.Function1) -> dropWhile
    3757:3762:java.util.List dropWhile(boolean[],kotlin.jvm.functions.Function1) -> dropWhile
    3775:3780:java.util.List dropWhile(char[],kotlin.jvm.functions.Function1) -> dropWhile
    652:652:java.lang.Object elementAtOrElse(java.lang.Object[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    662:662:byte elementAtOrElse(byte[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    672:672:short elementAtOrElse(short[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    682:682:int elementAtOrElse(int[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    692:692:long elementAtOrElse(long[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    702:702:float elementAtOrElse(float[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    712:712:double elementAtOrElse(double[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    722:722:boolean elementAtOrElse(boolean[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    732:732:char elementAtOrElse(char[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    742:742:java.lang.Object elementAtOrNull(java.lang.Object[],int) -> elementAtOrNull
    752:752:java.lang.Byte elementAtOrNull(byte[],int) -> elementAtOrNull
    762:762:java.lang.Short elementAtOrNull(short[],int) -> elementAtOrNull
    772:772:java.lang.Integer elementAtOrNull(int[],int) -> elementAtOrNull
    782:782:java.lang.Long elementAtOrNull(long[],int) -> elementAtOrNull
    792:792:java.lang.Float elementAtOrNull(float[],int) -> elementAtOrNull
    802:802:java.lang.Double elementAtOrNull(double[],int) -> elementAtOrNull
    812:812:java.lang.Boolean elementAtOrNull(boolean[],int) -> elementAtOrNull
    822:822:java.lang.Character elementAtOrNull(char[],int) -> elementAtOrNull
    3792:24492:java.util.List filter(java.lang.Object[],kotlin.jvm.functions.Function1) -> filter
    3801:24494:java.util.List filter(byte[],kotlin.jvm.functions.Function1) -> filter
    3810:24496:java.util.List filter(short[],kotlin.jvm.functions.Function1) -> filter
    3819:24498:java.util.List filter(int[],kotlin.jvm.functions.Function1) -> filter
    3828:24500:java.util.List filter(long[],kotlin.jvm.functions.Function1) -> filter
    3837:24502:java.util.List filter(float[],kotlin.jvm.functions.Function1) -> filter
    3846:24504:java.util.List filter(double[],kotlin.jvm.functions.Function1) -> filter
    3855:24506:java.util.List filter(boolean[],kotlin.jvm.functions.Function1) -> filter
    3864:24508:java.util.List filter(char[],kotlin.jvm.functions.Function1) -> filter
    3875:24513:java.util.List filterIndexed(java.lang.Object[],kotlin.jvm.functions.Function2) -> filterIndexed
    3886:24520:java.util.List filterIndexed(byte[],kotlin.jvm.functions.Function2) -> filterIndexed
    3897:24527:java.util.List filterIndexed(short[],kotlin.jvm.functions.Function2) -> filterIndexed
    3908:24534:java.util.List filterIndexed(int[],kotlin.jvm.functions.Function2) -> filterIndexed
    3919:24541:java.util.List filterIndexed(long[],kotlin.jvm.functions.Function2) -> filterIndexed
    3930:24548:java.util.List filterIndexed(float[],kotlin.jvm.functions.Function2) -> filterIndexed
    3941:24555:java.util.List filterIndexed(double[],kotlin.jvm.functions.Function2) -> filterIndexed
    3952:24562:java.util.List filterIndexed(boolean[],kotlin.jvm.functions.Function2) -> filterIndexed
    3963:24569:java.util.List filterIndexed(char[],kotlin.jvm.functions.Function2) -> filterIndexed
    3975:24574:java.util.Collection filterIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    3989:24577:java.util.Collection filterIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    4003:24580:java.util.Collection filterIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    4017:24583:java.util.Collection filterIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    4031:24586:java.util.Collection filterIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    4045:24589:java.util.Collection filterIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    4059:24592:java.util.Collection filterIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    4073:24595:java.util.Collection filterIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    4087:24598:java.util.Collection filterIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    4098:24600:java.util.List filterIsInstance(java.lang.Object[]) -> filterIsInstance
    4107:4107:java.util.Collection filterIsInstanceTo(java.lang.Object[],java.util.Collection) -> filterIsInstanceTo
    4117:24602:java.util.List filterNot(java.lang.Object[],kotlin.jvm.functions.Function1) -> filterNot
    4126:24604:java.util.List filterNot(byte[],kotlin.jvm.functions.Function1) -> filterNot
    4135:24606:java.util.List filterNot(short[],kotlin.jvm.functions.Function1) -> filterNot
    4144:24608:java.util.List filterNot(int[],kotlin.jvm.functions.Function1) -> filterNot
    4153:24610:java.util.List filterNot(long[],kotlin.jvm.functions.Function1) -> filterNot
    4162:24612:java.util.List filterNot(float[],kotlin.jvm.functions.Function1) -> filterNot
    4171:24614:java.util.List filterNot(double[],kotlin.jvm.functions.Function1) -> filterNot
    4180:24616:java.util.List filterNot(boolean[],kotlin.jvm.functions.Function1) -> filterNot
    4189:24618:java.util.List filterNot(char[],kotlin.jvm.functions.Function1) -> filterNot
    4198:4198:java.util.List filterNotNull(java.lang.Object[]) -> filterNotNull
    4207:4207:java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection) -> filterNotNullTo
    4217:4217:java.util.Collection filterNotTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    4227:4227:java.util.Collection filterNotTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    4237:4237:java.util.Collection filterNotTo(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    4247:4247:java.util.Collection filterNotTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    4257:4257:java.util.Collection filterNotTo(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    4267:4267:java.util.Collection filterNotTo(float[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    4277:4277:java.util.Collection filterNotTo(double[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    4287:4287:java.util.Collection filterNotTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    4297:4297:java.util.Collection filterNotTo(char[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    4307:4307:java.util.Collection filterTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    4317:4317:java.util.Collection filterTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    4327:4327:java.util.Collection filterTo(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    4337:4337:java.util.Collection filterTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    4347:4347:java.util.Collection filterTo(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    4357:4357:java.util.Collection filterTo(float[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    4367:4367:java.util.Collection filterTo(double[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    4377:4377:java.util.Collection filterTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    4387:4387:java.util.Collection filterTo(char[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    24428:24428:java.lang.Object find(java.lang.Object[],kotlin.jvm.functions.Function1) -> find
    24430:24430:java.lang.Byte find(byte[],kotlin.jvm.functions.Function1) -> find
    24432:24432:java.lang.Short find(short[],kotlin.jvm.functions.Function1) -> find
    24434:24434:java.lang.Integer find(int[],kotlin.jvm.functions.Function1) -> find
    24436:24436:java.lang.Long find(long[],kotlin.jvm.functions.Function1) -> find
    24438:24438:java.lang.Float find(float[],kotlin.jvm.functions.Function1) -> find
    24440:24440:java.lang.Double find(double[],kotlin.jvm.functions.Function1) -> find
    24442:24442:java.lang.Boolean find(boolean[],kotlin.jvm.functions.Function1) -> find
    24444:24444:java.lang.Character find(char[],kotlin.jvm.functions.Function1) -> find
    24446:24448:java.lang.Object findLast(java.lang.Object[],kotlin.jvm.functions.Function1) -> findLast
    24451:24453:java.lang.Byte findLast(byte[],kotlin.jvm.functions.Function1) -> findLast
    24456:24458:java.lang.Short findLast(short[],kotlin.jvm.functions.Function1) -> findLast
    24461:24463:java.lang.Integer findLast(int[],kotlin.jvm.functions.Function1) -> findLast
    24466:24468:java.lang.Long findLast(long[],kotlin.jvm.functions.Function1) -> findLast
    24471:24473:java.lang.Float findLast(float[],kotlin.jvm.functions.Function1) -> findLast
    24476:24478:java.lang.Double findLast(double[],kotlin.jvm.functions.Function1) -> findLast
    24481:24483:java.lang.Boolean findLast(boolean[],kotlin.jvm.functions.Function1) -> findLast
    24486:24488:java.lang.Character findLast(char[],kotlin.jvm.functions.Function1) -> findLast
    1011:1013:java.lang.Object first(java.lang.Object[]) -> first
    1022:1024:byte first(byte[]) -> first
    1033:1035:short first(short[]) -> first
    1044:1046:int first(int[]) -> first
    1055:1057:long first(long[]) -> first
    1066:1068:float first(float[]) -> first
    1077:1079:double first(double[]) -> first
    1088:1090:boolean first(boolean[]) -> first
    1099:1101:char first(char[]) -> first
    1109:1110:java.lang.Object first(java.lang.Object[],kotlin.jvm.functions.Function1) -> first
    1118:1119:byte first(byte[],kotlin.jvm.functions.Function1) -> first
    1127:1128:short first(short[],kotlin.jvm.functions.Function1) -> first
    1136:1137:int first(int[],kotlin.jvm.functions.Function1) -> first
    1145:1146:long first(long[],kotlin.jvm.functions.Function1) -> first
    1154:1155:float first(float[],kotlin.jvm.functions.Function1) -> first
    1163:1164:double first(double[],kotlin.jvm.functions.Function1) -> first
    1172:1173:boolean first(boolean[],kotlin.jvm.functions.Function1) -> first
    1181:1182:char first(char[],kotlin.jvm.functions.Function1) -> first
    1194:1194:java.lang.Object firstNotNullOf(java.lang.Object[],kotlin.jvm.functions.Function1) -> firstNotNullOf
    1206:1207:java.lang.Object firstNotNullOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> firstNotNullOfOrNull
    1219:1219:java.lang.Object firstOrNull(java.lang.Object[]) -> firstOrNull
    1226:1226:java.lang.Byte firstOrNull(byte[]) -> firstOrNull
    1233:1233:java.lang.Short firstOrNull(short[]) -> firstOrNull
    1240:1240:java.lang.Integer firstOrNull(int[]) -> firstOrNull
    1247:1247:java.lang.Long firstOrNull(long[]) -> firstOrNull
    1254:1254:java.lang.Float firstOrNull(float[]) -> firstOrNull
    1261:1261:java.lang.Double firstOrNull(double[]) -> firstOrNull
    1268:1268:java.lang.Boolean firstOrNull(boolean[]) -> firstOrNull
    1275:1275:java.lang.Character firstOrNull(char[]) -> firstOrNull
    1282:1282:java.lang.Object firstOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> firstOrNull
    1290:1290:java.lang.Byte firstOrNull(byte[],kotlin.jvm.functions.Function1) -> firstOrNull
    1298:1298:java.lang.Short firstOrNull(short[],kotlin.jvm.functions.Function1) -> firstOrNull
    1306:1306:java.lang.Integer firstOrNull(int[],kotlin.jvm.functions.Function1) -> firstOrNull
    1314:1314:java.lang.Long firstOrNull(long[],kotlin.jvm.functions.Function1) -> firstOrNull
    1322:1322:java.lang.Float firstOrNull(float[],kotlin.jvm.functions.Function1) -> firstOrNull
    1330:1330:java.lang.Double firstOrNull(double[],kotlin.jvm.functions.Function1) -> firstOrNull
    1338:1338:java.lang.Boolean firstOrNull(boolean[],kotlin.jvm.functions.Function1) -> firstOrNull
    1346:1346:java.lang.Character firstOrNull(char[],kotlin.jvm.functions.Function1) -> firstOrNull
    9972:24734:java.util.List flatMap(java.lang.Object[],kotlin.jvm.functions.Function1) -> flatMap
    9981:24739:java.util.List flatMap(byte[],kotlin.jvm.functions.Function1) -> flatMap
    9990:24744:java.util.List flatMap(short[],kotlin.jvm.functions.Function1) -> flatMap
    9999:24749:java.util.List flatMap(int[],kotlin.jvm.functions.Function1) -> flatMap
    10008:24754:java.util.List flatMap(long[],kotlin.jvm.functions.Function1) -> flatMap
    10017:24759:java.util.List flatMap(float[],kotlin.jvm.functions.Function1) -> flatMap
    10026:24764:java.util.List flatMap(double[],kotlin.jvm.functions.Function1) -> flatMap
    10035:24769:java.util.List flatMap(boolean[],kotlin.jvm.functions.Function1) -> flatMap
    10044:24774:java.util.List flatMap(char[],kotlin.jvm.functions.Function1) -> flatMap
    10072:10072:java.util.List flatMapIndexedIterable(java.lang.Object[],kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    10087:10087:java.util.List flatMapIndexedIterable(byte[],kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    10102:10102:java.util.List flatMapIndexedIterable(short[],kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    10117:10117:java.util.List flatMapIndexedIterable(int[],kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    10132:10132:java.util.List flatMapIndexedIterable(long[],kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    10147:10147:java.util.List flatMapIndexedIterable(float[],kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    10162:10162:java.util.List flatMapIndexedIterable(double[],kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    10177:10177:java.util.List flatMapIndexedIterable(boolean[],kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    10192:10192:java.util.List flatMapIndexedIterable(char[],kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    10221:10223:java.util.Collection flatMapIndexedIterableTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    10239:10241:java.util.Collection flatMapIndexedIterableTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    10257:10259:java.util.Collection flatMapIndexedIterableTo(short[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    10275:10277:java.util.Collection flatMapIndexedIterableTo(int[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    10293:10295:java.util.Collection flatMapIndexedIterableTo(long[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    10311:10313:java.util.Collection flatMapIndexedIterableTo(float[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    10329:10331:java.util.Collection flatMapIndexedIterableTo(double[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    10347:10349:java.util.Collection flatMapIndexedIterableTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    10365:10367:java.util.Collection flatMapIndexedIterableTo(char[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    10207:10207:java.util.List flatMapIndexedSequence(java.lang.Object[],kotlin.jvm.functions.Function2) -> flatMapIndexedSequence
    10383:10385:java.util.Collection flatMapIndexedSequenceTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedSequenceTo
    10057:24779:java.util.List flatMapSequence(java.lang.Object[],kotlin.jvm.functions.Function1) -> flatMapSequence
    10497:10499:java.util.Collection flatMapSequenceTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapSequenceTo
    10394:10396:java.util.Collection flatMapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    10405:10407:java.util.Collection flatMapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    10416:10418:java.util.Collection flatMapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    10427:10429:java.util.Collection flatMapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    10438:10440:java.util.Collection flatMapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    10449:10451:java.util.Collection flatMapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    10460:10462:java.util.Collection flatMapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    10471:10473:java.util.Collection flatMapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    10482:10484:java.util.Collection flatMapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    12721:12721:java.lang.Object fold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    12735:12735:java.lang.Object fold(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    12749:12749:java.lang.Object fold(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    12763:12763:java.lang.Object fold(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    12777:12777:java.lang.Object fold(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    12791:12791:java.lang.Object fold(float[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    12805:12805:java.lang.Object fold(double[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    12819:12819:java.lang.Object fold(boolean[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    12833:12833:java.lang.Object fold(char[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    12849:12849:java.lang.Object foldIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    12865:12865:java.lang.Object foldIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    12881:12881:java.lang.Object foldIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    12897:12897:java.lang.Object foldIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    12913:12913:java.lang.Object foldIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    12929:12929:java.lang.Object foldIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    12945:12945:java.lang.Object foldIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    12961:12961:java.lang.Object foldIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    12977:12977:java.lang.Object foldIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    12990:12993:java.lang.Object foldRight(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    13007:13010:java.lang.Object foldRight(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    13024:13027:java.lang.Object foldRight(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    13041:13044:java.lang.Object foldRight(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    13058:13061:java.lang.Object foldRight(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    13075:13078:java.lang.Object foldRight(float[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    13092:13095:java.lang.Object foldRight(double[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    13109:13112:java.lang.Object foldRight(boolean[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    13126:13129:java.lang.Object foldRight(char[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    13144:13147:java.lang.Object foldRightIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    13163:13166:java.lang.Object foldRightIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    13182:13185:java.lang.Object foldRightIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    13201:13204:java.lang.Object foldRightIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    13220:13223:java.lang.Object foldRightIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    13239:13242:java.lang.Object foldRightIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    13258:13261:java.lang.Object foldRightIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    13277:13280:java.lang.Object foldRightIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    13296:13299:java.lang.Object foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    13309:13309:void forEach(java.lang.Object[],kotlin.jvm.functions.Function1) -> forEach
    13316:13316:void forEach(byte[],kotlin.jvm.functions.Function1) -> forEach
    13323:13323:void forEach(short[],kotlin.jvm.functions.Function1) -> forEach
    13330:13330:void forEach(int[],kotlin.jvm.functions.Function1) -> forEach
    13337:13337:void forEach(long[],kotlin.jvm.functions.Function1) -> forEach
    13344:13344:void forEach(float[],kotlin.jvm.functions.Function1) -> forEach
    13351:13351:void forEach(double[],kotlin.jvm.functions.Function1) -> forEach
    13358:13358:void forEach(boolean[],kotlin.jvm.functions.Function1) -> forEach
    13365:13365:void forEach(char[],kotlin.jvm.functions.Function1) -> forEach
    13375:13375:void forEachIndexed(java.lang.Object[],kotlin.jvm.functions.Function2) -> forEachIndexed
    13385:13385:void forEachIndexed(byte[],kotlin.jvm.functions.Function2) -> forEachIndexed
    13395:13395:void forEachIndexed(short[],kotlin.jvm.functions.Function2) -> forEachIndexed
    13405:13405:void forEachIndexed(int[],kotlin.jvm.functions.Function2) -> forEachIndexed
    13415:13415:void forEachIndexed(long[],kotlin.jvm.functions.Function2) -> forEachIndexed
    13425:13425:void forEachIndexed(float[],kotlin.jvm.functions.Function2) -> forEachIndexed
    13435:13435:void forEachIndexed(double[],kotlin.jvm.functions.Function2) -> forEachIndexed
    13445:13445:void forEachIndexed(boolean[],kotlin.jvm.functions.Function2) -> forEachIndexed
    13455:13455:void forEachIndexed(char[],kotlin.jvm.functions.Function2) -> forEachIndexed
    7586:7586:kotlin.ranges.IntRange getIndices(java.lang.Object[]) -> getIndices
    7592:7592:kotlin.ranges.IntRange getIndices(byte[]) -> getIndices
    7598:7598:kotlin.ranges.IntRange getIndices(short[]) -> getIndices
    7604:7604:kotlin.ranges.IntRange getIndices(int[]) -> getIndices
    7610:7610:kotlin.ranges.IntRange getIndices(long[]) -> getIndices
    7616:7616:kotlin.ranges.IntRange getIndices(float[]) -> getIndices
    7622:7622:kotlin.ranges.IntRange getIndices(double[]) -> getIndices
    7628:7628:kotlin.ranges.IntRange getIndices(boolean[]) -> getIndices
    7634:7634:kotlin.ranges.IntRange getIndices(char[]) -> getIndices
    7784:7784:int getLastIndex(java.lang.Object[]) -> getLastIndex
    7790:7790:int getLastIndex(byte[]) -> getLastIndex
    7796:7796:int getLastIndex(short[]) -> getLastIndex
    7802:7802:int getLastIndex(int[]) -> getLastIndex
    7808:7808:int getLastIndex(long[]) -> getLastIndex
    7814:7814:int getLastIndex(float[]) -> getLastIndex
    7820:7820:int getLastIndex(double[]) -> getLastIndex
    7826:7826:int getLastIndex(boolean[]) -> getLastIndex
    7832:7832:int getLastIndex(char[]) -> getLastIndex
    1355:1355:java.lang.Object getOrElse(java.lang.Object[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1363:1363:byte getOrElse(byte[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1371:1371:short getOrElse(short[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1379:1379:int getOrElse(int[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1387:1387:long getOrElse(long[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1395:1395:float getOrElse(float[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1403:1403:double getOrElse(double[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1411:1411:boolean getOrElse(boolean[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1419:1419:char getOrElse(char[],int,kotlin.jvm.functions.Function1) -> getOrElse
    1428:1428:java.lang.Object getOrNull(java.lang.Object[],int) -> getOrNull
    1437:1437:java.lang.Byte getOrNull(byte[],int) -> getOrNull
    1446:1446:java.lang.Short getOrNull(short[],int) -> getOrNull
    1455:1455:java.lang.Integer getOrNull(int[],int) -> getOrNull
    1464:1464:java.lang.Long getOrNull(long[],int) -> getOrNull
    1473:1473:java.lang.Float getOrNull(float[],int) -> getOrNull
    1482:1482:java.lang.Double getOrNull(double[],int) -> getOrNull
    1491:1491:java.lang.Boolean getOrNull(boolean[],int) -> getOrNull
    1500:1500:java.lang.Character getOrNull(char[],int) -> getOrNull
    10513:24792:java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> groupBy
    10525:24805:java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1) -> groupBy
    10537:24818:java.util.Map groupBy(short[],kotlin.jvm.functions.Function1) -> groupBy
    10549:24831:java.util.Map groupBy(int[],kotlin.jvm.functions.Function1) -> groupBy
    10561:24844:java.util.Map groupBy(long[],kotlin.jvm.functions.Function1) -> groupBy
    10573:24857:java.util.Map groupBy(float[],kotlin.jvm.functions.Function1) -> groupBy
    10585:24870:java.util.Map groupBy(double[],kotlin.jvm.functions.Function1) -> groupBy
    10597:24883:java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1) -> groupBy
    10609:24896:java.util.Map groupBy(char[],kotlin.jvm.functions.Function1) -> groupBy
    10622:24909:java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    10635:24922:java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    10648:24935:java.util.Map groupBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    10661:24948:java.util.Map groupBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    10674:24961:java.util.Map groupBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    10687:24974:java.util.Map groupBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    10700:24987:java.util.Map groupBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    10713:25000:java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    10726:25013:java.util.Map groupBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    10738:25019:java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    10755:25026:java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    10772:25033:java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    10789:25040:java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    10806:25047:java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    10823:25054:java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    10840:25061:java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    10857:25068:java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    10874:25075:java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    10892:25082:java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    10910:25089:java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    10928:25096:java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    10946:25103:java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    10964:25110:java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    10982:25117:java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    11000:25124:java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    11018:25131:java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    11036:25138:java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    11052:11052:kotlin.collections.Grouping groupingBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> groupingBy
    1508:1515:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    1527:1528:int indexOf(byte[],byte) -> indexOf
    1539:1540:int indexOf(short[],short) -> indexOf
    1551:1552:int indexOf(int[],int) -> indexOf
    1563:1564:int indexOf(long[],long) -> indexOf
    1577:1578:int indexOf(float[],float) -> indexOf
    1591:1592:int indexOf(double[],double) -> indexOf
    1603:1604:int indexOf(boolean[],boolean) -> indexOf
    1615:1616:int indexOf(char[],char) -> indexOf
    1627:1628:int indexOfFirst(java.lang.Object[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1639:1640:int indexOfFirst(byte[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1651:1652:int indexOfFirst(short[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1663:1664:int indexOfFirst(int[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1675:1676:int indexOfFirst(long[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1687:1688:int indexOfFirst(float[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1699:1700:int indexOfFirst(double[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1711:1712:int indexOfFirst(boolean[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1723:1724:int indexOfFirst(char[],kotlin.jvm.functions.Function1) -> indexOfFirst
    1735:1736:int indexOfLast(java.lang.Object[],kotlin.jvm.functions.Function1) -> indexOfLast
    1747:1748:int indexOfLast(byte[],kotlin.jvm.functions.Function1) -> indexOfLast
    1759:1760:int indexOfLast(short[],kotlin.jvm.functions.Function1) -> indexOfLast
    1771:1772:int indexOfLast(int[],kotlin.jvm.functions.Function1) -> indexOfLast
    1783:1784:int indexOfLast(long[],kotlin.jvm.functions.Function1) -> indexOfLast
    1795:1796:int indexOfLast(float[],kotlin.jvm.functions.Function1) -> indexOfLast
    1807:1808:int indexOfLast(double[],kotlin.jvm.functions.Function1) -> indexOfLast
    1819:1820:int indexOfLast(boolean[],kotlin.jvm.functions.Function1) -> indexOfLast
    1831:1832:int indexOfLast(char[],kotlin.jvm.functions.Function1) -> indexOfLast
    11837:11838:java.util.Set intersect(java.lang.Object[],java.lang.Iterable) -> intersect
    11850:11851:java.util.Set intersect(byte[],java.lang.Iterable) -> intersect
    11863:11864:java.util.Set intersect(short[],java.lang.Iterable) -> intersect
    11876:11877:java.util.Set intersect(int[],java.lang.Iterable) -> intersect
    11889:11890:java.util.Set intersect(long[],java.lang.Iterable) -> intersect
    11902:11903:java.util.Set intersect(float[],java.lang.Iterable) -> intersect
    11915:11916:java.util.Set intersect(double[],java.lang.Iterable) -> intersect
    11928:11929:java.util.Set intersect(boolean[],java.lang.Iterable) -> intersect
    11941:11942:java.util.Set intersect(char[],java.lang.Iterable) -> intersect
    7641:7641:boolean isEmpty(java.lang.Object[]) -> isEmpty
    7649:7649:boolean isEmpty(byte[]) -> isEmpty
    7657:7657:boolean isEmpty(short[]) -> isEmpty
    7665:7665:boolean isEmpty(int[]) -> isEmpty
    7673:7673:boolean isEmpty(long[]) -> isEmpty
    7681:7681:boolean isEmpty(float[]) -> isEmpty
    7689:7689:boolean isEmpty(double[]) -> isEmpty
    7697:7697:boolean isEmpty(boolean[]) -> isEmpty
    7705:7705:boolean isEmpty(char[]) -> isEmpty
    7713:7713:boolean isNotEmpty(java.lang.Object[]) -> isNotEmpty
    7721:7721:boolean isNotEmpty(byte[]) -> isNotEmpty
    7729:7729:boolean isNotEmpty(short[]) -> isNotEmpty
    7737:7737:boolean isNotEmpty(int[]) -> isNotEmpty
    7745:7745:boolean isNotEmpty(long[]) -> isNotEmpty
    7753:7753:boolean isNotEmpty(float[]) -> isNotEmpty
    7761:7761:boolean isNotEmpty(double[]) -> isNotEmpty
    7769:7769:boolean isNotEmpty(boolean[]) -> isNotEmpty
    7777:7777:boolean isNotEmpty(char[]) -> isNotEmpty
    23640:23649:java.lang.Appendable joinTo(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    23662:23674:java.lang.Appendable joinTo(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    23687:23699:java.lang.Appendable joinTo(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    23712:23724:java.lang.Appendable joinTo(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    23737:23749:java.lang.Appendable joinTo(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    23762:23774:java.lang.Appendable joinTo(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    23787:23799:java.lang.Appendable joinTo(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    23812:23824:java.lang.Appendable joinTo(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    23837:23849:java.lang.Appendable joinTo(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    23639:23639:java.lang.Appendable joinTo$default(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    23661:23661:java.lang.Appendable joinTo$default(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    23686:23686:java.lang.Appendable joinTo$default(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    23711:23711:java.lang.Appendable joinTo$default(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    23736:23736:java.lang.Appendable joinTo$default(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    23761:23761:java.lang.Appendable joinTo$default(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    23786:23786:java.lang.Appendable joinTo$default(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    23811:23811:java.lang.Appendable joinTo$default(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    23836:23836:java.lang.Appendable joinTo$default(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    23862:23862:java.lang.String joinToString(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    23874:23874:java.lang.String joinToString(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    23886:23886:java.lang.String joinToString(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    23898:23898:java.lang.String joinToString(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    23910:23910:java.lang.String joinToString(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    23922:23922:java.lang.String joinToString(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    23934:23934:java.lang.String joinToString(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    23946:23946:java.lang.String joinToString(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    23958:23958:java.lang.String joinToString(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    23861:23861:java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    23873:23873:java.lang.String joinToString$default(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    23885:23885:java.lang.String joinToString$default(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    23897:23897:java.lang.String joinToString$default(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    23909:23909:java.lang.String joinToString$default(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    23921:23921:java.lang.String joinToString$default(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    23933:23933:java.lang.String joinToString$default(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    23945:23945:java.lang.String joinToString$default(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    23957:23957:java.lang.String joinToString$default(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    1847:1849:java.lang.Object last(java.lang.Object[]) -> last
    1860:1862:byte last(byte[]) -> last
    1873:1875:short last(short[]) -> last
    1886:1888:int last(int[]) -> last
    1899:1901:long last(long[]) -> last
    1912:1914:float last(float[]) -> last
    1925:1927:double last(double[]) -> last
    1938:1940:boolean last(boolean[]) -> last
    1951:1953:char last(char[]) -> last
    1964:1968:java.lang.Object last(java.lang.Object[],kotlin.jvm.functions.Function1) -> last
    1979:1983:byte last(byte[],kotlin.jvm.functions.Function1) -> last
    1994:1998:short last(short[],kotlin.jvm.functions.Function1) -> last
    2009:2013:int last(int[],kotlin.jvm.functions.Function1) -> last
    2024:2028:long last(long[],kotlin.jvm.functions.Function1) -> last
    2039:2043:float last(float[],kotlin.jvm.functions.Function1) -> last
    2054:2058:double last(double[],kotlin.jvm.functions.Function1) -> last
    2069:2073:boolean last(boolean[],kotlin.jvm.functions.Function1) -> last
    2084:2088:char last(char[],kotlin.jvm.functions.Function1) -> last
    2096:2103:int lastIndexOf(java.lang.Object[],java.lang.Object) -> lastIndexOf
    2115:2116:int lastIndexOf(byte[],byte) -> lastIndexOf
    2127:2128:int lastIndexOf(short[],short) -> lastIndexOf
    2139:2140:int lastIndexOf(int[],int) -> lastIndexOf
    2151:2152:int lastIndexOf(long[],long) -> lastIndexOf
    2165:2166:int lastIndexOf(float[],float) -> lastIndexOf
    2179:2180:int lastIndexOf(double[],double) -> lastIndexOf
    2191:2192:int lastIndexOf(boolean[],boolean) -> lastIndexOf
    2203:2204:int lastIndexOf(char[],char) -> lastIndexOf
    2217:2217:java.lang.Object lastOrNull(java.lang.Object[]) -> lastOrNull
    2226:2226:java.lang.Byte lastOrNull(byte[]) -> lastOrNull
    2235:2235:java.lang.Short lastOrNull(short[]) -> lastOrNull
    2244:2244:java.lang.Integer lastOrNull(int[]) -> lastOrNull
    2253:2253:java.lang.Long lastOrNull(long[]) -> lastOrNull
    2262:2262:java.lang.Float lastOrNull(float[]) -> lastOrNull
    2271:2271:java.lang.Double lastOrNull(double[]) -> lastOrNull
    2280:2280:java.lang.Boolean lastOrNull(boolean[]) -> lastOrNull
    2289:2289:java.lang.Character lastOrNull(char[]) -> lastOrNull
    2298:2300:java.lang.Object lastOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> lastOrNull
    2311:2313:java.lang.Byte lastOrNull(byte[],kotlin.jvm.functions.Function1) -> lastOrNull
    2324:2326:java.lang.Short lastOrNull(short[],kotlin.jvm.functions.Function1) -> lastOrNull
    2337:2339:java.lang.Integer lastOrNull(int[],kotlin.jvm.functions.Function1) -> lastOrNull
    2350:2352:java.lang.Long lastOrNull(long[],kotlin.jvm.functions.Function1) -> lastOrNull
    2363:2365:java.lang.Float lastOrNull(float[],kotlin.jvm.functions.Function1) -> lastOrNull
    2376:2378:java.lang.Double lastOrNull(double[],kotlin.jvm.functions.Function1) -> lastOrNull
    2389:2391:java.lang.Boolean lastOrNull(boolean[],kotlin.jvm.functions.Function1) -> lastOrNull
    2402:2404:java.lang.Character lastOrNull(char[],kotlin.jvm.functions.Function1) -> lastOrNull
    11065:25143:java.util.List map(java.lang.Object[],kotlin.jvm.functions.Function1) -> map
    11075:25146:java.util.List map(byte[],kotlin.jvm.functions.Function1) -> map
    11085:25149:java.util.List map(short[],kotlin.jvm.functions.Function1) -> map
    11095:25152:java.util.List map(int[],kotlin.jvm.functions.Function1) -> map
    11105:25155:java.util.List map(long[],kotlin.jvm.functions.Function1) -> map
    11115:25158:java.util.List map(float[],kotlin.jvm.functions.Function1) -> map
    11125:25161:java.util.List map(double[],kotlin.jvm.functions.Function1) -> map
    11135:25164:java.util.List map(boolean[],kotlin.jvm.functions.Function1) -> map
    11145:25167:java.util.List map(char[],kotlin.jvm.functions.Function1) -> map
    11155:25171:java.util.List mapIndexed(java.lang.Object[],kotlin.jvm.functions.Function2) -> mapIndexed
    11165:25175:java.util.List mapIndexed(byte[],kotlin.jvm.functions.Function2) -> mapIndexed
    11175:25179:java.util.List mapIndexed(short[],kotlin.jvm.functions.Function2) -> mapIndexed
    11185:25183:java.util.List mapIndexed(int[],kotlin.jvm.functions.Function2) -> mapIndexed
    11195:25187:java.util.List mapIndexed(long[],kotlin.jvm.functions.Function2) -> mapIndexed
    11205:25191:java.util.List mapIndexed(float[],kotlin.jvm.functions.Function2) -> mapIndexed
    11215:25195:java.util.List mapIndexed(double[],kotlin.jvm.functions.Function2) -> mapIndexed
    11225:25199:java.util.List mapIndexed(boolean[],kotlin.jvm.functions.Function2) -> mapIndexed
    11235:25203:java.util.List mapIndexed(char[],kotlin.jvm.functions.Function2) -> mapIndexed
    11245:25207:java.util.List mapIndexedNotNull(java.lang.Object[],kotlin.jvm.functions.Function2) -> mapIndexedNotNull
    11255:25212:java.util.Collection mapIndexedNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedNotNullTo
    11267:11268:java.util.Collection mapIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    11280:11281:java.util.Collection mapIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    11293:11294:java.util.Collection mapIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    11306:11307:java.util.Collection mapIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    11319:11320:java.util.Collection mapIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    11332:11333:java.util.Collection mapIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    11345:11346:java.util.Collection mapIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    11358:11359:java.util.Collection mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    11371:11372:java.util.Collection mapIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    11383:25215:java.util.List mapNotNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> mapNotNull
    11391:25219:java.util.Collection mapNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapNotNullTo
    11400:11401:java.util.Collection mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    11410:11411:java.util.Collection mapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    11420:11421:java.util.Collection mapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    11430:11431:java.util.Collection mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    11440:11441:java.util.Collection mapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    11450:11451:java.util.Collection mapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    11460:11461:java.util.Collection mapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    11470:11471:java.util.Collection mapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    11480:11481:java.util.Collection mapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    13896:13904:java.lang.Object maxByOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> maxByOrNull
    13919:13932:java.lang.Byte maxByOrNull(byte[],kotlin.jvm.functions.Function1) -> maxByOrNull
    13942:13955:java.lang.Short maxByOrNull(short[],kotlin.jvm.functions.Function1) -> maxByOrNull
    13965:13978:java.lang.Integer maxByOrNull(int[],kotlin.jvm.functions.Function1) -> maxByOrNull
    13988:14001:java.lang.Long maxByOrNull(long[],kotlin.jvm.functions.Function1) -> maxByOrNull
    14011:14024:java.lang.Float maxByOrNull(float[],kotlin.jvm.functions.Function1) -> maxByOrNull
    14034:14047:java.lang.Double maxByOrNull(double[],kotlin.jvm.functions.Function1) -> maxByOrNull
    14057:14070:java.lang.Boolean maxByOrNull(boolean[],kotlin.jvm.functions.Function1) -> maxByOrNull
    14080:14093:java.lang.Character maxByOrNull(char[],kotlin.jvm.functions.Function1) -> maxByOrNull
    13657:13665:java.lang.Object maxByOrThrow(java.lang.Object[],kotlin.jvm.functions.Function1) -> maxByOrThrow
    13684:13692:byte maxByOrThrow(byte[],kotlin.jvm.functions.Function1) -> maxByOrThrow
    13711:13719:short maxByOrThrow(short[],kotlin.jvm.functions.Function1) -> maxByOrThrow
    13738:13746:int maxByOrThrow(int[],kotlin.jvm.functions.Function1) -> maxByOrThrow
    13765:13773:long maxByOrThrow(long[],kotlin.jvm.functions.Function1) -> maxByOrThrow
    13792:13800:float maxByOrThrow(float[],kotlin.jvm.functions.Function1) -> maxByOrThrow
    13819:13827:double maxByOrThrow(double[],kotlin.jvm.functions.Function1) -> maxByOrThrow
    13846:13854:boolean maxByOrThrow(boolean[],kotlin.jvm.functions.Function1) -> maxByOrThrow
    13873:13881:char maxByOrThrow(char[],kotlin.jvm.functions.Function1) -> maxByOrThrow
    14109:14113:double maxOf(java.lang.Object[],kotlin.jvm.functions.Function1) -> maxOf
    14131:14135:double maxOf(byte[],kotlin.jvm.functions.Function1) -> maxOf
    14153:14157:double maxOf(short[],kotlin.jvm.functions.Function1) -> maxOf
    14175:14179:double maxOf(int[],kotlin.jvm.functions.Function1) -> maxOf
    14197:14201:double maxOf(long[],kotlin.jvm.functions.Function1) -> maxOf
    14219:14223:double maxOf(float[],kotlin.jvm.functions.Function1) -> maxOf
    14241:14245:double maxOf(double[],kotlin.jvm.functions.Function1) -> maxOf
    14263:14267:double maxOf(boolean[],kotlin.jvm.functions.Function1) -> maxOf
    14285:14289:double maxOf(char[],kotlin.jvm.functions.Function1) -> maxOf
    14307:14311:float maxOf(java.lang.Object[],kotlin.jvm.functions.Function1) -> maxOf
    14329:14333:float maxOf(byte[],kotlin.jvm.functions.Function1) -> maxOf
    14351:14355:float maxOf(short[],kotlin.jvm.functions.Function1) -> maxOf
    14373:14377:float maxOf(int[],kotlin.jvm.functions.Function1) -> maxOf
    14395:14399:float maxOf(long[],kotlin.jvm.functions.Function1) -> maxOf
    14417:14421:float maxOf(float[],kotlin.jvm.functions.Function1) -> maxOf
    14439:14443:float maxOf(double[],kotlin.jvm.functions.Function1) -> maxOf
    14461:14465:float maxOf(boolean[],kotlin.jvm.functions.Function1) -> maxOf
    14483:14487:float maxOf(char[],kotlin.jvm.functions.Function1) -> maxOf
    14503:14507:java.lang.Comparable maxOf(java.lang.Object[],kotlin.jvm.functions.Function1) -> maxOf
    14525:14529:java.lang.Comparable maxOf(byte[],kotlin.jvm.functions.Function1) -> maxOf
    14547:14551:java.lang.Comparable maxOf(short[],kotlin.jvm.functions.Function1) -> maxOf
    14569:14573:java.lang.Comparable maxOf(int[],kotlin.jvm.functions.Function1) -> maxOf
    14591:14595:java.lang.Comparable maxOf(long[],kotlin.jvm.functions.Function1) -> maxOf
    14613:14617:java.lang.Comparable maxOf(float[],kotlin.jvm.functions.Function1) -> maxOf
    14635:14639:java.lang.Comparable maxOf(double[],kotlin.jvm.functions.Function1) -> maxOf
    14657:14661:java.lang.Comparable maxOf(boolean[],kotlin.jvm.functions.Function1) -> maxOf
    14679:14683:java.lang.Comparable maxOf(char[],kotlin.jvm.functions.Function1) -> maxOf
    14701:14707:java.lang.Double maxOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14721:14727:java.lang.Double maxOfOrNull(byte[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14741:14747:java.lang.Double maxOfOrNull(short[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14761:14767:java.lang.Double maxOfOrNull(int[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14781:14787:java.lang.Double maxOfOrNull(long[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14801:14807:java.lang.Double maxOfOrNull(float[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14821:14827:java.lang.Double maxOfOrNull(double[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14841:14847:java.lang.Double maxOfOrNull(boolean[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14861:14867:java.lang.Double maxOfOrNull(char[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14881:14887:java.lang.Float maxOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14901:14907:java.lang.Float maxOfOrNull(byte[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14921:14927:java.lang.Float maxOfOrNull(short[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14941:14947:java.lang.Float maxOfOrNull(int[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14961:14967:java.lang.Float maxOfOrNull(long[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    14981:14987:java.lang.Float maxOfOrNull(float[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15001:15007:java.lang.Float maxOfOrNull(double[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15021:15027:java.lang.Float maxOfOrNull(boolean[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15041:15047:java.lang.Float maxOfOrNull(char[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15059:15063:java.lang.Comparable maxOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15079:15083:java.lang.Comparable maxOfOrNull(byte[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15099:15103:java.lang.Comparable maxOfOrNull(short[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15119:15123:java.lang.Comparable maxOfOrNull(int[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15139:15143:java.lang.Comparable maxOfOrNull(long[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15159:15163:java.lang.Comparable maxOfOrNull(float[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15179:15183:java.lang.Comparable maxOfOrNull(double[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15199:15203:java.lang.Comparable maxOfOrNull(boolean[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15219:15223:java.lang.Comparable maxOfOrNull(char[],kotlin.jvm.functions.Function1) -> maxOfOrNull
    15241:15245:java.lang.Object maxOfWith(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    15263:15267:java.lang.Object maxOfWith(byte[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    15285:15289:java.lang.Object maxOfWith(short[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    15307:15311:java.lang.Object maxOfWith(int[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    15329:15333:java.lang.Object maxOfWith(long[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    15351:15355:java.lang.Object maxOfWith(float[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    15373:15377:java.lang.Object maxOfWith(double[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    15395:15399:java.lang.Object maxOfWith(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    15417:15421:java.lang.Object maxOfWith(char[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    15437:15441:java.lang.Object maxOfWithOrNull(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    15457:15461:java.lang.Object maxOfWithOrNull(byte[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    15477:15481:java.lang.Object maxOfWithOrNull(short[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    15497:15501:java.lang.Object maxOfWithOrNull(int[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    15517:15521:java.lang.Object maxOfWithOrNull(long[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    15537:15541:java.lang.Object maxOfWithOrNull(float[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    15557:15561:java.lang.Object maxOfWithOrNull(double[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    15577:15581:java.lang.Object maxOfWithOrNull(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    15597:15601:java.lang.Object maxOfWithOrNull(char[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    15615:15621:java.lang.Double maxOrNull(java.lang.Double[]) -> maxOrNull
    15631:15637:java.lang.Float maxOrNull(java.lang.Float[]) -> maxOrNull
    15645:15649:java.lang.Comparable maxOrNull(java.lang.Comparable[]) -> maxOrNull
    15659:15665:java.lang.Byte maxOrNull(byte[]) -> maxOrNull
    15673:15679:java.lang.Short maxOrNull(short[]) -> maxOrNull
    15687:15693:java.lang.Integer maxOrNull(int[]) -> maxOrNull
    15701:15707:java.lang.Long maxOrNull(long[]) -> maxOrNull
    15717:15723:java.lang.Float maxOrNull(float[]) -> maxOrNull
    15733:15739:java.lang.Double maxOrNull(double[]) -> maxOrNull
    15747:15753:java.lang.Character maxOrNull(char[]) -> maxOrNull
    13469:13473:double maxOrThrow(java.lang.Double[]) -> maxOrThrow
    13489:13493:float maxOrThrow(java.lang.Float[]) -> maxOrThrow
    13507:13511:java.lang.Comparable maxOrThrow(java.lang.Comparable[]) -> maxOrThrow
    13525:13528:byte maxOrThrow(byte[]) -> maxOrThrow
    13543:13546:short maxOrThrow(short[]) -> maxOrThrow
    13561:13564:int maxOrThrow(int[]) -> maxOrThrow
    13579:13582:long maxOrThrow(long[]) -> maxOrThrow
    13599:13603:float maxOrThrow(float[]) -> maxOrThrow
    13619:13623:double maxOrThrow(double[]) -> maxOrThrow
    13637:13641:char maxOrThrow(char[]) -> maxOrThrow
    15923:15927:java.lang.Object maxWithOrNull(java.lang.Object[],java.util.Comparator) -> maxWithOrNull
    15937:15943:java.lang.Byte maxWithOrNull(byte[],java.util.Comparator) -> maxWithOrNull
    15951:15957:java.lang.Short maxWithOrNull(short[],java.util.Comparator) -> maxWithOrNull
    15965:15971:java.lang.Integer maxWithOrNull(int[],java.util.Comparator) -> maxWithOrNull
    15979:15985:java.lang.Long maxWithOrNull(long[],java.util.Comparator) -> maxWithOrNull
    15993:15999:java.lang.Float maxWithOrNull(float[],java.util.Comparator) -> maxWithOrNull
    16007:16013:java.lang.Double maxWithOrNull(double[],java.util.Comparator) -> maxWithOrNull
    16021:16027:java.lang.Boolean maxWithOrNull(boolean[],java.util.Comparator) -> maxWithOrNull
    16035:16041:java.lang.Character maxWithOrNull(char[],java.util.Comparator) -> maxWithOrNull
    15765:15769:java.lang.Object maxWithOrThrow(java.lang.Object[],java.util.Comparator) -> maxWithOrThrow
    15783:15787:byte maxWithOrThrow(byte[],java.util.Comparator) -> maxWithOrThrow
    15801:15805:short maxWithOrThrow(short[],java.util.Comparator) -> maxWithOrThrow
    15819:15823:int maxWithOrThrow(int[],java.util.Comparator) -> maxWithOrThrow
    15837:15841:long maxWithOrThrow(long[],java.util.Comparator) -> maxWithOrThrow
    15855:15859:float maxWithOrThrow(float[],java.util.Comparator) -> maxWithOrThrow
    15873:15877:double maxWithOrThrow(double[],java.util.Comparator) -> maxWithOrThrow
    15891:15895:boolean maxWithOrThrow(boolean[],java.util.Comparator) -> maxWithOrThrow
    15909:15913:char maxWithOrThrow(char[],java.util.Comparator) -> maxWithOrThrow
    16482:16490:java.lang.Object minByOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> minByOrNull
    16505:16518:java.lang.Byte minByOrNull(byte[],kotlin.jvm.functions.Function1) -> minByOrNull
    16528:16541:java.lang.Short minByOrNull(short[],kotlin.jvm.functions.Function1) -> minByOrNull
    16551:16564:java.lang.Integer minByOrNull(int[],kotlin.jvm.functions.Function1) -> minByOrNull
    16574:16587:java.lang.Long minByOrNull(long[],kotlin.jvm.functions.Function1) -> minByOrNull
    16597:16610:java.lang.Float minByOrNull(float[],kotlin.jvm.functions.Function1) -> minByOrNull
    16620:16633:java.lang.Double minByOrNull(double[],kotlin.jvm.functions.Function1) -> minByOrNull
    16643:16656:java.lang.Boolean minByOrNull(boolean[],kotlin.jvm.functions.Function1) -> minByOrNull
    16666:16679:java.lang.Character minByOrNull(char[],kotlin.jvm.functions.Function1) -> minByOrNull
    16243:16251:java.lang.Object minByOrThrow(java.lang.Object[],kotlin.jvm.functions.Function1) -> minByOrThrow
    16270:16278:byte minByOrThrow(byte[],kotlin.jvm.functions.Function1) -> minByOrThrow
    16297:16305:short minByOrThrow(short[],kotlin.jvm.functions.Function1) -> minByOrThrow
    16324:16332:int minByOrThrow(int[],kotlin.jvm.functions.Function1) -> minByOrThrow
    16351:16359:long minByOrThrow(long[],kotlin.jvm.functions.Function1) -> minByOrThrow
    16378:16386:float minByOrThrow(float[],kotlin.jvm.functions.Function1) -> minByOrThrow
    16405:16413:double minByOrThrow(double[],kotlin.jvm.functions.Function1) -> minByOrThrow
    16432:16440:boolean minByOrThrow(boolean[],kotlin.jvm.functions.Function1) -> minByOrThrow
    16459:16467:char minByOrThrow(char[],kotlin.jvm.functions.Function1) -> minByOrThrow
    16695:16699:double minOf(java.lang.Object[],kotlin.jvm.functions.Function1) -> minOf
    16717:16721:double minOf(byte[],kotlin.jvm.functions.Function1) -> minOf
    16739:16743:double minOf(short[],kotlin.jvm.functions.Function1) -> minOf
    16761:16765:double minOf(int[],kotlin.jvm.functions.Function1) -> minOf
    16783:16787:double minOf(long[],kotlin.jvm.functions.Function1) -> minOf
    16805:16809:double minOf(float[],kotlin.jvm.functions.Function1) -> minOf
    16827:16831:double minOf(double[],kotlin.jvm.functions.Function1) -> minOf
    16849:16853:double minOf(boolean[],kotlin.jvm.functions.Function1) -> minOf
    16871:16875:double minOf(char[],kotlin.jvm.functions.Function1) -> minOf
    16893:16897:float minOf(java.lang.Object[],kotlin.jvm.functions.Function1) -> minOf
    16915:16919:float minOf(byte[],kotlin.jvm.functions.Function1) -> minOf
    16937:16941:float minOf(short[],kotlin.jvm.functions.Function1) -> minOf
    16959:16963:float minOf(int[],kotlin.jvm.functions.Function1) -> minOf
    16981:16985:float minOf(long[],kotlin.jvm.functions.Function1) -> minOf
    17003:17007:float minOf(float[],kotlin.jvm.functions.Function1) -> minOf
    17025:17029:float minOf(double[],kotlin.jvm.functions.Function1) -> minOf
    17047:17051:float minOf(boolean[],kotlin.jvm.functions.Function1) -> minOf
    17069:17073:float minOf(char[],kotlin.jvm.functions.Function1) -> minOf
    17089:17093:java.lang.Comparable minOf(java.lang.Object[],kotlin.jvm.functions.Function1) -> minOf
    17111:17115:java.lang.Comparable minOf(byte[],kotlin.jvm.functions.Function1) -> minOf
    17133:17137:java.lang.Comparable minOf(short[],kotlin.jvm.functions.Function1) -> minOf
    17155:17159:java.lang.Comparable minOf(int[],kotlin.jvm.functions.Function1) -> minOf
    17177:17181:java.lang.Comparable minOf(long[],kotlin.jvm.functions.Function1) -> minOf
    17199:17203:java.lang.Comparable minOf(float[],kotlin.jvm.functions.Function1) -> minOf
    17221:17225:java.lang.Comparable minOf(double[],kotlin.jvm.functions.Function1) -> minOf
    17243:17247:java.lang.Comparable minOf(boolean[],kotlin.jvm.functions.Function1) -> minOf
    17265:17269:java.lang.Comparable minOf(char[],kotlin.jvm.functions.Function1) -> minOf
    17287:17293:java.lang.Double minOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17307:17313:java.lang.Double minOfOrNull(byte[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17327:17333:java.lang.Double minOfOrNull(short[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17347:17353:java.lang.Double minOfOrNull(int[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17367:17373:java.lang.Double minOfOrNull(long[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17387:17393:java.lang.Double minOfOrNull(float[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17407:17413:java.lang.Double minOfOrNull(double[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17427:17433:java.lang.Double minOfOrNull(boolean[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17447:17453:java.lang.Double minOfOrNull(char[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17467:17473:java.lang.Float minOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17487:17493:java.lang.Float minOfOrNull(byte[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17507:17513:java.lang.Float minOfOrNull(short[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17527:17533:java.lang.Float minOfOrNull(int[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17547:17553:java.lang.Float minOfOrNull(long[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17567:17573:java.lang.Float minOfOrNull(float[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17587:17593:java.lang.Float minOfOrNull(double[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17607:17613:java.lang.Float minOfOrNull(boolean[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17627:17633:java.lang.Float minOfOrNull(char[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17645:17649:java.lang.Comparable minOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17665:17669:java.lang.Comparable minOfOrNull(byte[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17685:17689:java.lang.Comparable minOfOrNull(short[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17705:17709:java.lang.Comparable minOfOrNull(int[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17725:17729:java.lang.Comparable minOfOrNull(long[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17745:17749:java.lang.Comparable minOfOrNull(float[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17765:17769:java.lang.Comparable minOfOrNull(double[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17785:17789:java.lang.Comparable minOfOrNull(boolean[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17805:17809:java.lang.Comparable minOfOrNull(char[],kotlin.jvm.functions.Function1) -> minOfOrNull
    17827:17831:java.lang.Object minOfWith(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    17849:17853:java.lang.Object minOfWith(byte[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    17871:17875:java.lang.Object minOfWith(short[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    17893:17897:java.lang.Object minOfWith(int[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    17915:17919:java.lang.Object minOfWith(long[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    17937:17941:java.lang.Object minOfWith(float[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    17959:17963:java.lang.Object minOfWith(double[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    17981:17985:java.lang.Object minOfWith(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    18003:18007:java.lang.Object minOfWith(char[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    18023:18027:java.lang.Object minOfWithOrNull(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    18043:18047:java.lang.Object minOfWithOrNull(byte[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    18063:18067:java.lang.Object minOfWithOrNull(short[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    18083:18087:java.lang.Object minOfWithOrNull(int[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    18103:18107:java.lang.Object minOfWithOrNull(long[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    18123:18127:java.lang.Object minOfWithOrNull(float[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    18143:18147:java.lang.Object minOfWithOrNull(double[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    18163:18167:java.lang.Object minOfWithOrNull(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    18183:18187:java.lang.Object minOfWithOrNull(char[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    18201:18207:java.lang.Double minOrNull(java.lang.Double[]) -> minOrNull
    18217:18223:java.lang.Float minOrNull(java.lang.Float[]) -> minOrNull
    18231:18235:java.lang.Comparable minOrNull(java.lang.Comparable[]) -> minOrNull
    18245:18251:java.lang.Byte minOrNull(byte[]) -> minOrNull
    18259:18265:java.lang.Short minOrNull(short[]) -> minOrNull
    18273:18279:java.lang.Integer minOrNull(int[]) -> minOrNull
    18287:18293:java.lang.Long minOrNull(long[]) -> minOrNull
    18303:18309:java.lang.Float minOrNull(float[]) -> minOrNull
    18319:18325:java.lang.Double minOrNull(double[]) -> minOrNull
    18333:18339:java.lang.Character minOrNull(char[]) -> minOrNull
    16055:16059:double minOrThrow(java.lang.Double[]) -> minOrThrow
    16075:16079:float minOrThrow(java.lang.Float[]) -> minOrThrow
    16093:16097:java.lang.Comparable minOrThrow(java.lang.Comparable[]) -> minOrThrow
    16111:16114:byte minOrThrow(byte[]) -> minOrThrow
    16129:16132:short minOrThrow(short[]) -> minOrThrow
    16147:16150:int minOrThrow(int[]) -> minOrThrow
    16165:16168:long minOrThrow(long[]) -> minOrThrow
    16185:16189:float minOrThrow(float[]) -> minOrThrow
    16205:16209:double minOrThrow(double[]) -> minOrThrow
    16223:16227:char minOrThrow(char[]) -> minOrThrow
    18509:18513:java.lang.Object minWithOrNull(java.lang.Object[],java.util.Comparator) -> minWithOrNull
    18523:18529:java.lang.Byte minWithOrNull(byte[],java.util.Comparator) -> minWithOrNull
    18537:18543:java.lang.Short minWithOrNull(short[],java.util.Comparator) -> minWithOrNull
    18551:18557:java.lang.Integer minWithOrNull(int[],java.util.Comparator) -> minWithOrNull
    18565:18571:java.lang.Long minWithOrNull(long[],java.util.Comparator) -> minWithOrNull
    18579:18585:java.lang.Float minWithOrNull(float[],java.util.Comparator) -> minWithOrNull
    18593:18599:java.lang.Double minWithOrNull(double[],java.util.Comparator) -> minWithOrNull
    18607:18613:java.lang.Boolean minWithOrNull(boolean[],java.util.Comparator) -> minWithOrNull
    18621:18627:java.lang.Character minWithOrNull(char[],java.util.Comparator) -> minWithOrNull
    18351:18355:java.lang.Object minWithOrThrow(java.lang.Object[],java.util.Comparator) -> minWithOrThrow
    18369:18373:byte minWithOrThrow(byte[],java.util.Comparator) -> minWithOrThrow
    18387:18391:short minWithOrThrow(short[],java.util.Comparator) -> minWithOrThrow
    18405:18409:int minWithOrThrow(int[],java.util.Comparator) -> minWithOrThrow
    18423:18427:long minWithOrThrow(long[],java.util.Comparator) -> minWithOrThrow
    18441:18445:float minWithOrThrow(float[],java.util.Comparator) -> minWithOrThrow
    18459:18463:double minWithOrThrow(double[],java.util.Comparator) -> minWithOrThrow
    18477:18481:boolean minWithOrThrow(boolean[],java.util.Comparator) -> minWithOrThrow
    18495:18499:char minWithOrThrow(char[],java.util.Comparator) -> minWithOrThrow
    18636:18636:boolean none(java.lang.Object[]) -> none
    18645:18645:boolean none(byte[]) -> none
    18654:18654:boolean none(short[]) -> none
    18663:18663:boolean none(int[]) -> none
    18672:18672:boolean none(long[]) -> none
    18681:18681:boolean none(float[]) -> none
    18690:18690:boolean none(double[]) -> none
    18699:18699:boolean none(boolean[]) -> none
    18708:18708:boolean none(char[]) -> none
    18717:18717:boolean none(java.lang.Object[],kotlin.jvm.functions.Function1) -> none
    18727:18727:boolean none(byte[],kotlin.jvm.functions.Function1) -> none
    18737:18737:boolean none(short[],kotlin.jvm.functions.Function1) -> none
    18747:18747:boolean none(int[],kotlin.jvm.functions.Function1) -> none
    18757:18757:boolean none(long[],kotlin.jvm.functions.Function1) -> none
    18767:18767:boolean none(float[],kotlin.jvm.functions.Function1) -> none
    18777:18777:boolean none(double[],kotlin.jvm.functions.Function1) -> none
    18787:18787:boolean none(boolean[],kotlin.jvm.functions.Function1) -> none
    18797:18797:boolean none(char[],kotlin.jvm.functions.Function1) -> none
    18807:18807:java.lang.Object[] onEach(java.lang.Object[],kotlin.jvm.functions.Function1) -> onEach
    18816:18816:byte[] onEach(byte[],kotlin.jvm.functions.Function1) -> onEach
    18825:18825:short[] onEach(short[],kotlin.jvm.functions.Function1) -> onEach
    18834:18834:int[] onEach(int[],kotlin.jvm.functions.Function1) -> onEach
    18843:18843:long[] onEach(long[],kotlin.jvm.functions.Function1) -> onEach
    18852:18852:float[] onEach(float[],kotlin.jvm.functions.Function1) -> onEach
    18861:18861:double[] onEach(double[],kotlin.jvm.functions.Function1) -> onEach
    18870:18870:boolean[] onEach(boolean[],kotlin.jvm.functions.Function1) -> onEach
    18879:18879:char[] onEach(char[],kotlin.jvm.functions.Function1) -> onEach
    25222:25222:java.lang.Object[] onEachIndexed(java.lang.Object[],kotlin.jvm.functions.Function2) -> onEachIndexed
    25225:25225:byte[] onEachIndexed(byte[],kotlin.jvm.functions.Function2) -> onEachIndexed
    25228:25228:short[] onEachIndexed(short[],kotlin.jvm.functions.Function2) -> onEachIndexed
    25231:25231:int[] onEachIndexed(int[],kotlin.jvm.functions.Function2) -> onEachIndexed
    25234:25234:long[] onEachIndexed(long[],kotlin.jvm.functions.Function2) -> onEachIndexed
    25237:25237:float[] onEachIndexed(float[],kotlin.jvm.functions.Function2) -> onEachIndexed
    25240:25240:double[] onEachIndexed(double[],kotlin.jvm.functions.Function2) -> onEachIndexed
    25243:25243:boolean[] onEachIndexed(boolean[],kotlin.jvm.functions.Function2) -> onEachIndexed
    25246:25246:char[] onEachIndexed(char[],kotlin.jvm.functions.Function2) -> onEachIndexed
    22765:22774:kotlin.Pair partition(java.lang.Object[],kotlin.jvm.functions.Function1) -> partition
    22785:22794:kotlin.Pair partition(byte[],kotlin.jvm.functions.Function1) -> partition
    22805:22814:kotlin.Pair partition(short[],kotlin.jvm.functions.Function1) -> partition
    22825:22834:kotlin.Pair partition(int[],kotlin.jvm.functions.Function1) -> partition
    22845:22854:kotlin.Pair partition(long[],kotlin.jvm.functions.Function1) -> partition
    22865:22874:kotlin.Pair partition(float[],kotlin.jvm.functions.Function1) -> partition
    22885:22894:kotlin.Pair partition(double[],kotlin.jvm.functions.Function1) -> partition
    22905:22914:kotlin.Pair partition(boolean[],kotlin.jvm.functions.Function1) -> partition
    22925:22934:kotlin.Pair partition(char[],kotlin.jvm.functions.Function1) -> partition
    2417:2417:java.lang.Object random(java.lang.Object[]) -> random
    2428:2428:byte random(byte[]) -> random
    2439:2439:short random(short[]) -> random
    2450:2450:int random(int[]) -> random
    2461:2461:long random(long[]) -> random
    2472:2472:float random(float[]) -> random
    2483:2483:double random(double[]) -> random
    2494:2494:boolean random(boolean[]) -> random
    2505:2505:char random(char[]) -> random
    2515:2517:java.lang.Object random(java.lang.Object[],kotlin.random.Random) -> random
    2527:2529:byte random(byte[],kotlin.random.Random) -> random
    2539:2541:short random(short[],kotlin.random.Random) -> random
    2551:2553:int random(int[],kotlin.random.Random) -> random
    2563:2565:long random(long[],kotlin.random.Random) -> random
    2575:2577:float random(float[],kotlin.random.Random) -> random
    2587:2589:double random(double[],kotlin.random.Random) -> random
    2599:2601:boolean random(boolean[],kotlin.random.Random) -> random
    2611:2613:char random(char[],kotlin.random.Random) -> random
    2623:2623:java.lang.Object randomOrNull(java.lang.Object[]) -> randomOrNull
    2633:2633:java.lang.Byte randomOrNull(byte[]) -> randomOrNull
    2643:2643:java.lang.Short randomOrNull(short[]) -> randomOrNull
    2653:2653:java.lang.Integer randomOrNull(int[]) -> randomOrNull
    2663:2663:java.lang.Long randomOrNull(long[]) -> randomOrNull
    2673:2673:java.lang.Float randomOrNull(float[]) -> randomOrNull
    2683:2683:java.lang.Double randomOrNull(double[]) -> randomOrNull
    2693:2693:java.lang.Boolean randomOrNull(boolean[]) -> randomOrNull
    2703:2703:java.lang.Character randomOrNull(char[]) -> randomOrNull
    2712:2714:java.lang.Object randomOrNull(java.lang.Object[],kotlin.random.Random) -> randomOrNull
    2723:2725:java.lang.Byte randomOrNull(byte[],kotlin.random.Random) -> randomOrNull
    2734:2736:java.lang.Short randomOrNull(short[],kotlin.random.Random) -> randomOrNull
    2745:2747:java.lang.Integer randomOrNull(int[],kotlin.random.Random) -> randomOrNull
    2756:2758:java.lang.Long randomOrNull(long[],kotlin.random.Random) -> randomOrNull
    2767:2769:java.lang.Float randomOrNull(float[],kotlin.random.Random) -> randomOrNull
    2778:2780:java.lang.Double randomOrNull(double[],kotlin.random.Random) -> randomOrNull
    2789:2791:java.lang.Boolean randomOrNull(boolean[],kotlin.random.Random) -> randomOrNull
    2800:2802:java.lang.Character randomOrNull(char[],kotlin.random.Random) -> randomOrNull
    19003:19007:java.lang.Object reduce(java.lang.Object[],kotlin.jvm.functions.Function2) -> reduce
    19025:19029:byte reduce(byte[],kotlin.jvm.functions.Function2) -> reduce
    19047:19051:short reduce(short[],kotlin.jvm.functions.Function2) -> reduce
    19069:19073:int reduce(int[],kotlin.jvm.functions.Function2) -> reduce
    19091:19095:long reduce(long[],kotlin.jvm.functions.Function2) -> reduce
    19113:19117:float reduce(float[],kotlin.jvm.functions.Function2) -> reduce
    19135:19139:double reduce(double[],kotlin.jvm.functions.Function2) -> reduce
    19157:19161:boolean reduce(boolean[],kotlin.jvm.functions.Function2) -> reduce
    19179:19183:char reduce(char[],kotlin.jvm.functions.Function2) -> reduce
    19201:19205:java.lang.Object reduceIndexed(java.lang.Object[],kotlin.jvm.functions.Function3) -> reduceIndexed
    19223:19227:byte reduceIndexed(byte[],kotlin.jvm.functions.Function3) -> reduceIndexed
    19245:19249:short reduceIndexed(short[],kotlin.jvm.functions.Function3) -> reduceIndexed
    19267:19271:int reduceIndexed(int[],kotlin.jvm.functions.Function3) -> reduceIndexed
    19289:19293:long reduceIndexed(long[],kotlin.jvm.functions.Function3) -> reduceIndexed
    19311:19315:float reduceIndexed(float[],kotlin.jvm.functions.Function3) -> reduceIndexed
    19333:19337:double reduceIndexed(double[],kotlin.jvm.functions.Function3) -> reduceIndexed
    19355:19359:boolean reduceIndexed(boolean[],kotlin.jvm.functions.Function3) -> reduceIndexed
    19377:19381:char reduceIndexed(char[],kotlin.jvm.functions.Function3) -> reduceIndexed
    19399:19403:java.lang.Object reduceIndexedOrNull(java.lang.Object[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    19421:19427:java.lang.Byte reduceIndexedOrNull(byte[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    19443:19449:java.lang.Short reduceIndexedOrNull(short[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    19465:19471:java.lang.Integer reduceIndexedOrNull(int[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    19487:19493:java.lang.Long reduceIndexedOrNull(long[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    19509:19515:java.lang.Float reduceIndexedOrNull(float[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    19531:19537:java.lang.Double reduceIndexedOrNull(double[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    19553:19559:java.lang.Boolean reduceIndexedOrNull(boolean[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    19575:19581:java.lang.Character reduceIndexedOrNull(char[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    19598:19602:java.lang.Object reduceOrNull(java.lang.Object[],kotlin.jvm.functions.Function2) -> reduceOrNull
    19621:19627:java.lang.Byte reduceOrNull(byte[],kotlin.jvm.functions.Function2) -> reduceOrNull
    19644:19650:java.lang.Short reduceOrNull(short[],kotlin.jvm.functions.Function2) -> reduceOrNull
    19667:19673:java.lang.Integer reduceOrNull(int[],kotlin.jvm.functions.Function2) -> reduceOrNull
    19690:19696:java.lang.Long reduceOrNull(long[],kotlin.jvm.functions.Function2) -> reduceOrNull
    19713:19719:java.lang.Float reduceOrNull(float[],kotlin.jvm.functions.Function2) -> reduceOrNull
    19736:19742:java.lang.Double reduceOrNull(double[],kotlin.jvm.functions.Function2) -> reduceOrNull
    19759:19765:java.lang.Boolean reduceOrNull(boolean[],kotlin.jvm.functions.Function2) -> reduceOrNull
    19782:19788:java.lang.Character reduceOrNull(char[],kotlin.jvm.functions.Function2) -> reduceOrNull
    19804:19808:java.lang.Object reduceRight(java.lang.Object[],kotlin.jvm.functions.Function2) -> reduceRight
    19826:19830:byte reduceRight(byte[],kotlin.jvm.functions.Function2) -> reduceRight
    19848:19852:short reduceRight(short[],kotlin.jvm.functions.Function2) -> reduceRight
    19870:19874:int reduceRight(int[],kotlin.jvm.functions.Function2) -> reduceRight
    19892:19896:long reduceRight(long[],kotlin.jvm.functions.Function2) -> reduceRight
    19914:19918:float reduceRight(float[],kotlin.jvm.functions.Function2) -> reduceRight
    19936:19940:double reduceRight(double[],kotlin.jvm.functions.Function2) -> reduceRight
    19958:19962:boolean reduceRight(boolean[],kotlin.jvm.functions.Function2) -> reduceRight
    19980:19984:char reduceRight(char[],kotlin.jvm.functions.Function2) -> reduceRight
    20002:20006:java.lang.Object reduceRightIndexed(java.lang.Object[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    20025:20029:byte reduceRightIndexed(byte[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    20048:20052:short reduceRightIndexed(short[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    20071:20075:int reduceRightIndexed(int[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    20094:20098:long reduceRightIndexed(long[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    20117:20121:float reduceRightIndexed(float[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    20140:20144:double reduceRightIndexed(double[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    20163:20167:boolean reduceRightIndexed(boolean[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    20186:20190:char reduceRightIndexed(char[],kotlin.jvm.functions.Function3) -> reduceRightIndexed
    20209:20213:java.lang.Object reduceRightIndexedOrNull(java.lang.Object[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull
    20232:20239:java.lang.Byte reduceRightIndexedOrNull(byte[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull
    20255:20262:java.lang.Short reduceRightIndexedOrNull(short[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull
    20278:20285:java.lang.Integer reduceRightIndexedOrNull(int[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull
    20301:20308:java.lang.Long reduceRightIndexedOrNull(long[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull
    20324:20331:java.lang.Float reduceRightIndexedOrNull(float[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull
    20347:20354:java.lang.Double reduceRightIndexedOrNull(double[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull
    20370:20377:java.lang.Boolean reduceRightIndexedOrNull(boolean[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull
    20393:20400:java.lang.Character reduceRightIndexedOrNull(char[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull
    20417:20421:java.lang.Object reduceRightOrNull(java.lang.Object[],kotlin.jvm.functions.Function2) -> reduceRightOrNull
    20440:20446:java.lang.Byte reduceRightOrNull(byte[],kotlin.jvm.functions.Function2) -> reduceRightOrNull
    20463:20469:java.lang.Short reduceRightOrNull(short[],kotlin.jvm.functions.Function2) -> reduceRightOrNull
    20486:20492:java.lang.Integer reduceRightOrNull(int[],kotlin.jvm.functions.Function2) -> reduceRightOrNull
    20509:20515:java.lang.Long reduceRightOrNull(long[],kotlin.jvm.functions.Function2) -> reduceRightOrNull
    20532:20538:java.lang.Float reduceRightOrNull(float[],kotlin.jvm.functions.Function2) -> reduceRightOrNull
    20555:20561:java.lang.Double reduceRightOrNull(double[],kotlin.jvm.functions.Function2) -> reduceRightOrNull
    20578:20584:java.lang.Boolean reduceRightOrNull(boolean[],kotlin.jvm.functions.Function2) -> reduceRightOrNull
    20601:20607:java.lang.Character reduceRightOrNull(char[],kotlin.jvm.functions.Function2) -> reduceRightOrNull
    22748:22750:java.lang.Object[] requireNoNulls(java.lang.Object[]) -> requireNoNulls
    5394:5400:void reverse(java.lang.Object[]) -> reverse
    5409:5415:void reverse(byte[]) -> reverse
    5424:5430:void reverse(short[]) -> reverse
    5439:5445:void reverse(int[]) -> reverse
    5454:5460:void reverse(long[]) -> reverse
    5469:5475:void reverse(float[]) -> reverse
    5484:5490:void reverse(double[]) -> reverse
    5499:5505:void reverse(boolean[]) -> reverse
    5514:5520:void reverse(char[]) -> reverse
    5536:5543:void reverse(java.lang.Object[],int,int) -> reverse
    5559:5566:void reverse(byte[],int,int) -> reverse
    5582:5589:void reverse(short[],int,int) -> reverse
    5605:5612:void reverse(int[],int,int) -> reverse
    5628:5635:void reverse(long[],int,int) -> reverse
    5651:5658:void reverse(float[],int,int) -> reverse
    5674:5681:void reverse(double[],int,int) -> reverse
    5697:5704:void reverse(boolean[],int,int) -> reverse
    5720:5727:void reverse(char[],int,int) -> reverse
    5736:5738:java.util.List reversed(java.lang.Object[]) -> reversed
    5746:5748:java.util.List reversed(byte[]) -> reversed
    5756:5758:java.util.List reversed(short[]) -> reversed
    5766:5768:java.util.List reversed(int[]) -> reversed
    5776:5778:java.util.List reversed(long[]) -> reversed
    5786:5788:java.util.List reversed(float[]) -> reversed
    5796:5798:java.util.List reversed(double[]) -> reversed
    5806:5808:java.util.List reversed(boolean[]) -> reversed
    5816:5818:java.util.List reversed(char[]) -> reversed
    5826:5830:java.lang.Object[] reversedArray(java.lang.Object[]) -> reversedArray
    5838:5842:byte[] reversedArray(byte[]) -> reversedArray
    5850:5854:short[] reversedArray(short[]) -> reversedArray
    5862:5866:int[] reversedArray(int[]) -> reversedArray
    5874:5878:long[] reversedArray(long[]) -> reversedArray
    5886:5890:float[] reversedArray(float[]) -> reversedArray
    5898:5902:double[] reversedArray(double[]) -> reversedArray
    5910:5914:boolean[] reversedArray(boolean[]) -> reversedArray
    5922:5926:char[] reversedArray(char[]) -> reversedArray
    20623:20628:java.util.List runningFold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    20647:20652:java.util.List runningFold(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    20671:20676:java.util.List runningFold(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    20695:20700:java.util.List runningFold(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    20719:20724:java.util.List runningFold(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    20743:20748:java.util.List runningFold(float[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    20767:20772:java.util.List runningFold(double[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    20791:20796:java.util.List runningFold(boolean[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    20815:20820:java.util.List runningFold(char[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    20839:20844:java.util.List runningFoldIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    20864:20869:java.util.List runningFoldIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    20889:20894:java.util.List runningFoldIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    20914:20919:java.util.List runningFoldIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    20939:20944:java.util.List runningFoldIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    20964:20969:java.util.List runningFoldIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    20989:20994:java.util.List runningFoldIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    21014:21019:java.util.List runningFoldIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    21039:21044:java.util.List runningFoldIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    21063:21068:java.util.List runningReduce(java.lang.Object[],kotlin.jvm.functions.Function2) -> runningReduce
    21084:21089:java.util.List runningReduce(byte[],kotlin.jvm.functions.Function2) -> runningReduce
    21105:21110:java.util.List runningReduce(short[],kotlin.jvm.functions.Function2) -> runningReduce
    21126:21131:java.util.List runningReduce(int[],kotlin.jvm.functions.Function2) -> runningReduce
    21147:21152:java.util.List runningReduce(long[],kotlin.jvm.functions.Function2) -> runningReduce
    21168:21173:java.util.List runningReduce(float[],kotlin.jvm.functions.Function2) -> runningReduce
    21189:21194:java.util.List runningReduce(double[],kotlin.jvm.functions.Function2) -> runningReduce
    21210:21215:java.util.List runningReduce(boolean[],kotlin.jvm.functions.Function2) -> runningReduce
    21231:21236:java.util.List runningReduce(char[],kotlin.jvm.functions.Function2) -> runningReduce
    21255:21260:java.util.List runningReduceIndexed(java.lang.Object[],kotlin.jvm.functions.Function3) -> runningReduceIndexed
    21277:21282:java.util.List runningReduceIndexed(byte[],kotlin.jvm.functions.Function3) -> runningReduceIndexed
    21299:21304:java.util.List runningReduceIndexed(short[],kotlin.jvm.functions.Function3) -> runningReduceIndexed
    21321:21326:java.util.List runningReduceIndexed(int[],kotlin.jvm.functions.Function3) -> runningReduceIndexed
    21343:21348:java.util.List runningReduceIndexed(long[],kotlin.jvm.functions.Function3) -> runningReduceIndexed
    21365:21370:java.util.List runningReduceIndexed(float[],kotlin.jvm.functions.Function3) -> runningReduceIndexed
    21387:21392:java.util.List runningReduceIndexed(double[],kotlin.jvm.functions.Function3) -> runningReduceIndexed
    21409:21414:java.util.List runningReduceIndexed(boolean[],kotlin.jvm.functions.Function3) -> runningReduceIndexed
    21431:21436:java.util.List runningReduceIndexed(char[],kotlin.jvm.functions.Function3) -> runningReduceIndexed
    21473:21473:java.util.List scan(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    21491:21491:java.util.List scan(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    21509:21509:java.util.List scan(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    21527:21527:java.util.List scan(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    21545:21545:java.util.List scan(float[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    21563:21563:java.util.List scan(double[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    21581:21581:java.util.List scan(boolean[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    21599:21599:java.util.List scan(char[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    25248:25254:java.util.List scan(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    21636:21636:java.util.List scanIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    21655:21655:java.util.List scanIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    21674:21674:java.util.List scanIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    21693:21693:java.util.List scanIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    21712:21712:java.util.List scanIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    21731:21731:java.util.List scanIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    21750:21750:java.util.List scanIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    21769:21769:java.util.List scanIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    25257:25263:java.util.List scanIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    5935:5935:void shuffle(java.lang.Object[]) -> shuffle
    5943:5943:void shuffle(byte[]) -> shuffle
    5951:5951:void shuffle(short[]) -> shuffle
    5959:5959:void shuffle(int[]) -> shuffle
    5967:5967:void shuffle(long[]) -> shuffle
    5975:5975:void shuffle(float[]) -> shuffle
    5983:5983:void shuffle(double[]) -> shuffle
    5991:5991:void shuffle(boolean[]) -> shuffle
    5999:5999:void shuffle(char[]) -> shuffle
    6009:6013:void shuffle(java.lang.Object[],kotlin.random.Random) -> shuffle
    6024:6028:void shuffle(byte[],kotlin.random.Random) -> shuffle
    6039:6043:void shuffle(short[],kotlin.random.Random) -> shuffle
    6054:6058:void shuffle(int[],kotlin.random.Random) -> shuffle
    6069:6073:void shuffle(long[],kotlin.random.Random) -> shuffle
    6084:6088:void shuffle(float[],kotlin.random.Random) -> shuffle
    6099:6103:void shuffle(double[],kotlin.random.Random) -> shuffle
    6114:6118:void shuffle(boolean[],kotlin.random.Random) -> shuffle
    6129:6133:void shuffle(char[],kotlin.random.Random) -> shuffle
    2809:2812:java.lang.Object single(java.lang.Object[]) -> single
    2820:2823:byte single(byte[]) -> single
    2831:2834:short single(short[]) -> single
    2842:2845:int single(int[]) -> single
    2853:2856:long single(long[]) -> single
    2864:2867:float single(float[]) -> single
    2875:2878:double single(double[]) -> single
    2886:2889:boolean single(boolean[]) -> single
    2897:2900:char single(char[]) -> single
    2910:2917:java.lang.Object single(java.lang.Object[],kotlin.jvm.functions.Function1) -> single
    2928:2937:byte single(byte[],kotlin.jvm.functions.Function1) -> single
    2946:2955:short single(short[],kotlin.jvm.functions.Function1) -> single
    2964:2973:int single(int[],kotlin.jvm.functions.Function1) -> single
    2982:2991:long single(long[],kotlin.jvm.functions.Function1) -> single
    3000:3009:float single(float[],kotlin.jvm.functions.Function1) -> single
    3018:3027:double single(double[],kotlin.jvm.functions.Function1) -> single
    3036:3045:boolean single(boolean[],kotlin.jvm.functions.Function1) -> single
    3054:3063:char single(char[],kotlin.jvm.functions.Function1) -> single
    3070:3070:java.lang.Object singleOrNull(java.lang.Object[]) -> singleOrNull
    3077:3077:java.lang.Byte singleOrNull(byte[]) -> singleOrNull
    3084:3084:java.lang.Short singleOrNull(short[]) -> singleOrNull
    3091:3091:java.lang.Integer singleOrNull(int[]) -> singleOrNull
    3098:3098:java.lang.Long singleOrNull(long[]) -> singleOrNull
    3105:3105:java.lang.Float singleOrNull(float[]) -> singleOrNull
    3112:3112:java.lang.Double singleOrNull(double[]) -> singleOrNull
    3119:3119:java.lang.Boolean singleOrNull(boolean[]) -> singleOrNull
    3126:3126:java.lang.Character singleOrNull(char[]) -> singleOrNull
    3135:3136:java.lang.Object singleOrNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> singleOrNull
    3152:3155:java.lang.Byte singleOrNull(byte[],kotlin.jvm.functions.Function1) -> singleOrNull
    3169:3172:java.lang.Short singleOrNull(short[],kotlin.jvm.functions.Function1) -> singleOrNull
    3186:3189:java.lang.Integer singleOrNull(int[],kotlin.jvm.functions.Function1) -> singleOrNull
    3203:3206:java.lang.Long singleOrNull(long[],kotlin.jvm.functions.Function1) -> singleOrNull
    3220:3223:java.lang.Float singleOrNull(float[],kotlin.jvm.functions.Function1) -> singleOrNull
    3237:3240:java.lang.Double singleOrNull(double[],kotlin.jvm.functions.Function1) -> singleOrNull
    3254:3257:java.lang.Boolean singleOrNull(boolean[],kotlin.jvm.functions.Function1) -> singleOrNull
    3271:3274:java.lang.Character singleOrNull(char[],kotlin.jvm.functions.Function1) -> singleOrNull
    4395:4396:java.util.List slice(java.lang.Object[],kotlin.ranges.IntRange) -> slice
    4403:4404:java.util.List slice(byte[],kotlin.ranges.IntRange) -> slice
    4411:4412:java.util.List slice(short[],kotlin.ranges.IntRange) -> slice
    4419:4420:java.util.List slice(int[],kotlin.ranges.IntRange) -> slice
    4427:4428:java.util.List slice(long[],kotlin.ranges.IntRange) -> slice
    4435:4436:java.util.List slice(float[],kotlin.ranges.IntRange) -> slice
    4443:4444:java.util.List slice(double[],kotlin.ranges.IntRange) -> slice
    4451:4452:java.util.List slice(boolean[],kotlin.ranges.IntRange) -> slice
    4459:4460:java.util.List slice(char[],kotlin.ranges.IntRange) -> slice
    4467:4471:java.util.List slice(java.lang.Object[],java.lang.Iterable) -> slice
    4480:4484:java.util.List slice(byte[],java.lang.Iterable) -> slice
    4493:4497:java.util.List slice(short[],java.lang.Iterable) -> slice
    4506:4510:java.util.List slice(int[],java.lang.Iterable) -> slice
    4519:4523:java.util.List slice(long[],java.lang.Iterable) -> slice
    4532:4536:java.util.List slice(float[],java.lang.Iterable) -> slice
    4545:4549:java.util.List slice(double[],java.lang.Iterable) -> slice
    4558:4562:java.util.List slice(boolean[],java.lang.Iterable) -> slice
    4571:4575:java.util.List slice(char[],java.lang.Iterable) -> slice
    4584:4587:java.lang.Object[] sliceArray(java.lang.Object[],java.util.Collection) -> sliceArray
    4596:4599:byte[] sliceArray(byte[],java.util.Collection) -> sliceArray
    4608:4611:short[] sliceArray(short[],java.util.Collection) -> sliceArray
    4620:4623:int[] sliceArray(int[],java.util.Collection) -> sliceArray
    4632:4635:long[] sliceArray(long[],java.util.Collection) -> sliceArray
    4644:4647:float[] sliceArray(float[],java.util.Collection) -> sliceArray
    4656:4659:double[] sliceArray(double[],java.util.Collection) -> sliceArray
    4668:4671:boolean[] sliceArray(boolean[],java.util.Collection) -> sliceArray
    4680:4683:char[] sliceArray(char[],java.util.Collection) -> sliceArray
    4692:4693:java.lang.Object[] sliceArray(java.lang.Object[],kotlin.ranges.IntRange) -> sliceArray
    4700:4701:byte[] sliceArray(byte[],kotlin.ranges.IntRange) -> sliceArray
    4708:4709:short[] sliceArray(short[],kotlin.ranges.IntRange) -> sliceArray
    4716:4717:int[] sliceArray(int[],kotlin.ranges.IntRange) -> sliceArray
    4724:4725:long[] sliceArray(long[],kotlin.ranges.IntRange) -> sliceArray
    4732:4733:float[] sliceArray(float[],kotlin.ranges.IntRange) -> sliceArray
    4740:4741:double[] sliceArray(double[],kotlin.ranges.IntRange) -> sliceArray
    4748:4749:boolean[] sliceArray(boolean[],kotlin.ranges.IntRange) -> sliceArray
    4756:4757:char[] sliceArray(char[],kotlin.ranges.IntRange) -> sliceArray
    6143:6143:void sortBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> sortBy
    6152:6152:void sortByDescending(java.lang.Object[],kotlin.jvm.functions.Function1) -> sortByDescending
    6161:6161:void sortDescending(java.lang.Comparable[]) -> sortDescending
    6168:6170:void sortDescending(byte[]) -> sortDescending
    6178:6180:void sortDescending(short[]) -> sortDescending
    6188:6190:void sortDescending(int[]) -> sortDescending
    6198:6200:void sortDescending(long[]) -> sortDescending
    6208:6210:void sortDescending(float[]) -> sortDescending
    6218:6220:void sortDescending(double[]) -> sortDescending
    6228:6230:void sortDescending(char[]) -> sortDescending
    8164:8164:void sortDescending(java.lang.Comparable[],int,int) -> sortDescending
    8179:8180:void sortDescending(byte[],int,int) -> sortDescending
    8195:8196:void sortDescending(short[],int,int) -> sortDescending
    8211:8212:void sortDescending(int[],int,int) -> sortDescending
    8227:8228:void sortDescending(long[],int,int) -> sortDescending
    8243:8244:void sortDescending(float[],int,int) -> sortDescending
    8259:8260:void sortDescending(double[],int,int) -> sortDescending
    8275:8276:void sortDescending(char[],int,int) -> sortDescending
    6240:6240:java.util.List sorted(java.lang.Comparable[]) -> sorted
    6247:6247:java.util.List sorted(byte[]) -> sorted
    6254:6254:java.util.List sorted(short[]) -> sorted
    6261:6261:java.util.List sorted(int[]) -> sorted
    6268:6268:java.util.List sorted(long[]) -> sorted
    6275:6275:java.util.List sorted(float[]) -> sorted
    6282:6282:java.util.List sorted(double[]) -> sorted
    6289:6289:java.util.List sorted(char[]) -> sorted
    6298:6299:java.lang.Comparable[] sortedArray(java.lang.Comparable[]) -> sortedArray
    6306:6307:byte[] sortedArray(byte[]) -> sortedArray
    6314:6315:short[] sortedArray(short[]) -> sortedArray
    6322:6323:int[] sortedArray(int[]) -> sortedArray
    6330:6331:long[] sortedArray(long[]) -> sortedArray
    6338:6339:float[] sortedArray(float[]) -> sortedArray
    6346:6347:double[] sortedArray(double[]) -> sortedArray
    6354:6355:char[] sortedArray(char[]) -> sortedArray
    6364:6365:java.lang.Comparable[] sortedArrayDescending(java.lang.Comparable[]) -> sortedArrayDescending
    6372:6373:byte[] sortedArrayDescending(byte[]) -> sortedArrayDescending
    6380:6381:short[] sortedArrayDescending(short[]) -> sortedArrayDescending
    6388:6389:int[] sortedArrayDescending(int[]) -> sortedArrayDescending
    6396:6397:long[] sortedArrayDescending(long[]) -> sortedArrayDescending
    6404:6405:float[] sortedArrayDescending(float[]) -> sortedArrayDescending
    6412:6413:double[] sortedArrayDescending(double[]) -> sortedArrayDescending
    6420:6421:char[] sortedArrayDescending(char[]) -> sortedArrayDescending
    6430:6431:java.lang.Object[] sortedArrayWith(java.lang.Object[],java.util.Comparator) -> sortedArrayWith
    6442:6442:java.util.List sortedBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> sortedBy
    6451:6451:java.util.List sortedBy(byte[],kotlin.jvm.functions.Function1) -> sortedBy
    6460:6460:java.util.List sortedBy(short[],kotlin.jvm.functions.Function1) -> sortedBy
    6469:6469:java.util.List sortedBy(int[],kotlin.jvm.functions.Function1) -> sortedBy
    6478:6478:java.util.List sortedBy(long[],kotlin.jvm.functions.Function1) -> sortedBy
    6487:6487:java.util.List sortedBy(float[],kotlin.jvm.functions.Function1) -> sortedBy
    6496:6496:java.util.List sortedBy(double[],kotlin.jvm.functions.Function1) -> sortedBy
    6505:6505:java.util.List sortedBy(boolean[],kotlin.jvm.functions.Function1) -> sortedBy
    6514:6514:java.util.List sortedBy(char[],kotlin.jvm.functions.Function1) -> sortedBy
    6523:6523:java.util.List sortedByDescending(java.lang.Object[],kotlin.jvm.functions.Function1) -> sortedByDescending
    6530:6530:java.util.List sortedByDescending(byte[],kotlin.jvm.functions.Function1) -> sortedByDescending
    6537:6537:java.util.List sortedByDescending(short[],kotlin.jvm.functions.Function1) -> sortedByDescending
    6544:6544:java.util.List sortedByDescending(int[],kotlin.jvm.functions.Function1) -> sortedByDescending
    6551:6551:java.util.List sortedByDescending(long[],kotlin.jvm.functions.Function1) -> sortedByDescending
    6558:6558:java.util.List sortedByDescending(float[],kotlin.jvm.functions.Function1) -> sortedByDescending
    6565:6565:java.util.List sortedByDescending(double[],kotlin.jvm.functions.Function1) -> sortedByDescending
    6572:6572:java.util.List sortedByDescending(boolean[],kotlin.jvm.functions.Function1) -> sortedByDescending
    6579:6579:java.util.List sortedByDescending(char[],kotlin.jvm.functions.Function1) -> sortedByDescending
    6588:6588:java.util.List sortedDescending(java.lang.Comparable[]) -> sortedDescending
    6595:6595:java.util.List sortedDescending(byte[]) -> sortedDescending
    6602:6602:java.util.List sortedDescending(short[]) -> sortedDescending
    6609:6609:java.util.List sortedDescending(int[]) -> sortedDescending
    6616:6616:java.util.List sortedDescending(long[]) -> sortedDescending
    6623:6623:java.util.List sortedDescending(float[]) -> sortedDescending
    6630:6630:java.util.List sortedDescending(double[]) -> sortedDescending
    6637:6637:java.util.List sortedDescending(char[]) -> sortedDescending
    6646:6646:java.util.List sortedWith(java.lang.Object[],java.util.Comparator) -> sortedWith
    6653:6653:java.util.List sortedWith(byte[],java.util.Comparator) -> sortedWith
    6660:6660:java.util.List sortedWith(short[],java.util.Comparator) -> sortedWith
    6667:6667:java.util.List sortedWith(int[],java.util.Comparator) -> sortedWith
    6674:6674:java.util.List sortedWith(long[],java.util.Comparator) -> sortedWith
    6681:6681:java.util.List sortedWith(float[],java.util.Comparator) -> sortedWith
    6688:6688:java.util.List sortedWith(double[],java.util.Comparator) -> sortedWith
    6695:6695:java.util.List sortedWith(boolean[],java.util.Comparator) -> sortedWith
    6702:6702:java.util.List sortedWith(char[],java.util.Comparator) -> sortedWith
    11952:11953:java.util.Set subtract(java.lang.Object[],java.lang.Iterable) -> subtract
    11963:11964:java.util.Set subtract(byte[],java.lang.Iterable) -> subtract
    11974:11975:java.util.Set subtract(short[],java.lang.Iterable) -> subtract
    11985:11986:java.util.Set subtract(int[],java.lang.Iterable) -> subtract
    11996:11997:java.util.Set subtract(long[],java.lang.Iterable) -> subtract
    12007:12008:java.util.Set subtract(float[],java.lang.Iterable) -> subtract
    12018:12019:java.util.Set subtract(double[],java.lang.Iterable) -> subtract
    12029:12030:java.util.Set subtract(boolean[],java.lang.Iterable) -> subtract
    12040:12041:java.util.Set subtract(char[],java.lang.Iterable) -> subtract
    24362:24362:int sum(byte[]) -> sum
    24373:24373:int sum(short[]) -> sum
    24384:24384:int sum(int[]) -> sum
    24395:24395:long sum(long[]) -> sum
    24406:24406:float sum(float[]) -> sum
    24417:24417:double sum(double[]) -> sum
    21779:21780:int sumBy(java.lang.Object[],kotlin.jvm.functions.Function1) -> sumBy
    21792:21793:int sumBy(byte[],kotlin.jvm.functions.Function1) -> sumBy
    21805:21806:int sumBy(short[],kotlin.jvm.functions.Function1) -> sumBy
    21818:21819:int sumBy(int[],kotlin.jvm.functions.Function1) -> sumBy
    21831:21832:int sumBy(long[],kotlin.jvm.functions.Function1) -> sumBy
    21844:21845:int sumBy(float[],kotlin.jvm.functions.Function1) -> sumBy
    21857:21858:int sumBy(double[],kotlin.jvm.functions.Function1) -> sumBy
    21870:21871:int sumBy(boolean[],kotlin.jvm.functions.Function1) -> sumBy
    21883:21884:int sumBy(char[],kotlin.jvm.functions.Function1) -> sumBy
    21896:21897:double sumByDouble(java.lang.Object[],kotlin.jvm.functions.Function1) -> sumByDouble
    21909:21910:double sumByDouble(byte[],kotlin.jvm.functions.Function1) -> sumByDouble
    21922:21923:double sumByDouble(short[],kotlin.jvm.functions.Function1) -> sumByDouble
    21935:21936:double sumByDouble(int[],kotlin.jvm.functions.Function1) -> sumByDouble
    21948:21949:double sumByDouble(long[],kotlin.jvm.functions.Function1) -> sumByDouble
    21961:21962:double sumByDouble(float[],kotlin.jvm.functions.Function1) -> sumByDouble
    21974:21975:double sumByDouble(double[],kotlin.jvm.functions.Function1) -> sumByDouble
    21987:21988:double sumByDouble(boolean[],kotlin.jvm.functions.Function1) -> sumByDouble
    22000:22001:double sumByDouble(char[],kotlin.jvm.functions.Function1) -> sumByDouble
    24291:24291:int sumOfByte(java.lang.Byte[]) -> sumOfByte
    22016:22017:double sumOfDouble(java.lang.Object[],kotlin.jvm.functions.Function1) -> sumOfDouble
    22032:22033:double sumOfDouble(byte[],kotlin.jvm.functions.Function1) -> sumOfDouble
    22048:22049:double sumOfDouble(short[],kotlin.jvm.functions.Function1) -> sumOfDouble
    22064:22065:double sumOfDouble(int[],kotlin.jvm.functions.Function1) -> sumOfDouble
    22080:22081:double sumOfDouble(long[],kotlin.jvm.functions.Function1) -> sumOfDouble
    22096:22097:double sumOfDouble(float[],kotlin.jvm.functions.Function1) -> sumOfDouble
    22112:22113:double sumOfDouble(double[],kotlin.jvm.functions.Function1) -> sumOfDouble
    22128:22129:double sumOfDouble(boolean[],kotlin.jvm.functions.Function1) -> sumOfDouble
    22144:22145:double sumOfDouble(char[],kotlin.jvm.functions.Function1) -> sumOfDouble
    24351:24351:double sumOfDouble(java.lang.Double[]) -> sumOfDouble
    24339:24339:float sumOfFloat(java.lang.Float[]) -> sumOfFloat
    22160:22161:int sumOfInt(java.lang.Object[],kotlin.jvm.functions.Function1) -> sumOfInt
    22176:22177:int sumOfInt(byte[],kotlin.jvm.functions.Function1) -> sumOfInt
    22192:22193:int sumOfInt(short[],kotlin.jvm.functions.Function1) -> sumOfInt
    22208:22209:int sumOfInt(int[],kotlin.jvm.functions.Function1) -> sumOfInt
    22224:22225:int sumOfInt(long[],kotlin.jvm.functions.Function1) -> sumOfInt
    22240:22241:int sumOfInt(float[],kotlin.jvm.functions.Function1) -> sumOfInt
    22256:22257:int sumOfInt(double[],kotlin.jvm.functions.Function1) -> sumOfInt
    22272:22273:int sumOfInt(boolean[],kotlin.jvm.functions.Function1) -> sumOfInt
    22288:22289:int sumOfInt(char[],kotlin.jvm.functions.Function1) -> sumOfInt
    24315:24315:int sumOfInt(java.lang.Integer[]) -> sumOfInt
    22304:22305:long sumOfLong(java.lang.Object[],kotlin.jvm.functions.Function1) -> sumOfLong
    22320:22321:long sumOfLong(byte[],kotlin.jvm.functions.Function1) -> sumOfLong
    22336:22337:long sumOfLong(short[],kotlin.jvm.functions.Function1) -> sumOfLong
    22352:22353:long sumOfLong(int[],kotlin.jvm.functions.Function1) -> sumOfLong
    22368:22369:long sumOfLong(long[],kotlin.jvm.functions.Function1) -> sumOfLong
    22384:22385:long sumOfLong(float[],kotlin.jvm.functions.Function1) -> sumOfLong
    22400:22401:long sumOfLong(double[],kotlin.jvm.functions.Function1) -> sumOfLong
    22416:22417:long sumOfLong(boolean[],kotlin.jvm.functions.Function1) -> sumOfLong
    22432:22433:long sumOfLong(char[],kotlin.jvm.functions.Function1) -> sumOfLong
    24327:24327:long sumOfLong(java.lang.Long[]) -> sumOfLong
    24303:24303:int sumOfShort(java.lang.Short[]) -> sumOfShort
    22448:22450:int sumOfUInt(java.lang.Object[],kotlin.jvm.functions.Function1) -> sumOfUInt
    22465:22467:int sumOfUInt(byte[],kotlin.jvm.functions.Function1) -> sumOfUInt
    22482:22484:int sumOfUInt(short[],kotlin.jvm.functions.Function1) -> sumOfUInt
    22499:22501:int sumOfUInt(int[],kotlin.jvm.functions.Function1) -> sumOfUInt
    22516:22518:int sumOfUInt(long[],kotlin.jvm.functions.Function1) -> sumOfUInt
    22533:22535:int sumOfUInt(float[],kotlin.jvm.functions.Function1) -> sumOfUInt
    22550:22552:int sumOfUInt(double[],kotlin.jvm.functions.Function1) -> sumOfUInt
    22567:22569:int sumOfUInt(boolean[],kotlin.jvm.functions.Function1) -> sumOfUInt
    22584:22586:int sumOfUInt(char[],kotlin.jvm.functions.Function1) -> sumOfUInt
    22601:22603:long sumOfULong(java.lang.Object[],kotlin.jvm.functions.Function1) -> sumOfULong
    22618:22620:long sumOfULong(byte[],kotlin.jvm.functions.Function1) -> sumOfULong
    22635:22637:long sumOfULong(short[],kotlin.jvm.functions.Function1) -> sumOfULong
    22652:22654:long sumOfULong(int[],kotlin.jvm.functions.Function1) -> sumOfULong
    22669:22671:long sumOfULong(long[],kotlin.jvm.functions.Function1) -> sumOfULong
    22686:22688:long sumOfULong(float[],kotlin.jvm.functions.Function1) -> sumOfULong
    22703:22705:long sumOfULong(double[],kotlin.jvm.functions.Function1) -> sumOfULong
    22720:22722:long sumOfULong(boolean[],kotlin.jvm.functions.Function1) -> sumOfULong
    22737:22739:long sumOfULong(char[],kotlin.jvm.functions.Function1) -> sumOfULong
    4768:4775:java.util.List take(java.lang.Object[],int) -> take
    4790:4797:java.util.List take(byte[],int) -> take
    4812:4819:java.util.List take(short[],int) -> take
    4834:4841:java.util.List take(int[],int) -> take
    4856:4863:java.util.List take(long[],int) -> take
    4878:4885:java.util.List take(float[],int) -> take
    4900:4907:java.util.List take(double[],int) -> take
    4922:4929:java.util.List take(boolean[],int) -> take
    4944:4951:java.util.List take(char[],int) -> take
    4966:4973:java.util.List takeLast(java.lang.Object[],int) -> takeLast
    4985:4992:java.util.List takeLast(byte[],int) -> takeLast
    5004:5011:java.util.List takeLast(short[],int) -> takeLast
    5023:5030:java.util.List takeLast(int[],int) -> takeLast
    5042:5049:java.util.List takeLast(long[],int) -> takeLast
    5061:5068:java.util.List takeLast(float[],int) -> takeLast
    5080:5087:java.util.List takeLast(double[],int) -> takeLast
    5099:5106:java.util.List takeLast(boolean[],int) -> takeLast
    5118:5125:java.util.List takeLast(char[],int) -> takeLast
    5135:5140:java.util.List takeLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1) -> takeLastWhile
    5149:5154:java.util.List takeLastWhile(byte[],kotlin.jvm.functions.Function1) -> takeLastWhile
    5163:5168:java.util.List takeLastWhile(short[],kotlin.jvm.functions.Function1) -> takeLastWhile
    5177:5182:java.util.List takeLastWhile(int[],kotlin.jvm.functions.Function1) -> takeLastWhile
    5191:5196:java.util.List takeLastWhile(long[],kotlin.jvm.functions.Function1) -> takeLastWhile
    5205:5210:java.util.List takeLastWhile(float[],kotlin.jvm.functions.Function1) -> takeLastWhile
    5219:5224:java.util.List takeLastWhile(double[],kotlin.jvm.functions.Function1) -> takeLastWhile
    5233:5238:java.util.List takeLastWhile(boolean[],kotlin.jvm.functions.Function1) -> takeLastWhile
    5247:5252:java.util.List takeLastWhile(char[],kotlin.jvm.functions.Function1) -> takeLastWhile
    5261:5265:java.util.List takeWhile(java.lang.Object[],kotlin.jvm.functions.Function1) -> takeWhile
    5276:5280:java.util.List takeWhile(byte[],kotlin.jvm.functions.Function1) -> takeWhile
    5291:5295:java.util.List takeWhile(short[],kotlin.jvm.functions.Function1) -> takeWhile
    5306:5310:java.util.List takeWhile(int[],kotlin.jvm.functions.Function1) -> takeWhile
    5321:5325:java.util.List takeWhile(long[],kotlin.jvm.functions.Function1) -> takeWhile
    5336:5340:java.util.List takeWhile(float[],kotlin.jvm.functions.Function1) -> takeWhile
    5351:5355:java.util.List takeWhile(double[],kotlin.jvm.functions.Function1) -> takeWhile
    5366:5370:java.util.List takeWhile(boolean[],kotlin.jvm.functions.Function1) -> takeWhile
    5381:5385:java.util.List takeWhile(char[],kotlin.jvm.functions.Function1) -> takeWhile
    8303:8303:boolean[] toBooleanArray(java.lang.Boolean[]) -> toBooleanArray
    8310:8310:byte[] toByteArray(java.lang.Byte[]) -> toByteArray
    8317:8317:char[] toCharArray(java.lang.Character[]) -> toCharArray
    9522:9523:java.util.Collection toCollection(java.lang.Object[],java.util.Collection) -> toCollection
    9532:9533:java.util.Collection toCollection(byte[],java.util.Collection) -> toCollection
    9542:9543:java.util.Collection toCollection(short[],java.util.Collection) -> toCollection
    9552:9553:java.util.Collection toCollection(int[],java.util.Collection) -> toCollection
    9562:9563:java.util.Collection toCollection(long[],java.util.Collection) -> toCollection
    9572:9573:java.util.Collection toCollection(float[],java.util.Collection) -> toCollection
    9582:9583:java.util.Collection toCollection(double[],java.util.Collection) -> toCollection
    9592:9593:java.util.Collection toCollection(boolean[],java.util.Collection) -> toCollection
    9602:9603:java.util.Collection toCollection(char[],java.util.Collection) -> toCollection
    8324:8324:double[] toDoubleArray(java.lang.Double[]) -> toDoubleArray
    8331:8331:float[] toFloatArray(java.lang.Float[]) -> toFloatArray
    9612:9612:java.util.HashSet toHashSet(java.lang.Object[]) -> toHashSet
    9619:9619:java.util.HashSet toHashSet(byte[]) -> toHashSet
    9626:9626:java.util.HashSet toHashSet(short[]) -> toHashSet
    9633:9633:java.util.HashSet toHashSet(int[]) -> toHashSet
    9640:9640:java.util.HashSet toHashSet(long[]) -> toHashSet
    9647:9647:java.util.HashSet toHashSet(float[]) -> toHashSet
    9654:9654:java.util.HashSet toHashSet(double[]) -> toHashSet
    9661:9661:java.util.HashSet toHashSet(boolean[]) -> toHashSet
    9668:9668:java.util.HashSet toHashSet(char[]) -> toHashSet
    8338:8338:int[] toIntArray(java.lang.Integer[]) -> toIntArray
    9675:9678:java.util.List toList(java.lang.Object[]) -> toList
    9686:9689:java.util.List toList(byte[]) -> toList
    9697:9700:java.util.List toList(short[]) -> toList
    9708:9711:java.util.List toList(int[]) -> toList
    9719:9722:java.util.List toList(long[]) -> toList
    9730:9733:java.util.List toList(float[]) -> toList
    9741:9744:java.util.List toList(double[]) -> toList
    9752:9755:java.util.List toList(boolean[]) -> toList
    9763:9766:java.util.List toList(char[]) -> toList
    8345:8345:long[] toLongArray(java.lang.Long[]) -> toLongArray
    9774:9774:java.util.List toMutableList(java.lang.Object[]) -> toMutableList
    9781:9782:java.util.List toMutableList(byte[]) -> toMutableList
    9790:9791:java.util.List toMutableList(short[]) -> toMutableList
    9799:9800:java.util.List toMutableList(int[]) -> toMutableList
    9808:9809:java.util.List toMutableList(long[]) -> toMutableList
    9817:9818:java.util.List toMutableList(float[]) -> toMutableList
    9826:9827:java.util.List toMutableList(double[]) -> toMutableList
    9835:9836:java.util.List toMutableList(boolean[]) -> toMutableList
    9844:9845:java.util.List toMutableList(char[]) -> toMutableList
    12051:12051:java.util.Set toMutableSet(java.lang.Object[]) -> toMutableSet
    12060:12060:java.util.Set toMutableSet(byte[]) -> toMutableSet
    12069:12069:java.util.Set toMutableSet(short[]) -> toMutableSet
    12078:12078:java.util.Set toMutableSet(int[]) -> toMutableSet
    12087:12087:java.util.Set toMutableSet(long[]) -> toMutableSet
    12096:12096:java.util.Set toMutableSet(float[]) -> toMutableSet
    12105:12105:java.util.Set toMutableSet(double[]) -> toMutableSet
    12114:12114:java.util.Set toMutableSet(boolean[]) -> toMutableSet
    12123:12123:java.util.Set toMutableSet(char[]) -> toMutableSet
    9855:9858:java.util.Set toSet(java.lang.Object[]) -> toSet
    9868:9871:java.util.Set toSet(byte[]) -> toSet
    9881:9884:java.util.Set toSet(short[]) -> toSet
    9894:9897:java.util.Set toSet(int[]) -> toSet
    9907:9910:java.util.Set toSet(long[]) -> toSet
    9920:9923:java.util.Set toSet(float[]) -> toSet
    9933:9936:java.util.Set toSet(double[]) -> toSet
    9946:9949:java.util.Set toSet(boolean[]) -> toSet
    9959:9962:java.util.Set toSet(char[]) -> toSet
    8352:8352:short[] toShortArray(java.lang.Short[]) -> toShortArray
    12136:12137:java.util.Set union(java.lang.Object[],java.lang.Iterable) -> union
    12151:12152:java.util.Set union(byte[],java.lang.Iterable) -> union
    12166:12167:java.util.Set union(short[],java.lang.Iterable) -> union
    12181:12182:java.util.Set union(int[],java.lang.Iterable) -> union
    12196:12197:java.util.Set union(long[],java.lang.Iterable) -> union
    12211:12212:java.util.Set union(float[],java.lang.Iterable) -> union
    12226:12227:java.util.Set union(double[],java.lang.Iterable) -> union
    12241:12242:java.util.Set union(boolean[],java.lang.Iterable) -> union
    12256:12257:java.util.Set union(char[],java.lang.Iterable) -> union
    11490:11490:java.lang.Iterable withIndex(java.lang.Object[]) -> withIndex
    11498:11498:java.lang.Iterable withIndex(byte[]) -> withIndex
    11506:11506:java.lang.Iterable withIndex(short[]) -> withIndex
    11514:11514:java.lang.Iterable withIndex(int[]) -> withIndex
    11522:11522:java.lang.Iterable withIndex(long[]) -> withIndex
    11530:11530:java.lang.Iterable withIndex(float[]) -> withIndex
    11538:11538:java.lang.Iterable withIndex(double[]) -> withIndex
    11546:11546:java.lang.Iterable withIndex(boolean[]) -> withIndex
    11554:11554:java.lang.Iterable withIndex(char[]) -> withIndex
    23035:23038:java.util.List zip(java.lang.Object[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    23051:23054:java.util.List zip(byte[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    23067:23070:java.util.List zip(short[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    23083:23086:java.util.List zip(int[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    23099:23102:java.util.List zip(long[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    23115:23118:java.util.List zip(float[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    23131:23134:java.util.List zip(double[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    23147:23150:java.util.List zip(boolean[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    23163:23166:java.util.List zip(char[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    23269:23274:java.util.List zip(java.lang.Object[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    23287:23292:java.util.List zip(byte[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    23305:23310:java.util.List zip(short[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    23323:23328:java.util.List zip(int[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    23341:23346:java.util.List zip(long[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    23359:23364:java.util.List zip(float[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    23377:23382:java.util.List zip(double[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    23395:23400:java.util.List zip(boolean[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    23413:23418:java.util.List zip(char[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    23511:23514:java.util.List zip(byte[],byte[],kotlin.jvm.functions.Function2) -> zip
    23527:23530:java.util.List zip(short[],short[],kotlin.jvm.functions.Function2) -> zip
    23543:23546:java.util.List zip(int[],int[],kotlin.jvm.functions.Function2) -> zip
    23559:23562:java.util.List zip(long[],long[],kotlin.jvm.functions.Function2) -> zip
    23575:23578:java.util.List zip(float[],float[],kotlin.jvm.functions.Function2) -> zip
    23591:23594:java.util.List zip(double[],double[],kotlin.jvm.functions.Function2) -> zip
    23607:23610:java.util.List zip(boolean[],boolean[],kotlin.jvm.functions.Function2) -> zip
    23623:23626:java.util.List zip(char[],char[],kotlin.jvm.functions.Function2) -> zip
    22944:25269:java.util.List zip(java.lang.Object[],java.lang.Object[]) -> zip
    22954:25275:java.util.List zip(byte[],java.lang.Object[]) -> zip
    22964:25281:java.util.List zip(short[],java.lang.Object[]) -> zip
    22974:25287:java.util.List zip(int[],java.lang.Object[]) -> zip
    22984:25293:java.util.List zip(long[],java.lang.Object[]) -> zip
    22994:25299:java.util.List zip(float[],java.lang.Object[]) -> zip
    23004:25305:java.util.List zip(double[],java.lang.Object[]) -> zip
    23014:25311:java.util.List zip(boolean[],java.lang.Object[]) -> zip
    23024:25317:java.util.List zip(char[],java.lang.Object[]) -> zip
    23178:25325:java.util.List zip(java.lang.Object[],java.lang.Iterable) -> zip
    23188:25333:java.util.List zip(byte[],java.lang.Iterable) -> zip
    23198:25341:java.util.List zip(short[],java.lang.Iterable) -> zip
    23208:25349:java.util.List zip(int[],java.lang.Iterable) -> zip
    23218:25357:java.util.List zip(long[],java.lang.Iterable) -> zip
    23228:25365:java.util.List zip(float[],java.lang.Iterable) -> zip
    23238:25373:java.util.List zip(double[],java.lang.Iterable) -> zip
    23248:25381:java.util.List zip(boolean[],java.lang.Iterable) -> zip
    23258:25389:java.util.List zip(char[],java.lang.Iterable) -> zip
    23430:25395:java.util.List zip(byte[],byte[]) -> zip
    23440:25401:java.util.List zip(short[],short[]) -> zip
    23450:25407:java.util.List zip(int[],int[]) -> zip
    23460:25413:java.util.List zip(long[],long[]) -> zip
    23470:25419:java.util.List zip(float[],float[]) -> zip
    23480:25425:java.util.List zip(double[],double[]) -> zip
    23490:25431:java.util.List zip(boolean[],boolean[]) -> zip
    23500:25437:java.util.List zip(char[],char[]) -> zip
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(java.lang.Object[]) -> <init>
    71:71:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(byte[]) -> <init>
    71:71:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(short[]) -> <init>
    71:71:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(int[]) -> <init>
    71:71:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(long[]) -> <init>
    71:71:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(float[]) -> <init>
    71:71:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(double[]) -> <init>
    71:71:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(boolean[]) -> <init>
    71:71:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9 -> kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(char[]) -> <init>
    71:71:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(java.lang.Object[]) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(byte[]) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(short[]) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(int[]) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(long[]) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(float[]) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(double[]) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(boolean[]) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9 -> kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(char[]) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1 -> kotlin.collections.ArraysKt___ArraysKt$groupingBy$1:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    11052:11052:void <init>(java.lang.Object[],kotlin.jvm.functions.Function1) -> <init>
    11054:11054:java.lang.Object keyOf(java.lang.Object) -> keyOf
    11053:11053:java.util.Iterator sourceIterator() -> sourceIterator
kotlin.collections.ArraysKt___ArraysKt$withIndex$1 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$1:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    0:0:void <init>(java.lang.Object[]) -> <init>
    11490:11490:java.lang.Object invoke() -> invoke
    11490:11490:java.util.Iterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$2 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$2:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    0:0:void <init>(byte[]) -> <init>
    11498:11498:java.lang.Object invoke() -> invoke
    11498:11498:java.util.Iterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$3 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$3:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    0:0:void <init>(short[]) -> <init>
    11506:11506:java.lang.Object invoke() -> invoke
    11506:11506:java.util.Iterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$4 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$4:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    0:0:void <init>(int[]) -> <init>
    11514:11514:java.lang.Object invoke() -> invoke
    11514:11514:java.util.Iterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$5 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$5:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    0:0:void <init>(long[]) -> <init>
    11522:11522:java.lang.Object invoke() -> invoke
    11522:11522:java.util.Iterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$6 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$6:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    0:0:void <init>(float[]) -> <init>
    11530:11530:java.lang.Object invoke() -> invoke
    11530:11530:java.util.Iterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$7 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$7:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    0:0:void <init>(double[]) -> <init>
    11538:11538:java.lang.Object invoke() -> invoke
    11538:11538:java.util.Iterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$8 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$8:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    0:0:void <init>(boolean[]) -> <init>
    11546:11546:java.lang.Object invoke() -> invoke
    11546:11546:java.util.Iterator invoke() -> invoke
kotlin.collections.ArraysKt___ArraysKt$withIndex$9 -> kotlin.collections.ArraysKt___ArraysKt$withIndex$9:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    0:0:void <init>(char[]) -> <init>
    11554:11554:java.lang.Object invoke() -> invoke
    11554:11554:java.util.Iterator invoke() -> invoke
kotlin.collections.ArraysUtilJVM -> kotlin.collections.ArraysUtilJVM:
    11:11:void <init>() -> <init>
    13:13:java.util.List asList(java.lang.Object[]) -> asList
kotlin.collections.BooleanIterator -> kotlin.collections.BooleanIterator:
# {"id":"sourceFile","fileName":"PrimitiveIterators.kt"}
    67:67:void <init>() -> <init>
    67:67:java.lang.Object next() -> next
    68:68:java.lang.Boolean next() -> next
    0:0:void remove() -> remove
kotlin.collections.ByteIterator -> kotlin.collections.ByteIterator:
# {"id":"sourceFile","fileName":"PrimitiveIterators.kt"}
    11:11:void <init>() -> <init>
    11:11:java.lang.Object next() -> next
    12:12:java.lang.Byte next() -> next
    0:0:void remove() -> remove
kotlin.collections.CharIterator -> kotlin.collections.CharIterator:
# {"id":"sourceFile","fileName":"PrimitiveIterators.kt"}
    19:19:void <init>() -> <init>
    19:19:java.lang.Object next() -> next
    20:20:java.lang.Character next() -> next
    0:0:void remove() -> remove
kotlin.collections.CollectionsKt -> kotlin.collections.CollectionsKt:
    1:1:void <init>() -> <init>
    0:0:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean addAll(java.util.Collection,kotlin.sequences.Sequence) -> addAll
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean addAll(java.util.Collection,java.lang.Object[]) -> addAll
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence asSequence(java.lang.Iterable) -> asSequence
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int binarySearch$default(java.util.List,java.lang.Comparable,int,int,int,java.lang.Object) -> binarySearch$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List build(java.util.List) -> build
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Collection convertToListIfNotCollection(java.lang.Iterable) -> convertToListIfNotCollection
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List createListBuilder() -> createListBuilder
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List createListBuilder(int) -> createListBuilder
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List drop(java.lang.Iterable,int) -> drop
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List dropLast(java.util.List,int) -> dropLast
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List emptyList() -> emptyList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object first(java.util.List) -> first
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object firstOrNull(java.util.List) -> firstOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntRange getIndices(java.util.Collection) -> getIndices
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getLastIndex(java.util.List) -> getLastIndex
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Iterator iterator(java.util.Enumeration) -> iterator
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object last(java.util.List) -> last
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List listOf(java.lang.Object) -> listOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List listOf(java.lang.Object[]) -> listOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List listOfNotNull(java.lang.Object[]) -> listOfNotNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Comparable minOrNull(java.lang.Iterable) -> minOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List mutableListOf(java.lang.Object[]) -> mutableListOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List plus(java.util.Collection,java.lang.Iterable) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List plus(java.util.Collection,java.lang.Object) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object removeLast(java.util.List) -> removeLast
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object removeLastOrNull(java.util.List) -> removeLastOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean retainAll(java.lang.Iterable,kotlin.jvm.functions.Function1) -> retainAll
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void reverse(java.util.List) -> reverse
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object single(java.lang.Iterable) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object singleOrNull(java.util.List) -> singleOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void sort(java.util.List) -> sort
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void sortWith(java.util.List,java.util.Comparator) -> sortWith
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator) -> sortedWith
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void throwCountOverflow() -> throwCountOverflow
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void throwIndexOverflow() -> throwIndexOverflow
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List toList(java.lang.Iterable) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List toMutableList(java.util.Collection) -> toMutableList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Set toSet(java.lang.Iterable) -> toSet
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.CollectionsKt__CollectionsJVMKt -> kotlin.collections.CollectionsKt__CollectionsJVMKt:
# {"id":"sourceFile","fileName":"CollectionsJVM.kt"}
    0:0:void <init>() -> <init>
    53:53:java.util.List build(java.util.List) -> build
    28:28:java.util.List buildListInternal(kotlin.jvm.functions.Function1) -> buildListInternal
    35:35:java.util.List buildListInternal(int,kotlin.jvm.functions.Function1) -> buildListInternal
    115:118:int checkCountOverflow(int) -> checkCountOverflow
    102:105:int checkIndexOverflow(int) -> checkIndexOverflow
    81:81:java.lang.Object[] copyToArrayImpl(java.util.Collection) -> copyToArrayImpl
    86:86:java.lang.Object[] copyToArrayImpl(java.util.Collection,java.lang.Object[]) -> copyToArrayImpl
    90:94:java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean) -> copyToArrayOfAny
    41:41:java.util.List createListBuilder() -> createListBuilder
    47:47:java.util.List createListBuilder(int) -> createListBuilder
    22:22:java.util.List listOf(java.lang.Object) -> listOf
    69:69:java.util.List shuffled(java.lang.Iterable) -> shuffled
    76:76:java.util.List shuffled(java.lang.Iterable,java.util.Random) -> shuffled
    62:62:java.util.List toList(java.util.Enumeration) -> toList
kotlin.collections.CollectionsKt__CollectionsKt -> kotlin.collections.CollectionsKt__CollectionsKt:
# {"id":"sourceFile","fileName":"Collections.kt"}
    0:0:void <init>() -> <init>
    149:149:java.util.List List(int,kotlin.jvm.functions.Function1) -> List
    163:164:java.util.List MutableList(int,kotlin.jvm.functions.Function1) -> MutableList
    110:110:java.util.ArrayList arrayListOf() -> arrayListOf
    124:124:java.util.ArrayList arrayListOf(java.lang.Object[]) -> arrayListOf
    55:55:java.util.Collection asCollection(java.lang.Object[]) -> asCollection
    326:334:int binarySearch(java.util.List,java.lang.Comparable,int,int) -> binarySearch
    362:370:int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,int,int) -> binarySearch
    431:439:int binarySearch(java.util.List,int,int,kotlin.jvm.functions.Function1) -> binarySearch
    325:325:int binarySearch$default(java.util.List,java.lang.Comparable,int,int,int,java.lang.Object) -> binarySearch$default
    361:361:int binarySearch$default(java.util.List,java.lang.Object,java.util.Comparator,int,int,int,java.lang.Object) -> binarySearch$default
    430:430:int binarySearch$default(java.util.List,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> binarySearch$default
    404:404:int binarySearchBy(java.util.List,java.lang.Comparable,int,int,kotlin.jvm.functions.Function1) -> binarySearchBy
    401:483:int binarySearchBy$default(java.util.List,java.lang.Comparable,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> binarySearchBy$default
    185:185:java.util.List buildList(kotlin.jvm.functions.Function1) -> buildList
    214:214:java.util.List buildList(int,kotlin.jvm.functions.Function1) -> buildList
    292:292:boolean containsAll(java.util.Collection,java.util.Collection) -> containsAll
    71:71:java.util.List emptyList() -> emptyList
    227:227:kotlin.ranges.IntRange getIndices(java.util.Collection) -> getIndices
    235:235:int getLastIndex(java.util.List) -> getLastIndex
    281:281:java.lang.Object ifEmpty(java.util.Collection,kotlin.jvm.functions.Function0) -> ifEmpty
    242:242:boolean isNotEmpty(java.util.Collection) -> isNotEmpty
    255:255:boolean isNullOrEmpty(java.util.Collection) -> isNullOrEmpty
    77:77:java.util.List listOf(java.lang.Object[]) -> listOf
    94:94:java.util.List listOf() -> listOf
    130:130:java.util.List listOfNotNull(java.lang.Object) -> listOfNotNull
    136:136:java.util.List listOfNotNull(java.lang.Object[]) -> listOfNotNull
    102:102:java.util.List mutableListOf() -> mutableListOf
    117:117:java.util.List mutableListOf(java.lang.Object[]) -> mutableListOf
    303:305:java.util.List optimizeReadOnlyList(java.util.List) -> optimizeReadOnlyList
    263:263:java.util.Collection orEmpty(java.util.Collection) -> orEmpty
    270:270:java.util.List orEmpty(java.util.List) -> orEmpty
    457:459:void rangeCheck$CollectionsKt__CollectionsKt(int,int,int) -> rangeCheck$CollectionsKt__CollectionsKt
    300:300:java.util.List shuffled(java.lang.Iterable,kotlin.random.Random) -> shuffled
    479:479:void throwCountOverflow() -> throwCountOverflow
    475:475:void throwIndexOverflow() -> throwIndexOverflow
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1 -> kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1:
# {"id":"sourceFile","fileName":"Collections.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function1,java.lang.Comparable) -> <init>
    404:404:java.lang.Integer invoke(java.lang.Object) -> invoke
    404:404:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.collections.CollectionsKt__IterablesKt -> kotlin.collections.CollectionsKt__IterablesKt:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    0:0:void <init>() -> <init>
    16:16:java.lang.Iterable Iterable(kotlin.jvm.functions.Function0) -> Iterable
    39:39:int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
    33:33:java.lang.Integer collectionSizeOrNull(java.lang.Iterable) -> collectionSizeOrNull
    47:49:java.util.List flatten(java.lang.Iterable) -> flatten
    61:68:kotlin.Pair unzip(java.lang.Iterable) -> unzip
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1 -> kotlin.collections.CollectionsKt__IterablesKt$Iterable$1:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(kotlin.jvm.functions.Function0) -> <init>
    17:17:java.util.Iterator iterator() -> iterator
kotlin.collections.CollectionsKt__IteratorsJVMKt -> kotlin.collections.CollectionsKt__IteratorsJVMKt:
# {"id":"sourceFile","fileName":"IteratorsJVM.kt"}
    0:0:void <init>() -> <init>
    15:15:java.util.Iterator iterator(java.util.Enumeration) -> iterator
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1 -> kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1:
# {"id":"sourceFile","fileName":"IteratorsJVM.kt"}
    15:15:void <init>(java.util.Enumeration) -> <init>
    16:16:boolean hasNext() -> hasNext
    18:18:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.collections.CollectionsKt__IteratorsKt -> kotlin.collections.CollectionsKt__IteratorsKt:
# {"id":"sourceFile","fileName":"Iterators.kt"}
    0:0:void <init>() -> <init>
    32:32:void forEach(java.util.Iterator,kotlin.jvm.functions.Function1) -> forEach
    0:0:java.util.Iterator iterator(java.util.Iterator) -> iterator
    25:25:java.util.Iterator withIndex(java.util.Iterator) -> withIndex
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> kotlin.collections.CollectionsKt__MutableCollectionsJVMKt:
# {"id":"sourceFile","fileName":"MutableCollectionsJVM.kt"}
    0:0:void <init>() -> <init>
    53:53:void fill(java.util.List,java.lang.Object) -> fill
    63:63:void shuffle(java.util.List) -> shuffle
    72:72:void shuffle(java.util.List,java.util.Random) -> shuffle
    15:15:void sort(java.util.List,java.util.Comparator) -> sort
    20:20:void sort(java.util.List,kotlin.jvm.functions.Function2) -> sort
    31:31:void sort(java.util.List) -> sort
    42:42:void sortWith(java.util.List,java.util.Comparator) -> sortWith
kotlin.collections.CollectionsKt__MutableCollectionsKt -> kotlin.collections.CollectionsKt__MutableCollectionsKt:
# {"id":"sourceFile","fileName":"MutableCollections.kt"}
    0:0:void <init>() -> <init>
    114:118:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    129:130:boolean addAll(java.util.Collection,kotlin.sequences.Sequence) -> addAll
    139:139:boolean addAll(java.util.Collection,java.lang.Object[]) -> addAll
    147:147:java.util.Collection convertToListIfNotCollection(java.lang.Iterable) -> convertToListIfNotCollection
    222:225:boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.lang.Iterable,kotlin.jvm.functions.Function1,boolean) -> filterInPlace$CollectionsKt__MutableCollectionsKt
    284:300:boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.util.List,kotlin.jvm.functions.Function1,boolean) -> filterInPlace$CollectionsKt__MutableCollectionsKt
    82:82:void minusAssign(java.util.Collection,java.lang.Object) -> minusAssign
    90:90:void minusAssign(java.util.Collection,java.lang.Iterable) -> minusAssign
    98:98:void minusAssign(java.util.Collection,java.lang.Object[]) -> minusAssign
    106:106:void minusAssign(java.util.Collection,kotlin.sequences.Sequence) -> minusAssign
    50:50:void plusAssign(java.util.Collection,java.lang.Object) -> plusAssign
    58:58:void plusAssign(java.util.Collection,java.lang.Iterable) -> plusAssign
    66:66:void plusAssign(java.util.Collection,java.lang.Object[]) -> plusAssign
    74:74:void plusAssign(java.util.Collection,kotlin.sequences.Sequence) -> plusAssign
    21:21:boolean remove(java.util.Collection,java.lang.Object) -> remove
    239:239:java.lang.Object remove(java.util.List,int) -> remove
    32:32:boolean removeAll(java.util.Collection,java.util.Collection) -> removeAll
    153:153:boolean removeAll(java.util.Collection,java.lang.Iterable) -> removeAll
    160:161:boolean removeAll(java.util.Collection,kotlin.sequences.Sequence) -> removeAll
    168:168:boolean removeAll(java.util.Collection,java.lang.Object[]) -> removeAll
    211:211:boolean removeAll(java.lang.Iterable,kotlin.jvm.functions.Function1) -> removeAll
    274:274:boolean removeAll(java.util.List,kotlin.jvm.functions.Function1) -> removeAll
    246:246:java.lang.Object removeFirst(java.util.List) -> removeFirst
    253:253:java.lang.Object removeFirstOrNull(java.util.List) -> removeFirstOrNull
    260:260:java.lang.Object removeLast(java.util.List) -> removeLast
    267:267:java.lang.Object removeLastOrNull(java.util.List) -> removeLastOrNull
    43:43:boolean retainAll(java.util.Collection,java.util.Collection) -> retainAll
    175:175:boolean retainAll(java.util.Collection,java.lang.Iterable) -> retainAll
    182:185:boolean retainAll(java.util.Collection,java.lang.Object[]) -> retainAll
    192:196:boolean retainAll(java.util.Collection,kotlin.sequences.Sequence) -> retainAll
    218:218:boolean retainAll(java.lang.Iterable,kotlin.jvm.functions.Function1) -> retainAll
    281:281:boolean retainAll(java.util.List,kotlin.jvm.functions.Function1) -> retainAll
    200:201:boolean retainNothing$CollectionsKt__MutableCollectionsKt(java.util.Collection) -> retainNothing$CollectionsKt__MutableCollectionsKt
kotlin.collections.CollectionsKt__ReversedViewsKt -> kotlin.collections.CollectionsKt__ReversedViewsKt:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
    0:0:void <init>() -> <init>
    1:1:int access$reverseElementIndex(java.util.List,int) -> access$reverseElementIndex
    1:1:int access$reverseIteratorIndex(java.util.List,int) -> access$reverseIteratorIndex
    1:1:int access$reversePositionIndex(java.util.List,int) -> access$reversePositionIndex
    77:77:java.util.List asReversed(java.util.List) -> asReversed
    85:85:java.util.List asReversedMutable(java.util.List) -> asReversedMutable
    65:65:int reverseElementIndex$CollectionsKt__ReversedViewsKt(java.util.List,int) -> reverseElementIndex$CollectionsKt__ReversedViewsKt
    70:70:int reverseIteratorIndex$CollectionsKt__ReversedViewsKt(java.util.List,int) -> reverseIteratorIndex$CollectionsKt__ReversedViewsKt
    68:68:int reversePositionIndex$CollectionsKt__ReversedViewsKt(java.util.List,int) -> reversePositionIndex$CollectionsKt__ReversedViewsKt
kotlin.collections.CollectionsKt___CollectionsJvmKt -> kotlin.collections.CollectionsKt___CollectionsJvmKt:
# {"id":"sourceFile","fileName":"_CollectionsJvm.kt"}
    0:0:void <init>() -> <init>
    25:25:java.util.List filterIsInstance(java.lang.Iterable,java.lang.Class) -> filterIsInstance
    35:35:java.util.Collection filterIsInstanceTo(java.lang.Iterable,java.util.Collection,java.lang.Class) -> filterIsInstanceTo
    67:67:java.lang.Double max(java.lang.Iterable) -> max
    75:75:java.lang.Float max(java.lang.Iterable) -> max
    82:82:java.lang.Comparable max(java.lang.Iterable) -> max
    169:181:java.lang.Object maxBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maxBy
    96:96:java.lang.Object maxWith(java.lang.Iterable,java.util.Comparator) -> maxWith
    104:104:java.lang.Double min(java.lang.Iterable) -> min
    112:112:java.lang.Float min(java.lang.Iterable) -> min
    119:119:java.lang.Comparable min(java.lang.Iterable) -> min
    183:195:java.lang.Object minBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> minBy
    133:133:java.lang.Object minWith(java.lang.Iterable,java.util.Comparator) -> minWith
    43:43:void reverse(java.util.List) -> reverse
    145:147:java.math.BigDecimal sumOfBigDecimal(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    161:163:java.math.BigInteger sumOfBigInteger(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sumOfBigInteger
    50:50:java.util.SortedSet toSortedSet(java.lang.Iterable) -> toSortedSet
    59:59:java.util.SortedSet toSortedSet(java.lang.Iterable,java.util.Comparator) -> toSortedSet
kotlin.collections.CollectionsKt___CollectionsKt -> kotlin.collections.CollectionsKt___CollectionsKt:
# {"id":"sourceFile","fileName":"_Collections.kt"}
    0:0:void <init>() -> <init>
    1726:1727:boolean all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> all
    1737:1738:boolean any(java.lang.Iterable) -> any
    1747:1748:boolean any(java.lang.Iterable,kotlin.jvm.functions.Function1) -> any
    0:0:java.lang.Iterable asIterable(java.lang.Iterable) -> asIterable
    3524:3524:kotlin.sequences.Sequence asSequence(java.lang.Iterable) -> asSequence
    1179:3721:java.util.Map associate(java.lang.Iterable,kotlin.jvm.functions.Function1) -> associate
    1194:3725:java.util.Map associateBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> associateBy
    1208:3729:java.util.Map associateBy(java.lang.Iterable,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    1222:1223:java.util.Map associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    1238:1239:java.util.Map associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    1253:1254:java.util.Map associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    1271:3733:java.util.Map associateWith(java.lang.Iterable,kotlin.jvm.functions.Function1) -> associateWith
    1285:1286:java.util.Map associateWithTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    3534:3536:double averageOfByte(java.lang.Iterable) -> averageOfByte
    3604:3606:double averageOfDouble(java.lang.Iterable) -> averageOfDouble
    3590:3592:double averageOfFloat(java.lang.Iterable) -> averageOfFloat
    3562:3564:double averageOfInt(java.lang.Iterable) -> averageOfInt
    3576:3578:double averageOfLong(java.lang.Iterable) -> averageOfLong
    3548:3550:double averageOfShort(java.lang.Iterable) -> averageOfShort
    3115:3115:java.util.List chunked(java.lang.Iterable,int) -> chunked
    3134:3134:java.util.List chunked(java.lang.Iterable,int,kotlin.jvm.functions.Function1) -> chunked
    27:27:java.lang.Object component1(java.util.List) -> component1
    37:37:java.lang.Object component2(java.util.List) -> component2
    47:47:java.lang.Object component3(java.util.List) -> component3
    57:57:java.lang.Object component4(java.util.List) -> component4
    67:67:java.lang.Object component5(java.util.List) -> component5
    74:76:boolean contains(java.lang.Iterable,java.lang.Object) -> contains
    1756:1758:int count(java.lang.Iterable) -> count
    1767:1767:int count(java.util.Collection) -> count
    1774:1776:int count(java.lang.Iterable,kotlin.jvm.functions.Function1) -> count
    1642:1642:java.util.List distinct(java.lang.Iterable) -> distinct
    1655:1660:java.util.List distinctBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> distinctBy
    682:710:java.util.List drop(java.lang.Iterable,int) -> drop
    721:722:java.util.List dropLast(java.util.List,int) -> dropLast
    731:739:java.util.List dropLastWhile(java.util.List,kotlin.jvm.functions.Function1) -> dropLastWhile
    749:754:java.util.List dropWhile(java.lang.Iterable,kotlin.jvm.functions.Function1) -> dropWhile
    85:87:java.lang.Object elementAt(java.lang.Iterable,int) -> elementAt
    97:97:java.lang.Object elementAt(java.util.List,int) -> elementAt
    106:117:java.lang.Object elementAtOrElse(java.lang.Iterable,int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    127:127:java.lang.Object elementAtOrElse(java.util.List,int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    136:143:java.lang.Object elementAtOrNull(java.lang.Iterable,int) -> elementAtOrNull
    157:157:java.lang.Object elementAtOrNull(java.util.List,int) -> elementAtOrNull
    766:3700:java.util.List filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> filter
    777:3705:java.util.List filterIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> filterIndexed
    789:3710:java.util.Collection filterIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    800:3712:java.util.List filterIsInstance(java.lang.Iterable) -> filterIsInstance
    809:809:java.util.Collection filterIsInstanceTo(java.lang.Iterable,java.util.Collection) -> filterIsInstanceTo
    819:3714:java.util.List filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1) -> filterNot
    828:828:java.util.List filterNotNull(java.lang.Iterable) -> filterNotNull
    837:837:java.util.Collection filterNotNullTo(java.lang.Iterable,java.util.Collection) -> filterNotNullTo
    847:847:java.util.Collection filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    857:857:java.util.Collection filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    3684:3684:java.lang.Object find(java.lang.Iterable,kotlin.jvm.functions.Function1) -> find
    3687:3688:java.lang.Object findLast(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findLast
    3693:3696:java.lang.Object findLast(java.util.List,kotlin.jvm.functions.Function1) -> findLast
    197:202:java.lang.Object first(java.lang.Iterable) -> first
    213:215:java.lang.Object first(java.util.List) -> first
    223:224:java.lang.Object first(java.lang.Iterable,kotlin.jvm.functions.Function1) -> first
    236:236:java.lang.Object firstNotNullOf(java.lang.Iterable,kotlin.jvm.functions.Function1) -> firstNotNullOf
    248:249:java.lang.Object firstNotNullOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> firstNotNullOfOrNull
    262:272:java.lang.Object firstOrNull(java.lang.Iterable) -> firstOrNull
    281:281:java.lang.Object firstOrNull(java.util.List) -> firstOrNull
    288:288:java.lang.Object firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> firstOrNull
    1360:3738:java.util.List flatMap(java.lang.Iterable,kotlin.jvm.functions.Function1) -> flatMap
    1388:1388:java.util.List flatMapIndexedIterable(java.lang.Iterable,kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    1417:1419:java.util.Collection flatMapIndexedIterableTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    1403:1403:java.util.List flatMapIndexedSequence(java.lang.Iterable,kotlin.jvm.functions.Function2) -> flatMapIndexedSequence
    1435:1437:java.util.Collection flatMapIndexedSequenceTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedSequenceTo
    1373:3743:java.util.List flatMapSequence(java.lang.Iterable,kotlin.jvm.functions.Function1) -> flatMapSequence
    1461:1463:java.util.Collection flatMapSequenceTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapSequenceTo
    1446:1448:java.util.Collection flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    1790:1790:java.lang.Object fold(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    1806:1806:java.lang.Object foldIndexed(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    1820:1823:java.lang.Object foldRight(java.util.List,java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    1840:1844:java.lang.Object foldRightIndexed(java.util.List,java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    1855:1855:void forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> forEach
    1865:1865:void forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> forEachIndexed
    297:297:java.lang.Object getOrElse(java.util.List,int,kotlin.jvm.functions.Function1) -> getOrElse
    306:306:java.lang.Object getOrNull(java.util.List,int) -> getOrNull
    1477:3756:java.util.Map groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> groupBy
    1490:3769:java.util.Map groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    1502:3775:java.util.Map groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    1520:3782:java.util.Map groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    1536:1536:kotlin.collections.Grouping groupingBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> groupingBy
    313:317:int indexOf(java.lang.Iterable,java.lang.Object) -> indexOf
    329:329:int indexOf(java.util.List,java.lang.Object) -> indexOf
    337:339:int indexOfFirst(java.lang.Iterable,kotlin.jvm.functions.Function1) -> indexOfFirst
    351:352:int indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> indexOfFirst
    365:367:int indexOfLast(java.lang.Iterable,kotlin.jvm.functions.Function1) -> indexOfLast
    378:381:int indexOfLast(java.util.List,kotlin.jvm.functions.Function1) -> indexOfLast
    1673:1674:java.util.Set intersect(java.lang.Iterable,java.lang.Iterable) -> intersect
    3485:3494:java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    3484:3484:java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    3507:3507:java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    3506:3506:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    396:403:java.lang.Object last(java.lang.Iterable) -> last
    417:419:java.lang.Object last(java.util.List) -> last
    432:438:java.lang.Object last(java.lang.Iterable,kotlin.jvm.functions.Function1) -> last
    451:456:java.lang.Object last(java.util.List,kotlin.jvm.functions.Function1) -> last
    463:468:int lastIndexOf(java.lang.Iterable,java.lang.Object) -> lastIndexOf
    480:480:int lastIndexOf(java.util.List,java.lang.Object) -> lastIndexOf
    490:497:java.lang.Object lastOrNull(java.lang.Iterable) -> lastOrNull
    509:509:java.lang.Object lastOrNull(java.util.List) -> lastOrNull
    519:520:java.lang.Object lastOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> lastOrNull
    533:536:java.lang.Object lastOrNull(java.util.List,kotlin.jvm.functions.Function1) -> lastOrNull
    1549:3787:java.util.List map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> map
    1559:3791:java.util.List mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> mapIndexed
    1569:3795:java.util.List mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> mapIndexedNotNull
    1579:3800:java.util.Collection mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedNotNullTo
    1591:1592:java.util.Collection mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    1603:3803:java.util.List mapNotNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> mapNotNull
    1611:3807:java.util.Collection mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> mapNotNullTo
    1620:1621:java.util.Collection mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    1963:1975:java.lang.Object maxByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maxByOrNull
    1940:1952:java.lang.Object maxByOrThrow(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maxByOrThrow
    1992:1997:double maxOf(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maxOf
    2015:2020:float maxOf(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maxOf
    2036:2041:java.lang.Comparable maxOf(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maxOf
    2059:2066:java.lang.Double maxOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maxOfOrNull
    2080:2087:java.lang.Float maxOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maxOfOrNull
    2099:2104:java.lang.Comparable maxOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> maxOfOrNull
    2122:2127:java.lang.Object maxOfWith(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    2143:2148:java.lang.Object maxOfWithOrNull(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    2162:2169:java.lang.Double maxOrNull(java.lang.Iterable) -> maxOrNull
    2179:2186:java.lang.Float maxOrNull(java.lang.Iterable) -> maxOrNull
    2194:2199:java.lang.Comparable maxOrNull(java.lang.Iterable) -> maxOrNull
    1879:1884:double maxOrThrow(java.lang.Iterable) -> maxOrThrow
    1900:1905:float maxOrThrow(java.lang.Iterable) -> maxOrThrow
    1919:1924:java.lang.Comparable maxOrThrow(java.lang.Iterable) -> maxOrThrow
    2228:2233:java.lang.Object maxWithOrNull(java.lang.Iterable,java.util.Comparator) -> maxWithOrNull
    2213:2218:java.lang.Object maxWithOrThrow(java.lang.Iterable,java.util.Comparator) -> maxWithOrThrow
    2333:2345:java.lang.Object minByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> minByOrNull
    2310:2322:java.lang.Object minByOrThrow(java.lang.Iterable,kotlin.jvm.functions.Function1) -> minByOrThrow
    2362:2367:double minOf(java.lang.Iterable,kotlin.jvm.functions.Function1) -> minOf
    2385:2390:float minOf(java.lang.Iterable,kotlin.jvm.functions.Function1) -> minOf
    2406:2411:java.lang.Comparable minOf(java.lang.Iterable,kotlin.jvm.functions.Function1) -> minOf
    2429:2436:java.lang.Double minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> minOfOrNull
    2450:2457:java.lang.Float minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> minOfOrNull
    2469:2474:java.lang.Comparable minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> minOfOrNull
    2492:2497:java.lang.Object minOfWith(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    2513:2518:java.lang.Object minOfWithOrNull(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    2532:2539:java.lang.Double minOrNull(java.lang.Iterable) -> minOrNull
    2549:2556:java.lang.Float minOrNull(java.lang.Iterable) -> minOrNull
    2564:2569:java.lang.Comparable minOrNull(java.lang.Iterable) -> minOrNull
    2249:2254:double minOrThrow(java.lang.Iterable) -> minOrThrow
    2270:2275:float minOrThrow(java.lang.Iterable) -> minOrThrow
    2289:2294:java.lang.Comparable minOrThrow(java.lang.Iterable) -> minOrThrow
    2598:2603:java.lang.Object minWithOrNull(java.lang.Iterable,java.util.Comparator) -> minWithOrNull
    2583:2588:java.lang.Object minWithOrThrow(java.lang.Iterable,java.util.Comparator) -> minWithOrThrow
    3141:3833:java.util.List minus(java.lang.Iterable,java.lang.Object) -> minus
    3150:3836:java.util.List minus(java.lang.Iterable,java.lang.Object[]) -> minus
    3158:3839:java.util.List minus(java.lang.Iterable,java.lang.Iterable) -> minus
    3168:3842:java.util.List minus(java.lang.Iterable,kotlin.sequences.Sequence) -> minus
    3179:3179:java.util.List minusElement(java.lang.Iterable,java.lang.Object) -> minusElement
    2614:2615:boolean none(java.lang.Iterable) -> none
    2624:2625:boolean none(java.lang.Iterable,kotlin.jvm.functions.Function1) -> none
    2634:2634:java.lang.Iterable onEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onEach
    3810:3810:java.lang.Iterable onEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> onEachIndexed
    3190:3199:kotlin.Pair partition(java.lang.Iterable,kotlin.jvm.functions.Function1) -> partition
    3206:3209:java.util.List plus(java.lang.Iterable,java.lang.Object) -> plus
    3217:3219:java.util.List plus(java.util.Collection,java.lang.Object) -> plus
    3227:3230:java.util.List plus(java.lang.Iterable,java.lang.Object[]) -> plus
    3238:3240:java.util.List plus(java.util.Collection,java.lang.Object[]) -> plus
    3248:3251:java.util.List plus(java.lang.Iterable,java.lang.Iterable) -> plus
    3259:3266:java.util.List plus(java.util.Collection,java.lang.Iterable) -> plus
    3275:3277:java.util.List plus(java.lang.Iterable,kotlin.sequences.Sequence) -> plus
    3285:3287:java.util.List plus(java.util.Collection,kotlin.sequences.Sequence) -> plus
    3296:3296:java.util.List plusElement(java.lang.Iterable,java.lang.Object) -> plusElement
    3304:3304:java.util.List plusElement(java.util.Collection,java.lang.Object) -> plusElement
    549:549:java.lang.Object random(java.util.Collection) -> random
    559:561:java.lang.Object random(java.util.Collection,kotlin.random.Random) -> random
    571:571:java.lang.Object randomOrNull(java.util.Collection) -> randomOrNull
    580:582:java.lang.Object randomOrNull(java.util.Collection,kotlin.random.Random) -> randomOrNull
    2661:2665:java.lang.Object reduce(java.lang.Iterable,kotlin.jvm.functions.Function2) -> reduce
    2683:2688:java.lang.Object reduceIndexed(java.lang.Iterable,kotlin.jvm.functions.Function3) -> reduceIndexed
    2706:2711:java.lang.Object reduceIndexedOrNull(java.lang.Iterable,kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    2730:2734:java.lang.Object reduceOrNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> reduceOrNull
    2752:2757:java.lang.Object reduceRight(java.util.List,kotlin.jvm.functions.Function2) -> reduceRight
    2775:2781:java.lang.Object reduceRightIndexed(java.util.List,kotlin.jvm.functions.Function3) -> reduceRightIndexed
    2799:2805:java.lang.Object reduceRightIndexedOrNull(java.util.List,kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull
    2824:2829:java.lang.Object reduceRightOrNull(java.util.List,kotlin.jvm.functions.Function2) -> reduceRightOrNull
    3082:3084:java.lang.Iterable requireNoNulls(java.lang.Iterable) -> requireNoNulls
    3095:3097:java.util.List requireNoNulls(java.util.List) -> requireNoNulls
    977:979:java.util.List reversed(java.lang.Iterable) -> reversed
    2847:2853:java.util.List runningFold(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    2872:2879:java.util.List runningFoldIndexed(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    2898:2904:java.util.List runningReduce(java.lang.Iterable,kotlin.jvm.functions.Function2) -> runningReduce
    2923:2930:java.util.List runningReduceIndexed(java.lang.Iterable,kotlin.jvm.functions.Function3) -> runningReduceIndexed
    3812:3819:java.util.List scan(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    3822:3830:java.util.List scanIndexed(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    990:992:void shuffle(java.util.List,kotlin.random.Random) -> shuffle
    590:597:java.lang.Object single(java.lang.Iterable) -> single
    607:610:java.lang.Object single(java.util.List) -> single
    620:627:java.lang.Object single(java.lang.Iterable,kotlin.jvm.functions.Function1) -> single
    637:643:java.lang.Object singleOrNull(java.lang.Iterable) -> singleOrNull
    654:654:java.lang.Object singleOrNull(java.util.List) -> singleOrNull
    663:664:java.lang.Object singleOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> singleOrNull
    865:866:java.util.List slice(java.util.List,kotlin.ranges.IntRange) -> slice
    873:877:java.util.List slice(java.util.List,java.lang.Iterable) -> slice
    1002:1002:void sortBy(java.util.List,kotlin.jvm.functions.Function1) -> sortBy
    1011:1011:void sortByDescending(java.util.List,kotlin.jvm.functions.Function1) -> sortByDescending
    1020:1020:void sortDescending(java.util.List) -> sortDescending
    1029:3717:java.util.List sorted(java.lang.Iterable) -> sorted
    1045:1045:java.util.List sortedBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sortedBy
    1054:1054:java.util.List sortedByDescending(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sortedByDescending
    1063:1063:java.util.List sortedDescending(java.lang.Iterable) -> sortedDescending
    1072:3719:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator) -> sortedWith
    1684:1685:java.util.Set subtract(java.lang.Iterable,java.lang.Iterable) -> subtract
    2977:2978:int sumBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sumBy
    2990:2991:double sumByDouble(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sumByDouble
    3617:3617:int sumOfByte(java.lang.Iterable) -> sumOfByte
    3006:3007:double sumOfDouble(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sumOfDouble
    3677:3677:double sumOfDouble(java.lang.Iterable) -> sumOfDouble
    3665:3665:float sumOfFloat(java.lang.Iterable) -> sumOfFloat
    3022:3023:int sumOfInt(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sumOfInt
    3641:3641:int sumOfInt(java.lang.Iterable) -> sumOfInt
    3038:3039:long sumOfLong(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sumOfLong
    3653:3653:long sumOfLong(java.lang.Iterable) -> sumOfLong
    3629:3629:int sumOfShort(java.lang.Iterable) -> sumOfShort
    3054:3056:int sumOfUInt(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sumOfUInt
    3071:3073:long sumOfULong(java.lang.Iterable,kotlin.jvm.functions.Function1) -> sumOfULong
    890:903:java.util.List take(java.lang.Iterable,int) -> take
    914:925:java.util.List takeLast(java.util.List,int) -> takeLast
    936:950:java.util.List takeLastWhile(java.util.List,kotlin.jvm.functions.Function1) -> takeLastWhile
    959:963:java.util.List takeWhile(java.lang.Iterable,kotlin.jvm.functions.Function1) -> takeWhile
    1084:1087:boolean[] toBooleanArray(java.util.Collection) -> toBooleanArray
    1095:1098:byte[] toByteArray(java.util.Collection) -> toByteArray
    1106:1109:char[] toCharArray(java.util.Collection) -> toCharArray
    1295:1296:java.util.Collection toCollection(java.lang.Iterable,java.util.Collection) -> toCollection
    1117:1120:double[] toDoubleArray(java.util.Collection) -> toDoubleArray
    1128:1131:float[] toFloatArray(java.util.Collection) -> toFloatArray
    1305:1305:java.util.HashSet toHashSet(java.lang.Iterable) -> toHashSet
    1139:1142:int[] toIntArray(java.util.Collection) -> toIntArray
    1312:1319:java.util.List toList(java.lang.Iterable) -> toList
    1150:1153:long[] toLongArray(java.util.Collection) -> toLongArray
    1326:1328:java.util.List toMutableList(java.lang.Iterable) -> toMutableList
    1335:1335:java.util.List toMutableList(java.util.Collection) -> toMutableList
    1696:1697:java.util.Set toMutableSet(java.lang.Iterable) -> toMutableSet
    1344:1351:java.util.Set toSet(java.lang.Iterable) -> toSet
    1161:1164:short[] toShortArray(java.util.Collection) -> toShortArray
    1711:1712:java.util.Set union(java.lang.Iterable,java.lang.Iterable) -> union
    3324:3844:java.util.List windowed(java.lang.Iterable,int,int,boolean) -> windowed
    3364:3846:java.util.List windowed(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1) -> windowed
    3323:3323:java.util.List windowed$default(java.lang.Iterable,int,int,boolean,int,java.lang.Object) -> windowed$default
    3363:3363:java.util.List windowed$default(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> windowed$default
    1630:1630:java.lang.Iterable withIndex(java.lang.Iterable) -> withIndex
    3405:3410:java.util.List zip(java.lang.Iterable,java.lang.Object[],kotlin.jvm.functions.Function2) -> zip
    3433:3437:java.util.List zip(java.lang.Iterable,java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip
    3394:3853:java.util.List zip(java.lang.Iterable,java.lang.Object[]) -> zip
    3422:3860:java.util.List zip(java.lang.Iterable,java.lang.Iterable) -> zip
    3464:3470:java.util.List zipWithNext(java.lang.Iterable,kotlin.jvm.functions.Function2) -> zipWithNext
    3451:3869:java.util.List zipWithNext(java.lang.Iterable) -> zipWithNext
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1 -> kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(java.lang.Iterable) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1 -> kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1:
# {"id":"sourceFile","fileName":"_Collections.kt"}
    0:0:void <init>(int) -> <init>
    87:87:java.lang.Object invoke(int) -> invoke
    87:87:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1 -> kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1:
# {"id":"sourceFile","fileName":"_Collections.kt"}
    1536:1536:void <init>(java.lang.Iterable,kotlin.jvm.functions.Function1) -> <init>
    1538:1538:java.lang.Object keyOf(java.lang.Object) -> keyOf
    1537:1537:java.util.Iterator sourceIterator() -> sourceIterator
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1 -> kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1:
# {"id":"sourceFile","fileName":"_Collections.kt"}
    0:0:void <init>(java.lang.Iterable) -> <init>
    1630:1630:java.lang.Object invoke() -> invoke
    1630:1630:java.util.Iterator invoke() -> invoke
kotlin.collections.DoubleIterator -> kotlin.collections.DoubleIterator:
# {"id":"sourceFile","fileName":"PrimitiveIterators.kt"}
    59:59:void <init>() -> <init>
    59:59:java.lang.Object next() -> next
    60:60:java.lang.Double next() -> next
    0:0:void remove() -> remove
kotlin.collections.EmptyIterator -> kotlin.collections.EmptyIterator:
# {"id":"sourceFile","fileName":"Collections.kt"}
    0:0:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    0:0:void add(java.lang.Object) -> add
    0:0:void add(java.lang.Void) -> add
    0:0:boolean hasNext() -> hasNext
    0:0:boolean hasPrevious() -> hasPrevious
    15:15:java.lang.Object next() -> next
    20:20:java.lang.Void next() -> next
    0:0:int nextIndex() -> nextIndex
    15:15:java.lang.Object previous() -> previous
    21:21:java.lang.Void previous() -> previous
    0:0:int previousIndex() -> previousIndex
    0:0:void remove() -> remove
    0:0:void set(java.lang.Object) -> set
    0:0:void set(java.lang.Void) -> set
kotlin.collections.EmptyList -> kotlin.collections.EmptyList:
# {"id":"sourceFile","fileName":"Collections.kt"}
    0:0:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    0:0:void add(int,java.lang.Object) -> add
    0:0:void add(int,java.lang.Void) -> add
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean add(java.lang.Void) -> add
    0:0:boolean addAll(int,java.util.Collection) -> addAll
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    0:0:boolean contains(java.lang.Void) -> contains
    24:24:boolean contains(java.lang.Object) -> contains
    34:34:boolean containsAll(java.util.Collection) -> containsAll
    27:27:boolean equals(java.lang.Object) -> equals
    24:24:java.lang.Object get(int) -> get
    36:36:java.lang.Void get(int) -> get
    0:0:int getSize() -> getSize
    0:0:int hashCode() -> hashCode
    0:0:int indexOf(java.lang.Void) -> indexOf
    24:24:int indexOf(java.lang.Object) -> indexOf
    0:0:boolean isEmpty() -> isEmpty
    40:40:java.util.Iterator iterator() -> iterator
    0:0:int lastIndexOf(java.lang.Void) -> lastIndexOf
    24:24:int lastIndexOf(java.lang.Object) -> lastIndexOf
    41:41:java.util.ListIterator listIterator() -> listIterator
    43:44:java.util.ListIterator listIterator(int) -> listIterator
    52:52:java.lang.Object readResolve() -> readResolve
    0:0:java.lang.Object remove(int) -> remove
    0:0:java.lang.Void remove(int) -> remove
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    0:0:java.lang.Object set(int,java.lang.Object) -> set
    0:0:java.lang.Void set(int,java.lang.Void) -> set
    24:24:int size() -> size
    49:49:java.util.List subList(int,int) -> subList
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    0:0:java.lang.String toString() -> toString
kotlin.collections.EmptyMap -> kotlin.collections.EmptyMap:
# {"id":"sourceFile","fileName":"Maps.kt"}
    0:0:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    0:0:void clear() -> clear
    0:0:boolean containsKey(java.lang.Object) -> containsKey
    0:0:boolean containsValue(java.lang.Void) -> containsValue
    14:14:boolean containsValue(java.lang.Object) -> containsValue
    14:14:java.util.Set entrySet() -> entrySet
    17:17:boolean equals(java.lang.Object) -> equals
    0:0:java.lang.Void get(java.lang.Object) -> get
    14:14:java.lang.Object get(java.lang.Object) -> get
    27:27:java.util.Set getEntries() -> getEntries
    28:28:java.util.Set getKeys() -> getKeys
    0:0:int getSize() -> getSize
    29:29:java.util.Collection getValues() -> getValues
    0:0:int hashCode() -> hashCode
    0:0:boolean isEmpty() -> isEmpty
    14:14:java.util.Set keySet() -> keySet
    0:0:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    0:0:java.lang.Void put(java.lang.Object,java.lang.Void) -> put
    0:0:void putAll(java.util.Map) -> putAll
    31:31:java.lang.Object readResolve() -> readResolve
    0:0:java.lang.Void remove(java.lang.Object) -> remove
    14:14:java.lang.Object remove(java.lang.Object) -> remove
    14:14:int size() -> size
    0:0:java.lang.String toString() -> toString
    14:14:java.util.Collection values() -> values
kotlin.collections.EmptySet -> kotlin.collections.EmptySet:
# {"id":"sourceFile","fileName":"Sets.kt"}
    0:0:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean add(java.lang.Void) -> add
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    0:0:boolean contains(java.lang.Void) -> contains
    14:14:boolean contains(java.lang.Object) -> contains
    24:24:boolean containsAll(java.util.Collection) -> containsAll
    17:17:boolean equals(java.lang.Object) -> equals
    0:0:int getSize() -> getSize
    0:0:int hashCode() -> hashCode
    0:0:boolean isEmpty() -> isEmpty
    26:26:java.util.Iterator iterator() -> iterator
    28:28:java.lang.Object readResolve() -> readResolve
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    14:14:int size() -> size
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    0:0:java.lang.String toString() -> toString
kotlin.collections.FloatIterator -> kotlin.collections.FloatIterator:
# {"id":"sourceFile","fileName":"PrimitiveIterators.kt"}
    51:51:void <init>() -> <init>
    51:51:java.lang.Object next() -> next
    52:52:java.lang.Float next() -> next
    0:0:void remove() -> remove
kotlin.collections.Grouping -> kotlin.collections.Grouping:
# {"id":"sourceFile","fileName":"Grouping.kt"}
kotlin.collections.GroupingKt -> kotlin.collections.GroupingKt:
    1:1:void <init>() -> <init>
kotlin.collections.GroupingKt__GroupingJVMKt -> kotlin.collections.GroupingKt__GroupingJVMKt:
# {"id":"sourceFile","fileName":"GroupingJVM.kt"}
    0:0:void <init>() -> <init>
    22:57:java.util.Map eachCount(kotlin.collections.Grouping) -> eachCount
    48:60:java.util.Map mapValuesInPlace(java.util.Map,kotlin.jvm.functions.Function1) -> mapValuesInPlace
kotlin.collections.GroupingKt__GroupingKt -> kotlin.collections.GroupingKt__GroupingKt:
# {"id":"sourceFile","fileName":"Grouping.kt"}
    0:0:void <init>() -> <init>
    53:295:java.util.Map aggregate(kotlin.collections.Grouping,kotlin.jvm.functions.Function4) -> aggregate
    80:83:java.util.Map aggregateTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function4) -> aggregateTo
    257:341:java.util.Map eachCountTo(kotlin.collections.Grouping,java.util.Map) -> eachCountTo
    112:302:java.util.Map fold(kotlin.collections.Grouping,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function3) -> fold
    164:315:java.util.Map fold(kotlin.collections.Grouping,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    143:308:java.util.Map foldTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function3) -> foldTo
    189:321:java.util.Map foldTo(kotlin.collections.Grouping,java.util.Map,java.lang.Object,kotlin.jvm.functions.Function2) -> foldTo
    213:328:java.util.Map reduce(kotlin.collections.Grouping,kotlin.jvm.functions.Function3) -> reduce
    241:334:java.util.Map reduceTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function3) -> reduceTo
kotlin.collections.IndexedValue -> kotlin.collections.IndexedValue:
# {"id":"sourceFile","fileName":"IndexedValue.kt"}
    14:14:void <init>(int,java.lang.Object) -> <init>
    0:0:int component1() -> component1
    0:0:java.lang.Object component2() -> component2
    0:0:kotlin.collections.IndexedValue copy(int,java.lang.Object) -> copy
    0:0:kotlin.collections.IndexedValue copy$default(kotlin.collections.IndexedValue,int,java.lang.Object,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    14:14:int getIndex() -> getIndex
    14:14:java.lang.Object getValue() -> getValue
    0:0:int hashCode() -> hashCode
    0:0:java.lang.String toString() -> toString
kotlin.collections.IndexingIterable -> kotlin.collections.IndexingIterable:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    24:24:void <init>(kotlin.jvm.functions.Function0) -> <init>
    25:25:java.util.Iterator iterator() -> iterator
kotlin.collections.IndexingIterator -> kotlin.collections.IndexingIterator:
# {"id":"sourceFile","fileName":"Iterators.kt"}
    38:38:void <init>(java.util.Iterator) -> <init>
    40:40:boolean hasNext() -> hasNext
    38:38:java.lang.Object next() -> next
    41:41:kotlin.collections.IndexedValue next() -> next
    0:0:void remove() -> remove
kotlin.collections.IntIterator -> kotlin.collections.IntIterator:
# {"id":"sourceFile","fileName":"PrimitiveIterators.kt"}
    35:35:void <init>() -> <init>
    35:35:java.lang.Object next() -> next
    36:36:java.lang.Integer next() -> next
    0:0:void remove() -> remove
kotlin.collections.LongIterator -> kotlin.collections.LongIterator:
# {"id":"sourceFile","fileName":"PrimitiveIterators.kt"}
    43:43:void <init>() -> <init>
    43:43:java.lang.Object next() -> next
    44:44:java.lang.Long next() -> next
    0:0:void remove() -> remove
kotlin.collections.MapAccessorsKt -> kotlin.collections.MapAccessorsKt:
# {"id":"sourceFile","fileName":"MapAccessors.kt"}
    23:23:java.lang.Object getValue(java.util.Map,java.lang.Object,kotlin.reflect.KProperty) -> getValue
    36:36:java.lang.Object getVar(java.util.Map,java.lang.Object,kotlin.reflect.KProperty) -> getVar
    46:46:void setValue(java.util.Map,java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
kotlin.collections.MapWithDefault -> kotlin.collections.MapWithDefault:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
kotlin.collections.MapWithDefaultImpl -> kotlin.collections.MapWithDefaultImpl:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
    67:67:void <init>(java.util.Map,kotlin.jvm.functions.Function1) -> <init>
    0:0:void clear() -> clear
    73:73:boolean containsKey(java.lang.Object) -> containsKey
    74:74:boolean containsValue(java.lang.Object) -> containsValue
    67:67:java.util.Set entrySet() -> entrySet
    68:68:boolean equals(java.lang.Object) -> equals
    75:75:java.lang.Object get(java.lang.Object) -> get
    78:78:java.util.Set getEntries() -> getEntries
    76:76:java.util.Set getKeys() -> getKeys
    67:67:java.util.Map getMap() -> getMap
    80:106:java.lang.Object getOrImplicitDefault(java.lang.Object) -> getOrImplicitDefault
    71:71:int getSize() -> getSize
    77:77:java.util.Collection getValues() -> getValues
    69:69:int hashCode() -> hashCode
    72:72:boolean isEmpty() -> isEmpty
    67:67:java.util.Set keySet() -> keySet
    0:0:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    0:0:void putAll(java.util.Map) -> putAll
    0:0:java.lang.Object remove(java.lang.Object) -> remove
    67:67:int size() -> size
    70:70:java.lang.String toString() -> toString
    67:67:java.util.Collection values() -> values
kotlin.collections.MapsKt -> kotlin.collections.MapsKt:
    1:1:void <init>() -> <init>
    0:0:java.util.Map build(java.util.Map) -> build
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Map createMapBuilder(int) -> createMapBuilder
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Map emptyMap() -> emptyMap
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int mapCapacity(int) -> mapCapacity
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Map mutableMapOf(kotlin.Pair[]) -> mutableMapOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Map toMap(java.lang.Iterable) -> toMap
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Map toMap(java.util.Map) -> toMap
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Map toMutableMap(java.util.Map) -> toMutableMap
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.MapsKt__MapWithDefaultKt -> kotlin.collections.MapsKt__MapWithDefaultKt:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
    0:0:void <init>() -> <init>
    21:106:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object) -> getOrImplicitDefaultNullable
    37:38:java.util.Map withDefault(java.util.Map,kotlin.jvm.functions.Function1) -> withDefault
    52:53:java.util.Map withDefaultMutable(java.util.Map,kotlin.jvm.functions.Function1) -> withDefaultMutable
kotlin.collections.MapsKt__MapsJVMKt -> kotlin.collections.MapsKt__MapsJVMKt:
# {"id":"sourceFile","fileName":"MapsJVM.kt"}
    0:0:void <init>() -> <init>
    57:57:java.util.Map build(java.util.Map) -> build
    32:32:java.util.Map buildMapInternal(kotlin.jvm.functions.Function1) -> buildMapInternal
    39:39:java.util.Map buildMapInternal(int,kotlin.jvm.functions.Function1) -> buildMapInternal
    45:45:java.util.Map createMapBuilder() -> createMapBuilder
    51:51:java.util.Map createMapBuilder(int) -> createMapBuilder
    72:73:java.lang.Object getOrPut(java.util.concurrent.ConcurrentMap,java.lang.Object,kotlin.jvm.functions.Function0) -> getOrPut
    0:0:int mapCapacity(int) -> mapCapacity
    26:26:java.util.Map mapOf(kotlin.Pair) -> mapOf
    108:108:java.util.SortedMap sortedMapOf(kotlin.Pair[]) -> sortedMapOf
    120:120:java.util.SortedMap sortedMapOf(java.util.Comparator,kotlin.Pair[]) -> sortedMapOf
    130:130:java.util.Properties toProperties(java.util.Map) -> toProperties
    139:139:java.util.Map toSingletonMap(java.util.Map) -> toSingletonMap
    135:135:java.util.Map toSingletonMapOrSelf(java.util.Map) -> toSingletonMapOrSelf
    87:87:java.util.SortedMap toSortedMap(java.util.Map) -> toSortedMap
    97:97:java.util.SortedMap toSortedMap(java.util.Map,java.util.Comparator) -> toSortedMap
kotlin.collections.MapsKt__MapsKt -> kotlin.collections.MapsKt__MapsKt:
# {"id":"sourceFile","fileName":"Maps.kt"}
    0:0:void <init>() -> <init>
    156:156:java.util.Map buildMap(kotlin.jvm.functions.Function1) -> buildMap
    187:187:java.util.Map buildMap(int,kotlin.jvm.functions.Function1) -> buildMap
    309:309:java.lang.Object component1(java.util.Map$Entry) -> component1
    322:322:java.lang.Object component2(java.util.Map$Entry) -> component2
    249:249:boolean contains(java.util.Map,java.lang.Object) -> contains
    273:273:boolean containsKey(java.util.Map,java.lang.Object) -> containsKey
    284:284:boolean containsValue(java.util.Map,java.lang.Object) -> containsValue
    40:40:java.util.Map emptyMap() -> emptyMap
    526:826:java.util.Map filter(java.util.Map,kotlin.jvm.functions.Function1) -> filter
    478:481:java.util.Map filterKeys(java.util.Map,kotlin.jvm.functions.Function1) -> filterKeys
    551:832:java.util.Map filterNot(java.util.Map,kotlin.jvm.functions.Function1) -> filterNot
    536:538:java.util.Map filterNotTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> filterNotTo
    511:513:java.util.Map filterTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> filterTo
    494:497:java.util.Map filterValues(java.util.Map,kotlin.jvm.functions.Function1) -> filterValues
    256:256:java.lang.Object get(java.util.Map,java.lang.Object) -> get
    337:337:java.lang.Object getOrElse(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getOrElse
    341:343:java.lang.Object getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getOrElseNullable
    372:375:java.lang.Object getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> getOrPut
    360:360:java.lang.Object getValue(java.util.Map,java.lang.Object) -> getValue
    108:108:java.util.HashMap hashMapOf() -> hashMapOf
    116:116:java.util.HashMap hashMapOf(kotlin.Pair[]) -> hashMapOf
    239:239:java.lang.Object ifEmpty(java.util.Map,kotlin.jvm.functions.Function0) -> ifEmpty
    206:206:boolean isNotEmpty(java.util.Map) -> isNotEmpty
    219:219:boolean isNullOrEmpty(java.util.Map) -> isNullOrEmpty
    388:388:java.util.Iterator iterator(java.util.Map) -> iterator
    123:123:java.util.LinkedHashMap linkedMapOf() -> linkedMapOf
    135:135:java.util.LinkedHashMap linkedMapOf(kotlin.Pair[]) -> linkedMapOf
    468:821:java.util.Map mapKeys(java.util.Map,kotlin.jvm.functions.Function1) -> mapKeys
    414:811:java.util.Map mapKeysTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> mapKeysTo
    55:55:java.util.Map mapOf(kotlin.Pair[]) -> mapOf
    75:75:java.util.Map mapOf() -> mapOf
    453:816:java.util.Map mapValues(java.util.Map,kotlin.jvm.functions.Function1) -> mapValues
    403:807:java.util.Map mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> mapValuesTo
    729:729:java.util.Map minus(java.util.Map,java.lang.Object) -> minus
    739:739:java.util.Map minus(java.util.Map,java.lang.Iterable) -> minus
    749:749:java.util.Map minus(java.util.Map,java.lang.Object[]) -> minus
    759:759:java.util.Map minus(java.util.Map,kotlin.sequences.Sequence) -> minus
    767:767:void minusAssign(java.util.Map,java.lang.Object) -> minusAssign
    776:776:void minusAssign(java.util.Map,java.lang.Iterable) -> minusAssign
    785:785:void minusAssign(java.util.Map,java.lang.Object[]) -> minusAssign
    794:794:void minusAssign(java.util.Map,kotlin.sequences.Sequence) -> minusAssign
    396:396:java.util.Iterator mutableIterator(java.util.Map) -> mutableIterator
    85:85:java.util.Map mutableMapOf() -> mutableMapOf
    99:99:java.util.Map mutableMapOf(kotlin.Pair[]) -> mutableMapOf
    799:801:java.util.Map optimizeReadOnlyMap(java.util.Map) -> optimizeReadOnlyMap
    228:228:java.util.Map orEmpty(java.util.Map) -> orEmpty
    643:643:java.util.Map plus(java.util.Map,kotlin.Pair) -> plus
    652:652:java.util.Map plus(java.util.Map,java.lang.Iterable) -> plus
    661:661:java.util.Map plus(java.util.Map,kotlin.Pair[]) -> plus
    670:670:java.util.Map plus(java.util.Map,kotlin.sequences.Sequence) -> plus
    679:679:java.util.Map plus(java.util.Map,java.util.Map) -> plus
    687:687:void plusAssign(java.util.Map,kotlin.Pair) -> plusAssign
    695:695:void plusAssign(java.util.Map,java.lang.Iterable) -> plusAssign
    703:703:void plusAssign(java.util.Map,kotlin.Pair[]) -> plusAssign
    711:711:void plusAssign(java.util.Map,kotlin.sequences.Sequence) -> plusAssign
    719:719:void plusAssign(java.util.Map,java.util.Map) -> plusAssign
    421:422:void putAll(java.util.Map,kotlin.Pair[]) -> putAll
    430:431:void putAll(java.util.Map,java.lang.Iterable) -> putAll
    439:440:void putAll(java.util.Map,kotlin.sequences.Sequence) -> putAll
    296:296:java.lang.Object remove(java.util.Map,java.lang.Object) -> remove
    263:263:void set(java.util.Map,java.lang.Object,java.lang.Object) -> set
    561:568:java.util.Map toMap(java.lang.Iterable) -> toMap
    575:575:java.util.Map toMap(java.lang.Iterable,java.util.Map) -> toMap
    583:586:java.util.Map toMap(kotlin.Pair[]) -> toMap
    593:593:java.util.Map toMap(kotlin.Pair[],java.util.Map) -> toMap
    601:601:java.util.Map toMap(kotlin.sequences.Sequence) -> toMap
    607:607:java.util.Map toMap(kotlin.sequences.Sequence,java.util.Map) -> toMap
    615:618:java.util.Map toMap(java.util.Map) -> toMap
    634:634:java.util.Map toMap(java.util.Map,java.util.Map) -> toMap
    627:627:java.util.Map toMutableMap(java.util.Map) -> toMutableMap
    328:328:kotlin.Pair toPair(java.util.Map$Entry) -> toPair
kotlin.collections.MapsKt___MapsJvmKt -> kotlin.collections.MapsKt___MapsJvmKt:
# {"id":"sourceFile","fileName":"_MapsJvm.kt"}
    0:0:void <init>() -> <init>
    24:24:java.util.Map$Entry maxBy(java.util.Map,kotlin.jvm.functions.Function1) -> maxBy
    32:32:java.util.Map$Entry maxWith(java.util.Map,java.util.Comparator) -> maxWith
    39:39:java.util.Map$Entry minBy(java.util.Map,kotlin.jvm.functions.Function1) -> minBy
    46:46:java.util.Map$Entry minWith(java.util.Map,java.util.Comparator) -> minWith
kotlin.collections.MapsKt___MapsKt -> kotlin.collections.MapsKt___MapsKt:
# {"id":"sourceFile","fileName":"_Maps.kt"}
    0:0:void <init>() -> <init>
    167:168:boolean all(java.util.Map,kotlin.jvm.functions.Function1) -> all
    178:178:boolean any(java.util.Map) -> any
    187:188:boolean any(java.util.Map,kotlin.jvm.functions.Function1) -> any
    582:582:java.lang.Iterable asIterable(java.util.Map) -> asIterable
    591:591:kotlin.sequences.Sequence asSequence(java.util.Map) -> asSequence
    197:197:int count(java.util.Map) -> count
    204:206:int count(java.util.Map,kotlin.jvm.functions.Function1) -> count
    29:29:java.lang.Object firstNotNullOf(java.util.Map,kotlin.jvm.functions.Function1) -> firstNotNullOf
    41:42:java.lang.Object firstNotNullOfOrNull(java.util.Map,kotlin.jvm.functions.Function1) -> firstNotNullOfOrNull
    76:597:java.util.List flatMap(java.util.Map,kotlin.jvm.functions.Function1) -> flatMap
    89:602:java.util.List flatMapSequence(java.util.Map,kotlin.jvm.functions.Function1) -> flatMapSequence
    111:113:java.util.Collection flatMapSequenceTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapSequenceTo
    96:98:java.util.Collection flatMapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    215:215:void forEach(java.util.Map,kotlin.jvm.functions.Function1) -> forEach
    125:606:java.util.List map(java.util.Map,kotlin.jvm.functions.Function1) -> map
    135:609:java.util.List mapNotNull(java.util.Map,kotlin.jvm.functions.Function1) -> mapNotNull
    143:613:java.util.Collection mapNotNullTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> mapNotNullTo
    152:153:java.util.Collection mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    241:643:java.util.Map$Entry maxByOrNull(java.util.Map,kotlin.jvm.functions.Function1) -> maxByOrNull
    230:629:java.util.Map$Entry maxByOrThrow(java.util.Map,kotlin.jvm.functions.Function1) -> maxByOrThrow
    257:257:double maxOf(java.util.Map,kotlin.jvm.functions.Function1) -> maxOf
    273:273:float maxOf(java.util.Map,kotlin.jvm.functions.Function1) -> maxOf
    287:287:java.lang.Comparable maxOf(java.util.Map,kotlin.jvm.functions.Function1) -> maxOf
    301:301:java.lang.Double maxOfOrNull(java.util.Map,kotlin.jvm.functions.Function1) -> maxOfOrNull
    315:315:java.lang.Float maxOfOrNull(java.util.Map,kotlin.jvm.functions.Function1) -> maxOfOrNull
    327:327:java.lang.Comparable maxOfOrNull(java.util.Map,kotlin.jvm.functions.Function1) -> maxOfOrNull
    341:341:java.lang.Object maxOfWith(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    353:353:java.lang.Object maxOfWithOrNull(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    375:375:java.util.Map$Entry maxWithOrNull(java.util.Map,java.util.Comparator) -> maxWithOrNull
    366:366:java.util.Map$Entry maxWithOrThrow(java.util.Map,java.util.Comparator) -> maxWithOrThrow
    401:671:java.util.Map$Entry minByOrNull(java.util.Map,kotlin.jvm.functions.Function1) -> minByOrNull
    390:657:java.util.Map$Entry minByOrThrow(java.util.Map,kotlin.jvm.functions.Function1) -> minByOrThrow
    417:417:double minOf(java.util.Map,kotlin.jvm.functions.Function1) -> minOf
    433:433:float minOf(java.util.Map,kotlin.jvm.functions.Function1) -> minOf
    447:447:java.lang.Comparable minOf(java.util.Map,kotlin.jvm.functions.Function1) -> minOf
    461:461:java.lang.Double minOfOrNull(java.util.Map,kotlin.jvm.functions.Function1) -> minOfOrNull
    475:475:java.lang.Float minOfOrNull(java.util.Map,kotlin.jvm.functions.Function1) -> minOfOrNull
    487:487:java.lang.Comparable minOfOrNull(java.util.Map,kotlin.jvm.functions.Function1) -> minOfOrNull
    501:501:java.lang.Object minOfWith(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    513:513:java.lang.Object minOfWithOrNull(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    535:535:java.util.Map$Entry minWithOrNull(java.util.Map,java.util.Comparator) -> minWithOrNull
    526:526:java.util.Map$Entry minWithOrThrow(java.util.Map,java.util.Comparator) -> minWithOrThrow
    544:544:boolean none(java.util.Map) -> none
    553:554:boolean none(java.util.Map,kotlin.jvm.functions.Function1) -> none
    563:563:java.util.Map onEach(java.util.Map,kotlin.jvm.functions.Function1) -> onEach
    574:673:java.util.Map onEachIndexed(java.util.Map,kotlin.jvm.functions.Function2) -> onEachIndexed
    54:66:java.util.List toList(java.util.Map) -> toList
kotlin.collections.MovingSubList -> kotlin.collections.MovingSubList:
# {"id":"sourceFile","fileName":"SlidingWindow.kt"}
    64:64:void <init>(java.util.List) -> <init>
    75:77:java.lang.Object get(int) -> get
    80:80:int getSize() -> getSize
    69:71:void move(int,int) -> move
kotlin.collections.MutableMapWithDefault -> kotlin.collections.MutableMapWithDefault:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
kotlin.collections.MutableMapWithDefaultImpl -> kotlin.collections.MutableMapWithDefaultImpl:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
    83:83:void <init>(java.util.Map,kotlin.jvm.functions.Function1) -> <init>
    99:99:void clear() -> clear
    89:89:boolean containsKey(java.lang.Object) -> containsKey
    90:90:boolean containsValue(java.lang.Object) -> containsValue
    83:83:java.util.Set entrySet() -> entrySet
    84:84:boolean equals(java.lang.Object) -> equals
    91:91:java.lang.Object get(java.lang.Object) -> get
    94:94:java.util.Set getEntries() -> getEntries
    92:92:java.util.Set getKeys() -> getKeys
    83:83:java.util.Map getMap() -> getMap
    101:106:java.lang.Object getOrImplicitDefault(java.lang.Object) -> getOrImplicitDefault
    87:87:int getSize() -> getSize
    93:93:java.util.Collection getValues() -> getValues
    85:85:int hashCode() -> hashCode
    88:88:boolean isEmpty() -> isEmpty
    83:83:java.util.Set keySet() -> keySet
    96:96:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    98:98:void putAll(java.util.Map) -> putAll
    97:97:java.lang.Object remove(java.lang.Object) -> remove
    83:83:int size() -> size
    86:86:java.lang.String toString() -> toString
    83:83:java.util.Collection values() -> values
kotlin.collections.ReversedList -> kotlin.collections.ReversedList:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
    29:29:void <init>(java.util.List) -> <init>
    29:29:java.util.List access$getDelegate$p(kotlin.collections.ReversedList) -> access$getDelegate$p
    38:38:void add(int,java.lang.Object) -> add
    33:33:void clear() -> clear
    31:31:java.lang.Object get(int) -> get
    30:30:int getSize() -> getSize
    41:41:java.util.Iterator iterator() -> iterator
    42:42:java.util.ListIterator listIterator() -> listIterator
    44:44:java.util.ListIterator listIterator(int) -> listIterator
    34:34:java.lang.Object removeAt(int) -> removeAt
    36:36:java.lang.Object set(int,java.lang.Object) -> set
kotlin.collections.ReversedList$listIterator$1 -> kotlin.collections.ReversedList$listIterator$1:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
    44:45:void <init>(kotlin.collections.ReversedList,int) -> <init>
    53:56:void add(java.lang.Object) -> add
    45:45:java.util.ListIterator getDelegateIterator() -> getDelegateIterator
    46:46:boolean hasNext() -> hasNext
    47:47:boolean hasPrevious() -> hasPrevious
    48:48:java.lang.Object next() -> next
    49:49:int nextIndex() -> nextIndex
    50:50:java.lang.Object previous() -> previous
    51:51:int previousIndex() -> previousIndex
    59:59:void remove() -> remove
    60:60:void set(java.lang.Object) -> set
kotlin.collections.ReversedListReadOnly -> kotlin.collections.ReversedListReadOnly:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
    11:11:void <init>(java.util.List) -> <init>
    11:11:java.util.List access$getDelegate$p(kotlin.collections.ReversedListReadOnly) -> access$getDelegate$p
    13:13:java.lang.Object get(int) -> get
    12:12:int getSize() -> getSize
    15:15:java.util.Iterator iterator() -> iterator
    16:16:java.util.ListIterator listIterator() -> listIterator
    18:18:java.util.ListIterator listIterator(int) -> listIterator
kotlin.collections.ReversedListReadOnly$listIterator$1 -> kotlin.collections.ReversedListReadOnly$listIterator$1:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
    18:19:void <init>(kotlin.collections.ReversedListReadOnly,int) -> <init>
    0:0:void add(java.lang.Object) -> add
    19:19:java.util.ListIterator getDelegateIterator() -> getDelegateIterator
    20:20:boolean hasNext() -> hasNext
    21:21:boolean hasPrevious() -> hasPrevious
    22:22:java.lang.Object next() -> next
    23:23:int nextIndex() -> nextIndex
    24:24:java.lang.Object previous() -> previous
    25:25:int previousIndex() -> previousIndex
    0:0:void remove() -> remove
    0:0:void set(java.lang.Object) -> set
kotlin.collections.RingBuffer -> kotlin.collections.RingBuffer:
# {"id":"sourceFile","fileName":"SlidingWindow.kt"}
    89:100:void <init>(java.lang.Object[],int) -> <init>
    95:95:void <init>(int) -> <init>
    89:89:java.lang.Object[] access$getBuffer$p(kotlin.collections.RingBuffer) -> access$getBuffer$p
    89:89:int access$getCapacity$p(kotlin.collections.RingBuffer) -> access$getCapacity$p
    89:89:int access$getStartIndex$p(kotlin.collections.RingBuffer) -> access$getStartIndex$p
    172:210:void add(java.lang.Object) -> add
    163:165:kotlin.collections.RingBuffer expanded(int) -> expanded
    205:205:int forward(int,int) -> forward
    104:209:java.lang.Object get(int) -> get
    100:100:int getSize() -> getSize
    109:109:boolean isFull() -> isFull
    111:111:java.util.Iterator iterator() -> iterator
    184:211:void removeFirst(int) -> removeFirst
    130:149:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    155:155:java.lang.Object[] toArray() -> toArray
kotlin.collections.RingBuffer$iterator$1 -> kotlin.collections.RingBuffer$iterator$1:
# {"id":"sourceFile","fileName":"SlidingWindow.kt"}
    111:113:void <init>(kotlin.collections.RingBuffer) -> <init>
    116:208:void computeNext() -> computeNext
kotlin.collections.SetsKt -> kotlin.collections.SetsKt:
    1:1:void <init>() -> <init>
    0:0:java.util.Set build(java.util.Set) -> build
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Set createSetBuilder(int) -> createSetBuilder
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Set emptySet() -> emptySet
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Set setOf(java.lang.Object) -> setOf
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.SetsKt__SetsJVMKt -> kotlin.collections.SetsKt__SetsJVMKt:
# {"id":"sourceFile","fileName":"SetsJVM.kt"}
    0:0:void <init>() -> <init>
    51:51:java.util.Set build(java.util.Set) -> build
    26:26:java.util.Set buildSetInternal(kotlin.jvm.functions.Function1) -> buildSetInternal
    33:33:java.util.Set buildSetInternal(int,kotlin.jvm.functions.Function1) -> buildSetInternal
    39:39:java.util.Set createSetBuilder() -> createSetBuilder
    45:45:java.util.Set createSetBuilder(int) -> createSetBuilder
    20:20:java.util.Set setOf(java.lang.Object) -> setOf
    58:58:java.util.TreeSet sortedSetOf(java.lang.Object[]) -> sortedSetOf
    63:63:java.util.TreeSet sortedSetOf(java.util.Comparator,java.lang.Object[]) -> sortedSetOf
kotlin.collections.SetsKt__SetsKt -> kotlin.collections.SetsKt__SetsKt:
# {"id":"sourceFile","fileName":"Sets.kt"}
    0:0:void <init>() -> <init>
    141:141:java.util.Set buildSet(kotlin.jvm.functions.Function1) -> buildSet
    172:172:java.util.Set buildSet(int,kotlin.jvm.functions.Function1) -> buildSet
    36:36:java.util.Set emptySet() -> emptySet
    83:83:java.util.HashSet hashSetOf() -> hashSetOf
    86:86:java.util.HashSet hashSetOf(java.lang.Object[]) -> hashSetOf
    94:94:java.util.LinkedHashSet linkedSetOf() -> linkedSetOf
    101:101:java.util.LinkedHashSet linkedSetOf(java.lang.Object[]) -> linkedSetOf
    71:71:java.util.Set mutableSetOf() -> mutableSetOf
    78:78:java.util.Set mutableSetOf(java.lang.Object[]) -> mutableSetOf
    185:187:java.util.Set optimizeReadOnlySet(java.util.Set) -> optimizeReadOnlySet
    183:183:java.util.Set orEmpty(java.util.Set) -> orEmpty
    44:44:java.util.Set setOf(java.lang.Object[]) -> setOf
    61:61:java.util.Set setOf() -> setOf
    109:109:java.util.Set setOfNotNull(java.lang.Object) -> setOfNotNull
    119:119:java.util.Set setOfNotNull(java.lang.Object[]) -> setOfNotNull
kotlin.collections.SetsKt___SetsKt -> kotlin.collections.SetsKt___SetsKt:
# {"id":"sourceFile","fileName":"_Sets.kt"}
    0:0:void <init>() -> <init>
    26:140:java.util.Set minus(java.util.Set,java.lang.Object) -> minus
    37:38:java.util.Set minus(java.util.Set,java.lang.Object[]) -> minus
    48:142:java.util.Set minus(java.util.Set,java.lang.Iterable) -> minus
    64:65:java.util.Set minus(java.util.Set,kotlin.sequences.Sequence) -> minus
    76:76:java.util.Set minusElement(java.util.Set,java.lang.Object) -> minusElement
    85:87:java.util.Set plus(java.util.Set,java.lang.Object) -> plus
    98:100:java.util.Set plus(java.util.Set,java.lang.Object[]) -> plus
    110:112:java.util.Set plus(java.util.Set,java.lang.Iterable) -> plus
    123:125:java.util.Set plus(java.util.Set,kotlin.sequences.Sequence) -> plus
    136:136:java.util.Set plusElement(java.util.Set,java.lang.Object) -> plusElement
kotlin.collections.ShortIterator -> kotlin.collections.ShortIterator:
# {"id":"sourceFile","fileName":"PrimitiveIterators.kt"}
    27:27:void <init>() -> <init>
    27:27:java.lang.Object next() -> next
    28:28:java.lang.Short next() -> next
    0:0:void remove() -> remove
kotlin.collections.SlidingWindowKt -> kotlin.collections.SlidingWindowKt:
# {"id":"sourceFile","fileName":"SlidingWindow.kt"}
    9:13:void checkWindowSizeStep(int,int) -> checkWindowSizeStep
    23:24:java.util.Iterator windowedIterator(java.util.Iterator,int,int,boolean,boolean) -> windowedIterator
    18:19:kotlin.sequences.Sequence windowedSequence(kotlin.sequences.Sequence,int,int,boolean,boolean) -> windowedSequence
kotlin.collections.SlidingWindowKt$windowedIterator$1 -> kotlin.collections.SlidingWindowKt$windowedIterator$1:
# {"id":"sourceFile","fileName":"SlidingWindow.kt"}
    0:0:void <init>(int,int,java.util.Iterator,boolean,boolean,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    24:61:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1 -> kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(kotlin.sequences.Sequence,int,int,boolean,boolean) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.collections.State -> kotlin.collections.State:
# {"id":"sourceFile","fileName":"AbstractIterator.kt"}
    0:0:kotlin.collections.State[] $values() -> $values
    10:13:void <clinit>() -> <clinit>
    9:9:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.collections.State valueOf(java.lang.String) -> valueOf
    0:0:kotlin.collections.State[] values() -> values
kotlin.collections.TypeAliasesKt -> kotlin.collections.TypeAliasesKt:
# {"id":"sourceFile","fileName":"TypeAliases.kt"}
    0:0:void ArrayList$annotations() -> ArrayList$annotations
    0:0:void HashMap$annotations() -> HashMap$annotations
    0:0:void HashSet$annotations() -> HashSet$annotations
    0:0:void LinkedHashMap$annotations() -> LinkedHashMap$annotations
    0:0:void LinkedHashSet$annotations() -> LinkedHashSet$annotations
    0:0:void RandomAccess$annotations() -> RandomAccess$annotations
kotlin.collections.UArraySortingKt -> kotlin.collections.UArraySortingKt:
# {"id":"sourceFile","fileName":"UArraySorting.kt"}
    113:122:int partition--nroSd4(long[],int,int) -> partition--nroSd4
    14:23:int partition-4UcCI2c(byte[],int,int) -> partition-4UcCI2c
    47:56:int partition-Aa5vz7o(short[],int,int) -> partition-Aa5vz7o
    80:89:int partition-oBK06Vg(int[],int,int) -> partition-oBK06Vg
    133:137:void quickSort--nroSd4(long[],int,int) -> quickSort--nroSd4
    34:38:void quickSort-4UcCI2c(byte[],int,int) -> quickSort-4UcCI2c
    67:71:void quickSort-Aa5vz7o(short[],int,int) -> quickSort-Aa5vz7o
    100:104:void quickSort-oBK06Vg(int[],int,int) -> quickSort-oBK06Vg
    152:152:void sortArray--nroSd4(long[],int,int) -> sortArray--nroSd4
    146:146:void sortArray-4UcCI2c(byte[],int,int) -> sortArray-4UcCI2c
    148:148:void sortArray-Aa5vz7o(short[],int,int) -> sortArray-Aa5vz7o
    150:150:void sortArray-oBK06Vg(int[],int,int) -> sortArray-oBK06Vg
kotlin.collections.UCollectionsKt -> kotlin.collections.UCollectionsKt:
# {"id":"sourceFile","fileName":"_UCollections.kt"}
    1:1:void <init>() -> <init>
kotlin.collections.UCollectionsKt___UCollectionsKt -> kotlin.collections.UCollectionsKt___UCollectionsKt:
# {"id":"sourceFile","fileName":"_UCollections.kt"}
    0:0:void <init>() -> <init>
    108:109:int sumOfUByte(java.lang.Iterable) -> sumOfUByte
    80:81:int sumOfUInt(java.lang.Iterable) -> sumOfUInt
    94:95:long sumOfULong(java.lang.Iterable) -> sumOfULong
    122:123:int sumOfUShort(java.lang.Iterable) -> sumOfUShort
    26:29:byte[] toUByteArray(java.util.Collection) -> toUByteArray
    39:42:int[] toUIntArray(java.util.Collection) -> toUIntArray
    52:55:long[] toULongArray(java.util.Collection) -> toULongArray
    65:68:short[] toUShortArray(java.util.Collection) -> toUShortArray
kotlin.collections.builders.AbstractMapBuilderEntrySet -> kotlin.collections.builders.AbstractMapBuilderEntrySet:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    630:630:void <init>() -> <init>
    630:630:boolean contains(java.lang.Object) -> contains
    631:631:boolean contains(java.util.Map$Entry) -> contains
    630:630:boolean remove(java.lang.Object) -> remove
    630:630:boolean remove(java.util.Map$Entry) -> remove
kotlin.collections.builders.ListBuilder -> kotlin.collections.builders.ListBuilder:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    21:21:void <clinit>() -> <clinit>
    13:19:void <init>(java.lang.Object[],int,int,boolean,kotlin.collections.builders.ListBuilder,kotlin.collections.builders.ListBuilder) -> <init>
    24:24:void <init>() -> <init>
    26:27:void <init>(int) -> <init>
    12:12:java.lang.Object[] access$getArray$p(kotlin.collections.builders.ListBuilder) -> access$getArray$p
    12:12:int access$getLength$p(kotlin.collections.builders.ListBuilder) -> access$getLength$p
    12:12:int access$getOffset$p(kotlin.collections.builders.ListBuilder) -> access$getOffset$p
    87:88:boolean add(java.lang.Object) -> add
    93:95:void add(int,java.lang.Object) -> add
    99:101:boolean addAll(java.util.Collection) -> addAll
    106:109:boolean addAll(int,java.util.Collection) -> addAll
    224:233:void addAllInternal(int,java.util.Collection,int) -> addAllInternal
    213:219:void addAtInternal(int,java.lang.Object) -> addAtInternal
    30:33:java.util.List build() -> build
    192:192:void checkIsMutable() -> checkIsMutable
    114:115:void clear() -> clear
    203:203:boolean contentEquals(java.util.List) -> contentEquals
    183:187:void ensureCapacity(int) -> ensureCapacity
    199:199:void ensureExtraCapacity(int) -> ensureExtraCapacity
    169:169:boolean equals(java.lang.Object) -> equals
    48:49:java.lang.Object get(int) -> get
    43:43:int getSize() -> getSize
    173:173:int hashCode() -> hashCode
    62:63:int indexOf(java.lang.Object) -> indexOf
    207:209:void insertAtInternal(int,int) -> insertAtInternal
    196:196:boolean isEffectivelyReadOnly() -> isEffectivelyReadOnly
    45:45:boolean isEmpty() -> isEmpty
    78:78:java.util.Iterator iterator() -> iterator
    70:72:int lastIndexOf(java.lang.Object) -> lastIndexOf
    79:79:java.util.ListIterator listIterator() -> listIterator
    82:83:java.util.ListIterator listIterator(int) -> listIterator
    125:127:boolean remove(java.lang.Object) -> remove
    132:133:boolean removeAll(java.util.Collection) -> removeAll
    119:121:java.lang.Object removeAt(int) -> removeAt
    240:248:java.lang.Object removeAtInternal(int) -> removeAtInternal
    254:260:void removeRangeInternal(int,int) -> removeRangeInternal
    137:138:boolean retainAll(java.util.Collection) -> retainAll
    265:282:int retainOrRemoveAllInternal(int,int,java.util.Collection,boolean) -> retainOrRemoveAllInternal
    53:56:java.lang.Object set(int,java.lang.Object) -> set
    142:143:java.util.List subList(int,int) -> subList
    147:156:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    164:164:java.lang.Object[] toArray() -> toArray
    177:177:java.lang.String toString() -> toString
    37:40:java.lang.Object writeReplace() -> writeReplace
kotlin.collections.builders.ListBuilder$Companion -> kotlin.collections.builders.ListBuilder$Companion:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    20:20:void <init>() -> <init>
kotlin.collections.builders.ListBuilder$Itr -> kotlin.collections.builders.ListBuilder$Itr:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    292:295:void <init>(kotlin.collections.builders.ListBuilder,int) -> <init>
    322:323:void add(java.lang.Object) -> add
    299:299:boolean hasNext() -> hasNext
    298:298:boolean hasPrevious() -> hasPrevious
    311:313:java.lang.Object next() -> next
    302:302:int nextIndex() -> nextIndex
    305:307:java.lang.Object previous() -> previous
    301:301:int previousIndex() -> previousIndex
    327:330:void remove() -> remove
    317:318:void set(java.lang.Object) -> set
kotlin.collections.builders.ListBuilderKt -> kotlin.collections.builders.ListBuilderKt:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    1:1:boolean access$subarrayContentEquals(java.lang.Object[],int,int,java.util.List) -> access$subarrayContentEquals
    1:1:int access$subarrayContentHashCode(java.lang.Object[],int,int) -> access$subarrayContentHashCode
    1:1:java.lang.String access$subarrayContentToString(java.lang.Object[],int,int) -> access$subarrayContentToString
    336:338:java.lang.Object[] arrayOfUninitializedElements(int) -> arrayOfUninitializedElements
    377:377:java.lang.Object[] copyOfUninitializedElements(java.lang.Object[],int) -> copyOfUninitializedElements
    382:382:void resetAt(java.lang.Object[],int) -> resetAt
    386:386:void resetRange(java.lang.Object[],int,int) -> resetRange
    366:369:boolean subarrayContentEquals(java.lang.Object[],int,int,java.util.List) -> subarrayContentEquals
    358:359:int subarrayContentHashCode(java.lang.Object[],int,int) -> subarrayContentHashCode
    342:351:java.lang.String subarrayContentToString(java.lang.Object[],int,int) -> subarrayContentToString
kotlin.collections.builders.MapBuilder -> kotlin.collections.builders.MapBuilder:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    469:469:void <clinit>() -> <clinit>
    12:26:void <init>(java.lang.Object[],java.lang.Object[],int[],int[],int,int) -> <init>
    40:40:void <init>() -> <init>
    42:46:void <init>(int) -> <init>
    12:12:java.lang.Object[] access$allocateValuesArray(kotlin.collections.builders.MapBuilder) -> access$allocateValuesArray
    12:12:kotlin.collections.builders.MapBuilder access$getEmpty$cp() -> access$getEmpty$cp
    12:12:java.lang.Object[] access$getKeysArray$p(kotlin.collections.builders.MapBuilder) -> access$getKeysArray$p
    12:12:int access$getLength$p(kotlin.collections.builders.MapBuilder) -> access$getLength$p
    12:12:int[] access$getPresenceArray$p(kotlin.collections.builders.MapBuilder) -> access$getPresenceArray$p
    12:12:java.lang.Object[] access$getValuesArray$p(kotlin.collections.builders.MapBuilder) -> access$getValuesArray$p
    12:12:void access$removeKeyAt(kotlin.collections.builders.MapBuilder,int) -> access$removeKeyAt
    294:322:int addKey$kotlin_stdlib(java.lang.Object) -> addKey$kotlin_stdlib
    213:216:java.lang.Object[] allocateValuesArray() -> allocateValuesArray
    51:54:java.util.Map build() -> build
    180:180:void checkIsMutable$kotlin_stdlib() -> checkIsMutable$kotlin_stdlib
    102:114:void clear() -> clear
    225:236:void compact() -> compact
    401:406:boolean containsAllEntries$kotlin_stdlib(java.util.Collection) -> containsAllEntries$kotlin_stdlib
    393:395:boolean containsEntry$kotlin_stdlib(java.util.Map$Entry) -> containsEntry$kotlin_stdlib
    64:64:boolean containsKey(java.lang.Object) -> containsKey
    65:65:boolean containsValue(java.lang.Object) -> containsValue
    398:398:boolean contentEquals(java.util.Map) -> contentEquals
    200:208:void ensureCapacity(int) -> ensureCapacity
    184:187:void ensureExtraCapacity(int) -> ensureExtraCapacity
    461:461:kotlin.collections.builders.MapBuilder$EntriesItr entriesIterator$kotlin_stdlib() -> entriesIterator$kotlin_stdlib
    12:12:java.util.Set entrySet() -> entrySet
    146:147:boolean equals(java.lang.Object) -> equals
    273:280:int findKey(java.lang.Object) -> findKey
    285:287:int findValue(java.lang.Object) -> findValue
    68:70:java.lang.Object get(java.lang.Object) -> get
    176:176:int getCapacity$kotlin_stdlib() -> getCapacity$kotlin_stdlib
    136:139:java.util.Set getEntries() -> getEntries
    177:177:int getHashSize() -> getHashSize
    118:121:java.util.Set getKeys() -> getKeys
    28:28:int getSize() -> getSize
    127:130:java.util.Collection getValues() -> getValues
    220:220:int hash(java.lang.Object) -> hash
    152:154:int hashCode() -> hashCode
    63:63:boolean isEmpty() -> isEmpty
    35:35:boolean isReadOnly$kotlin_stdlib() -> isReadOnly$kotlin_stdlib
    12:12:java.util.Set keySet() -> keySet
    459:459:kotlin.collections.builders.MapBuilder$KeysItr keysIterator$kotlin_stdlib() -> keysIterator$kotlin_stdlib
    74:82:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    88:89:void putAll(java.util.Map) -> putAll
    431:436:boolean putAllEntries(java.util.Collection) -> putAllEntries
    416:424:boolean putEntry(java.util.Map$Entry) -> putEntry
    258:268:boolean putRehash(int) -> putRehash
    241:251:void rehash(int) -> rehash
    93:97:java.lang.Object remove(java.lang.Object) -> remove
    443:447:boolean removeEntry$kotlin_stdlib(java.util.Map$Entry) -> removeEntry$kotlin_stdlib
    346:386:void removeHashAt(int) -> removeHashAt
    328:331:int removeKey$kotlin_stdlib(java.lang.Object) -> removeKey$kotlin_stdlib
    336:339:void removeKeyAt(int) -> removeKeyAt
    452:455:boolean removeValue$kotlin_stdlib(java.lang.Object) -> removeValue$kotlin_stdlib
    192:196:boolean shouldCompact(int) -> shouldCompact
    12:12:int size() -> size
    160:170:java.lang.String toString() -> toString
    12:12:java.util.Collection values() -> values
    460:460:kotlin.collections.builders.MapBuilder$ValuesItr valuesIterator$kotlin_stdlib() -> valuesIterator$kotlin_stdlib
    58:61:java.lang.Object writeReplace() -> writeReplace
kotlin.collections.builders.MapBuilder$Companion -> kotlin.collections.builders.MapBuilder$Companion:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    463:463:void <init>() -> <init>
    463:463:int access$computeHashSize(kotlin.collections.builders.MapBuilder$Companion,int) -> access$computeHashSize
    463:463:int access$computeShift(kotlin.collections.builders.MapBuilder$Companion,int) -> access$computeShift
    471:471:int computeHashSize(int) -> computeHashSize
    473:473:int computeShift(int) -> computeShift
    469:469:kotlin.collections.builders.MapBuilder getEmpty$kotlin_stdlib() -> getEmpty$kotlin_stdlib
kotlin.collections.builders.MapBuilder$EntriesItr -> kotlin.collections.builders.MapBuilder$EntriesItr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    522:522:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    522:522:java.lang.Object next() -> next
    525:528:kotlin.collections.builders.MapBuilder$EntryRef next() -> next
    541:548:void nextAppendString(java.lang.StringBuilder) -> nextAppendString
    533:536:int nextHashCode$kotlin_stdlib() -> nextHashCode$kotlin_stdlib
kotlin.collections.builders.MapBuilder$EntryRef -> kotlin.collections.builders.MapBuilder$EntryRef:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    552:554:void <init>(kotlin.collections.builders.MapBuilder,int) -> <init>
    571:573:boolean equals(java.lang.Object) -> equals
    557:557:java.lang.Object getKey() -> getKey
    560:560:java.lang.Object getValue() -> getValue
    575:575:int hashCode() -> hashCode
    563:566:java.lang.Object setValue(java.lang.Object) -> setValue
    577:577:java.lang.String toString() -> toString
kotlin.collections.builders.MapBuilder$Itr -> kotlin.collections.builders.MapBuilder$Itr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    476:483:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    479:479:int getIndex$kotlin_stdlib() -> getIndex$kotlin_stdlib
    480:480:int getLastIndex$kotlin_stdlib() -> getLastIndex$kotlin_stdlib
    477:477:kotlin.collections.builders.MapBuilder getMap$kotlin_stdlib() -> getMap$kotlin_stdlib
    491:491:boolean hasNext() -> hasNext
    487:488:void initNext$kotlin_stdlib() -> initNext$kotlin_stdlib
    494:497:void remove() -> remove
    479:479:void setIndex$kotlin_stdlib(int) -> setIndex$kotlin_stdlib
    480:480:void setLastIndex$kotlin_stdlib(int) -> setLastIndex$kotlin_stdlib
kotlin.collections.builders.MapBuilder$KeysItr -> kotlin.collections.builders.MapBuilder$KeysItr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    501:501:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    503:506:java.lang.Object next() -> next
kotlin.collections.builders.MapBuilder$ValuesItr -> kotlin.collections.builders.MapBuilder$ValuesItr:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    512:512:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    514:517:java.lang.Object next() -> next
kotlin.collections.builders.MapBuilderEntries -> kotlin.collections.builders.MapBuilderEntries:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    636:637:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    635:635:boolean add(java.lang.Object) -> add
    643:643:boolean add(java.util.Map$Entry) -> add
    644:644:boolean addAll(java.util.Collection) -> addAll
    642:642:void clear() -> clear
    647:647:boolean containsAll(java.util.Collection) -> containsAll
    641:641:boolean containsEntry(java.util.Map$Entry) -> containsEntry
    636:636:kotlin.collections.builders.MapBuilder getBacking() -> getBacking
    639:639:int getSize() -> getSize
    640:640:boolean isEmpty() -> isEmpty
    646:646:java.util.Iterator iterator() -> iterator
    645:645:boolean remove(java.util.Map$Entry) -> remove
    650:651:boolean removeAll(java.util.Collection) -> removeAll
    655:656:boolean retainAll(java.util.Collection) -> retainAll
kotlin.collections.builders.MapBuilderKeys -> kotlin.collections.builders.MapBuilderKeys:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    582:583:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    589:589:boolean add(java.lang.Object) -> add
    590:590:boolean addAll(java.util.Collection) -> addAll
    588:588:void clear() -> clear
    587:587:boolean contains(java.lang.Object) -> contains
    585:585:int getSize() -> getSize
    586:586:boolean isEmpty() -> isEmpty
    592:592:java.util.Iterator iterator() -> iterator
    591:591:boolean remove(java.lang.Object) -> remove
    595:596:boolean removeAll(java.util.Collection) -> removeAll
    600:601:boolean retainAll(java.util.Collection) -> retainAll
kotlin.collections.builders.MapBuilderValues -> kotlin.collections.builders.MapBuilderValues:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    606:607:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    612:612:boolean add(java.lang.Object) -> add
    613:613:boolean addAll(java.util.Collection) -> addAll
    614:614:void clear() -> clear
    611:611:boolean contains(java.lang.Object) -> contains
    606:606:kotlin.collections.builders.MapBuilder getBacking() -> getBacking
    609:609:int getSize() -> getSize
    610:610:boolean isEmpty() -> isEmpty
    615:615:java.util.Iterator iterator() -> iterator
    616:616:boolean remove(java.lang.Object) -> remove
    619:620:boolean removeAll(java.util.Collection) -> removeAll
    624:625:boolean retainAll(java.util.Collection) -> retainAll
kotlin.collections.builders.SerializedCollection -> kotlin.collections.builders.SerializedCollection:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    0:0:void <clinit>() -> <clinit>
    389:391:void <init>(java.util.Collection,int) -> <init>
    394:394:void <init>() -> <init>
    405:421:void readExternal(java.io.ObjectInput) -> readExternal
    425:425:java.lang.Object readResolve() -> readResolve
    397:400:void writeExternal(java.io.ObjectOutput) -> writeExternal
kotlin.collections.builders.SerializedCollection$Companion -> kotlin.collections.builders.SerializedCollection$Companion:
# {"id":"sourceFile","fileName":"ListBuilder.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    427:427:void <init>() -> <init>
kotlin.collections.builders.SerializedMap -> kotlin.collections.builders.SerializedMap:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    0:0:void <clinit>() -> <clinit>
    660:661:void <init>(java.util.Map) -> <init>
    664:664:void <init>() -> <init>
    676:686:void readExternal(java.io.ObjectInput) -> readExternal
    691:691:java.lang.Object readResolve() -> readResolve
    667:671:void writeExternal(java.io.ObjectOutput) -> writeExternal
kotlin.collections.builders.SerializedMap$Companion -> kotlin.collections.builders.SerializedMap$Companion:
# {"id":"sourceFile","fileName":"MapBuilder.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    693:693:void <init>() -> <init>
kotlin.collections.builders.SetBuilder -> kotlin.collections.builders.SetBuilder:
# {"id":"sourceFile","fileName":"SetBuilder.kt"}
    14:14:void <clinit>() -> <clinit>
    11:12:void <init>(kotlin.collections.builders.MapBuilder) -> <init>
    17:17:void <init>() -> <init>
    19:19:void <init>(int) -> <init>
    36:36:boolean add(java.lang.Object) -> add
    41:42:boolean addAll(java.util.Collection) -> addAll
    22:23:java.util.Set build() -> build
    35:35:void clear() -> clear
    34:34:boolean contains(java.lang.Object) -> contains
    32:32:int getSize() -> getSize
    33:33:boolean isEmpty() -> isEmpty
    38:38:java.util.Iterator iterator() -> iterator
    37:37:boolean remove(java.lang.Object) -> remove
    46:47:boolean removeAll(java.util.Collection) -> removeAll
    51:52:boolean retainAll(java.util.Collection) -> retainAll
    27:30:java.lang.Object writeReplace() -> writeReplace
kotlin.collections.builders.SetBuilder$Companion -> kotlin.collections.builders.SetBuilder$Companion:
# {"id":"sourceFile","fileName":"SetBuilder.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    13:13:void <init>() -> <init>
kotlin.collections.jdk8.CollectionsJDK8Kt -> kotlin.collections.jdk8.CollectionsJDK8Kt:
# {"id":"sourceFile","fileName":"Collections.kt"}
    30:30:java.lang.Object getOrDefault(java.util.Map,java.lang.Object,java.lang.Object) -> getOrDefault
    40:40:boolean remove(java.util.Map,java.lang.Object,java.lang.Object) -> remove
kotlin.collections.jdk8.CollectionsJDK8Kt$$ExternalSyntheticApiModelOutline0 -> kotlin.collections.jdk8.CollectionsJDK8Kt$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.collections.jdk8.CollectionsJDK8Kt$$InternalSyntheticApiModelOutline$1$c0a031913eaafcd3f58e7dbfb84699aba033965d5b923ebe78c275135c38468e$0.m(java.util.Map,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.unsigned.UArraysKt -> kotlin.collections.unsigned.UArraysKt:
    1:1:void <init>() -> <init>
    0:0:boolean contentEquals-FGO6Aew(short[],short[]) -> contentEquals-FGO6Aew
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contentEquals-KJPZfPQ(int[],int[]) -> contentEquals-KJPZfPQ
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contentEquals-kV0jMPg(byte[],byte[]) -> contentEquals-kV0jMPg
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contentEquals-lec5QzE(long[],long[]) -> contentEquals-lec5QzE
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String contentToString-2csIQuQ(byte[]) -> contentToString-2csIQuQ
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String contentToString-XUkPCBk(int[]) -> contentToString-XUkPCBk
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String contentToString-d-6D3K8(short[]) -> contentToString-d-6D3K8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String contentToString-uLth9ew(long[]) -> contentToString-uLth9ew
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt -> kotlin.collections.unsigned.UArraysKt___UArraysJvmKt:
# {"id":"sourceFile","fileName":"_UArraysJvm.kt"}
    0:0:void <init>() -> <init>
    74:74:java.util.List asList--ajY-9A(int[]) -> asList--ajY-9A
    106:106:java.util.List asList-GBYM_sE(byte[]) -> asList-GBYM_sE
    90:90:java.util.List asList-QwZRm1k(long[]) -> asList-QwZRm1k
    122:122:java.util.List asList-rL5Bavg(short[]) -> asList-rL5Bavg
    153:160:int binarySearch-2fe2U9s(int[],int,int,int) -> binarySearch-2fe2U9s
    152:152:int binarySearch-2fe2U9s$default(int[],int,int,int,int,java.lang.Object) -> binarySearch-2fe2U9s$default
    270:277:int binarySearch-EtDCXyQ(short[],short,int,int) -> binarySearch-EtDCXyQ
    269:269:int binarySearch-EtDCXyQ$default(short[],short,int,int,int,java.lang.Object) -> binarySearch-EtDCXyQ$default
    192:199:int binarySearch-K6DWlUc(long[],long,int,int) -> binarySearch-K6DWlUc
    191:191:int binarySearch-K6DWlUc$default(long[],long,int,int,int,java.lang.Object) -> binarySearch-K6DWlUc$default
    231:238:int binarySearch-WpHrYlw(byte[],byte,int,int) -> binarySearch-WpHrYlw
    230:230:int binarySearch-WpHrYlw$default(byte[],byte,int,int,int,java.lang.Object) -> binarySearch-WpHrYlw$default
    53:53:byte elementAt-PpDY95g(byte[],int) -> elementAt-PpDY95g
    65:65:short elementAt-nggk6HY(short[],int) -> elementAt-nggk6HY
    29:29:int elementAt-qFRl0hI(int[],int) -> elementAt-qFRl0hI
    41:41:long elementAt-r7IrZao(long[],int) -> elementAt-r7IrZao
    294:294:kotlin.UInt max--ajY-9A(int[]) -> max--ajY-9A
    312:312:kotlin.UByte max-GBYM_sE(byte[]) -> max-GBYM_sE
    303:303:kotlin.ULong max-QwZRm1k(long[]) -> max-QwZRm1k
    321:321:kotlin.UShort max-rL5Bavg(short[]) -> max-rL5Bavg
    351:351:kotlin.UByte maxBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> maxBy-JOV_ifY
    341:341:kotlin.ULong maxBy-MShoTSo(long[],kotlin.jvm.functions.Function1) -> maxBy-MShoTSo
    331:331:kotlin.UInt maxBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> maxBy-jgv0xPQ
    361:361:kotlin.UShort maxBy-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> maxBy-xTcfx_M
    388:388:kotlin.UByte maxWith-XMRcp5o(byte[],java.util.Comparator) -> maxWith-XMRcp5o
    370:370:kotlin.UInt maxWith-YmdZ_VM(int[],java.util.Comparator) -> maxWith-YmdZ_VM
    397:397:kotlin.UShort maxWith-eOHTfZs(short[],java.util.Comparator) -> maxWith-eOHTfZs
    379:379:kotlin.ULong maxWith-zrEWJaI(long[],java.util.Comparator) -> maxWith-zrEWJaI
    406:406:kotlin.UInt min--ajY-9A(int[]) -> min--ajY-9A
    424:424:kotlin.UByte min-GBYM_sE(byte[]) -> min-GBYM_sE
    415:415:kotlin.ULong min-QwZRm1k(long[]) -> min-QwZRm1k
    433:433:kotlin.UShort min-rL5Bavg(short[]) -> min-rL5Bavg
    463:463:kotlin.UByte minBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> minBy-JOV_ifY
    453:453:kotlin.ULong minBy-MShoTSo(long[],kotlin.jvm.functions.Function1) -> minBy-MShoTSo
    443:443:kotlin.UInt minBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> minBy-jgv0xPQ
    473:473:kotlin.UShort minBy-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> minBy-xTcfx_M
    500:500:kotlin.UByte minWith-XMRcp5o(byte[],java.util.Comparator) -> minWith-XMRcp5o
    482:482:kotlin.UInt minWith-YmdZ_VM(int[],java.util.Comparator) -> minWith-YmdZ_VM
    509:509:kotlin.UShort minWith-eOHTfZs(short[],java.util.Comparator) -> minWith-eOHTfZs
    491:491:kotlin.ULong minWith-zrEWJaI(long[],java.util.Comparator) -> minWith-zrEWJaI
    523:525:java.math.BigDecimal sumOfBigDecimal(int[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    541:543:java.math.BigDecimal sumOfBigDecimal(long[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    559:561:java.math.BigDecimal sumOfBigDecimal(byte[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    577:579:java.math.BigDecimal sumOfBigDecimal(short[],kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    595:597:java.math.BigInteger sumOfBigInteger(int[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    613:615:java.math.BigInteger sumOfBigInteger(long[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    631:633:java.math.BigInteger sumOfBigInteger(byte[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
    649:651:java.math.BigInteger sumOfBigInteger(short[],kotlin.jvm.functions.Function1) -> sumOfBigInteger
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1 -> kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1:
# {"id":"sourceFile","fileName":"_UArraysJvm.kt"}
    74:74:void <init>(int[]) -> <init>
    74:74:boolean contains(java.lang.Object) -> contains
    77:77:boolean contains-WZ4Q5Ns(int) -> contains-WZ4Q5Ns
    74:74:java.lang.Object get(int) -> get
    78:78:int get-pVg5ArA(int) -> get-pVg5ArA
    75:75:int getSize() -> getSize
    74:74:int indexOf(java.lang.Object) -> indexOf
    79:79:int indexOf-WZ4Q5Ns(int) -> indexOf-WZ4Q5Ns
    76:76:boolean isEmpty() -> isEmpty
    74:74:int lastIndexOf(java.lang.Object) -> lastIndexOf
    80:80:int lastIndexOf-WZ4Q5Ns(int) -> lastIndexOf-WZ4Q5Ns
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2 -> kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2:
# {"id":"sourceFile","fileName":"_UArraysJvm.kt"}
    90:90:void <init>(long[]) -> <init>
    90:90:boolean contains(java.lang.Object) -> contains
    93:93:boolean contains-VKZWuLQ(long) -> contains-VKZWuLQ
    90:90:java.lang.Object get(int) -> get
    94:94:long get-s-VKNKU(int) -> get-s-VKNKU
    91:91:int getSize() -> getSize
    90:90:int indexOf(java.lang.Object) -> indexOf
    95:95:int indexOf-VKZWuLQ(long) -> indexOf-VKZWuLQ
    92:92:boolean isEmpty() -> isEmpty
    90:90:int lastIndexOf(java.lang.Object) -> lastIndexOf
    96:96:int lastIndexOf-VKZWuLQ(long) -> lastIndexOf-VKZWuLQ
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3 -> kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3:
# {"id":"sourceFile","fileName":"_UArraysJvm.kt"}
    106:106:void <init>(byte[]) -> <init>
    106:106:boolean contains(java.lang.Object) -> contains
    109:109:boolean contains-7apg3OU(byte) -> contains-7apg3OU
    106:106:java.lang.Object get(int) -> get
    110:110:byte get-w2LRezQ(int) -> get-w2LRezQ
    107:107:int getSize() -> getSize
    106:106:int indexOf(java.lang.Object) -> indexOf
    111:111:int indexOf-7apg3OU(byte) -> indexOf-7apg3OU
    108:108:boolean isEmpty() -> isEmpty
    106:106:int lastIndexOf(java.lang.Object) -> lastIndexOf
    112:112:int lastIndexOf-7apg3OU(byte) -> lastIndexOf-7apg3OU
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4 -> kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4:
# {"id":"sourceFile","fileName":"_UArraysJvm.kt"}
    122:122:void <init>(short[]) -> <init>
    122:122:boolean contains(java.lang.Object) -> contains
    125:125:boolean contains-xj2QHRw(short) -> contains-xj2QHRw
    122:122:java.lang.Object get(int) -> get
    126:126:short get-Mh2AYeg(int) -> get-Mh2AYeg
    123:123:int getSize() -> getSize
    122:122:int indexOf(java.lang.Object) -> indexOf
    127:127:int indexOf-xj2QHRw(short) -> indexOf-xj2QHRw
    124:124:boolean isEmpty() -> isEmpty
    122:122:int lastIndexOf(java.lang.Object) -> lastIndexOf
    128:128:int lastIndexOf-xj2QHRw(short) -> lastIndexOf-xj2QHRw
kotlin.collections.unsigned.UArraysKt___UArraysKt -> kotlin.collections.unsigned.UArraysKt___UArraysKt:
# {"id":"sourceFile","fileName":"_UArrays.kt"}
    0:0:void <init>() -> <init>
    5248:5248:boolean all-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> all-JOV_ifY
    5231:5231:boolean all-MShoTSo(long[],kotlin.jvm.functions.Function1) -> all-MShoTSo
    5214:5214:boolean all-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> all-jgv0xPQ
    5265:5265:boolean all-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> all-xTcfx_M
    5278:5278:boolean any--ajY-9A(int[]) -> any--ajY-9A
    5302:5302:boolean any-GBYM_sE(byte[]) -> any-GBYM_sE
    5352:5352:boolean any-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> any-JOV_ifY
    5339:5339:boolean any-MShoTSo(long[],kotlin.jvm.functions.Function1) -> any-MShoTSo
    5290:5290:boolean any-QwZRm1k(long[]) -> any-QwZRm1k
    5326:5326:boolean any-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> any-jgv0xPQ
    5314:5314:boolean any-rL5Bavg(short[]) -> any-rL5Bavg
    5365:5365:boolean any-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> any-xTcfx_M
    0:0:byte[] asByteArray-GBYM_sE(byte[]) -> asByteArray-GBYM_sE
    0:0:int[] asIntArray--ajY-9A(int[]) -> asIntArray--ajY-9A
    0:0:long[] asLongArray-QwZRm1k(long[]) -> asLongArray-QwZRm1k
    0:0:short[] asShortArray-rL5Bavg(short[]) -> asShortArray-rL5Bavg
    3257:3257:byte[] asUByteArray(byte[]) -> asUByteArray
    3268:3268:int[] asUIntArray(int[]) -> asUIntArray
    3279:3279:long[] asULongArray(long[]) -> asULongArray
    3290:3290:short[] asUShortArray(short[]) -> asUShortArray
    4323:4324:java.util.Map associateWith-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> associateWith-JOV_ifY
    4305:4306:java.util.Map associateWith-MShoTSo(long[],kotlin.jvm.functions.Function1) -> associateWith-MShoTSo
    4287:4288:java.util.Map associateWith-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> associateWith-jgv0xPQ
    4341:4342:java.util.Map associateWith-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> associateWith-xTcfx_M
    4357:4358:java.util.Map associateWithTo-4D70W2E(int[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo-4D70W2E
    4393:4394:java.util.Map associateWithTo-H21X9dk(byte[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo-H21X9dk
    4375:4376:java.util.Map associateWithTo-X6OPwNk(long[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo-X6OPwNk
    4411:4412:java.util.Map associateWithTo-ciTST-8(short[],java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo-ciTST-8
    31:31:int component1--ajY-9A(int[]) -> component1--ajY-9A
    57:57:byte component1-GBYM_sE(byte[]) -> component1-GBYM_sE
    44:44:long component1-QwZRm1k(long[]) -> component1-QwZRm1k
    70:70:short component1-rL5Bavg(short[]) -> component1-rL5Bavg
    83:83:int component2--ajY-9A(int[]) -> component2--ajY-9A
    109:109:byte component2-GBYM_sE(byte[]) -> component2-GBYM_sE
    96:96:long component2-QwZRm1k(long[]) -> component2-QwZRm1k
    122:122:short component2-rL5Bavg(short[]) -> component2-rL5Bavg
    135:135:int component3--ajY-9A(int[]) -> component3--ajY-9A
    161:161:byte component3-GBYM_sE(byte[]) -> component3-GBYM_sE
    148:148:long component3-QwZRm1k(long[]) -> component3-QwZRm1k
    174:174:short component3-rL5Bavg(short[]) -> component3-rL5Bavg
    187:187:int component4--ajY-9A(int[]) -> component4--ajY-9A
    213:213:byte component4-GBYM_sE(byte[]) -> component4-GBYM_sE
    200:200:long component4-QwZRm1k(long[]) -> component4-QwZRm1k
    226:226:short component4-rL5Bavg(short[]) -> component4-rL5Bavg
    239:239:int component5--ajY-9A(int[]) -> component5--ajY-9A
    265:265:byte component5-GBYM_sE(byte[]) -> component5-GBYM_sE
    252:252:long component5-QwZRm1k(long[]) -> component5-QwZRm1k
    278:278:short component5-rL5Bavg(short[]) -> component5-rL5Bavg
    3330:3330:boolean contentEquals-FGO6Aew(short[],short[]) -> contentEquals-FGO6Aew
    3300:3300:boolean contentEquals-KJPZfPQ(int[],int[]) -> contentEquals-KJPZfPQ
    3320:3320:boolean contentEquals-kV0jMPg(byte[],byte[]) -> contentEquals-kV0jMPg
    3310:3310:boolean contentEquals-lec5QzE(long[],long[]) -> contentEquals-lec5QzE
    3357:3357:int contentHashCode-2csIQuQ(byte[]) -> contentHashCode-2csIQuQ
    3339:3339:int contentHashCode-XUkPCBk(int[]) -> contentHashCode-XUkPCBk
    3366:3366:int contentHashCode-d-6D3K8(short[]) -> contentHashCode-d-6D3K8
    3348:3348:int contentHashCode-uLth9ew(long[]) -> contentHashCode-uLth9ew
    3399:3399:java.lang.String contentToString-2csIQuQ(byte[]) -> contentToString-2csIQuQ
    3377:3377:java.lang.String contentToString-XUkPCBk(int[]) -> contentToString-XUkPCBk
    3410:3410:java.lang.String contentToString-d-6D3K8(short[]) -> contentToString-d-6D3K8
    3388:3388:java.lang.String contentToString-uLth9ew(long[]) -> contentToString-uLth9ew
    3457:3457:long[] copyInto--B0-L2c(long[],long[],int,int,int) -> copyInto--B0-L2c
    3456:3457:long[] copyInto--B0-L2c$default(long[],long[],int,int,int,int,java.lang.Object) -> copyInto--B0-L2c$default
    3505:3505:short[] copyInto-9-ak10g(short[],short[],int,int,int) -> copyInto-9-ak10g
    3504:3505:short[] copyInto-9-ak10g$default(short[],short[],int,int,int,int,java.lang.Object) -> copyInto-9-ak10g$default
    3481:3481:byte[] copyInto-FUQE5sA(byte[],byte[],int,int,int) -> copyInto-FUQE5sA
    3480:3481:byte[] copyInto-FUQE5sA$default(byte[],byte[],int,int,int,int,java.lang.Object) -> copyInto-FUQE5sA$default
    3433:3433:int[] copyInto-sIZ3KeM(int[],int[],int,int,int) -> copyInto-sIZ3KeM
    3432:3433:int[] copyInto-sIZ3KeM$default(int[],int[],int,int,int,int,java.lang.Object) -> copyInto-sIZ3KeM$default
    3518:3518:int[] copyOf--ajY-9A(int[]) -> copyOf--ajY-9A
    3542:3542:byte[] copyOf-GBYM_sE(byte[]) -> copyOf-GBYM_sE
    3596:3596:byte[] copyOf-PpDY95g(byte[],int) -> copyOf-PpDY95g
    3530:3530:long[] copyOf-QwZRm1k(long[]) -> copyOf-QwZRm1k
    3610:3610:short[] copyOf-nggk6HY(short[],int) -> copyOf-nggk6HY
    3568:3568:int[] copyOf-qFRl0hI(int[],int) -> copyOf-qFRl0hI
    3582:3582:long[] copyOf-r7IrZao(long[],int) -> copyOf-r7IrZao
    3554:3554:short[] copyOf-rL5Bavg(short[]) -> copyOf-rL5Bavg
    3642:3642:long[] copyOfRange--nroSd4(long[],int,int) -> copyOfRange--nroSd4
    3658:3658:byte[] copyOfRange-4UcCI2c(byte[],int,int) -> copyOfRange-4UcCI2c
    3674:3674:short[] copyOfRange-Aa5vz7o(short[],int,int) -> copyOfRange-Aa5vz7o
    3626:3626:int[] copyOfRange-oBK06Vg(int[],int,int) -> copyOfRange-oBK06Vg
    5401:5401:int count-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> count-JOV_ifY
    5389:5389:int count-MShoTSo(long[],kotlin.jvm.functions.Function1) -> count-MShoTSo
    5377:5377:int count-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> count-jgv0xPQ
    5413:5413:int count-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> count-xTcfx_M
    1635:1636:java.util.List drop-PpDY95g(byte[],int) -> drop-PpDY95g
    1649:1650:java.util.List drop-nggk6HY(short[],int) -> drop-nggk6HY
    1607:1608:java.util.List drop-qFRl0hI(int[],int) -> drop-qFRl0hI
    1621:1622:java.util.List drop-r7IrZao(long[],int) -> drop-r7IrZao
    1691:1692:java.util.List dropLast-PpDY95g(byte[],int) -> dropLast-PpDY95g
    1705:1706:java.util.List dropLast-nggk6HY(short[],int) -> dropLast-nggk6HY
    1663:1664:java.util.List dropLast-qFRl0hI(int[],int) -> dropLast-qFRl0hI
    1677:1678:java.util.List dropLast-r7IrZao(long[],int) -> dropLast-r7IrZao
    1753:10797:java.util.List dropLastWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> dropLastWhile-JOV_ifY
    1736:10796:java.util.List dropLastWhile-MShoTSo(long[],kotlin.jvm.functions.Function1) -> dropLastWhile-MShoTSo
    1719:10795:java.util.List dropLastWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> dropLastWhile-jgv0xPQ
    1770:10798:java.util.List dropLastWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> dropLastWhile-xTcfx_M
    1829:1834:java.util.List dropWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> dropWhile-JOV_ifY
    1808:1813:java.util.List dropWhile-MShoTSo(long[],kotlin.jvm.functions.Function1) -> dropWhile-MShoTSo
    1787:1792:java.util.List dropWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> dropWhile-jgv0xPQ
    1850:1855:java.util.List dropWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> dropWhile-xTcfx_M
    362:10737:short elementAtOrElse-CVVdw08(short[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse-CVVdw08
    326:10734:int elementAtOrElse-QxvSvLU(int[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse-QxvSvLU
    338:10735:long elementAtOrElse-Xw8i6dc(long[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse-Xw8i6dc
    350:10736:byte elementAtOrElse-cO-VybQ(byte[],int,kotlin.jvm.functions.Function1) -> elementAtOrElse-cO-VybQ
    398:398:kotlin.UByte elementAtOrNull-PpDY95g(byte[],int) -> elementAtOrNull-PpDY95g
    410:410:kotlin.UShort elementAtOrNull-nggk6HY(short[],int) -> elementAtOrNull-nggk6HY
    374:374:kotlin.UInt elementAtOrNull-qFRl0hI(int[],int) -> elementAtOrNull-qFRl0hI
    386:386:kotlin.ULong elementAtOrNull-r7IrZao(long[],int) -> elementAtOrNull-r7IrZao
    3689:3689:void fill-2fe2U9s(int[],int,int,int) -> fill-2fe2U9s
    3688:3688:void fill-2fe2U9s$default(int[],int,int,int,int,java.lang.Object) -> fill-2fe2U9s$default
    3734:3734:void fill-EtDCXyQ(short[],short,int,int) -> fill-EtDCXyQ
    3733:3733:void fill-EtDCXyQ$default(short[],short,int,int,int,java.lang.Object) -> fill-EtDCXyQ$default
    3704:3704:void fill-K6DWlUc(long[],long,int,int) -> fill-K6DWlUc
    3703:3703:void fill-K6DWlUc$default(long[],long,int,int,int,java.lang.Object) -> fill-K6DWlUc$default
    3719:3719:void fill-WpHrYlw(byte[],byte,int,int) -> fill-WpHrYlw
    3718:3718:void fill-WpHrYlw$default(byte[],byte,int,int,int,java.lang.Object) -> fill-WpHrYlw$default
    1894:1894:java.util.List filter-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> filter-JOV_ifY
    1882:1882:java.util.List filter-MShoTSo(long[],kotlin.jvm.functions.Function1) -> filter-MShoTSo
    1870:1870:java.util.List filter-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> filter-jgv0xPQ
    1906:1906:java.util.List filter-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> filter-xTcfx_M
    1948:1948:java.util.List filterIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2) -> filterIndexed-ELGow60
    1920:1920:java.util.List filterIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> filterIndexed-WyvcNBI
    1934:1934:java.util.List filterIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> filterIndexed-s8dVfGU
    1962:1962:java.util.List filterIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> filterIndexed-xzaTVY8
    1976:1977:java.util.Collection filterIndexedTo--6EtJGI(int[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo--6EtJGI
    2027:2028:java.util.Collection filterIndexedTo-QqktQ3k(short[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo-QqktQ3k
    2010:2011:java.util.Collection filterIndexedTo-eNpIKz8(byte[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo-eNpIKz8
    1993:1994:java.util.Collection filterIndexedTo-pe2Q0Dw(long[],java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo-pe2Q0Dw
    2066:2066:java.util.List filterNot-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> filterNot-JOV_ifY
    2054:2054:java.util.List filterNot-MShoTSo(long[],kotlin.jvm.functions.Function1) -> filterNot-MShoTSo
    2042:2042:java.util.List filterNot-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> filterNot-jgv0xPQ
    2078:2078:java.util.List filterNot-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> filterNot-xTcfx_M
    2103:2103:java.util.Collection filterNotTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo-HqK1JgA
    2129:2129:java.util.Collection filterNotTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo-oEOeDjA
    2090:2090:java.util.Collection filterNotTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo-wU5IKMo
    2116:2116:java.util.Collection filterNotTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo-wzUQCXU
    2155:2155:java.util.Collection filterTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo-HqK1JgA
    2181:2181:java.util.Collection filterTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo-oEOeDjA
    2142:2142:java.util.Collection filterTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo-wU5IKMo
    2168:2168:java.util.Collection filterTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo-wzUQCXU
    446:446:kotlin.UByte find-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> find-JOV_ifY
    434:434:kotlin.ULong find-MShoTSo(long[],kotlin.jvm.functions.Function1) -> find-MShoTSo
    422:422:kotlin.UInt find-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> find-jgv0xPQ
    458:458:kotlin.UShort find-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> find-xTcfx_M
    494:494:kotlin.UByte findLast-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> findLast-JOV_ifY
    482:482:kotlin.ULong findLast-MShoTSo(long[],kotlin.jvm.functions.Function1) -> findLast-MShoTSo
    470:470:kotlin.UInt findLast-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> findLast-jgv0xPQ
    506:506:kotlin.UShort findLast-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> findLast-xTcfx_M
    518:518:int first--ajY-9A(int[]) -> first--ajY-9A
    542:542:byte first-GBYM_sE(byte[]) -> first-GBYM_sE
    589:590:byte first-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> first-JOV_ifY
    577:578:long first-MShoTSo(long[],kotlin.jvm.functions.Function1) -> first-MShoTSo
    530:530:long first-QwZRm1k(long[]) -> first-QwZRm1k
    565:566:int first-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> first-jgv0xPQ
    554:554:short first-rL5Bavg(short[]) -> first-rL5Bavg
    601:602:short first-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> first-xTcfx_M
    611:611:kotlin.UInt firstOrNull--ajY-9A(int[]) -> firstOrNull--ajY-9A
    629:629:kotlin.UByte firstOrNull-GBYM_sE(byte[]) -> firstOrNull-GBYM_sE
    670:670:kotlin.UByte firstOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> firstOrNull-JOV_ifY
    659:659:kotlin.ULong firstOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> firstOrNull-MShoTSo
    620:620:kotlin.ULong firstOrNull-QwZRm1k(long[]) -> firstOrNull-QwZRm1k
    648:648:kotlin.UInt firstOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> firstOrNull-jgv0xPQ
    638:638:kotlin.UShort firstOrNull-rL5Bavg(short[]) -> firstOrNull-rL5Bavg
    681:681:kotlin.UShort firstOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> firstOrNull-xTcfx_M
    4450:4450:java.util.List flatMap-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> flatMap-JOV_ifY
    4438:4438:java.util.List flatMap-MShoTSo(long[],kotlin.jvm.functions.Function1) -> flatMap-MShoTSo
    4426:4426:java.util.List flatMap-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> flatMap-jgv0xPQ
    4462:4462:java.util.List flatMap-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> flatMap-xTcfx_M
    4507:4507:java.util.List flatMapIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2) -> flatMapIndexed-ELGow60
    4477:4477:java.util.List flatMapIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> flatMapIndexed-WyvcNBI
    4492:4492:java.util.List flatMapIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> flatMapIndexed-s8dVfGU
    4522:4522:java.util.List flatMapIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> flatMapIndexed-xzaTVY8
    4536:4538:java.util.Collection flatMapIndexedTo--6EtJGI(int[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedTo--6EtJGI
    4590:4592:java.util.Collection flatMapIndexedTo-QqktQ3k(short[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedTo-QqktQ3k
    4572:4574:java.util.Collection flatMapIndexedTo-eNpIKz8(byte[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedTo-eNpIKz8
    4554:4556:java.util.Collection flatMapIndexedTo-pe2Q0Dw(long[],java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedTo-pe2Q0Dw
    4618:4620:java.util.Collection flatMapTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo-HqK1JgA
    4646:4648:java.util.Collection flatMapTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo-oEOeDjA
    4604:4606:java.util.Collection flatMapTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo-wU5IKMo
    4632:4634:java.util.Collection flatMapTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo-wzUQCXU
    5447:5447:java.lang.Object fold-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold-A8wKCXQ
    5464:5464:java.lang.Object fold-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold-yXmHNn8
    5430:5430:java.lang.Object fold-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold-zi1B2BA
    5481:5481:java.lang.Object fold-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> fold-zww5nb8
    5538:5538:java.lang.Object foldIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed-3iWJZGE
    5557:5557:java.lang.Object foldIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed-bzxtMww
    5519:5519:java.lang.Object foldIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed-mwnnOCs
    5500:5500:java.lang.Object foldIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed-yVwIW0Q
    5596:10864:java.lang.Object foldRight-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight-A8wKCXQ
    5616:10865:java.lang.Object foldRight-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight-yXmHNn8
    5576:10863:java.lang.Object foldRight-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight-zi1B2BA
    5636:10866:java.lang.Object foldRight-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight-zww5nb8
    5701:10869:java.lang.Object foldRightIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed-3iWJZGE
    5723:10870:java.lang.Object foldRightIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed-bzxtMww
    5679:10868:java.lang.Object foldRightIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed-mwnnOCs
    5657:10867:java.lang.Object foldRightIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed-yVwIW0Q
    5756:5756:void forEach-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> forEach-JOV_ifY
    5746:5746:void forEach-MShoTSo(long[],kotlin.jvm.functions.Function1) -> forEach-MShoTSo
    5736:5736:void forEach-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> forEach-jgv0xPQ
    5766:5766:void forEach-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> forEach-xTcfx_M
    5805:5805:void forEachIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2) -> forEachIndexed-ELGow60
    5779:5779:void forEachIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> forEachIndexed-WyvcNBI
    5792:5792:void forEachIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> forEachIndexed-s8dVfGU
    5818:5818:void forEachIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> forEachIndexed-xzaTVY8
    3743:3743:kotlin.ranges.IntRange getIndices--ajY-9A(int[]) -> getIndices--ajY-9A
    0:0:void getIndices--ajY-9A$annotations(int[]) -> getIndices--ajY-9A$annotations
    3759:3759:kotlin.ranges.IntRange getIndices-GBYM_sE(byte[]) -> getIndices-GBYM_sE
    0:0:void getIndices-GBYM_sE$annotations(byte[]) -> getIndices-GBYM_sE$annotations
    3751:3751:kotlin.ranges.IntRange getIndices-QwZRm1k(long[]) -> getIndices-QwZRm1k
    0:0:void getIndices-QwZRm1k$annotations(long[]) -> getIndices-QwZRm1k$annotations
    3767:3767:kotlin.ranges.IntRange getIndices-rL5Bavg(short[]) -> getIndices-rL5Bavg
    0:0:void getIndices-rL5Bavg$annotations(short[]) -> getIndices-rL5Bavg$annotations
    3775:3775:int getLastIndex--ajY-9A(int[]) -> getLastIndex--ajY-9A
    0:0:void getLastIndex--ajY-9A$annotations(int[]) -> getLastIndex--ajY-9A$annotations
    3791:3791:int getLastIndex-GBYM_sE(byte[]) -> getLastIndex-GBYM_sE
    0:0:void getLastIndex-GBYM_sE$annotations(byte[]) -> getLastIndex-GBYM_sE$annotations
    3783:3783:int getLastIndex-QwZRm1k(long[]) -> getLastIndex-QwZRm1k
    0:0:void getLastIndex-QwZRm1k$annotations(long[]) -> getLastIndex-QwZRm1k$annotations
    3799:3799:int getLastIndex-rL5Bavg(short[]) -> getLastIndex-rL5Bavg
    0:0:void getLastIndex-rL5Bavg$annotations(short[]) -> getLastIndex-rL5Bavg$annotations
    722:10741:short getOrElse-CVVdw08(short[],int,kotlin.jvm.functions.Function1) -> getOrElse-CVVdw08
    692:10738:int getOrElse-QxvSvLU(int[],int,kotlin.jvm.functions.Function1) -> getOrElse-QxvSvLU
    702:10739:long getOrElse-Xw8i6dc(long[],int,kotlin.jvm.functions.Function1) -> getOrElse-Xw8i6dc
    712:10740:byte getOrElse-cO-VybQ(byte[],int,kotlin.jvm.functions.Function1) -> getOrElse-cO-VybQ
    755:10744:kotlin.UByte getOrNull-PpDY95g(byte[],int) -> getOrNull-PpDY95g
    766:10745:kotlin.UShort getOrNull-nggk6HY(short[],int) -> getOrNull-nggk6HY
    733:10742:kotlin.UInt getOrNull-qFRl0hI(int[],int) -> getOrNull-qFRl0hI
    744:10743:kotlin.ULong getOrNull-r7IrZao(long[],int) -> getOrNull-r7IrZao
    4742:4742:java.util.Map groupBy--_j2Y-Q(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy--_j2Y-Q
    4774:4774:java.util.Map groupBy-3bBvP4M(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy-3bBvP4M
    4695:4695:java.util.Map groupBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> groupBy-JOV_ifY
    4726:4726:java.util.Map groupBy-L4rlFek(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy-L4rlFek
    4680:4680:java.util.Map groupBy-MShoTSo(long[],kotlin.jvm.functions.Function1) -> groupBy-MShoTSo
    4758:4758:java.util.Map groupBy-bBsjw1Y(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy-bBsjw1Y
    4665:4665:java.util.Map groupBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> groupBy-jgv0xPQ
    4710:4710:java.util.Map groupBy-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> groupBy-xTcfx_M
    4789:10810:java.util.Map groupByTo-4D70W2E(int[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo-4D70W2E
    4829:10824:java.util.Map groupByTo-H21X9dk(byte[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo-H21X9dk
    4870:10838:java.util.Map groupByTo-JM6gNCM(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo-JM6gNCM
    4891:10845:java.util.Map groupByTo-QxgOkWg(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo-QxgOkWg
    4809:10817:java.util.Map groupByTo-X6OPwNk(long[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo-X6OPwNk
    4849:10831:java.util.Map groupByTo-ciTST-8(short[],java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo-ciTST-8
    4933:10859:java.util.Map groupByTo-q8RuPII(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo-q8RuPII
    4912:10852:java.util.Map groupByTo-qOZmbk8(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo-qOZmbk8
    786:786:int indexOf-3uqUaXg(long[],long) -> indexOf-3uqUaXg
    806:806:int indexOf-XzdR7RA(short[],short) -> indexOf-XzdR7RA
    796:796:int indexOf-gMuBH34(byte[],byte) -> indexOf-gMuBH34
    776:776:int indexOf-uWY9BYg(int[],int) -> indexOf-uWY9BYg
    836:10759:int indexOfFirst-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> indexOfFirst-JOV_ifY
    826:10753:int indexOfFirst-MShoTSo(long[],kotlin.jvm.functions.Function1) -> indexOfFirst-MShoTSo
    816:10747:int indexOfFirst-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> indexOfFirst-jgv0xPQ
    846:10765:int indexOfFirst-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> indexOfFirst-xTcfx_M
    876:10783:int indexOfLast-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> indexOfLast-JOV_ifY
    866:10777:int indexOfLast-MShoTSo(long[],kotlin.jvm.functions.Function1) -> indexOfLast-MShoTSo
    856:10771:int indexOfLast-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> indexOfLast-jgv0xPQ
    886:10789:int indexOfLast-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> indexOfLast-xTcfx_M
    900:900:int last--ajY-9A(int[]) -> last--ajY-9A
    928:928:byte last-GBYM_sE(byte[]) -> last-GBYM_sE
    992:996:byte last-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> last-JOV_ifY
    974:978:long last-MShoTSo(long[],kotlin.jvm.functions.Function1) -> last-MShoTSo
    914:914:long last-QwZRm1k(long[]) -> last-QwZRm1k
    956:960:int last-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> last-jgv0xPQ
    942:942:short last-rL5Bavg(short[]) -> last-rL5Bavg
    1010:1014:short last-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> last-xTcfx_M
    1034:1034:int lastIndexOf-3uqUaXg(long[],long) -> lastIndexOf-3uqUaXg
    1054:1054:int lastIndexOf-XzdR7RA(short[],short) -> lastIndexOf-XzdR7RA
    1044:1044:int lastIndexOf-gMuBH34(byte[],byte) -> lastIndexOf-gMuBH34
    1024:1024:int lastIndexOf-uWY9BYg(int[],int) -> lastIndexOf-uWY9BYg
    1065:1065:kotlin.UInt lastOrNull--ajY-9A(int[]) -> lastOrNull--ajY-9A
    1087:1087:kotlin.UByte lastOrNull-GBYM_sE(byte[]) -> lastOrNull-GBYM_sE
    1142:1144:kotlin.UByte lastOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> lastOrNull-JOV_ifY
    1126:1128:kotlin.ULong lastOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> lastOrNull-MShoTSo
    1076:1076:kotlin.ULong lastOrNull-QwZRm1k(long[]) -> lastOrNull-QwZRm1k
    1110:1112:kotlin.UInt lastOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> lastOrNull-jgv0xPQ
    1098:1098:kotlin.UShort lastOrNull-rL5Bavg(short[]) -> lastOrNull-rL5Bavg
    1158:1160:kotlin.UShort lastOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> lastOrNull-xTcfx_M
    4977:4977:java.util.List map-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> map-JOV_ifY
    4964:4964:java.util.List map-MShoTSo(long[],kotlin.jvm.functions.Function1) -> map-MShoTSo
    4951:4951:java.util.List map-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> map-jgv0xPQ
    4990:4990:java.util.List map-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> map-xTcfx_M
    5029:5029:java.util.List mapIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2) -> mapIndexed-ELGow60
    5003:5003:java.util.List mapIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> mapIndexed-WyvcNBI
    5016:5016:java.util.List mapIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> mapIndexed-s8dVfGU
    5042:5042:java.util.List mapIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> mapIndexed-xzaTVY8
    5056:5057:java.util.Collection mapIndexedTo--6EtJGI(int[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo--6EtJGI
    5104:5105:java.util.Collection mapIndexedTo-QqktQ3k(short[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo-QqktQ3k
    5088:5089:java.util.Collection mapIndexedTo-eNpIKz8(byte[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo-eNpIKz8
    5072:5073:java.util.Collection mapIndexedTo-pe2Q0Dw(long[],java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo-pe2Q0Dw
    5130:5131:java.util.Collection mapTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo-HqK1JgA
    5156:5157:java.util.Collection mapTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo-oEOeDjA
    5117:5118:java.util.Collection mapTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo-wU5IKMo
    5143:5144:java.util.Collection mapTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo-wzUQCXU
    6072:10881:kotlin.UByte maxByOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> maxByOrNull-JOV_ifY
    6047:10880:kotlin.ULong maxByOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> maxByOrNull-MShoTSo
    6022:10879:kotlin.UInt maxByOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> maxByOrNull-jgv0xPQ
    6097:10882:kotlin.UShort maxByOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> maxByOrNull-xTcfx_M
    5910:10875:int maxByOrThrow-U(int[],kotlin.jvm.functions.Function1) -> maxByOrThrow-U
    5939:10876:long maxByOrThrow-U(long[],kotlin.jvm.functions.Function1) -> maxByOrThrow-U
    5968:10877:byte maxByOrThrow-U(byte[],kotlin.jvm.functions.Function1) -> maxByOrThrow-U
    5997:10878:short maxByOrThrow-U(short[],kotlin.jvm.functions.Function1) -> maxByOrThrow-U
    6173:10885:double maxOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> maxOf-JOV_ifY
    6265:10889:float maxOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> maxOf-JOV_ifY
    6355:10893:java.lang.Comparable maxOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> maxOf-JOV_ifY
    6150:10884:double maxOf-MShoTSo(long[],kotlin.jvm.functions.Function1) -> maxOf-MShoTSo
    6242:10888:float maxOf-MShoTSo(long[],kotlin.jvm.functions.Function1) -> maxOf-MShoTSo
    6332:10892:java.lang.Comparable maxOf-MShoTSo(long[],kotlin.jvm.functions.Function1) -> maxOf-MShoTSo
    6127:10883:double maxOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> maxOf-jgv0xPQ
    6219:10887:float maxOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> maxOf-jgv0xPQ
    6309:10891:java.lang.Comparable maxOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> maxOf-jgv0xPQ
    6196:10886:double maxOf-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> maxOf-xTcfx_M
    6288:10890:float maxOf-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> maxOf-xTcfx_M
    6378:10894:java.lang.Comparable maxOf-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> maxOf-xTcfx_M
    6443:10897:java.lang.Double maxOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> maxOfOrNull-JOV_ifY
    6527:10901:java.lang.Float maxOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> maxOfOrNull-JOV_ifY
    6609:10905:java.lang.Comparable maxOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> maxOfOrNull-JOV_ifY
    6422:10896:java.lang.Double maxOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> maxOfOrNull-MShoTSo
    6506:10900:java.lang.Float maxOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> maxOfOrNull-MShoTSo
    6588:10904:java.lang.Comparable maxOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> maxOfOrNull-MShoTSo
    6401:10895:java.lang.Double maxOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> maxOfOrNull-jgv0xPQ
    6485:10899:java.lang.Float maxOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> maxOfOrNull-jgv0xPQ
    6567:10903:java.lang.Comparable maxOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> maxOfOrNull-jgv0xPQ
    6464:10898:java.lang.Double maxOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> maxOfOrNull-xTcfx_M
    6548:10902:java.lang.Float maxOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> maxOfOrNull-xTcfx_M
    6630:10906:java.lang.Comparable maxOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> maxOfOrNull-xTcfx_M
    6676:10908:java.lang.Object maxOfWith-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith-5NtCtWE
    6699:10909:java.lang.Object maxOfWith-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith-LTi4i_s
    6722:10910:java.lang.Object maxOfWith-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith-l8EHGbQ
    6653:10907:java.lang.Object maxOfWith-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith-myNOsp4
    6764:10912:java.lang.Object maxOfWithOrNull-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull-5NtCtWE
    6785:10913:java.lang.Object maxOfWithOrNull-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull-LTi4i_s
    6806:10914:java.lang.Object maxOfWithOrNull-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull-l8EHGbQ
    6743:10911:java.lang.Object maxOfWithOrNull-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull-myNOsp4
    6823:10915:kotlin.UInt maxOrNull--ajY-9A(int[]) -> maxOrNull--ajY-9A
    6853:10917:kotlin.UByte maxOrNull-GBYM_sE(byte[]) -> maxOrNull-GBYM_sE
    6838:10916:kotlin.ULong maxOrNull-QwZRm1k(long[]) -> maxOrNull-QwZRm1k
    6868:10918:kotlin.UShort maxOrNull-rL5Bavg(short[]) -> maxOrNull-rL5Bavg
    5831:10871:int maxOrThrow-U(int[]) -> maxOrThrow-U
    5850:10872:long maxOrThrow-U(long[]) -> maxOrThrow-U
    5869:10873:byte maxOrThrow-U(byte[]) -> maxOrThrow-U
    5888:10874:short maxOrThrow-U(short[]) -> maxOrThrow-U
    6989:10925:kotlin.UByte maxWithOrNull-XMRcp5o(byte[],java.util.Comparator) -> maxWithOrNull-XMRcp5o
    6959:10923:kotlin.UInt maxWithOrNull-YmdZ_VM(int[],java.util.Comparator) -> maxWithOrNull-YmdZ_VM
    7004:10926:kotlin.UShort maxWithOrNull-eOHTfZs(short[],java.util.Comparator) -> maxWithOrNull-eOHTfZs
    6974:10924:kotlin.ULong maxWithOrNull-zrEWJaI(long[],java.util.Comparator) -> maxWithOrNull-zrEWJaI
    6887:10919:int maxWithOrThrow-U(int[],java.util.Comparator) -> maxWithOrThrow-U
    6906:10920:long maxWithOrThrow-U(long[],java.util.Comparator) -> maxWithOrThrow-U
    6925:10921:byte maxWithOrThrow-U(byte[],java.util.Comparator) -> maxWithOrThrow-U
    6944:10922:short maxWithOrThrow-U(short[],java.util.Comparator) -> maxWithOrThrow-U
    7264:10937:kotlin.UByte minByOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> minByOrNull-JOV_ifY
    7239:10936:kotlin.ULong minByOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> minByOrNull-MShoTSo
    7214:10935:kotlin.UInt minByOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> minByOrNull-jgv0xPQ
    7289:10938:kotlin.UShort minByOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> minByOrNull-xTcfx_M
    7102:10931:int minByOrThrow-U(int[],kotlin.jvm.functions.Function1) -> minByOrThrow-U
    7131:10932:long minByOrThrow-U(long[],kotlin.jvm.functions.Function1) -> minByOrThrow-U
    7160:10933:byte minByOrThrow-U(byte[],kotlin.jvm.functions.Function1) -> minByOrThrow-U
    7189:10934:short minByOrThrow-U(short[],kotlin.jvm.functions.Function1) -> minByOrThrow-U
    7365:10941:double minOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> minOf-JOV_ifY
    7457:10945:float minOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> minOf-JOV_ifY
    7547:10949:java.lang.Comparable minOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> minOf-JOV_ifY
    7342:10940:double minOf-MShoTSo(long[],kotlin.jvm.functions.Function1) -> minOf-MShoTSo
    7434:10944:float minOf-MShoTSo(long[],kotlin.jvm.functions.Function1) -> minOf-MShoTSo
    7524:10948:java.lang.Comparable minOf-MShoTSo(long[],kotlin.jvm.functions.Function1) -> minOf-MShoTSo
    7319:10939:double minOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> minOf-jgv0xPQ
    7411:10943:float minOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> minOf-jgv0xPQ
    7501:10947:java.lang.Comparable minOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> minOf-jgv0xPQ
    7388:10942:double minOf-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> minOf-xTcfx_M
    7480:10946:float minOf-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> minOf-xTcfx_M
    7570:10950:java.lang.Comparable minOf-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> minOf-xTcfx_M
    7635:10953:java.lang.Double minOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> minOfOrNull-JOV_ifY
    7719:10957:java.lang.Float minOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> minOfOrNull-JOV_ifY
    7801:10961:java.lang.Comparable minOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> minOfOrNull-JOV_ifY
    7614:10952:java.lang.Double minOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> minOfOrNull-MShoTSo
    7698:10956:java.lang.Float minOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> minOfOrNull-MShoTSo
    7780:10960:java.lang.Comparable minOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> minOfOrNull-MShoTSo
    7593:10951:java.lang.Double minOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> minOfOrNull-jgv0xPQ
    7677:10955:java.lang.Float minOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> minOfOrNull-jgv0xPQ
    7759:10959:java.lang.Comparable minOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> minOfOrNull-jgv0xPQ
    7656:10954:java.lang.Double minOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> minOfOrNull-xTcfx_M
    7740:10958:java.lang.Float minOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> minOfOrNull-xTcfx_M
    7822:10962:java.lang.Comparable minOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> minOfOrNull-xTcfx_M
    7868:10964:java.lang.Object minOfWith-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith-5NtCtWE
    7891:10965:java.lang.Object minOfWith-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith-LTi4i_s
    7914:10966:java.lang.Object minOfWith-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith-l8EHGbQ
    7845:10963:java.lang.Object minOfWith-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith-myNOsp4
    7956:10968:java.lang.Object minOfWithOrNull-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull-5NtCtWE
    7977:10969:java.lang.Object minOfWithOrNull-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull-LTi4i_s
    7998:10970:java.lang.Object minOfWithOrNull-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull-l8EHGbQ
    7935:10967:java.lang.Object minOfWithOrNull-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull-myNOsp4
    8015:10971:kotlin.UInt minOrNull--ajY-9A(int[]) -> minOrNull--ajY-9A
    8045:10973:kotlin.UByte minOrNull-GBYM_sE(byte[]) -> minOrNull-GBYM_sE
    8030:10972:kotlin.ULong minOrNull-QwZRm1k(long[]) -> minOrNull-QwZRm1k
    8060:10974:kotlin.UShort minOrNull-rL5Bavg(short[]) -> minOrNull-rL5Bavg
    7023:10927:int minOrThrow-U(int[]) -> minOrThrow-U
    7042:10928:long minOrThrow-U(long[]) -> minOrThrow-U
    7061:10929:byte minOrThrow-U(byte[]) -> minOrThrow-U
    7080:10930:short minOrThrow-U(short[]) -> minOrThrow-U
    8181:10981:kotlin.UByte minWithOrNull-XMRcp5o(byte[],java.util.Comparator) -> minWithOrNull-XMRcp5o
    8151:10979:kotlin.UInt minWithOrNull-YmdZ_VM(int[],java.util.Comparator) -> minWithOrNull-YmdZ_VM
    8196:10982:kotlin.UShort minWithOrNull-eOHTfZs(short[],java.util.Comparator) -> minWithOrNull-eOHTfZs
    8166:10980:kotlin.ULong minWithOrNull-zrEWJaI(long[],java.util.Comparator) -> minWithOrNull-zrEWJaI
    8079:10975:int minWithOrThrow-U(int[],java.util.Comparator) -> minWithOrThrow-U
    8098:10976:long minWithOrThrow-U(long[],java.util.Comparator) -> minWithOrThrow-U
    8117:10977:byte minWithOrThrow-U(byte[],java.util.Comparator) -> minWithOrThrow-U
    8136:10978:short minWithOrThrow-U(short[],java.util.Comparator) -> minWithOrThrow-U
    8214:8214:boolean none--ajY-9A(int[]) -> none--ajY-9A
    8238:8238:boolean none-GBYM_sE(byte[]) -> none-GBYM_sE
    8288:8288:boolean none-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> none-JOV_ifY
    8275:8275:boolean none-MShoTSo(long[],kotlin.jvm.functions.Function1) -> none-MShoTSo
    8226:8226:boolean none-QwZRm1k(long[]) -> none-QwZRm1k
    8262:8262:boolean none-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> none-jgv0xPQ
    8250:8250:boolean none-rL5Bavg(short[]) -> none-rL5Bavg
    8301:8301:boolean none-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> none-xTcfx_M
    8332:8332:byte[] onEach-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> onEach-JOV_ifY
    8322:8322:long[] onEach-MShoTSo(long[],kotlin.jvm.functions.Function1) -> onEach-MShoTSo
    8312:8312:int[] onEach-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> onEach-jgv0xPQ
    8342:8342:short[] onEach-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> onEach-xTcfx_M
    8381:8381:byte[] onEachIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2) -> onEachIndexed-ELGow60
    8355:8355:int[] onEachIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> onEachIndexed-WyvcNBI
    8368:8368:long[] onEachIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> onEachIndexed-s8dVfGU
    8394:8394:short[] onEachIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> onEachIndexed-xzaTVY8
    3818:3818:long[] plus-3uqUaXg(long[],long) -> plus-3uqUaXg
    3847:3850:int[] plus-CFIt9YE(int[],java.util.Collection) -> plus-CFIt9YE
    3838:3838:short[] plus-XzdR7RA(short[],short) -> plus-XzdR7RA
    3896:3896:int[] plus-ctEhBpI(int[],int[]) -> plus-ctEhBpI
    3828:3828:byte[] plus-gMuBH34(byte[],byte) -> plus-gMuBH34
    3916:3916:byte[] plus-kdPth3s(byte[],byte[]) -> plus-kdPth3s
    3859:3862:long[] plus-kzHmqpY(long[],java.util.Collection) -> plus-kzHmqpY
    3926:3926:short[] plus-mazbYpA(short[],short[]) -> plus-mazbYpA
    3883:3886:short[] plus-ojwP5H8(short[],java.util.Collection) -> plus-ojwP5H8
    3808:3808:int[] plus-uWY9BYg(int[],int) -> plus-uWY9BYg
    3906:3906:long[] plus-us8wMrg(long[],long[]) -> plus-us8wMrg
    3871:3874:byte[] plus-xo_DsdI(byte[],java.util.Collection) -> plus-xo_DsdI
    1174:1174:int random--ajY-9A(int[]) -> random--ajY-9A
    1221:1223:int random-2D5oskM(int[],kotlin.random.Random) -> random-2D5oskM
    1198:1198:byte random-GBYM_sE(byte[]) -> random-GBYM_sE
    1234:1236:long random-JzugnMA(long[],kotlin.random.Random) -> random-JzugnMA
    1186:1186:long random-QwZRm1k(long[]) -> random-QwZRm1k
    1247:1249:byte random-oSF2wD8(byte[],kotlin.random.Random) -> random-oSF2wD8
    1210:1210:short random-rL5Bavg(short[]) -> random-rL5Bavg
    1260:1262:short random-s5X_as8(short[],kotlin.random.Random) -> random-s5X_as8
    1273:1273:kotlin.UInt randomOrNull--ajY-9A(int[]) -> randomOrNull--ajY-9A
    1316:1318:kotlin.UInt randomOrNull-2D5oskM(int[],kotlin.random.Random) -> randomOrNull-2D5oskM
    1295:1295:kotlin.UByte randomOrNull-GBYM_sE(byte[]) -> randomOrNull-GBYM_sE
    1328:1330:kotlin.ULong randomOrNull-JzugnMA(long[],kotlin.random.Random) -> randomOrNull-JzugnMA
    1284:1284:kotlin.ULong randomOrNull-QwZRm1k(long[]) -> randomOrNull-QwZRm1k
    1340:1342:kotlin.UByte randomOrNull-oSF2wD8(byte[],kotlin.random.Random) -> randomOrNull-oSF2wD8
    1306:1306:kotlin.UShort randomOrNull-rL5Bavg(short[]) -> randomOrNull-rL5Bavg
    1352:1354:kotlin.UShort randomOrNull-s5X_as8(short[],kotlin.random.Random) -> randomOrNull-s5X_as8
    8463:10985:byte reduce-ELGow60(byte[],kotlin.jvm.functions.Function2) -> reduce-ELGow60
    8413:10983:int reduce-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> reduce-WyvcNBI
    8438:10984:long reduce-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> reduce-s8dVfGU
    8488:10986:short reduce-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> reduce-xzaTVY8
    8513:10987:int reduceIndexed-D40WMg8(int[],kotlin.jvm.functions.Function3) -> reduceIndexed-D40WMg8
    8563:10989:byte reduceIndexed-EOyYB1Y(byte[],kotlin.jvm.functions.Function3) -> reduceIndexed-EOyYB1Y
    8588:10990:short reduceIndexed-aLgx1Fo(short[],kotlin.jvm.functions.Function3) -> reduceIndexed-aLgx1Fo
    8538:10988:long reduceIndexed-z1zDJgo(long[],kotlin.jvm.functions.Function3) -> reduceIndexed-z1zDJgo
    8612:10991:kotlin.UInt reduceIndexedOrNull-D40WMg8(int[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull-D40WMg8
    8660:10993:kotlin.UByte reduceIndexedOrNull-EOyYB1Y(byte[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull-EOyYB1Y
    8684:10994:kotlin.UShort reduceIndexedOrNull-aLgx1Fo(short[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull-aLgx1Fo
    8636:10992:kotlin.ULong reduceIndexedOrNull-z1zDJgo(long[],kotlin.jvm.functions.Function3) -> reduceIndexedOrNull-z1zDJgo
    8759:10997:kotlin.UByte reduceOrNull-ELGow60(byte[],kotlin.jvm.functions.Function2) -> reduceOrNull-ELGow60
    8709:10995:kotlin.UInt reduceOrNull-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> reduceOrNull-WyvcNBI
    8734:10996:kotlin.ULong reduceOrNull-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> reduceOrNull-s8dVfGU
    8784:10998:kotlin.UShort reduceOrNull-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> reduceOrNull-xzaTVY8
    8860:11001:byte reduceRight-ELGow60(byte[],kotlin.jvm.functions.Function2) -> reduceRight-ELGow60
    8810:10999:int reduceRight-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> reduceRight-WyvcNBI
    8835:11000:long reduceRight-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> reduceRight-s8dVfGU
    8885:11002:short reduceRight-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> reduceRight-xzaTVY8
    8910:11003:int reduceRightIndexed-D40WMg8(int[],kotlin.jvm.functions.Function3) -> reduceRightIndexed-D40WMg8
    8962:11005:byte reduceRightIndexed-EOyYB1Y(byte[],kotlin.jvm.functions.Function3) -> reduceRightIndexed-EOyYB1Y
    8988:11006:short reduceRightIndexed-aLgx1Fo(short[],kotlin.jvm.functions.Function3) -> reduceRightIndexed-aLgx1Fo
    8936:11004:long reduceRightIndexed-z1zDJgo(long[],kotlin.jvm.functions.Function3) -> reduceRightIndexed-z1zDJgo
    9014:11007:kotlin.UInt reduceRightIndexedOrNull-D40WMg8(int[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull-D40WMg8
    9064:11009:kotlin.UByte reduceRightIndexedOrNull-EOyYB1Y(byte[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull-EOyYB1Y
    9089:11010:kotlin.UShort reduceRightIndexedOrNull-aLgx1Fo(short[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull-aLgx1Fo
    9039:11008:kotlin.ULong reduceRightIndexedOrNull-z1zDJgo(long[],kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull-z1zDJgo
    9165:11013:kotlin.UByte reduceRightOrNull-ELGow60(byte[],kotlin.jvm.functions.Function2) -> reduceRightOrNull-ELGow60
    9115:11011:kotlin.UInt reduceRightOrNull-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> reduceRightOrNull-WyvcNBI
    9140:11012:kotlin.ULong reduceRightOrNull-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> reduceRightOrNull-s8dVfGU
    9190:11014:kotlin.UShort reduceRightOrNull-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> reduceRightOrNull-xzaTVY8
    2684:2684:void reverse--ajY-9A(int[]) -> reverse--ajY-9A
    2746:2746:void reverse--nroSd4(long[],int,int) -> reverse--nroSd4
    2762:2762:void reverse-4UcCI2c(byte[],int,int) -> reverse-4UcCI2c
    2778:2778:void reverse-Aa5vz7o(short[],int,int) -> reverse-Aa5vz7o
    2704:2704:void reverse-GBYM_sE(byte[]) -> reverse-GBYM_sE
    2694:2694:void reverse-QwZRm1k(long[]) -> reverse-QwZRm1k
    2730:2730:void reverse-oBK06Vg(int[],int,int) -> reverse-oBK06Vg
    2714:2714:void reverse-rL5Bavg(short[]) -> reverse-rL5Bavg
    2787:2789:java.util.List reversed--ajY-9A(int[]) -> reversed--ajY-9A
    2811:2813:java.util.List reversed-GBYM_sE(byte[]) -> reversed-GBYM_sE
    2799:2801:java.util.List reversed-QwZRm1k(long[]) -> reversed-QwZRm1k
    2823:2825:java.util.List reversed-rL5Bavg(short[]) -> reversed-rL5Bavg
    2836:2836:int[] reversedArray--ajY-9A(int[]) -> reversedArray--ajY-9A
    2856:2856:byte[] reversedArray-GBYM_sE(byte[]) -> reversedArray-GBYM_sE
    2846:2846:long[] reversedArray-QwZRm1k(long[]) -> reversedArray-QwZRm1k
    2866:2866:short[] reversedArray-rL5Bavg(short[]) -> reversedArray-rL5Bavg
    9237:9242:java.util.List runningFold-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold-A8wKCXQ
    9262:9267:java.util.List runningFold-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold-yXmHNn8
    9212:9217:java.util.List runningFold-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold-zi1B2BA
    9287:9292:java.util.List runningFold-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold-zww5nb8
    9365:9370:java.util.List runningFoldIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed-3iWJZGE
    9391:9396:java.util.List runningFoldIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed-bzxtMww
    9339:9344:java.util.List runningFoldIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed-mwnnOCs
    9313:9318:java.util.List runningFoldIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed-yVwIW0Q
    9466:9471:java.util.List runningReduce-ELGow60(byte[],kotlin.jvm.functions.Function2) -> runningReduce-ELGow60
    9416:9421:java.util.List runningReduce-WyvcNBI(int[],kotlin.jvm.functions.Function2) -> runningReduce-WyvcNBI
    9441:9446:java.util.List runningReduce-s8dVfGU(long[],kotlin.jvm.functions.Function2) -> runningReduce-s8dVfGU
    9491:9496:java.util.List runningReduce-xzaTVY8(short[],kotlin.jvm.functions.Function2) -> runningReduce-xzaTVY8
    9517:9522:java.util.List runningReduceIndexed-D40WMg8(int[],kotlin.jvm.functions.Function3) -> runningReduceIndexed-D40WMg8
    9569:9574:java.util.List runningReduceIndexed-EOyYB1Y(byte[],kotlin.jvm.functions.Function3) -> runningReduceIndexed-EOyYB1Y
    9595:9600:java.util.List runningReduceIndexed-aLgx1Fo(short[],kotlin.jvm.functions.Function3) -> runningReduceIndexed-aLgx1Fo
    9543:9548:java.util.List runningReduceIndexed-z1zDJgo(long[],kotlin.jvm.functions.Function3) -> runningReduceIndexed-z1zDJgo
    9640:9640:java.util.List scan-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan-A8wKCXQ
    9659:9659:java.util.List scan-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan-yXmHNn8
    9621:9621:java.util.List scan-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan-zi1B2BA
    9678:9678:java.util.List scan-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2) -> scan-zww5nb8
    9738:9738:java.util.List scanIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed-3iWJZGE
    9758:9758:java.util.List scanIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed-bzxtMww
    9718:9718:java.util.List scanIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed-mwnnOCs
    9698:9698:java.util.List scanIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed-yVwIW0Q
    2875:2875:void shuffle--ajY-9A(int[]) -> shuffle--ajY-9A
    2914:10803:void shuffle-2D5oskM(int[],kotlin.random.Random) -> shuffle-2D5oskM
    2893:2893:void shuffle-GBYM_sE(byte[]) -> shuffle-GBYM_sE
    2930:10804:void shuffle-JzugnMA(long[],kotlin.random.Random) -> shuffle-JzugnMA
    2884:2884:void shuffle-QwZRm1k(long[]) -> shuffle-QwZRm1k
    2946:10805:void shuffle-oSF2wD8(byte[],kotlin.random.Random) -> shuffle-oSF2wD8
    2902:2902:void shuffle-rL5Bavg(short[]) -> shuffle-rL5Bavg
    2962:10806:void shuffle-s5X_as8(short[],kotlin.random.Random) -> shuffle-s5X_as8
    1364:1364:int single--ajY-9A(int[]) -> single--ajY-9A
    1384:1384:byte single-GBYM_sE(byte[]) -> single-GBYM_sE
    1448:1457:byte single-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> single-JOV_ifY
    1427:1436:long single-MShoTSo(long[],kotlin.jvm.functions.Function1) -> single-MShoTSo
    1374:1374:long single-QwZRm1k(long[]) -> single-QwZRm1k
    1406:1415:int single-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> single-jgv0xPQ
    1394:1394:short single-rL5Bavg(short[]) -> single-rL5Bavg
    1469:1478:short single-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> single-xTcfx_M
    1487:1487:kotlin.UInt singleOrNull--ajY-9A(int[]) -> singleOrNull--ajY-9A
    1505:1505:kotlin.UByte singleOrNull-GBYM_sE(byte[]) -> singleOrNull-GBYM_sE
    1566:1569:kotlin.UByte singleOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> singleOrNull-JOV_ifY
    1546:1549:kotlin.ULong singleOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1) -> singleOrNull-MShoTSo
    1496:1496:kotlin.ULong singleOrNull-QwZRm1k(long[]) -> singleOrNull-QwZRm1k
    1526:1529:kotlin.UInt singleOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> singleOrNull-jgv0xPQ
    1514:1514:kotlin.UShort singleOrNull-rL5Bavg(short[]) -> singleOrNull-rL5Bavg
    1586:1589:kotlin.UShort singleOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> singleOrNull-xTcfx_M
    2246:2250:java.util.List slice-F7u83W8(long[],java.lang.Iterable) -> slice-F7u83W8
    2231:2235:java.util.List slice-HwE9HBo(int[],java.lang.Iterable) -> slice-HwE9HBo
    2276:2280:java.util.List slice-JGPC0-M(short[],java.lang.Iterable) -> slice-JGPC0-M
    2261:2265:java.util.List slice-JQknh5Q(byte[],java.lang.Iterable) -> slice-JQknh5Q
    2221:2222:java.util.List slice-Q6IL4kU(short[],kotlin.ranges.IntRange) -> slice-Q6IL4kU
    2201:2202:java.util.List slice-ZRhS8yI(long[],kotlin.ranges.IntRange) -> slice-ZRhS8yI
    2211:2212:java.util.List slice-c0bezYM(byte[],kotlin.ranges.IntRange) -> slice-c0bezYM
    2191:2192:java.util.List slice-tAntMlw(int[],kotlin.ranges.IntRange) -> slice-tAntMlw
    2291:2291:int[] sliceArray-CFIt9YE(int[],java.util.Collection) -> sliceArray-CFIt9YE
    2354:2354:short[] sliceArray-Q6IL4kU(short[],kotlin.ranges.IntRange) -> sliceArray-Q6IL4kU
    2336:2336:long[] sliceArray-ZRhS8yI(long[],kotlin.ranges.IntRange) -> sliceArray-ZRhS8yI
    2345:2345:byte[] sliceArray-c0bezYM(byte[],kotlin.ranges.IntRange) -> sliceArray-c0bezYM
    2300:2300:long[] sliceArray-kzHmqpY(long[],java.util.Collection) -> sliceArray-kzHmqpY
    2318:2318:short[] sliceArray-ojwP5H8(short[],java.util.Collection) -> sliceArray-ojwP5H8
    2327:2327:int[] sliceArray-tAntMlw(int[],kotlin.ranges.IntRange) -> sliceArray-tAntMlw
    2309:2309:byte[] sliceArray-xo_DsdI(byte[],java.util.Collection) -> sliceArray-xo_DsdI
    3937:3937:void sort--ajY-9A(int[]) -> sort--ajY-9A
    4005:4006:void sort--nroSd4(long[],int,int) -> sort--nroSd4
    4004:4004:void sort--nroSd4$default(long[],int,int,int,java.lang.Object) -> sort--nroSd4$default
    4023:4024:void sort-4UcCI2c(byte[],int,int) -> sort-4UcCI2c
    4022:4022:void sort-4UcCI2c$default(byte[],int,int,int,java.lang.Object) -> sort-4UcCI2c$default
    4041:4042:void sort-Aa5vz7o(short[],int,int) -> sort-Aa5vz7o
    4040:4040:void sort-Aa5vz7o$default(short[],int,int,int,java.lang.Object) -> sort-Aa5vz7o$default
    3959:3959:void sort-GBYM_sE(byte[]) -> sort-GBYM_sE
    3948:3948:void sort-QwZRm1k(long[]) -> sort-QwZRm1k
    3987:3988:void sort-oBK06Vg(int[],int,int) -> sort-oBK06Vg
    3986:3986:void sort-oBK06Vg$default(int[],int,int,int,java.lang.Object) -> sort-oBK06Vg$default
    3970:3970:void sort-rL5Bavg(short[]) -> sort-rL5Bavg
    2975:2977:void sortDescending--ajY-9A(int[]) -> sortDescending--ajY-9A
    4075:4076:void sortDescending--nroSd4(long[],int,int) -> sortDescending--nroSd4
    4092:4093:void sortDescending-4UcCI2c(byte[],int,int) -> sortDescending-4UcCI2c
    4109:4110:void sortDescending-Aa5vz7o(short[],int,int) -> sortDescending-Aa5vz7o
    2999:3001:void sortDescending-GBYM_sE(byte[]) -> sortDescending-GBYM_sE
    2987:2989:void sortDescending-QwZRm1k(long[]) -> sortDescending-QwZRm1k
    4058:4059:void sortDescending-oBK06Vg(int[],int,int) -> sortDescending-oBK06Vg
    3011:3013:void sortDescending-rL5Bavg(short[]) -> sortDescending-rL5Bavg
    3023:3023:java.util.List sorted--ajY-9A(int[]) -> sorted--ajY-9A
    3041:3041:java.util.List sorted-GBYM_sE(byte[]) -> sorted-GBYM_sE
    3032:3032:java.util.List sorted-QwZRm1k(long[]) -> sorted-QwZRm1k
    3050:3050:java.util.List sorted-rL5Bavg(short[]) -> sorted-rL5Bavg
    3059:3060:int[] sortedArray--ajY-9A(int[]) -> sortedArray--ajY-9A
    3079:3080:byte[] sortedArray-GBYM_sE(byte[]) -> sortedArray-GBYM_sE
    3069:3070:long[] sortedArray-QwZRm1k(long[]) -> sortedArray-QwZRm1k
    3089:3090:short[] sortedArray-rL5Bavg(short[]) -> sortedArray-rL5Bavg
    3099:3100:int[] sortedArrayDescending--ajY-9A(int[]) -> sortedArrayDescending--ajY-9A
    3119:3120:byte[] sortedArrayDescending-GBYM_sE(byte[]) -> sortedArrayDescending-GBYM_sE
    3109:3110:long[] sortedArrayDescending-QwZRm1k(long[]) -> sortedArrayDescending-QwZRm1k
    3129:3130:short[] sortedArrayDescending-rL5Bavg(short[]) -> sortedArrayDescending-rL5Bavg
    3141:3141:java.util.List sortedDescending--ajY-9A(int[]) -> sortedDescending--ajY-9A
    3163:3163:java.util.List sortedDescending-GBYM_sE(byte[]) -> sortedDescending-GBYM_sE
    3152:3152:java.util.List sortedDescending-QwZRm1k(long[]) -> sortedDescending-QwZRm1k
    3174:3174:java.util.List sortedDescending-rL5Bavg(short[]) -> sortedDescending-rL5Bavg
    10700:10700:int sum--ajY-9A(int[]) -> sum--ajY-9A
    10720:10720:int sum-GBYM_sE(byte[]) -> sum-GBYM_sE
    10710:10710:long sum-QwZRm1k(long[]) -> sum-QwZRm1k
    10730:10730:int sum-rL5Bavg(short[]) -> sum-rL5Bavg
    9803:9804:int sumBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> sumBy-JOV_ifY
    9787:9788:int sumBy-MShoTSo(long[],kotlin.jvm.functions.Function1) -> sumBy-MShoTSo
    9771:9772:int sumBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> sumBy-jgv0xPQ
    9819:9820:int sumBy-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> sumBy-xTcfx_M
    9867:9868:double sumByDouble-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> sumByDouble-JOV_ifY
    9851:9852:double sumByDouble-MShoTSo(long[],kotlin.jvm.functions.Function1) -> sumByDouble-MShoTSo
    9835:9836:double sumByDouble-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> sumByDouble-jgv0xPQ
    9883:9884:double sumByDouble-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> sumByDouble-xTcfx_M
    9901:9902:double sumOfDouble(int[],kotlin.jvm.functions.Function1) -> sumOfDouble
    9919:9920:double sumOfDouble(long[],kotlin.jvm.functions.Function1) -> sumOfDouble
    9937:9938:double sumOfDouble(byte[],kotlin.jvm.functions.Function1) -> sumOfDouble
    9955:9956:double sumOfDouble(short[],kotlin.jvm.functions.Function1) -> sumOfDouble
    9973:9974:int sumOfInt(int[],kotlin.jvm.functions.Function1) -> sumOfInt
    9991:9992:int sumOfInt(long[],kotlin.jvm.functions.Function1) -> sumOfInt
    10009:10010:int sumOfInt(byte[],kotlin.jvm.functions.Function1) -> sumOfInt
    10027:10028:int sumOfInt(short[],kotlin.jvm.functions.Function1) -> sumOfInt
    10045:10046:long sumOfLong(int[],kotlin.jvm.functions.Function1) -> sumOfLong
    10063:10064:long sumOfLong(long[],kotlin.jvm.functions.Function1) -> sumOfLong
    10081:10082:long sumOfLong(byte[],kotlin.jvm.functions.Function1) -> sumOfLong
    10099:10100:long sumOfLong(short[],kotlin.jvm.functions.Function1) -> sumOfLong
    10673:10674:int sumOfUByte(kotlin.UByte[]) -> sumOfUByte
    10117:10119:int sumOfUInt(int[],kotlin.jvm.functions.Function1) -> sumOfUInt
    10136:10138:int sumOfUInt(long[],kotlin.jvm.functions.Function1) -> sumOfUInt
    10155:10157:int sumOfUInt(byte[],kotlin.jvm.functions.Function1) -> sumOfUInt
    10174:10176:int sumOfUInt(short[],kotlin.jvm.functions.Function1) -> sumOfUInt
    10645:10646:int sumOfUInt(kotlin.UInt[]) -> sumOfUInt
    10193:10195:long sumOfULong(int[],kotlin.jvm.functions.Function1) -> sumOfULong
    10212:10214:long sumOfULong(long[],kotlin.jvm.functions.Function1) -> sumOfULong
    10231:10233:long sumOfULong(byte[],kotlin.jvm.functions.Function1) -> sumOfULong
    10250:10252:long sumOfULong(short[],kotlin.jvm.functions.Function1) -> sumOfULong
    10659:10660:long sumOfULong(kotlin.ULong[]) -> sumOfULong
    10687:10688:int sumOfUShort(kotlin.UShort[]) -> sumOfUShort
    2415:2422:java.util.List take-PpDY95g(byte[],int) -> take-PpDY95g
    2439:2446:java.util.List take-nggk6HY(short[],int) -> take-nggk6HY
    2367:2374:java.util.List take-qFRl0hI(int[],int) -> take-qFRl0hI
    2391:2398:java.util.List take-r7IrZao(long[],int) -> take-r7IrZao
    2505:2512:java.util.List takeLast-PpDY95g(byte[],int) -> takeLast-PpDY95g
    2526:2533:java.util.List takeLast-nggk6HY(short[],int) -> takeLast-nggk6HY
    2463:2470:java.util.List takeLast-qFRl0hI(int[],int) -> takeLast-qFRl0hI
    2484:2491:java.util.List takeLast-r7IrZao(long[],int) -> takeLast-r7IrZao
    2581:10801:java.util.List takeLastWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> takeLastWhile-JOV_ifY
    2564:10800:java.util.List takeLastWhile-MShoTSo(long[],kotlin.jvm.functions.Function1) -> takeLastWhile-MShoTSo
    2547:10799:java.util.List takeLastWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> takeLastWhile-jgv0xPQ
    2598:10802:java.util.List takeLastWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> takeLastWhile-xTcfx_M
    2650:2654:java.util.List takeWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1) -> takeWhile-JOV_ifY
    2632:2636:java.util.List takeWhile-MShoTSo(long[],kotlin.jvm.functions.Function1) -> takeWhile-MShoTSo
    2614:2618:java.util.List takeWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1) -> takeWhile-jgv0xPQ
    2668:2672:java.util.List takeWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1) -> takeWhile-xTcfx_M
    4121:4121:byte[] toByteArray-GBYM_sE(byte[]) -> toByteArray-GBYM_sE
    4132:4132:int[] toIntArray--ajY-9A(int[]) -> toIntArray--ajY-9A
    4143:4143:long[] toLongArray-QwZRm1k(long[]) -> toLongArray-QwZRm1k
    4154:4154:short[] toShortArray-rL5Bavg(short[]) -> toShortArray-rL5Bavg
    4163:4163:kotlin.UInt[] toTypedArray--ajY-9A(int[]) -> toTypedArray--ajY-9A
    4181:4181:kotlin.UByte[] toTypedArray-GBYM_sE(byte[]) -> toTypedArray-GBYM_sE
    4172:4172:kotlin.ULong[] toTypedArray-QwZRm1k(long[]) -> toTypedArray-QwZRm1k
    4190:4190:kotlin.UShort[] toTypedArray-rL5Bavg(short[]) -> toTypedArray-rL5Bavg
    4199:4199:byte[] toUByteArray(kotlin.UByte[]) -> toUByteArray
    4210:4210:byte[] toUByteArray(byte[]) -> toUByteArray
    4219:4219:int[] toUIntArray(kotlin.UInt[]) -> toUIntArray
    4230:4230:int[] toUIntArray(int[]) -> toUIntArray
    4239:4239:long[] toULongArray(kotlin.ULong[]) -> toULongArray
    4250:4250:long[] toULongArray(long[]) -> toULongArray
    4259:4259:short[] toUShortArray(kotlin.UShort[]) -> toUShortArray
    4270:4270:short[] toUShortArray(short[]) -> toUShortArray
    5168:5168:java.lang.Iterable withIndex--ajY-9A(int[]) -> withIndex--ajY-9A
    5188:5188:java.lang.Iterable withIndex-GBYM_sE(byte[]) -> withIndex-GBYM_sE
    5178:5178:java.lang.Iterable withIndex-QwZRm1k(long[]) -> withIndex-QwZRm1k
    5198:5198:java.lang.Iterable withIndex-rL5Bavg(short[]) -> withIndex-rL5Bavg
    10440:10445:java.util.List zip-7znnbtw(int[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip-7znnbtw
    10335:10338:java.util.List zip-8LME4QE(long[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip-8LME4QE
    10266:10266:java.util.List zip-C-E_24M(int[],java.lang.Object[]) -> zip-C-E_24M
    10402:10402:java.util.List zip-F7u83W8(long[],java.lang.Iterable) -> zip-F7u83W8
    10390:10390:java.util.List zip-HwE9HBo(int[],java.lang.Iterable) -> zip-HwE9HBo
    10610:10613:java.util.List zip-JAKpvQM(byte[],byte[],kotlin.jvm.functions.Function2) -> zip-JAKpvQM
    10426:10426:java.util.List zip-JGPC0-M(short[],java.lang.Iterable) -> zip-JGPC0-M
    10414:10414:java.util.List zip-JQknh5Q(byte[],java.lang.Iterable) -> zip-JQknh5Q
    10572:10575:java.util.List zip-L83TJbI(int[],int[],kotlin.jvm.functions.Function2) -> zip-L83TJbI
    10354:10357:java.util.List zip-LuipOMY(byte[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip-LuipOMY
    10591:10594:java.util.List zip-PabeH-Q(long[],long[],kotlin.jvm.functions.Function2) -> zip-PabeH-Q
    10461:10466:java.util.List zip-TUPTUsU(long[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip-TUPTUsU
    10482:10487:java.util.List zip-UCnP4_w(byte[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip-UCnP4_w
    10316:10319:java.util.List zip-ZjwqOic(int[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip-ZjwqOic
    10522:10522:java.util.List zip-ctEhBpI(int[],int[]) -> zip-ctEhBpI
    10373:10376:java.util.List zip-ePBmRWY(short[],java.lang.Object[],kotlin.jvm.functions.Function2) -> zip-ePBmRWY
    10278:10278:java.util.List zip-f7H3mmw(long[],java.lang.Object[]) -> zip-f7H3mmw
    10629:10632:java.util.List zip-gVVukQo(short[],short[],kotlin.jvm.functions.Function2) -> zip-gVVukQo
    10503:10508:java.util.List zip-kBb4a-s(short[],java.lang.Iterable,kotlin.jvm.functions.Function2) -> zip-kBb4a-s
    10546:10546:java.util.List zip-kdPth3s(byte[],byte[]) -> zip-kdPth3s
    10558:10558:java.util.List zip-mazbYpA(short[],short[]) -> zip-mazbYpA
    10290:10290:java.util.List zip-nl983wc(byte[],java.lang.Object[]) -> zip-nl983wc
    10302:10302:java.util.List zip-uaTIQ5s(short[],java.lang.Object[]) -> zip-uaTIQ5s
    10534:10534:java.util.List zip-us8wMrg(long[],long[]) -> zip-us8wMrg
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1 -> kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1:
# {"id":"sourceFile","fileName":"_UArrays.kt"}
    0:0:void <init>(int[]) -> <init>
    5168:5168:java.lang.Object invoke() -> invoke
    5168:5168:java.util.Iterator invoke() -> invoke
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2 -> kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2:
# {"id":"sourceFile","fileName":"_UArrays.kt"}
    0:0:void <init>(long[]) -> <init>
    5178:5178:java.lang.Object invoke() -> invoke
    5178:5178:java.util.Iterator invoke() -> invoke
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3 -> kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3:
# {"id":"sourceFile","fileName":"_UArrays.kt"}
    0:0:void <init>(byte[]) -> <init>
    5188:5188:java.lang.Object invoke() -> invoke
    5188:5188:java.util.Iterator invoke() -> invoke
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4 -> kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4:
# {"id":"sourceFile","fileName":"_UArrays.kt"}
    0:0:void <init>(short[]) -> <init>
    5198:5198:java.lang.Object invoke() -> invoke
    5198:5198:java.util.Iterator invoke() -> invoke
kotlin.comparisons.ComparisonsKt -> kotlin.comparisons.ComparisonsKt:
    1:1:void <init>() -> <init>
    0:0:int compareValues(java.lang.Comparable,java.lang.Comparable) -> compareValues
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable) -> maxOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Comparator naturalOrder() -> naturalOrder
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Comparator reverseOrder() -> reverseOrder
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.comparisons.ComparisonsKt__ComparisonsKt -> kotlin.comparisons.ComparisonsKt__ComparisonsKt:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:int $r8$lambda$-gpd5rn26uA_qKcB-hI2DNr-hgw(java.util.Comparator,java.util.Comparator,java.lang.Object,java.lang.Object) -> $r8$lambda$-gpd5rn26uA_qKcB-hI2DNr-hgw
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int $r8$lambda$6WnilmL2ArBCKOeeYXXH8ELrg4w(java.util.Comparator,java.lang.Object,java.lang.Object) -> $r8$lambda$6WnilmL2ArBCKOeeYXXH8ELrg4w
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int $r8$lambda$Uw4BAo9Vwbm4C3dkpmfByDP7hFs(java.util.Comparator,java.lang.Object,java.lang.Object) -> $r8$lambda$Uw4BAo9Vwbm4C3dkpmfByDP7hFs
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int $r8$lambda$iapHOTD2lDnsDFFbGrAXPm4qZHg(java.util.Comparator,java.util.Comparator,java.lang.Object,java.lang.Object) -> $r8$lambda$iapHOTD2lDnsDFFbGrAXPm4qZHg
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int $r8$lambda$nq8UCGW90ISdL04-oV8sJ24EEKI(kotlin.jvm.functions.Function1[],java.lang.Object,java.lang.Object) -> $r8$lambda$nq8UCGW90ISdL04-oV8sJ24EEKI
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void <init>() -> <init>
    90:91:java.util.Comparator compareBy(kotlin.jvm.functions.Function1[]) -> compareBy
    102:102:java.util.Comparator compareBy(kotlin.jvm.functions.Function1) -> compareBy
    112:112:java.util.Comparator compareBy(java.util.Comparator,kotlin.jvm.functions.Function1) -> compareBy
    91:91:int compareBy$lambda$0$ComparisonsKt__ComparisonsKt(kotlin.jvm.functions.Function1[],java.lang.Object,java.lang.Object) -> compareBy$lambda$0$ComparisonsKt__ComparisonsKt
    121:121:java.util.Comparator compareByDescending(kotlin.jvm.functions.Function1) -> compareByDescending
    133:133:java.util.Comparator compareByDescending(java.util.Comparator,kotlin.jvm.functions.Function1) -> compareByDescending
    78:78:int compareValues(java.lang.Comparable,java.lang.Comparable) -> compareValues
    19:20:int compareValuesBy(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1[]) -> compareValuesBy
    42:42:int compareValuesBy(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1) -> compareValuesBy
    54:54:int compareValuesBy(java.lang.Object,java.lang.Object,java.util.Comparator,kotlin.jvm.functions.Function1) -> compareValuesBy
    24:27:int compareValuesByImpl$ComparisonsKt__ComparisonsKt(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1[]) -> compareValuesByImpl$ComparisonsKt__ComparisonsKt
    286:286:java.util.Comparator naturalOrder() -> naturalOrder
    233:233:java.util.Comparator nullsFirst(java.util.Comparator) -> nullsFirst
    250:250:java.util.Comparator nullsFirst() -> nullsFirst
    238:238:int nullsFirst$lambda$3$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.lang.Object,java.lang.Object) -> nullsFirst$lambda$3$ComparisonsKt__ComparisonsKt
    260:260:java.util.Comparator nullsLast(java.util.Comparator) -> nullsLast
    277:277:java.util.Comparator nullsLast() -> nullsLast
    265:265:int nullsLast$lambda$4$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.lang.Object,java.lang.Object) -> nullsLast$lambda$4$ComparisonsKt__ComparisonsKt
    295:295:java.util.Comparator reverseOrder() -> reverseOrder
    304:307:java.util.Comparator reversed(java.util.Comparator) -> reversed
    207:207:java.util.Comparator then(java.util.Comparator,java.util.Comparator) -> then
    208:209:int then$lambda$1$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.util.Comparator,java.lang.Object,java.lang.Object) -> then$lambda$1$ComparisonsKt__ComparisonsKt
    143:143:java.util.Comparator thenBy(java.util.Comparator,kotlin.jvm.functions.Function1) -> thenBy
    156:156:java.util.Comparator thenBy(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1) -> thenBy
    169:169:java.util.Comparator thenByDescending(java.util.Comparator,kotlin.jvm.functions.Function1) -> thenByDescending
    182:182:java.util.Comparator thenByDescending(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1) -> thenByDescending
    195:195:java.util.Comparator thenComparator(java.util.Comparator,kotlin.jvm.functions.Function2) -> thenComparator
    219:219:java.util.Comparator thenDescending(java.util.Comparator,java.util.Comparator) -> thenDescending
    220:221:int thenDescending$lambda$2$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.util.Comparator,java.lang.Object,java.lang.Object) -> thenDescending$lambda$2$ComparisonsKt__ComparisonsKt
kotlin.comparisons.ComparisonsKt__ComparisonsKt$$ExternalSyntheticLambda0 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.Comparator kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$04f2f457c300627505ad35a94fa3cdb3b15a1b851c88de3e90870cf03847b512$0.f$1 -> f$1
    java.util.Comparator kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$04f2f457c300627505ad35a94fa3cdb3b15a1b851c88de3e90870cf03847b512$0.f$0 -> f$0
    0:0:void kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$04f2f457c300627505ad35a94fa3cdb3b15a1b851c88de3e90870cf03847b512$0.<init>(java.util.Comparator,java.util.Comparator) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$04f2f457c300627505ad35a94fa3cdb3b15a1b851c88de3e90870cf03847b512$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.comparisons.ComparisonsKt__ComparisonsKt$$ExternalSyntheticLambda1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1[] kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$2396458c1bbc060c3ed05a96a1b1c51ba6019d36c254931b82a20a17d2e527e5$0.f$0 -> f$0
    0:0:void kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$2396458c1bbc060c3ed05a96a1b1c51ba6019d36c254931b82a20a17d2e527e5$0.<init>(kotlin.jvm.functions.Function1[]) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$2396458c1bbc060c3ed05a96a1b1c51ba6019d36c254931b82a20a17d2e527e5$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.comparisons.ComparisonsKt__ComparisonsKt$$ExternalSyntheticLambda2 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.Comparator kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$5848ddea86b05adf1935eccacee54375d76a8873aa60924b13bd69c5d039a32c$0.f$1 -> f$1
    java.util.Comparator kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$5848ddea86b05adf1935eccacee54375d76a8873aa60924b13bd69c5d039a32c$0.f$0 -> f$0
    0:0:void kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$5848ddea86b05adf1935eccacee54375d76a8873aa60924b13bd69c5d039a32c$0.<init>(java.util.Comparator,java.util.Comparator) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$5848ddea86b05adf1935eccacee54375d76a8873aa60924b13bd69c5d039a32c$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.comparisons.ComparisonsKt__ComparisonsKt$$ExternalSyntheticLambda3 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.Comparator kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$9169a9bfe73cfa85fa177d3e7a1ad50bafa51d9ed94cbd208249dacf679cea4b$0.f$0 -> f$0
    0:0:void kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$9169a9bfe73cfa85fa177d3e7a1ad50bafa51d9ed94cbd208249dacf679cea4b$0.<init>(java.util.Comparator) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$9169a9bfe73cfa85fa177d3e7a1ad50bafa51d9ed94cbd208249dacf679cea4b$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.comparisons.ComparisonsKt__ComparisonsKt$$ExternalSyntheticLambda4 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.Comparator kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$dae24f35d682b79eec7edae379f3eb9fdaac7d2e032430a18d1a78ffc1f071b5$0.f$0 -> f$0
    0:0:void kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$dae24f35d682b79eec7edae379f3eb9fdaac7d2e032430a18d1a78ffc1f071b5$0.<init>(java.util.Comparator) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$$InternalSyntheticLambda$1$dae24f35d682b79eec7edae379f3eb9fdaac7d2e032430a18d1a78ffc1f071b5$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function1) -> <init>
    102:102:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <init>(java.util.Comparator,kotlin.jvm.functions.Function1) -> <init>
    112:112:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function1) -> <init>
    121:121:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <init>(java.util.Comparator,kotlin.jvm.functions.Function1) -> <init>
    133:133:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <init>(java.util.Comparator,kotlin.jvm.functions.Function1) -> <init>
    144:145:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <init>(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1) -> <init>
    157:158:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <init>(java.util.Comparator,kotlin.jvm.functions.Function1) -> <init>
    170:171:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <init>(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1) -> <init>
    183:184:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <init>(java.util.Comparator,kotlin.jvm.functions.Function2) -> <init>
    196:197:int compare(java.lang.Object,java.lang.Object) -> compare
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt -> kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt:
# {"id":"sourceFile","fileName":"_ComparisonsJvm.kt"}
    0:0:void <init>() -> <init>
    24:24:java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable) -> maxOf
    33:33:byte maxOf(byte,byte) -> maxOf
    42:42:short maxOf(short,short) -> maxOf
    51:51:int maxOf(int,int) -> maxOf
    60:60:long maxOf(long,long) -> maxOf
    71:71:float maxOf(float,float) -> maxOf
    82:82:double maxOf(double,double) -> maxOf
    92:92:java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> maxOf
    101:101:byte maxOf(byte,byte,byte) -> maxOf
    110:110:short maxOf(short,short,short) -> maxOf
    119:119:int maxOf(int,int,int) -> maxOf
    128:128:long maxOf(long,long,long) -> maxOf
    139:139:float maxOf(float,float,float) -> maxOf
    150:150:double maxOf(double,double,double) -> maxOf
    161:161:java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable[]) -> maxOf
    171:171:byte maxOf(byte,byte[]) -> maxOf
    181:181:short maxOf(short,short[]) -> maxOf
    191:191:int maxOf(int,int[]) -> maxOf
    201:201:long maxOf(long,long[]) -> maxOf
    213:213:float maxOf(float,float[]) -> maxOf
    225:225:double maxOf(double,double[]) -> maxOf
    236:236:java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable) -> minOf
    245:245:byte minOf(byte,byte) -> minOf
    254:254:short minOf(short,short) -> minOf
    263:263:int minOf(int,int) -> minOf
    272:272:long minOf(long,long) -> minOf
    283:283:float minOf(float,float) -> minOf
    294:294:double minOf(double,double) -> minOf
    304:304:java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> minOf
    313:313:byte minOf(byte,byte,byte) -> minOf
    322:322:short minOf(short,short,short) -> minOf
    331:331:int minOf(int,int,int) -> minOf
    340:340:long minOf(long,long,long) -> minOf
    351:351:float minOf(float,float,float) -> minOf
    362:362:double minOf(double,double,double) -> minOf
    373:373:java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable[]) -> minOf
    383:383:byte minOf(byte,byte[]) -> minOf
    393:393:short minOf(short,short[]) -> minOf
    403:403:int minOf(int,int[]) -> minOf
    413:413:long minOf(long,long[]) -> minOf
    425:425:float minOf(float,float[]) -> minOf
    437:437:double minOf(double,double[]) -> minOf
kotlin.comparisons.ComparisonsKt___ComparisonsKt -> kotlin.comparisons.ComparisonsKt___ComparisonsKt:
# {"id":"sourceFile","fileName":"_Comparisons.kt"}
    0:0:void <init>() -> <init>
    133:133:java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Comparator) -> maxOf
    143:143:java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.util.Comparator) -> maxOf
    202:202:java.lang.Object maxOf(java.lang.Object,java.lang.Object[],java.util.Comparator) -> maxOf
    321:321:java.lang.Object minOf(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Comparator) -> minOf
    331:331:java.lang.Object minOf(java.lang.Object,java.lang.Object,java.util.Comparator) -> minOf
    390:390:java.lang.Object minOf(java.lang.Object,java.lang.Object[],java.util.Comparator) -> minOf
kotlin.comparisons.NaturalOrderComparator -> kotlin.comparisons.NaturalOrderComparator:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <clinit>() -> <clinit>
    317:317:void <init>() -> <init>
    317:317:int compare(java.lang.Object,java.lang.Object) -> compare
    318:318:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    320:320:java.util.Comparator reversed() -> reversed
kotlin.comparisons.ReverseOrderComparator -> kotlin.comparisons.ReverseOrderComparator:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <clinit>() -> <clinit>
    323:323:void <init>() -> <init>
    323:323:int compare(java.lang.Object,java.lang.Object) -> compare
    324:324:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    326:326:java.util.Comparator reversed() -> reversed
kotlin.comparisons.ReversedComparator -> kotlin.comparisons.ReversedComparator:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    311:311:void <init>(java.util.Comparator) -> <init>
    312:312:int compare(java.lang.Object,java.lang.Object) -> compare
    311:311:java.util.Comparator getComparator() -> getComparator
    314:314:java.util.Comparator reversed() -> reversed
kotlin.comparisons.UComparisonsKt -> kotlin.comparisons.UComparisonsKt:
# {"id":"sourceFile","fileName":"_UComparisons.kt"}
    1:1:void <init>() -> <init>
    0:0:int maxOf-J1ME1BU(int,int) -> maxOf-J1ME1BU
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long maxOf-eb3DHEI(long,long) -> maxOf-eb3DHEI
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int minOf-J1ME1BU(int,int) -> minOf-J1ME1BU
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long minOf-eb3DHEI(long,long) -> minOf-eb3DHEI
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.comparisons.UComparisonsKt___UComparisonsKt -> kotlin.comparisons.UComparisonsKt___UComparisonsKt:
# {"id":"sourceFile","fileName":"_UComparisons.kt"}
    0:0:void <init>() -> <init>
    51:51:short maxOf-5PvTz6A(short,short) -> maxOf-5PvTz6A
    24:24:int maxOf-J1ME1BU(int,int) -> maxOf-J1ME1BU
    42:42:byte maxOf-Kr8caGY(byte,byte) -> maxOf-Kr8caGY
    101:101:int maxOf-Md2H83M(int,int[]) -> maxOf-Md2H83M
    112:112:long maxOf-R03FKyM(long,long[]) -> maxOf-R03FKyM
    91:91:short maxOf-VKSA0NQ(short,short,short) -> maxOf-VKSA0NQ
    61:61:int maxOf-WZ9TVnA(int,int,int) -> maxOf-WZ9TVnA
    123:123:byte maxOf-Wr6uiD8(byte,byte[]) -> maxOf-Wr6uiD8
    81:81:byte maxOf-b33U2AM(byte,byte,byte) -> maxOf-b33U2AM
    33:33:long maxOf-eb3DHEI(long,long) -> maxOf-eb3DHEI
    71:71:long maxOf-sambcqE(long,long,long) -> maxOf-sambcqE
    134:134:short maxOf-t1qELG4(short,short[]) -> maxOf-t1qELG4
    171:171:short minOf-5PvTz6A(short,short) -> minOf-5PvTz6A
    144:144:int minOf-J1ME1BU(int,int) -> minOf-J1ME1BU
    162:162:byte minOf-Kr8caGY(byte,byte) -> minOf-Kr8caGY
    221:221:int minOf-Md2H83M(int,int[]) -> minOf-Md2H83M
    232:232:long minOf-R03FKyM(long,long[]) -> minOf-R03FKyM
    211:211:short minOf-VKSA0NQ(short,short,short) -> minOf-VKSA0NQ
    181:181:int minOf-WZ9TVnA(int,int,int) -> minOf-WZ9TVnA
    243:243:byte minOf-Wr6uiD8(byte,byte[]) -> minOf-Wr6uiD8
    201:201:byte minOf-b33U2AM(byte,byte,byte) -> minOf-b33U2AM
    153:153:long minOf-eb3DHEI(long,long) -> minOf-eb3DHEI
    191:191:long minOf-sambcqE(long,long,long) -> minOf-sambcqE
    254:254:short minOf-t1qELG4(short,short[]) -> minOf-t1qELG4
kotlin.concurrent.LocksKt -> kotlin.concurrent.LocksKt:
# {"id":"sourceFile","fileName":"Locks.kt"}
    35:40:java.lang.Object read(java.util.concurrent.locks.ReentrantReadWriteLock,kotlin.jvm.functions.Function0) -> read
    20:24:java.lang.Object withLock(java.util.concurrent.locks.Lock,kotlin.jvm.functions.Function0) -> withLock
    60:71:java.lang.Object write(java.util.concurrent.locks.ReentrantReadWriteLock,kotlin.jvm.functions.Function0) -> write
kotlin.concurrent.ThreadsKt -> kotlin.concurrent.ThreadsKt:
# {"id":"sourceFile","fileName":"Thread.kt"}
    59:59:java.lang.Object getOrSet(java.lang.ThreadLocal,kotlin.jvm.functions.Function0) -> getOrSet
    28:42:java.lang.Thread thread(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0) -> thread
    20:20:java.lang.Thread thread$default(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0,int,java.lang.Object) -> thread$default
kotlin.concurrent.ThreadsKt$thread$thread$1 -> kotlin.concurrent.ThreadsKt$thread$thread$1:
# {"id":"sourceFile","fileName":"Thread.kt"}
    28:28:void <init>(kotlin.jvm.functions.Function0) -> <init>
    30:30:void run() -> run
kotlin.concurrent.TimersKt -> kotlin.concurrent.TimersKt:
# {"id":"sourceFile","fileName":"Timer.kt"}
    123:124:java.util.Timer fixedRateTimer(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1) -> fixedRateTimer
    137:138:java.util.Timer fixedRateTimer(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1) -> fixedRateTimer
    122:124:java.util.Timer fixedRateTimer$default(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1,int,java.lang.Object) -> fixedRateTimer$default
    136:138:java.util.Timer fixedRateTimer$default(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1,int,java.lang.Object) -> fixedRateTimer$default
    18:19:java.util.TimerTask schedule(java.util.Timer,long,kotlin.jvm.functions.Function1) -> schedule
    28:29:java.util.TimerTask schedule(java.util.Timer,java.util.Date,kotlin.jvm.functions.Function1) -> schedule
    40:41:java.util.TimerTask schedule(java.util.Timer,long,long,kotlin.jvm.functions.Function1) -> schedule
    51:52:java.util.TimerTask schedule(java.util.Timer,java.util.Date,long,kotlin.jvm.functions.Function1) -> schedule
    63:64:java.util.TimerTask scheduleAtFixedRate(java.util.Timer,long,long,kotlin.jvm.functions.Function1) -> scheduleAtFixedRate
    74:75:java.util.TimerTask scheduleAtFixedRate(java.util.Timer,java.util.Date,long,kotlin.jvm.functions.Function1) -> scheduleAtFixedRate
    82:82:java.util.Timer timer(java.lang.String,boolean) -> timer
    94:95:java.util.Timer timer(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1) -> timer
    108:109:java.util.Timer timer(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1) -> timer
    93:95:java.util.Timer timer$default(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1,int,java.lang.Object) -> timer$default
    107:109:java.util.Timer timer$default(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1,int,java.lang.Object) -> timer$default
    146:146:java.util.TimerTask timerTask(kotlin.jvm.functions.Function1) -> timerTask
kotlin.concurrent.TimersKt$timerTask$1 -> kotlin.concurrent.TimersKt$timerTask$1:
# {"id":"sourceFile","fileName":"Timer.kt"}
    146:146:void <init>(kotlin.jvm.functions.Function1) -> <init>
    147:147:void run() -> run
kotlin.concurrent.VolatileKt -> kotlin.concurrent.VolatileKt:
# {"id":"sourceFile","fileName":"Volatile.kt"}
    0:0:void Volatile$annotations() -> Volatile$annotations
kotlin.contracts.CallsInPlace -> kotlin.contracts.CallsInPlace:
# {"id":"sourceFile","fileName":"Effect.kt"}
kotlin.contracts.ConditionalEffect -> kotlin.contracts.ConditionalEffect:
# {"id":"sourceFile","fileName":"Effect.kt"}
kotlin.contracts.ContractBuilder -> kotlin.contracts.ContractBuilder:
# {"id":"sourceFile","fileName":"ContractBuilder.kt"}
kotlin.contracts.ContractBuilder$DefaultImpls -> kotlin.contracts.ContractBuilder$DefaultImpls:
# {"id":"sourceFile","fileName":"ContractBuilder.kt"}
    85:85:kotlin.contracts.CallsInPlace callsInPlace$default(kotlin.contracts.ContractBuilder,kotlin.Function,kotlin.contracts.InvocationKind,int,java.lang.Object) -> callsInPlace$default
kotlin.contracts.ContractBuilderKt -> kotlin.contracts.ContractBuilderKt:
# {"id":"sourceFile","fileName":"ContractBuilder.kt"}
    0:0:void contract(kotlin.jvm.functions.Function1) -> contract
kotlin.contracts.Effect -> kotlin.contracts.Effect:
# {"id":"sourceFile","fileName":"Effect.kt"}
kotlin.contracts.ExperimentalContracts -> kotlin.contracts.ExperimentalContracts:
# {"id":"sourceFile","fileName":"ContractBuilder.kt"}
kotlin.contracts.InvocationKind -> kotlin.contracts.InvocationKind:
# {"id":"sourceFile","fileName":"ContractBuilder.kt"}
    0:0:kotlin.contracts.InvocationKind[] $values() -> $values
    101:122:void <clinit>() -> <clinit>
    93:93:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.contracts.InvocationKind valueOf(java.lang.String) -> valueOf
    0:0:kotlin.contracts.InvocationKind[] values() -> values
kotlin.contracts.Returns -> kotlin.contracts.Returns:
# {"id":"sourceFile","fileName":"Effect.kt"}
kotlin.contracts.ReturnsNotNull -> kotlin.contracts.ReturnsNotNull:
# {"id":"sourceFile","fileName":"Effect.kt"}
kotlin.contracts.SimpleEffect -> kotlin.contracts.SimpleEffect:
# {"id":"sourceFile","fileName":"Effect.kt"}
kotlin.coroutines.AbstractCoroutineContextElement -> kotlin.coroutines.AbstractCoroutineContextElement:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    14:15:void <init>(kotlin.coroutines.CoroutineContext$Key) -> <init>
    14:14:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    14:14:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    15:15:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    14:14:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    14:14:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.AbstractCoroutineContextKey -> kotlin.coroutines.AbstractCoroutineContextKey:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    46:52:void <init>(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1) -> <init>
    55:55:boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key) -> isSubKey$kotlin_stdlib
    54:54:kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element) -> tryCast$kotlin_stdlib
kotlin.coroutines.CombinedContext -> kotlin.coroutines.CombinedContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    111:114:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> <init>
    153:153:boolean contains(kotlin.coroutines.CoroutineContext$Element) -> contains
    158:163:boolean containsAll(kotlin.coroutines.CombinedContext) -> containsAll
    169:169:boolean equals(java.lang.Object) -> equals
    131:131:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    120:125:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    171:171:int hashCode() -> hashCode
    134:139:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    111:111:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    147:147:int size() -> size
    174:174:java.lang.String toString() -> toString
    179:185:java.lang.Object writeReplace() -> writeReplace
kotlin.coroutines.CombinedContext$Serialized -> kotlin.coroutines.CombinedContext$Serialized:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    188:188:void <init>(kotlin.coroutines.CoroutineContext[]) -> <init>
    188:188:kotlin.coroutines.CoroutineContext[] getElements() -> getElements
    193:198:java.lang.Object readResolve() -> readResolve
kotlin.coroutines.CombinedContext$Serialized$Companion -> kotlin.coroutines.CombinedContext$Serialized$Companion:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    189:189:void <init>() -> <init>
kotlin.coroutines.CombinedContext$toString$1 -> kotlin.coroutines.CombinedContext$toString$1:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    174:174:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    175:175:java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.CombinedContext$writeReplace$1 -> kotlin.coroutines.CombinedContext$writeReplace$1:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <init>(kotlin.coroutines.CoroutineContext[],kotlin.jvm.internal.Ref$IntRef) -> <init>
    182:182:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    182:182:void invoke(kotlin.Unit,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.Continuation -> kotlin.coroutines.Continuation:
# {"id":"sourceFile","fileName":"Continuation.kt"}
kotlin.coroutines.ContinuationInterceptor -> kotlin.coroutines.ContinuationInterceptor:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.coroutines.ContinuationInterceptor$DefaultImpls -> kotlin.coroutines.ContinuationInterceptor$DefaultImpls:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    20:20:java.lang.Object fold(kotlin.coroutines.ContinuationInterceptor,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    55:60:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> get
    67:70:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> minusKey
    20:20:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext) -> plus
    0:0:void releaseInterceptedContinuation(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.Continuation) -> releaseInterceptedContinuation
kotlin.coroutines.ContinuationInterceptor$Key -> kotlin.coroutines.ContinuationInterceptor$Key:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
kotlin.coroutines.ContinuationKt -> kotlin.coroutines.ContinuationKt:
# {"id":"sourceFile","fileName":"Continuation.kt"}
    66:66:kotlin.coroutines.Continuation Continuation(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> Continuation
    87:87:kotlin.coroutines.Continuation createCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> createCoroutine
    103:103:kotlin.coroutines.Continuation createCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> createCoroutine
    159:159:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    0:0:void getCoroutineContext$annotations() -> getCoroutineContext$annotations
    45:45:void resume(kotlin.coroutines.Continuation,java.lang.Object) -> resume
    54:54:void resumeWithException(kotlin.coroutines.Continuation,java.lang.Throwable) -> resumeWithException
    115:115:void startCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> startCoroutine
    129:129:void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutine
    144:147:java.lang.Object suspendCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> suspendCoroutine
kotlin.coroutines.ContinuationKt$Continuation$1 -> kotlin.coroutines.ContinuationKt$Continuation$1:
# {"id":"sourceFile","fileName":"Continuation.kt"}
    66:66:void <init>(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> <init>
    68:68:kotlin.coroutines.CoroutineContext getContext() -> getContext
    71:71:void resumeWith(java.lang.Object) -> resumeWith
kotlin.coroutines.CoroutineContext -> kotlin.coroutines.CoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$DefaultImpls -> kotlin.coroutines.CoroutineContext$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    31:32:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Element -> kotlin.coroutines.CoroutineContext$Element:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$Element$DefaultImpls -> kotlin.coroutines.CoroutineContext$Element$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    70:70:java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    67:67:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> get
    73:73:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> minusKey
    59:59:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Key -> kotlin.coroutines.CoroutineContext$Key:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$plus$1 -> kotlin.coroutines.CoroutineContext$plus$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    33:40:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.CoroutineContextImplKt -> kotlin.coroutines.CoroutineContextImplKt:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    67:72:kotlin.coroutines.CoroutineContext$Element getPolymorphicElement(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> getPolymorphicElement
    85:88:kotlin.coroutines.CoroutineContext minusPolymorphicKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> minusPolymorphicKey
kotlin.coroutines.EmptyCoroutineContext -> kotlin.coroutines.EmptyCoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    94:94:void <init>() -> <init>
    0:0:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    0:0:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    0:0:int hashCode() -> hashCode
    0:0:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    0:0:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
    97:97:java.lang.Object readResolve() -> readResolve
    0:0:java.lang.String toString() -> toString
kotlin.coroutines.RestrictsSuspension -> kotlin.coroutines.RestrictsSuspension:
# {"id":"sourceFile","fileName":"Continuation.kt"}
kotlin.coroutines.SafeContinuation -> kotlin.coroutines.SafeContinuation:
# {"id":"sourceFile","fileName":"SafeContinuationJvm.kt"}
    30:30:void <clinit>() -> <clinit>
    12:26:void <init>(kotlin.coroutines.Continuation,java.lang.Object) -> <init>
    20:20:void <init>(kotlin.coroutines.Continuation) -> <init>
    66:66:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    23:23:kotlin.coroutines.CoroutineContext getContext() -> getContext
    51:58:java.lang.Object getOrThrow() -> getOrThrow
    0:0:java.lang.StackTraceElement getStackTraceElement() -> getStackTraceElement
    37:44:void resumeWith(java.lang.Object) -> resumeWith
    72:72:java.lang.String toString() -> toString
kotlin.coroutines.SafeContinuation$Companion -> kotlin.coroutines.SafeContinuation$Companion:
# {"id":"sourceFile","fileName":"SafeContinuationJvm.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    28:28:void <init>() -> <init>
    0:0:void getRESULT$annotations() -> getRESULT$annotations
kotlin.coroutines.cancellation.CancellationExceptionKt -> kotlin.coroutines.cancellation.CancellationExceptionKt:
# {"id":"sourceFile","fileName":"CancellationException.kt"}
    16:16:java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable) -> CancellationException
    21:21:java.util.concurrent.CancellationException CancellationException(java.lang.Throwable) -> CancellationException
    0:0:void CancellationException$annotations() -> CancellationException$annotations
kotlin.coroutines.intrinsics.CoroutineSingletons -> kotlin.coroutines.intrinsics.CoroutineSingletons:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    0:0:kotlin.coroutines.intrinsics.CoroutineSingletons[] $values() -> $values
    64:64:void <clinit>() -> <clinit>
    62:62:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String) -> valueOf
    0:0:kotlin.coroutines.intrinsics.CoroutineSingletons[] values() -> values
kotlin.coroutines.intrinsics.IntrinsicsKt -> kotlin.coroutines.intrinsics.IntrinsicsKt:
    1:1:void <init>() -> <init>
    0:0:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object getCOROUTINE_SUSPENDED() -> getCOROUTINE_SUSPENDED
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation) -> intercepted
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object wrapWithContinuationImpl(kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object,kotlin.coroutines.Continuation) -> wrapWithContinuationImpl
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    0:0:void <init>() -> <init>
    204:225:kotlin.coroutines.Continuation createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt
    126:274:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
    161:279:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> createCoroutineUnintercepted
    256:264:kotlin.coroutines.Continuation createSimpleCoroutineForSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt(kotlin.coroutines.Continuation) -> createSimpleCoroutineForSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt
    182:182:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation) -> intercepted
    34:35:java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> startCoroutineUninterceptedOrReturn
    65:66:java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUninterceptedOrReturn
    85:86:java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object,kotlin.coroutines.Continuation) -> startCoroutineUninterceptedOrReturn
    42:43:java.lang.Object wrapWithContinuationImpl(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> wrapWithContinuationImpl
    74:75:java.lang.Object wrapWithContinuationImpl(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> wrapWithContinuationImpl
    95:96:java.lang.Object wrapWithContinuationImpl(kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object,kotlin.coroutines.Continuation) -> wrapWithContinuationImpl
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    207:207:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> <init>
    211:221:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    225:225:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> <init>
    229:239:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    207:207:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1) -> <init>
    211:270:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    225:225:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1) -> <init>
    229:270:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    207:207:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object) -> <init>
    211:270:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    225:225:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object) -> <init>
    229:270:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createSimpleCoroutineForSuspendFunction$1 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createSimpleCoroutineForSuspendFunction$1:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    258:258:void <init>(kotlin.coroutines.Continuation) -> <init>
    260:260:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createSimpleCoroutineForSuspendFunction$2 -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createSimpleCoroutineForSuspendFunction$2:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    264:264:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext) -> <init>
    266:266:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    0:0:void <init>() -> <init>
    57:57:java.lang.Object getCOROUTINE_SUSPENDED() -> getCOROUTINE_SUSPENDED
    0:0:void getCOROUTINE_SUSPENDED$annotations() -> getCOROUTINE_SUSPENDED$annotations
    43:43:java.lang.Object suspendCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> suspendCoroutineUninterceptedOrReturn
kotlin.coroutines.jvm.internal.BaseContinuationImpl -> kotlin.coroutines.jvm.internal.BaseContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    14:18:void <init>(kotlin.coroutines.Continuation) -> <init>
    60:60:kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation) -> create
    64:64:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    73:73:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    18:18:kotlin.coroutines.Continuation getCompletion() -> getCompletion
    76:76:java.lang.StackTraceElement getStackTraceElement() -> getStackTraceElement
    0:0:void releaseIntercepted() -> releaseIntercepted
    28:46:void resumeWith(java.lang.Object) -> resumeWith
    68:68:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.Boxing -> kotlin.coroutines.jvm.internal.Boxing:
# {"id":"sourceFile","fileName":"boxing.kt"}
    20:20:java.lang.Boolean boxBoolean(boolean) -> boxBoolean
    24:24:java.lang.Byte boxByte(byte) -> boxByte
    48:48:java.lang.Character boxChar(char) -> boxChar
    44:44:java.lang.Double boxDouble(double) -> boxDouble
    40:40:java.lang.Float boxFloat(float) -> boxFloat
    32:32:java.lang.Integer boxInt(int) -> boxInt
    36:36:java.lang.Long boxLong(long) -> boxLong
    28:28:java.lang.Short boxShort(short) -> boxShort
kotlin.coroutines.jvm.internal.CompletedContinuation -> kotlin.coroutines.jvm.internal.CompletedContinuation:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    124:124:void <init>() -> <init>
    126:126:kotlin.coroutines.CoroutineContext getContext() -> getContext
    129:129:void resumeWith(java.lang.Object) -> resumeWith
    0:0:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.ContinuationImpl -> kotlin.coroutines.jvm.internal.ContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    100:101:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext) -> <init>
    102:102:void <init>(kotlin.coroutines.Continuation) -> <init>
    105:105:kotlin.coroutines.CoroutineContext getContext() -> getContext
    111:113:kotlin.coroutines.Continuation intercepted() -> intercepted
    116:120:void releaseIntercepted() -> releaseIntercepted
kotlin.coroutines.jvm.internal.CoroutineStackFrame -> kotlin.coroutines.jvm.internal.CoroutineStackFrame:
# {"id":"sourceFile","fileName":"CoroutineStackFrame.kt"}
kotlin.coroutines.jvm.internal.DebugMetadata -> kotlin.coroutines.jvm.internal.DebugMetadata:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
kotlin.coroutines.jvm.internal.DebugMetadataKt -> kotlin.coroutines.jvm.internal.DebugMetadataKt:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    102:103:void checkDebugMetadataVersion(int,int) -> checkDebugMetadataVersion
    90:90:kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getDebugMetadataAnnotation
    94:96:int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getLabel
    121:136:java.lang.String[] getSpilledVariableFieldMapping(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getSpilledVariableFieldMapping
    42:48:java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getStackTraceElement
kotlin.coroutines.jvm.internal.DebugProbesKt -> kotlin.coroutines.jvm.internal.DebugProbesKt:
# {"id":"sourceFile","fileName":"DebugProbes.kt"}
    0:0:kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation) -> probeCoroutineCreated
    0:0:void probeCoroutineResumed(kotlin.coroutines.Continuation) -> probeCoroutineResumed
    0:0:void probeCoroutineSuspended(kotlin.coroutines.Continuation) -> probeCoroutineSuspended
kotlin.coroutines.jvm.internal.ModuleNameRetriever -> kotlin.coroutines.jvm.internal.ModuleNameRetriever:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    61:61:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    76:84:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> buildCache
    66:72:java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getModuleName
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache -> kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    52:57:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl -> kotlin.coroutines.jvm.internal.RestrictedContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    83:86:void <init>(kotlin.coroutines.Continuation) -> <init>
    93:93:kotlin.coroutines.CoroutineContext getContext() -> getContext
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda -> kotlin.coroutines.jvm.internal.RestrictedSuspendLambda:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    142:144:void <init>(int,kotlin.coroutines.Continuation) -> <init>
    145:145:void <init>(int) -> <init>
    142:142:int getArity() -> getArity
    148:151:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.RunSuspend -> kotlin.coroutines.jvm.internal.RunSuspend:
# {"id":"sourceFile","fileName":"RunSuspend.kt"}
    23:23:void <init>() -> <init>
    34:40:void await() -> await
    25:25:kotlin.coroutines.CoroutineContext getContext() -> getContext
    27:27:kotlin.Result getResult-xLWZpok() -> getResult-xLWZpok
    29:32:void resumeWith(java.lang.Object) -> resumeWith
    27:27:void setResult(kotlin.Result) -> setResult
kotlin.coroutines.jvm.internal.RunSuspendKt -> kotlin.coroutines.jvm.internal.RunSuspendKt:
# {"id":"sourceFile","fileName":"RunSuspend.kt"}
    18:20:void runSuspend(kotlin.jvm.functions.Function1) -> runSuspend
kotlin.coroutines.jvm.internal.SuspendFunction -> kotlin.coroutines.jvm.internal.SuspendFunction:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
kotlin.coroutines.jvm.internal.SuspendLambda -> kotlin.coroutines.jvm.internal.SuspendLambda:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    157:159:void <init>(int,kotlin.coroutines.Continuation) -> <init>
    160:160:void <init>(int) -> <init>
    157:157:int getArity() -> getArity
    163:166:java.lang.String toString() -> toString
kotlin.enums.EnumEntries -> kotlin.enums.EnumEntries:
# {"id":"sourceFile","fileName":"EnumEntries.kt"}
kotlin.enums.EnumEntriesKt -> kotlin.enums.EnumEntriesKt:
# {"id":"sourceFile","fileName":"EnumEntries.kt"}
    28:28:kotlin.enums.EnumEntries enumEntries(kotlin.jvm.functions.Function0) -> enumEntries
    32:32:kotlin.enums.EnumEntries enumEntries(java.lang.Enum[]) -> enumEntries
kotlin.enums.EnumEntriesList -> kotlin.enums.EnumEntriesList:
# {"id":"sourceFile","fileName":"EnumEntries.kt"}
    35:35:void <init>(java.lang.Enum[]) -> <init>
    34:34:boolean contains(java.lang.Object) -> contains
    56:56:boolean contains(java.lang.Enum) -> contains
    34:34:java.lang.Object get(int) -> get
    45:46:java.lang.Enum get(int) -> get
    42:42:int getSize() -> getSize
    34:34:int indexOf(java.lang.Object) -> indexOf
    64:65:int indexOf(java.lang.Enum) -> indexOf
    34:34:int lastIndexOf(java.lang.Object) -> lastIndexOf
    69:69:int lastIndexOf(java.lang.Enum) -> lastIndexOf
    74:74:java.lang.Object writeReplace() -> writeReplace
kotlin.enums.EnumEntriesSerializationProxy -> kotlin.enums.EnumEntriesSerializationProxy:
# {"id":"sourceFile","fileName":"EnumEntriesSerializationProxy.kt"}
    0:0:void <clinit>() -> <clinit>
    10:12:void <init>(java.lang.Enum[]) -> <init>
    20:20:java.lang.Object readResolve() -> readResolve
kotlin.enums.EnumEntriesSerializationProxy$Companion -> kotlin.enums.EnumEntriesSerializationProxy$Companion:
# {"id":"sourceFile","fileName":"EnumEntriesSerializationProxy.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    14:14:void <init>() -> <init>
kotlin.experimental.BitwiseOperationsKt -> kotlin.experimental.BitwiseOperationsKt:
# {"id":"sourceFile","fileName":"bitwiseOperations.kt"}
    0:0:byte and(byte,byte) -> and
    0:0:short and(short,short) -> and
    0:0:byte inv(byte) -> inv
    0:0:short inv(short) -> inv
    0:0:byte or(byte,byte) -> or
    0:0:short or(short,short) -> or
    0:0:byte xor(byte,byte) -> xor
    0:0:short xor(short,short) -> xor
kotlin.experimental.ExperimentalObjCName -> kotlin.experimental.ExperimentalObjCName:
# {"id":"sourceFile","fileName":"ExperimentalObjCName.kt"}
kotlin.experimental.ExperimentalObjCRefinement -> kotlin.experimental.ExperimentalObjCRefinement:
# {"id":"sourceFile","fileName":"ExperimentalObjCRefinement.kt"}
kotlin.experimental.ExperimentalTypeInference -> kotlin.experimental.ExperimentalTypeInference:
# {"id":"sourceFile","fileName":"inferenceMarker.kt"}
kotlin.internal.AccessibleLateinitPropertyLiteral -> kotlin.internal.AccessibleLateinitPropertyLiteral:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.internal.ContractsDsl -> kotlin.internal.ContractsDsl:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.internal.DynamicExtension -> kotlin.internal.DynamicExtension:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.internal.Exact -> kotlin.internal.Exact:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.internal.HidesMembers -> kotlin.internal.HidesMembers:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.internal.InlineOnly -> kotlin.internal.InlineOnly:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.internal.IntrinsicConstEvaluation -> kotlin.internal.IntrinsicConstEvaluation:
# {"id":"sourceFile","fileName":"InternalAnnotations.kt"}
kotlin.internal.LowPriorityInOverloadResolution -> kotlin.internal.LowPriorityInOverloadResolution:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.internal.NoInfer -> kotlin.internal.NoInfer:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.internal.OnlyInputTypes -> kotlin.internal.OnlyInputTypes:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.internal.PlatformDependent -> kotlin.internal.PlatformDependent:
# {"id":"sourceFile","fileName":"InternalAnnotations.kt"}
kotlin.internal.PlatformImplementations -> kotlin.internal.PlatformImplementations:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    13:13:void <init>() -> <init>
    32:32:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    45:45:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
    42:42:kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult,java.lang.String) -> getMatchResultNamedGroup
    37:38:java.util.List getSuppressed(java.lang.Throwable) -> getSuppressed
kotlin.internal.PlatformImplementations$ReflectThrowable -> kotlin.internal.PlatformImplementations$ReflectThrowable:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    23:27:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
kotlin.internal.PlatformImplementationsKt -> kotlin.internal.PlatformImplementationsKt:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    51:51:void <clinit>() -> <clinit>
    78:78:boolean apiVersionIsAtLeast(int,int,int) -> apiVersionIsAtLeast
    56:63:java.lang.Object castToBaseType(java.lang.Object) -> castToBaseType
kotlin.internal.ProgressionUtilKt -> kotlin.internal.ProgressionUtilKt:
# {"id":"sourceFile","fileName":"progressionUtil.kt"}
    21:21:int differenceModulo(int,int,int) -> differenceModulo
    25:25:long differenceModulo(long,long,long) -> differenceModulo
    46:48:int getProgressionLastElement(int,int,int) -> getProgressionLastElement
    69:71:long getProgressionLastElement(long,long,long) -> getProgressionLastElement
    10:10:int mod(int,int) -> mod
    15:15:long mod(long,long) -> mod
kotlin.internal.PureReifiable -> kotlin.internal.PureReifiable:
# {"id":"sourceFile","fileName":"InternalAnnotations.kt"}
kotlin.internal.RequireKotlin -> kotlin.internal.RequireKotlin:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.internal.RequireKotlin$Container -> kotlin.internal.RequireKotlin$Container:
# {"id":"sourceFile","fileName":"Annotations.kt"}
kotlin.internal.RequireKotlinVersionKind -> kotlin.internal.RequireKotlinVersionKind:
# {"id":"sourceFile","fileName":"Annotations.kt"}
    0:0:kotlin.internal.RequireKotlinVersionKind[] $values() -> $values
    102:104:void <clinit>() -> <clinit>
    100:100:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.internal.RequireKotlinVersionKind valueOf(java.lang.String) -> valueOf
    0:0:kotlin.internal.RequireKotlinVersionKind[] values() -> values
kotlin.internal.UProgressionUtilKt -> kotlin.internal.UProgressionUtilKt:
# {"id":"sourceFile","fileName":"UProgressionUtil.kt"}
    10:12:int differenceModulo-WZ9TVnA(int,int,int) -> differenceModulo-WZ9TVnA
    16:18:long differenceModulo-sambcqE(long,long,long) -> differenceModulo-sambcqE
    64:66:long getProgressionLastElement-7ftBX0g(long,long,long) -> getProgressionLastElement-7ftBX0g
    40:42:int getProgressionLastElement-Nkh28Cs(int,int,int) -> getProgressionLastElement-Nkh28Cs
kotlin.internal.jdk7.JDK7PlatformImplementations -> kotlin.internal.jdk7.JDK7PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK7PlatformImplementations.kt"}
    11:11:void <init>() -> <init>
    27:30:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    33:36:java.util.List getSuppressed(java.lang.Throwable) -> getSuppressed
    22:22:boolean sdkIsNullOrAtLeast(int) -> sdkIsNullOrAtLeast
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion -> kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion:
# {"id":"sourceFile","fileName":"JDK7PlatformImplementations.kt"}
    16:19:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
kotlin.internal.jdk8.JDK8PlatformImplementations -> kotlin.internal.jdk8.JDK8PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK8PlatformImplementations.kt"}
    27:27:void <init>() -> <init>
    58:58:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
    43:47:kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult,java.lang.String) -> getMatchResultNamedGroup
    40:40:boolean sdkIsNullOrAtLeast(int) -> sdkIsNullOrAtLeast
kotlin.internal.jdk8.JDK8PlatformImplementations$$ExternalSyntheticApiModelOutline0 -> kotlin.internal.jdk8.JDK8PlatformImplementations$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.internal.jdk8.JDK8PlatformImplementations$$InternalSyntheticApiModelOutline$1$f9779c48389bcee564fdd42a3f0811e14a84503efe1131150d2b70c1d578c07a$0.m(java.util.regex.Matcher,java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.internal.jdk8.JDK8PlatformImplementations$$ExternalSyntheticApiModelOutline1 -> kotlin.internal.jdk8.JDK8PlatformImplementations$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.internal.jdk8.JDK8PlatformImplementations$$InternalSyntheticApiModelOutline$1$f9779c48389bcee564fdd42a3f0811e14a84503efe1131150d2b70c1d578c07a$1.m(java.util.regex.Matcher,java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.internal.jdk8.JDK8PlatformImplementations$$ExternalSyntheticApiModelOutline2 -> kotlin.internal.jdk8.JDK8PlatformImplementations$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String kotlin.internal.jdk8.JDK8PlatformImplementations$$InternalSyntheticApiModelOutline$1$f9779c48389bcee564fdd42a3f0811e14a84503efe1131150d2b70c1d578c07a$2.m(java.util.regex.Matcher,java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion -> kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion:
# {"id":"sourceFile","fileName":"JDK8PlatformImplementations.kt"}
    34:37:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
kotlin.io.AccessDeniedException -> kotlin.io.AccessDeniedException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    46:46:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    50:50:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
kotlin.io.ByteStreamsKt -> kotlin.io.ByteStreamsKt:
# {"id":"sourceFile","fileName":"IOStreams.kt"}
    72:72:java.io.BufferedInputStream buffered(java.io.InputStream,int) -> buffered
    88:88:java.io.BufferedOutputStream buffered(java.io.OutputStream,int) -> buffered
    71:72:java.io.BufferedInputStream buffered$default(java.io.InputStream,int,int,java.lang.Object) -> buffered$default
    87:88:java.io.BufferedOutputStream buffered$default(java.io.OutputStream,int,int,java.lang.Object) -> buffered$default
    80:80:java.io.BufferedReader bufferedReader(java.io.InputStream,java.nio.charset.Charset) -> bufferedReader
    80:80:java.io.BufferedReader bufferedReader$default(java.io.InputStream,java.nio.charset.Charset,int,java.lang.Object) -> bufferedReader$default
    96:96:java.io.BufferedWriter bufferedWriter(java.io.OutputStream,java.nio.charset.Charset) -> bufferedWriter
    96:96:java.io.BufferedWriter bufferedWriter$default(java.io.OutputStream,java.nio.charset.Charset,int,java.lang.Object) -> bufferedWriter$default
    50:50:java.io.ByteArrayInputStream byteInputStream(java.lang.String,java.nio.charset.Charset) -> byteInputStream
    50:50:java.io.ByteArrayInputStream byteInputStream$default(java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> byteInputStream$default
    105:110:long copyTo(java.io.InputStream,java.io.OutputStream,int) -> copyTo
    103:103:long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object) -> copyTo$default
    56:56:java.io.ByteArrayInputStream inputStream(byte[]) -> inputStream
    64:64:java.io.ByteArrayInputStream inputStream(byte[],int,int) -> inputStream
    16:16:kotlin.collections.ByteIterator iterator(java.io.BufferedInputStream) -> iterator
    123:125:byte[] readBytes(java.io.InputStream,int) -> readBytes
    135:137:byte[] readBytes(java.io.InputStream) -> readBytes
    122:122:byte[] readBytes$default(java.io.InputStream,int,int,java.lang.Object) -> readBytes$default
    76:76:java.io.InputStreamReader reader(java.io.InputStream,java.nio.charset.Charset) -> reader
    76:76:java.io.InputStreamReader reader$default(java.io.InputStream,java.nio.charset.Charset,int,java.lang.Object) -> reader$default
    92:92:java.io.OutputStreamWriter writer(java.io.OutputStream,java.nio.charset.Charset) -> writer
    92:92:java.io.OutputStreamWriter writer$default(java.io.OutputStream,java.nio.charset.Charset,int,java.lang.Object) -> writer$default
kotlin.io.ByteStreamsKt$iterator$1 -> kotlin.io.ByteStreamsKt$iterator$1:
# {"id":"sourceFile","fileName":"IOStreams.kt"}
    16:18:void <init>(java.io.BufferedInputStream) -> <init>
    22:22:boolean getFinished() -> getFinished
    18:18:int getNextByte() -> getNextByte
    20:20:boolean getNextPrepared() -> getNextPrepared
    33:34:boolean hasNext() -> hasNext
    38:42:byte nextByte() -> nextByte
    25:28:void prepareNext() -> prepareNext
    22:22:void setFinished(boolean) -> setFinished
    18:18:void setNextByte(int) -> setNextByte
    20:20:void setNextPrepared(boolean) -> setNextPrepared
kotlin.io.CloseableKt -> kotlin.io.CloseableKt:
# {"id":"sourceFile","fileName":"Closeable.kt"}
    56:61:void closeFinally(java.io.Closeable,java.lang.Throwable) -> closeFinally
    27:39:java.lang.Object use(java.io.Closeable,kotlin.jvm.functions.Function1) -> use
kotlin.io.ConsoleKt -> kotlin.io.ConsoleKt:
# {"id":"sourceFile","fileName":"Console.kt"}
    20:20:void print(java.lang.Object) -> print
    26:26:void print(int) -> print
    32:32:void print(long) -> print
    38:38:void print(byte) -> print
    44:44:void print(short) -> print
    50:50:void print(char) -> print
    56:56:void print(boolean) -> print
    62:62:void print(float) -> print
    68:68:void print(double) -> print
    74:74:void print(char[]) -> print
    80:80:void println(java.lang.Object) -> println
    86:86:void println(int) -> println
    92:92:void println(long) -> println
    98:98:void println(byte) -> println
    104:104:void println(short) -> println
    110:110:void println(char) -> println
    116:116:void println(boolean) -> println
    122:122:void println(float) -> println
    128:128:void println(double) -> println
    134:134:void println(char[]) -> println
    140:140:void println() -> println
    170:170:java.lang.String readLine() -> readLine
    152:152:java.lang.String readln() -> readln
    163:163:java.lang.String readlnOrNull() -> readlnOrNull
kotlin.io.ConstantsKt -> kotlin.io.ConstantsKt:
# {"id":"sourceFile","fileName":"Constants.kt"}
kotlin.io.ExceptionsKt -> kotlin.io.ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    1:1:java.lang.String access$constructMessage(java.io.File,java.io.File,java.lang.String) -> access$constructMessage
    12:19:java.lang.String constructMessage(java.io.File,java.io.File,java.lang.String) -> constructMessage
kotlin.io.ExposingBufferByteArrayOutputStream -> kotlin.io.ExposingBufferByteArrayOutputStream:
# {"id":"sourceFile","fileName":"FileReadWrite.kt"}
    98:98:void <init>(int) -> <init>
    99:99:byte[] getBuffer() -> getBuffer
kotlin.io.FileAlreadyExistsException -> kotlin.io.FileAlreadyExistsException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    37:37:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    41:41:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
kotlin.io.FilePathComponents -> kotlin.io.FilePathComponents:
# {"id":"sourceFile","fileName":"FilePathComponents.kt"}
    94:95:void <init>(java.io.File,java.util.List) -> <init>
    0:0:java.io.File component1() -> component1
    0:0:java.util.List component2() -> component2
    0:0:kotlin.io.FilePathComponents copy(java.io.File,java.util.List) -> copy
    0:0:kotlin.io.FilePathComponents copy$default(kotlin.io.FilePathComponents,java.io.File,java.util.List,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    95:95:java.io.File getRoot() -> getRoot
    100:100:java.lang.String getRootName() -> getRootName
    95:95:java.util.List getSegments() -> getSegments
    110:110:int getSize() -> getSize
    0:0:int hashCode() -> hashCode
    105:105:boolean isRooted() -> isRooted
    117:120:java.io.File subPath(int,int) -> subPath
    0:0:java.lang.String toString() -> toString
kotlin.io.FileSystemException -> kotlin.io.FileSystemException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    28:28:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    29:32:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
    29:29:java.io.File getFile() -> getFile
    30:30:java.io.File getOther() -> getOther
    31:31:java.lang.String getReason() -> getReason
kotlin.io.FileTreeWalk -> kotlin.io.FileTreeWalk:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
    37:43:void <init>(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int) -> <init>
    37:39:void <init>(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    46:46:void <init>(java.io.File,kotlin.io.FileWalkDirection) -> <init>
    46:46:void <init>(java.io.File,kotlin.io.FileWalkDirection,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    37:37:kotlin.io.FileWalkDirection access$getDirection$p(kotlin.io.FileTreeWalk) -> access$getDirection$p
    37:37:int access$getMaxDepth$p(kotlin.io.FileTreeWalk) -> access$getMaxDepth$p
    37:37:kotlin.jvm.functions.Function1 access$getOnEnter$p(kotlin.io.FileTreeWalk) -> access$getOnEnter$p
    37:37:kotlin.jvm.functions.Function2 access$getOnFail$p(kotlin.io.FileTreeWalk) -> access$getOnFail$p
    37:37:kotlin.jvm.functions.Function1 access$getOnLeave$p(kotlin.io.FileTreeWalk) -> access$getOnLeave$p
    37:37:java.io.File access$getStart$p(kotlin.io.FileTreeWalk) -> access$getStart$p
    50:50:java.util.Iterator iterator() -> iterator
    249:250:kotlin.io.FileTreeWalk maxDepth(int) -> maxDepth
    220:220:kotlin.io.FileTreeWalk onEnter(kotlin.jvm.functions.Function1) -> onEnter
    236:236:kotlin.io.FileTreeWalk onFail(kotlin.jvm.functions.Function2) -> onFail
    227:227:kotlin.io.FileTreeWalk onLeave(kotlin.jvm.functions.Function1) -> onLeave
kotlin.io.FileTreeWalk$DirectoryState -> kotlin.io.FileTreeWalk$DirectoryState:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
    59:59:void <init>(java.io.File) -> <init>
kotlin.io.FileTreeWalk$FileTreeWalkIterator -> kotlin.io.FileTreeWalk$FileTreeWalkIterator:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
    66:75:void <init>(kotlin.io.FileTreeWalk) -> <init>
    80:84:void computeNext() -> computeNext
    89:91:kotlin.io.FileTreeWalk$DirectoryState directoryState(java.io.File) -> directoryState
    97:110:java.io.File gotoNext() -> gotoNext
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState -> kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
    117:117:void <init>(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File) -> <init>
    129:149:java.io.File step() -> step
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState -> kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
    196:196:void <init>(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File) -> <init>
    205:207:java.io.File step() -> step
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState -> kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
    156:156:void <init>(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File) -> <init>
    166:190:java.io.File step() -> step
kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings -> kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.io.FileTreeWalk$WalkState -> kotlin.io.FileTreeWalk$WalkState:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
    53:53:void <init>(java.io.File) -> <init>
    53:53:java.io.File getRoot() -> getRoot
kotlin.io.FileWalkDirection -> kotlin.io.FileWalkDirection:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
    0:0:kotlin.io.FileWalkDirection[] $values() -> $values
    22:24:void <clinit>() -> <clinit>
    20:20:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.io.FileWalkDirection valueOf(java.lang.String) -> valueOf
    0:0:kotlin.io.FileWalkDirection[] values() -> values
kotlin.io.FilesKt -> kotlin.io.FilesKt:
    1:1:void <init>() -> <init>
kotlin.io.FilesKt__FilePathComponentsKt -> kotlin.io.FilesKt__FilePathComponentsKt:
# {"id":"sourceFile","fileName":"FilePathComponents.kt"}
    0:0:void <init>() -> <init>
    77:77:java.io.File getRoot(java.io.File) -> getRoot
    28:52:int getRootLength$FilesKt__FilePathComponentsKt(java.lang.String) -> getRootLength$FilesKt__FilePathComponentsKt
    70:70:java.lang.String getRootName(java.io.File) -> getRootName
    85:85:boolean isRooted(java.io.File) -> isRooted
    147:147:java.io.File subPath(java.io.File,int,int) -> subPath
    129:151:kotlin.io.FilePathComponents toComponents(java.io.File) -> toComponents
kotlin.io.FilesKt__FileReadWriteKt -> kotlin.io.FilesKt__FileReadWriteKt:
# {"id":"sourceFile","fileName":"FileReadWrite.kt"}
    0:0:void <init>() -> <init>
    115:115:void appendBytes(java.io.File,byte[]) -> appendBytes
    142:142:void appendText(java.io.File,java.lang.String,java.nio.charset.Charset) -> appendText
    142:142:void appendText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> appendText$default
    31:31:java.io.BufferedReader bufferedReader(java.io.File,java.nio.charset.Charset,int) -> bufferedReader
    30:31:java.io.BufferedReader bufferedReader$default(java.io.File,java.nio.charset.Charset,int,int,java.lang.Object) -> bufferedReader$default
    47:47:java.io.BufferedWriter bufferedWriter(java.io.File,java.nio.charset.Charset,int) -> bufferedWriter
    46:47:java.io.BufferedWriter bufferedWriter$default(java.io.File,java.nio.charset.Charset,int,int,java.lang.Object) -> bufferedWriter$default
    153:153:void forEachBlock(java.io.File,kotlin.jvm.functions.Function2) -> forEachBlock
    165:176:void forEachBlock(java.io.File,int,kotlin.jvm.functions.Function2) -> forEachBlock
    190:190:void forEachLine(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1) -> forEachLine
    188:188:void forEachLine$default(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object) -> forEachLine$default
    198:198:java.io.FileInputStream inputStream(java.io.File) -> inputStream
    206:206:java.io.FileOutputStream outputStream(java.io.File) -> outputStream
    54:54:java.io.PrintWriter printWriter(java.io.File,java.nio.charset.Charset) -> printWriter
    53:54:java.io.PrintWriter printWriter$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> printWriter$default
    63:94:byte[] readBytes(java.io.File) -> readBytes
    218:219:java.util.List readLines(java.io.File,java.nio.charset.Charset) -> readLines
    217:217:java.util.List readLines$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> readLines$default
    125:125:java.lang.String readText(java.io.File,java.nio.charset.Charset) -> readText
    125:125:java.lang.String readText$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> readText$default
    22:22:java.io.InputStreamReader reader(java.io.File,java.nio.charset.Charset) -> reader
    21:22:java.io.InputStreamReader reader$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> reader$default
    231:231:java.lang.Object useLines(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1) -> useLines
    230:234:java.lang.Object useLines$default(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object) -> useLines$default
    108:108:void writeBytes(java.io.File,byte[]) -> writeBytes
    134:134:void writeText(java.io.File,java.lang.String,java.nio.charset.Charset) -> writeText
    134:134:void writeText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> writeText$default
    38:38:java.io.OutputStreamWriter writer(java.io.File,java.nio.charset.Charset) -> writer
    37:38:java.io.OutputStreamWriter writer$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> writer$default
kotlin.io.FilesKt__FileReadWriteKt$readLines$1 -> kotlin.io.FilesKt__FileReadWriteKt$readLines$1:
# {"id":"sourceFile","fileName":"FileReadWrite.kt"}
    0:0:void <init>(java.util.ArrayList) -> <init>
    219:219:java.lang.Object invoke(java.lang.Object) -> invoke
    219:219:void invoke(java.lang.String) -> invoke
kotlin.io.FilesKt__FileTreeWalkKt -> kotlin.io.FilesKt__FileTreeWalkKt:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
    0:0:void <init>() -> <init>
    260:260:kotlin.io.FileTreeWalk walk(java.io.File,kotlin.io.FileWalkDirection) -> walk
    259:259:kotlin.io.FileTreeWalk walk$default(java.io.File,kotlin.io.FileWalkDirection,int,java.lang.Object) -> walk$default
    272:272:kotlin.io.FileTreeWalk walkBottomUp(java.io.File) -> walkBottomUp
    266:266:kotlin.io.FileTreeWalk walkTopDown(java.io.File) -> walkTopDown
kotlin.io.FilesKt__UtilsKt -> kotlin.io.FilesKt__UtilsKt:
# {"id":"sourceFile","fileName":"Utils.kt"}
    0:0:void <init>() -> <init>
    293:329:boolean copyRecursively(java.io.File,java.io.File,boolean,kotlin.jvm.functions.Function2) -> copyRecursively
    288:291:boolean copyRecursively$default(java.io.File,java.io.File,boolean,kotlin.jvm.functions.Function2,int,java.lang.Object) -> copyRecursively$default
    218:237:java.io.File copyTo(java.io.File,java.io.File,boolean,int) -> copyTo
    217:217:java.io.File copyTo$default(java.io.File,java.io.File,boolean,int,int,java.lang.Object) -> copyTo$default
    45:50:java.io.File createTempDir(java.lang.String,java.lang.String,java.io.File) -> createTempDir
    44:44:java.io.File createTempDir$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object) -> createTempDir$default
    85:85:java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File) -> createTempFile
    84:84:java.io.File createTempFile$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object) -> createTempFile$default
    347:476:boolean deleteRecursively(java.io.File) -> deleteRecursively
    384:390:boolean endsWith(java.io.File,java.io.File) -> endsWith
    401:401:boolean endsWith(java.io.File,java.lang.String) -> endsWith
    92:92:java.lang.String getExtension(java.io.File) -> getExtension
    99:99:java.lang.String getInvariantSeparatorsPath(java.io.File) -> getInvariantSeparatorsPath
    105:105:java.lang.String getNameWithoutExtension(java.io.File) -> getNameWithoutExtension
    410:410:java.io.File normalize(java.io.File) -> normalize
    413:413:kotlin.io.FilePathComponents normalize$FilesKt__UtilsKt(kotlin.io.FilePathComponents) -> normalize$FilesKt__UtilsKt
    416:421:java.util.List normalize$FilesKt__UtilsKt(java.util.List) -> normalize$FilesKt__UtilsKt
    128:128:java.io.File relativeTo(java.io.File,java.io.File) -> relativeTo
    148:148:java.io.File relativeToOrNull(java.io.File,java.io.File) -> relativeToOrNull
    138:138:java.io.File relativeToOrSelf(java.io.File,java.io.File) -> relativeToOrSelf
    437:440:java.io.File resolve(java.io.File,java.io.File) -> resolve
    450:450:java.io.File resolve(java.io.File,java.lang.String) -> resolve
    460:462:java.io.File resolveSibling(java.io.File,java.io.File) -> resolveSibling
    472:472:java.io.File resolveSibling(java.io.File,java.lang.String) -> resolveSibling
    357:362:boolean startsWith(java.io.File,java.io.File) -> startsWith
    372:372:boolean startsWith(java.io.File,java.lang.String) -> startsWith
    117:117:java.lang.String toRelativeString(java.io.File,java.io.File) -> toRelativeString
    153:193:java.lang.String toRelativeStringOrNull$FilesKt__UtilsKt(java.io.File,java.io.File) -> toRelativeStringOrNull$FilesKt__UtilsKt
kotlin.io.FilesKt__UtilsKt$copyRecursively$1 -> kotlin.io.FilesKt__UtilsKt$copyRecursively$1:
# {"id":"sourceFile","fileName":"Utils.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    291:291:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    291:291:java.lang.Void invoke(java.io.File,java.io.IOException) -> invoke
kotlin.io.FilesKt__UtilsKt$copyRecursively$2 -> kotlin.io.FilesKt__UtilsKt$copyRecursively$2:
# {"id":"sourceFile","fileName":"Utils.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function2) -> <init>
    299:299:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    299:299:void invoke(java.io.File,java.io.IOException) -> invoke
kotlin.io.LineReader -> kotlin.io.LineReader:
# {"id":"sourceFile","fileName":"Console.kt"}
    177:181:void <clinit>() -> <clinit>
    173:173:void <init>() -> <init>
    257:259:int compactBytes() -> compactBytes
    241:252:int decode(boolean) -> decode
    264:269:int decodeEndOfInput(int,int) -> decodeEndOfInput
    191:235:java.lang.String readLine(java.io.InputStream,java.nio.charset.Charset) -> readLine
    288:290:void resetAll() -> resetAll
    295:296:void trimStringBuilder() -> trimStringBuilder
    275:283:void updateCharset(java.nio.charset.Charset) -> updateCharset
kotlin.io.LinesSequence -> kotlin.io.LinesSequence:
# {"id":"sourceFile","fileName":"ReadWrite.kt"}
    71:71:void <init>(java.io.BufferedReader) -> <init>
    71:71:java.io.BufferedReader access$getReader$p(kotlin.io.LinesSequence) -> access$getReader$p
    73:73:java.util.Iterator iterator() -> iterator
kotlin.io.LinesSequence$iterator$1 -> kotlin.io.LinesSequence$iterator$1:
# {"id":"sourceFile","fileName":"ReadWrite.kt"}
    73:73:void <init>(kotlin.io.LinesSequence) -> <init>
    78:82:boolean hasNext() -> hasNext
    73:73:java.lang.Object next() -> next
    86:91:java.lang.String next() -> next
    0:0:void remove() -> remove
kotlin.io.NoSuchFileException -> kotlin.io.NoSuchFileException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    55:55:void <init>(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    59:59:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
kotlin.io.OnErrorAction -> kotlin.io.OnErrorAction:
# {"id":"sourceFile","fileName":"Utils.kt"}
    0:0:kotlin.io.OnErrorAction[] $values() -> $values
    251:254:void <clinit>() -> <clinit>
    249:249:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.io.OnErrorAction valueOf(java.lang.String) -> valueOf
    0:0:kotlin.io.OnErrorAction[] values() -> values
kotlin.io.ReadAfterEOFException -> kotlin.io.ReadAfterEOFException:
# {"id":"sourceFile","fileName":"ioH.kt"}
    40:40:void <init>(java.lang.String) -> <init>
kotlin.io.SerializableKt -> kotlin.io.SerializableKt:
# {"id":"sourceFile","fileName":"Serializable.kt"}
    0:0:void Serializable$annotations() -> Serializable$annotations
kotlin.io.TerminateException -> kotlin.io.TerminateException:
# {"id":"sourceFile","fileName":"Utils.kt"}
    258:258:void <init>(java.io.File) -> <init>
kotlin.io.TextStreamsKt -> kotlin.io.TextStreamsKt:
# {"id":"sourceFile","fileName":"ReadWrite.kt"}
    20:20:java.io.BufferedReader buffered(java.io.Reader,int) -> buffered
    25:25:java.io.BufferedWriter buffered(java.io.Writer,int) -> buffered
    19:20:java.io.BufferedReader buffered$default(java.io.Reader,int,int,java.lang.Object) -> buffered$default
    24:25:java.io.BufferedWriter buffered$default(java.io.Writer,int,int,java.lang.Object) -> buffered$default
    121:126:long copyTo(java.io.Reader,java.io.Writer,int) -> copyTo
    119:119:long copyTo$default(java.io.Reader,java.io.Writer,int,int,java.lang.Object) -> copyTo$default
    33:154:void forEachLine(java.io.Reader,kotlin.jvm.functions.Function1) -> forEachLine
    69:69:kotlin.sequences.Sequence lineSequence(java.io.BufferedReader) -> lineSequence
    149:149:byte[] readBytes(java.net.URL) -> readBytes
    41:42:java.util.List readLines(java.io.Reader) -> readLines
    105:107:java.lang.String readText(java.io.Reader) -> readText
    140:140:java.lang.String readText(java.net.URL,java.nio.charset.Charset) -> readText
    140:140:java.lang.String readText$default(java.net.URL,java.nio.charset.Charset,int,java.lang.Object) -> readText$default
    56:56:java.io.StringReader reader(java.lang.String) -> reader
    52:52:java.lang.Object useLines(java.io.Reader,kotlin.jvm.functions.Function1) -> useLines
kotlin.io.TextStreamsKt$readLines$1 -> kotlin.io.TextStreamsKt$readLines$1:
# {"id":"sourceFile","fileName":"ReadWrite.kt"}
    0:0:void <init>(java.util.ArrayList) -> <init>
    42:42:java.lang.Object invoke(java.lang.Object) -> invoke
    42:42:void invoke(java.lang.String) -> invoke
kotlin.io.encoding.Base64 -> kotlin.io.encoding.Base64:
# {"id":"sourceFile","fileName":"Base64.kt"}
    541:565:void <clinit>() -> <clinit>
    0:0:void <init>(boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    20:27:void <init>(boolean,boolean) -> <init>
    20:20:kotlin.io.encoding.Base64 access$getMime$cp() -> access$getMime$cp
    20:20:byte[] access$getMimeLineSeparatorSymbols$cp() -> access$getMimeLineSeparatorSymbols$cp
    20:20:kotlin.io.encoding.Base64 access$getUrlSafe$cp() -> access$getUrlSafe$cp
    457:461:java.lang.String bytesToStringImpl$kotlin_stdlib(byte[]) -> bytesToStringImpl$kotlin_stdlib
    439:450:byte[] charsToBytesImpl$kotlin_stdlib(java.lang.CharSequence,int,int) -> charsToBytesImpl$kotlin_stdlib
    505:511:void checkDestinationBounds(int,int,int) -> checkDestinationBounds
    500:500:void checkSourceBounds$kotlin_stdlib(int,int,int) -> checkSourceBounds$kotlin_stdlib
    153:160:byte[] decode(byte[],int,int) -> decode
    219:220:byte[] decode(java.lang.CharSequence,int,int) -> decode
    152:152:byte[] decode$default(kotlin.io.encoding.Base64,byte[],int,int,int,java.lang.Object) -> decode$default
    218:218:byte[] decode$default(kotlin.io.encoding.Base64,java.lang.CharSequence,int,int,int,java.lang.Object) -> decode$default
    343:403:int decodeImpl(byte[],byte[],int,int,int) -> decodeImpl
    194:197:int decodeIntoByteArray(byte[],byte[],int,int,int) -> decodeIntoByteArray
    252:253:int decodeIntoByteArray(java.lang.CharSequence,byte[],int,int,int) -> decodeIntoByteArray
    187:192:int decodeIntoByteArray$default(kotlin.io.encoding.Base64,byte[],byte[],int,int,int,int,java.lang.Object) -> decodeIntoByteArray$default
    245:250:int decodeIntoByteArray$default(kotlin.io.encoding.Base64,java.lang.CharSequence,byte[],int,int,int,int,java.lang.Object) -> decodeIntoByteArray$default
    415:435:int decodeSize(byte[],int,int) -> decodeSize
    103:103:java.lang.String encode(byte[],int,int) -> encode
    102:102:java.lang.String encode$default(kotlin.io.encoding.Base64,byte[],int,int,int,java.lang.Object) -> encode$default
    81:81:int encodeIntoByteArray(byte[],byte[],int,int,int) -> encodeIntoByteArray
    74:79:int encodeIntoByteArray$default(kotlin.io.encoding.Base64,byte[],byte[],int,int,int,int,java.lang.Object) -> encodeIntoByteArray$default
    274:320:int encodeIntoByteArrayImpl$kotlin_stdlib(byte[],byte[],int,int,int) -> encodeIntoByteArrayImpl$kotlin_stdlib
    327:331:int encodeSize(int) -> encodeSize
    129:130:java.lang.Appendable encodeToAppendable(byte[],java.lang.Appendable,int,int) -> encodeToAppendable
    123:127:java.lang.Appendable encodeToAppendable$default(kotlin.io.encoding.Base64,byte[],java.lang.Appendable,int,int,int,java.lang.Object) -> encodeToAppendable$default
    51:51:byte[] encodeToByteArray(byte[],int,int) -> encodeToByteArray
    50:50:byte[] encodeToByteArray$default(kotlin.io.encoding.Base64,byte[],int,int,int,java.lang.Object) -> encodeToByteArray$default
    259:263:byte[] encodeToByteArrayImpl$kotlin_stdlib(byte[],int,int) -> encodeToByteArrayImpl$kotlin_stdlib
    467:480:int handlePaddingSymbol(byte[],int,int,int) -> handlePaddingSymbol
    24:24:boolean isMimeScheme$kotlin_stdlib() -> isMimeScheme$kotlin_stdlib
    23:23:boolean isUrlSafe$kotlin_stdlib() -> isUrlSafe$kotlin_stdlib
    485:491:int skipIllegalSymbolsIfMime(byte[],int,int) -> skipIllegalSymbolsIfMime
kotlin.io.encoding.Base64$Default -> kotlin.io.encoding.Base64$Default:
# {"id":"sourceFile","fileName":"Base64.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    529:529:void <init>() -> <init>
    565:565:kotlin.io.encoding.Base64 getMime() -> getMime
    541:541:byte[] getMimeLineSeparatorSymbols$kotlin_stdlib() -> getMimeLineSeparatorSymbols$kotlin_stdlib
    553:553:kotlin.io.encoding.Base64 getUrlSafe() -> getUrlSafe
kotlin.io.encoding.Base64JVMKt -> kotlin.io.encoding.Base64JVMKt:
# {"id":"sourceFile","fileName":"Base64JVM.kt"}
    12:17:byte[] platformCharsToBytes(kotlin.io.encoding.Base64,java.lang.CharSequence,int,int) -> platformCharsToBytes
    54:54:int platformEncodeIntoByteArray(kotlin.io.encoding.Base64,byte[],byte[],int,int,int) -> platformEncodeIntoByteArray
    72:72:byte[] platformEncodeToByteArray(kotlin.io.encoding.Base64,byte[],int,int) -> platformEncodeToByteArray
    33:34:java.lang.String platformEncodeToString(kotlin.io.encoding.Base64,byte[],int,int) -> platformEncodeToString
kotlin.io.encoding.Base64Kt -> kotlin.io.encoding.Base64Kt:
# {"id":"sourceFile","fileName":"Base64.kt"}
    572:654:void <clinit>() -> <clinit>
    1:1:int[] access$getBase64DecodeMap$p() -> access$getBase64DecodeMap$p
    1:1:byte[] access$getBase64EncodeMap$p() -> access$getBase64EncodeMap$p
    1:1:int[] access$getBase64UrlDecodeMap$p() -> access$getBase64UrlDecodeMap$p
    1:1:byte[] access$getBase64UrlEncodeMap$p() -> access$getBase64UrlEncodeMap$p
    0:0:void getBase64DecodeMap$annotations() -> getBase64DecodeMap$annotations
    0:0:void getBase64EncodeMap$annotations() -> getBase64EncodeMap$annotations
    0:0:void getBase64UrlDecodeMap$annotations() -> getBase64UrlDecodeMap$annotations
    0:0:void getBase64UrlEncodeMap$annotations() -> getBase64UrlEncodeMap$annotations
    612:612:boolean isInMimeAlphabet(int) -> isInMimeAlphabet
kotlin.io.encoding.DecodeInputStream -> kotlin.io.encoding.DecodeInputStream:
# {"id":"sourceFile","fileName":"Base64IOStream.kt"}
    65:74:void <init>(java.io.InputStream,kotlin.io.encoding.Base64) -> <init>
    149:151:void close() -> close
    173:180:void copyByteBufferInto(byte[],int,int) -> copyByteBufferInto
    158:168:int decodeSymbolBufferInto(byte[],int,int,int) -> decodeSymbolBufferInto
    78:78:int getByteBufferLength() -> getByteBufferLength
    202:208:int handlePaddingSymbol(int) -> handlePaddingSymbol
    81:90:int read() -> read
    95:142:int read(byte[],int,int) -> read
    218:225:int readNextSymbol() -> readNextSymbol
    184:186:void resetByteBufferIfEmpty() -> resetByteBufferIfEmpty
    192:197:void shiftByteBufferToStartIfNeeded() -> shiftByteBufferToStartIfNeeded
kotlin.io.encoding.EncodeOutputStream -> kotlin.io.encoding.EncodeOutputStream:
# {"id":"sourceFile","fileName":"Base64IOStream.kt"}
    233:242:void <init>(java.io.OutputStream,kotlin.io.encoding.Base64) -> <init>
    341:341:void checkOpen() -> checkOpen
    295:300:void close() -> close
    307:311:int copyIntoByteBuffer(byte[],int,int) -> copyIntoByteBuffer
    317:319:void encodeByteBufferIntoOutput() -> encodeByteBufferIntoOutput
    323:336:int encodeIntoOutput(byte[],int,int) -> encodeIntoOutput
    290:291:void flush() -> flush
    246:249:void write(int) -> write
    254:286:void write(byte[],int,int) -> write
kotlin.io.encoding.ExperimentalEncodingApi -> kotlin.io.encoding.ExperimentalEncodingApi:
# {"id":"sourceFile","fileName":"ExperimentalEncodingApi.kt"}
kotlin.io.encoding.StreamEncodingKt -> kotlin.io.encoding.StreamEncodingKt:
# {"id":"sourceFile","fileName":"Base64IOStream.kt"}
    1:1:void <init>() -> <init>
kotlin.io.encoding.StreamEncodingKt__Base64IOStreamKt -> kotlin.io.encoding.StreamEncodingKt__Base64IOStreamKt:
# {"id":"sourceFile","fileName":"Base64IOStream.kt"}
    0:0:void <init>() -> <init>
    40:40:java.io.InputStream decodingWith(java.io.InputStream,kotlin.io.encoding.Base64) -> decodingWith
    59:59:java.io.OutputStream encodingWith(java.io.OutputStream,kotlin.io.encoding.Base64) -> encodingWith
kotlin.io.path.CopyActionContext -> kotlin.io.path.CopyActionContext:
# {"id":"sourceFile","fileName":"CopyActionContext.kt"}
kotlin.io.path.CopyActionResult -> kotlin.io.path.CopyActionResult:
# {"id":"sourceFile","fileName":"CopyActionResult.kt"}
    0:0:kotlin.io.path.CopyActionResult[] $values() -> $values
    19:30:void <clinit>() -> <clinit>
    13:13:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.io.path.CopyActionResult valueOf(java.lang.String) -> valueOf
    0:0:kotlin.io.path.CopyActionResult[] values() -> values
kotlin.io.path.DefaultCopyActionContext -> kotlin.io.path.DefaultCopyActionContext:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <clinit>() -> <clinit>
    216:216:void <init>() -> <init>
    219:226:kotlin.io.path.CopyActionResult copyToIgnoringExistingDirectory(java.nio.file.Path,java.nio.file.Path,boolean) -> copyToIgnoringExistingDirectory
kotlin.io.path.DefaultCopyActionContext$$ExternalSyntheticApiModelOutline0 -> kotlin.io.path.DefaultCopyActionContext$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.DefaultCopyActionContext$$InternalSyntheticApiModelOutline$1$154b4508810382ff3db1419d026eefbf1acae904faf334e624387f7299d6c20f$0.m(java.nio.file.Path,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.DefaultCopyActionContext$$ExternalSyntheticApiModelOutline1 -> kotlin.io.path.DefaultCopyActionContext$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.LinkOption kotlin.io.path.DefaultCopyActionContext$$InternalSyntheticApiModelOutline$1$154b4508810382ff3db1419d026eefbf1acae904faf334e624387f7299d6c20f$1.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.DefaultCopyActionContext$$ExternalSyntheticApiModelOutline2 -> kotlin.io.path.DefaultCopyActionContext$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.DefaultCopyActionContext$$InternalSyntheticApiModelOutline$1$154b4508810382ff3db1419d026eefbf1acae904faf334e624387f7299d6c20f$3.m(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.DirectoryEntriesReader -> kotlin.io.path.DirectoryEntriesReader:
# {"id":"sourceFile","fileName":"PathTreeWalk.kt"}
    155:157:void <init>(boolean) -> <init>
    155:155:boolean getFollowLinks() -> getFollowLinks
    155:155:java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    167:169:java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    160:163:java.util.List readEntries(kotlin.io.path.PathNode) -> readEntries
    155:155:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    173:175:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> visitFile
kotlin.io.path.DirectoryEntriesReader$$ExternalSyntheticApiModelOutline0 -> kotlin.io.path.DirectoryEntriesReader$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object kotlin.io.path.DirectoryEntriesReader$$InternalSyntheticApiModelOutline$1$70a2b410071e013e79690bd78dda506beb911bff4997db144f915dfb595b094f$0.m(java.nio.file.attribute.BasicFileAttributes) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.DirectoryEntriesReader$$ExternalSyntheticApiModelOutline1 -> kotlin.io.path.DirectoryEntriesReader$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.DirectoryEntriesReader$$InternalSyntheticApiModelOutline$1$82be78b3dfbb542c02418fe0ea98fb599f9c8e2d97f3298d09efb1f6df7aaac6$0.m(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.ExceptionsCollector -> kotlin.io.path.ExceptionsCollector:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <init>() -> <init>
    279:283:void <init>(int) -> <init>
    279:279:void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    297:307:void collect(java.lang.Exception) -> collect
    288:288:void enterEntry(java.nio.file.Path) -> enterEntry
    292:293:void exitEntry(java.nio.file.Path) -> exitEntry
    283:283:java.util.List getCollectedExceptions() -> getCollectedExceptions
    285:285:java.nio.file.Path getPath() -> getPath
    280:280:int getTotalExceptions() -> getTotalExceptions
    285:285:void setPath(java.nio.file.Path) -> setPath
kotlin.io.path.ExceptionsCollector$$ExternalSyntheticApiModelOutline0 -> kotlin.io.path.ExceptionsCollector$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.ExceptionsCollector$$InternalSyntheticApiModelOutline$1$4dfdb53f5088e1cac82b3c6e3ff4123ddbe84fa6504443f5fa6aa1db0271984d$0.m(java.nio.file.Path,java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.ExceptionsCollector$$ExternalSyntheticApiModelOutline1 -> kotlin.io.path.ExceptionsCollector$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Throwable kotlin.io.path.ExceptionsCollector$$InternalSyntheticApiModelOutline$1$51ecd2aac37f5601fa684378c698678e2f0ac1bb371eef2ba91652dc9f969c33$0.m(java.nio.file.FileSystemException,java.lang.Throwable) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.ExceptionsCollector$$ExternalSyntheticApiModelOutline2 -> kotlin.io.path.ExceptionsCollector$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.ExceptionsCollector$$InternalSyntheticApiModelOutline$1$a83cf3fc3bb6b512d3b9505d64733bc74c0c834c4ba475ce9cc2180a118cb055$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.ExceptionsCollector$$ExternalSyntheticApiModelOutline3 -> kotlin.io.path.ExceptionsCollector$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.ExceptionsCollector$$InternalSyntheticApiModelOutline$1$a83cf3fc3bb6b512d3b9505d64733bc74c0c834c4ba475ce9cc2180a118cb055$1.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.ExperimentalPathApi -> kotlin.io.path.ExperimentalPathApi:
# {"id":"sourceFile","fileName":"ExperimentalPathApi.kt"}
kotlin.io.path.FileVisitorBuilder -> kotlin.io.path.FileVisitorBuilder:
# {"id":"sourceFile","fileName":"FileVisitorBuilder.kt"}
kotlin.io.path.FileVisitorBuilderImpl -> kotlin.io.path.FileVisitorBuilderImpl:
# {"id":"sourceFile","fileName":"FileVisitorBuilder.kt"}
    54:54:void <init>() -> <init>
    87:89:java.nio.file.FileVisitor build() -> build
    93:93:void checkIsNotBuilt() -> checkIsNotBuilt
    97:97:void checkNotDefined(java.lang.Object,java.lang.String) -> checkNotDefined
    81:83:void onPostVisitDirectory(kotlin.jvm.functions.Function2) -> onPostVisitDirectory
    63:65:void onPreVisitDirectory(kotlin.jvm.functions.Function2) -> onPreVisitDirectory
    69:71:void onVisitFile(kotlin.jvm.functions.Function2) -> onVisitFile
    75:77:void onVisitFileFailed(kotlin.jvm.functions.Function2) -> onVisitFileFailed
kotlin.io.path.FileVisitorImpl -> kotlin.io.path.FileVisitorImpl:
# {"id":"sourceFile","fileName":"FileVisitorBuilder.kt"}
    103:107:void <init>(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2) -> <init>
    102:102:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    118:118:java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException) -> postVisitDirectory
    102:102:java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    109:109:java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    102:102:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    112:112:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    102:102:java.nio.file.FileVisitResult visitFileFailed(java.lang.Object,java.io.IOException) -> visitFileFailed
    115:115:java.nio.file.FileVisitResult visitFileFailed(java.nio.file.Path,java.io.IOException) -> visitFileFailed
kotlin.io.path.LinkFollowing -> kotlin.io.path.LinkFollowing:
# {"id":"sourceFile","fileName":"PathTreeWalk.kt"}
    141:145:void <clinit>() -> <clinit>
    140:140:void <init>() -> <init>
    148:148:java.nio.file.LinkOption[] toLinkOptions(boolean) -> toLinkOptions
    151:151:java.util.Set toVisitOptions(boolean) -> toVisitOptions
kotlin.io.path.LinkFollowing$$ExternalSyntheticApiModelOutline0 -> kotlin.io.path.LinkFollowing$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.FileVisitOption kotlin.io.path.LinkFollowing$$InternalSyntheticApiModelOutline$1$c5e863f3490fc7197d8742651fc20b88db1ccd43bf93f252c65de203d1fdb1d0$1.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.OnErrorResult -> kotlin.io.path.OnErrorResult:
# {"id":"sourceFile","fileName":"OnErrorResult.kt"}
    0:0:kotlin.io.path.OnErrorResult[] $values() -> $values
    21:27:void <clinit>() -> <clinit>
    13:13:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.io.path.OnErrorResult valueOf(java.lang.String) -> valueOf
    0:0:kotlin.io.path.OnErrorResult[] values() -> values
kotlin.io.path.PathNode -> kotlin.io.path.PathNode:
# {"id":"sourceFile","fileName":"PathTreeWalk.kt"}
    115:115:void <init>(java.nio.file.Path,java.lang.Object,kotlin.io.path.PathNode) -> <init>
    116:116:java.util.Iterator getContentIterator() -> getContentIterator
    115:115:java.lang.Object getKey() -> getKey
    115:115:kotlin.io.path.PathNode getParent() -> getParent
    115:115:java.nio.file.Path getPath() -> getPath
    116:116:void setContentIterator(java.util.Iterator) -> setContentIterator
kotlin.io.path.PathRelativizer -> kotlin.io.path.PathRelativizer:
# {"id":"sourceFile","fileName":"PathUtils.kt"}
    160:161:void <clinit>() -> <clinit>
    159:159:void <init>() -> <init>
    165:184:java.nio.file.Path tryRelativeTo(java.nio.file.Path,java.nio.file.Path) -> tryRelativeTo
kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline0 -> kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathRelativizer$$InternalSyntheticApiModelOutline$1$2583cac749e693c371f65bfbd2e0433d4759788873bef5da98c7f313550c2231$0.m(java.lang.String,java.lang.String[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline1 -> kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathRelativizer$$InternalSyntheticApiModelOutline$1$e1c7e5334ef79e06c3ad98f458af6363a287dde99aa5b7d53a29209d5dbeca0d$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline2 -> kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.FileSystem kotlin.io.path.PathRelativizer$$InternalSyntheticApiModelOutline$1$e1c7e5334ef79e06c3ad98f458af6363a287dde99aa5b7d53a29209d5dbeca0d$10.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline3 -> kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String kotlin.io.path.PathRelativizer$$InternalSyntheticApiModelOutline$1$e1c7e5334ef79e06c3ad98f458af6363a287dde99aa5b7d53a29209d5dbeca0d$11.m(java.nio.file.FileSystem) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline4 -> kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathRelativizer$$InternalSyntheticApiModelOutline$1$e1c7e5334ef79e06c3ad98f458af6363a287dde99aa5b7d53a29209d5dbeca0d$12.m(java.nio.file.FileSystem,java.lang.String,java.lang.String[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline5 -> kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathRelativizer$$InternalSyntheticApiModelOutline$1$e1c7e5334ef79e06c3ad98f458af6363a287dde99aa5b7d53a29209d5dbeca0d$2.m(java.nio.file.Path,java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline6 -> kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.io.path.PathRelativizer$$InternalSyntheticApiModelOutline$1$e1c7e5334ef79e06c3ad98f458af6363a287dde99aa5b7d53a29209d5dbeca0d$3.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline7 -> kotlin.io.path.PathRelativizer$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathRelativizer$$InternalSyntheticApiModelOutline$1$e1c7e5334ef79e06c3ad98f458af6363a287dde99aa5b7d53a29209d5dbeca0d$5.m(java.nio.file.Path,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathTreeWalk -> kotlin.io.path.PathTreeWalk:
# {"id":"sourceFile","fileName":"PathTreeWalk.kt"}
    20:23:void <init>(java.nio.file.Path,kotlin.io.path.PathWalkOption[]) -> <init>
    20:20:boolean access$getFollowLinks(kotlin.io.path.PathTreeWalk) -> access$getFollowLinks
    20:20:boolean access$getIncludeDirectories(kotlin.io.path.PathTreeWalk) -> access$getIncludeDirectories
    20:20:java.nio.file.LinkOption[] access$getLinkOptions(kotlin.io.path.PathTreeWalk) -> access$getLinkOptions
    20:20:java.nio.file.Path access$getStart$p(kotlin.io.path.PathTreeWalk) -> access$getStart$p
    89:89:java.util.Iterator bfsIterator() -> bfsIterator
    61:61:java.util.Iterator dfsIterator() -> dfsIterator
    27:27:boolean getFollowLinks() -> getFollowLinks
    33:33:boolean getIncludeDirectories() -> getIncludeDirectories
    30:30:java.nio.file.LinkOption[] getLinkOptions() -> getLinkOptions
    36:36:boolean isBFS() -> isBFS
    38:38:java.util.Iterator iterator() -> iterator
    45:59:java.lang.Object yieldIfNeeded(kotlin.sequences.SequenceScope,kotlin.io.path.PathNode,kotlin.io.path.DirectoryEntriesReader,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> yieldIfNeeded
kotlin.io.path.PathTreeWalk$$ExternalSyntheticApiModelOutline0 -> kotlin.io.path.PathTreeWalk$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathTreeWalk$$InternalSyntheticApiModelOutline$1$4f5d5b4b73c6246851cc2a4127b912e94a6cd3c50874916176b0b29eb63e2cc0$3.m(java.nio.file.Path,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathTreeWalk$bfsIterator$1 -> kotlin.io.path.PathTreeWalk$bfsIterator$1:
# {"id":"sourceFile","fileName":"PathTreeWalk.kt"}
    0:0:void <init>(kotlin.io.path.PathTreeWalk,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    89:190:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.io.path.PathTreeWalk$dfsIterator$1 -> kotlin.io.path.PathTreeWalk$dfsIterator$1:
# {"id":"sourceFile","fileName":"PathTreeWalk.kt"}
    0:0:void <init>(kotlin.io.path.PathTreeWalk,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    61:205:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.io.path.PathTreeWalkKt -> kotlin.io.path.PathTreeWalkKt:
# {"id":"sourceFile","fileName":"PathTreeWalk.kt"}
    1:1:boolean access$createsCycle(kotlin.io.path.PathNode) -> access$createsCycle
    1:1:java.lang.Object access$keyOf(java.nio.file.Path,java.nio.file.LinkOption[]) -> access$keyOf
    120:133:boolean createsCycle(kotlin.io.path.PathNode) -> createsCycle
    108:108:java.lang.Object keyOf(java.nio.file.Path,java.nio.file.LinkOption[]) -> keyOf
kotlin.io.path.PathTreeWalkKt$$ExternalSyntheticApiModelOutline0 -> kotlin.io.path.PathTreeWalkKt$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathTreeWalkKt$$InternalSyntheticApiModelOutline$1$32525828d6497d73d18e0b93b3bb11c36f9b960011c5d7d3055750d025cc286b$0.m(java.nio.file.Path,java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathTreeWalkKt$$ExternalSyntheticApiModelOutline1 -> kotlin.io.path.PathTreeWalkKt$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.attribute.BasicFileAttributes kotlin.io.path.PathTreeWalkKt$$InternalSyntheticApiModelOutline$1$4e42c731df563abc3e4cb7e32ea005d30d42ab88731b991bd921a85f44b8f56e$0.m(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathWalkOption -> kotlin.io.path.PathWalkOption:
# {"id":"sourceFile","fileName":"PathWalkOption.kt"}
    0:0:kotlin.io.path.PathWalkOption[] $values() -> $values
    20:26:void <clinit>() -> <clinit>
    16:16:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.io.path.PathWalkOption valueOf(java.lang.String) -> valueOf
    0:0:kotlin.io.path.PathWalkOption[] values() -> values
kotlin.io.path.PathsKt -> kotlin.io.path.PathsKt:
    1:1:void <init>() -> <init>
    0:0:java.util.List listDirectoryEntries$default(java.nio.file.Path,java.lang.String,int,java.lang.Object) -> listDirectoryEntries$default
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathReadWriteKt -> kotlin.io.path.PathsKt__PathReadWriteKt:
# {"id":"sourceFile","fileName":"PathReadWrite.kt"}
    0:0:void <init>() -> <init>
    139:139:void appendBytes(java.nio.file.Path,byte[]) -> appendBytes
    309:309:java.nio.file.Path appendLines(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset) -> appendLines
    322:322:java.nio.file.Path appendLines(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset) -> appendLines
    308:309:java.nio.file.Path appendLines$default(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,int,java.lang.Object) -> appendLines$default
    321:322:java.nio.file.Path appendLines$default(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset,int,java.lang.Object) -> appendLines$default
    184:184:void appendText(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset) -> appendText
    183:183:void appendText$default(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,int,java.lang.Object) -> appendText$default
    50:52:java.io.BufferedReader bufferedReader(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[]) -> bufferedReader
    45:52:java.io.BufferedReader bufferedReader$default(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[],int,java.lang.Object) -> bufferedReader$default
    88:90:java.io.BufferedWriter bufferedWriter(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[]) -> bufferedWriter
    83:90:java.io.BufferedWriter bufferedWriter$default(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[],int,java.lang.Object) -> bufferedWriter$default
    202:330:void forEachLine(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1) -> forEachLine
    200:330:void forEachLine$default(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object) -> forEachLine$default
    216:216:java.io.InputStream inputStream(java.nio.file.Path,java.nio.file.OpenOption[]) -> inputStream
    232:232:java.io.OutputStream outputStream(java.nio.file.Path,java.nio.file.OpenOption[]) -> outputStream
    109:109:byte[] readBytes(java.nio.file.Path) -> readBytes
    249:249:java.util.List readLines(java.nio.file.Path,java.nio.charset.Charset) -> readLines
    248:249:java.util.List readLines$default(java.nio.file.Path,java.nio.charset.Charset,int,java.lang.Object) -> readLines$default
    155:155:java.lang.String readText(java.nio.file.Path,java.nio.charset.Charset) -> readText
    154:154:java.lang.String readText$default(java.nio.file.Path,java.nio.charset.Charset,int,java.lang.Object) -> readText$default
    31:31:java.io.InputStreamReader reader(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[]) -> reader
    30:31:java.io.InputStreamReader reader$default(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object) -> reader$default
    264:264:java.lang.Object useLines(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1) -> useLines
    263:264:java.lang.Object useLines$default(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object) -> useLines$default
    126:126:void writeBytes(java.nio.file.Path,byte[],java.nio.file.OpenOption[]) -> writeBytes
    280:280:java.nio.file.Path writeLines(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,java.nio.file.OpenOption[]) -> writeLines
    296:296:java.nio.file.Path writeLines(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset,java.nio.file.OpenOption[]) -> writeLines
    279:280:java.nio.file.Path writeLines$default(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object) -> writeLines$default
    295:296:java.nio.file.Path writeLines$default(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object) -> writeLines$default
    171:171:void writeText(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[]) -> writeText
    170:170:void writeText$default(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object) -> writeText$default
    69:69:java.io.OutputStreamWriter writer(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[]) -> writer
    68:69:java.io.OutputStreamWriter writer$default(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object) -> writer$default
kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline0 -> kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.io.OutputStream kotlin.io.path.PathsKt__PathReadWriteKt$$InternalSyntheticApiModelOutline$1$06f99f0fc2ff34927cd04ef226843e287ecb1f0f30dbbb6f3e50137e0048d687$0.m(java.nio.file.Path,java.nio.file.OpenOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline1 -> kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.io.InputStream kotlin.io.path.PathsKt__PathReadWriteKt$$InternalSyntheticApiModelOutline$1$0c7cf8bcb05fac3a4a0cbf231701fa0de04af041aea8afec42a567283404f206$0.m(java.nio.file.Path,java.nio.file.OpenOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline2 -> kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] kotlin.io.path.PathsKt__PathReadWriteKt$$InternalSyntheticApiModelOutline$1$0e33e55a6f7a9327bc7ee1c0f9c95a07f7f2710985cac24de7f3ba07a885e175$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline3 -> kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathReadWriteKt$$InternalSyntheticApiModelOutline$1$10e12159a3af8fedb65ae48248934d79567ca1edcea5b43f143127c0147ad2c9$0.m(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,java.nio.file.OpenOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline4 -> kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.StandardOpenOption kotlin.io.path.PathsKt__PathReadWriteKt$$InternalSyntheticApiModelOutline$1$157759f38832379d956b59b7fdb4e4d1fea7eeef32615755b6051f37d5e68bbd$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline5 -> kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List kotlin.io.path.PathsKt__PathReadWriteKt$$InternalSyntheticApiModelOutline$1$50561637672860c5e665dfb62deed21dae5076cb50a5afdd07cb509e856eb1cb$0.m(java.nio.file.Path,java.nio.charset.Charset) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline6 -> kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.io.BufferedReader kotlin.io.path.PathsKt__PathReadWriteKt$$InternalSyntheticApiModelOutline$1$8027c706acae4a38b13fa2b7e18013bcf6411ad37cf51855ffc0790ad70d04b3$0.m(java.nio.file.Path,java.nio.charset.Charset) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline7 -> kotlin.io.path.PathsKt__PathReadWriteKt$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathReadWriteKt$$InternalSyntheticApiModelOutline$1$e4c4ff28a8073cdee099e02dca46ac6a4a484eab714755aa0027a71e9cd363da$0.m(java.nio.file.Path,byte[],java.nio.file.OpenOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <init>() -> <init>
    1:1:java.nio.file.FileVisitResult access$copyToRecursively$copy(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> access$copyToRecursively$copy
    1:1:java.nio.file.FileVisitResult access$copyToRecursively$error(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,java.nio.file.Path,java.lang.Exception) -> access$copyToRecursively$error
    337:339:void collectIfThrows$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.ExceptionsCollector,kotlin.jvm.functions.Function0) -> collectIfThrows$PathsKt__PathRecursiveFunctionsKt
    72:87:java.nio.file.Path copyToRecursively(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,boolean) -> copyToRecursively
    149:199:java.nio.file.Path copyToRecursively(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,kotlin.jvm.functions.Function3) -> copyToRecursively
    193:195:java.nio.file.FileVisitResult copyToRecursively$copy$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> copyToRecursively$copy$PathsKt__PathRecursiveFunctionsKt
    65:67:java.nio.file.Path copyToRecursively$default(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,boolean,int,java.lang.Object) -> copyToRecursively$default
    141:145:java.nio.file.Path copyToRecursively$default(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,kotlin.jvm.functions.Function3,int,java.lang.Object) -> copyToRecursively$default
    182:183:java.nio.file.Path copyToRecursively$destination$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path,java.nio.file.Path,java.nio.file.Path) -> copyToRecursively$destination$PathsKt__PathRecursiveFunctionsKt
    187:187:java.nio.file.FileVisitResult copyToRecursively$error$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,java.nio.file.Path,java.lang.Exception) -> copyToRecursively$error$PathsKt__PathRecursiveFunctionsKt
    270:422:void deleteRecursively(java.nio.file.Path) -> deleteRecursively
    313:332:java.util.List deleteRecursivelyImpl$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path) -> deleteRecursivelyImpl$PathsKt__PathRecursiveFunctionsKt
    374:436:void enterDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream,java.nio.file.Path,kotlin.io.path.ExceptionsCollector) -> enterDirectory$PathsKt__PathRecursiveFunctionsKt
    350:429:void handleEntry$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream,java.nio.file.Path,kotlin.io.path.ExceptionsCollector) -> handleEntry$PathsKt__PathRecursiveFunctionsKt
    412:450:void insecureEnterDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path,kotlin.io.path.ExceptionsCollector) -> insecureEnterDirectory$PathsKt__PathRecursiveFunctionsKt
    393:443:void insecureHandleEntry$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path,kotlin.io.path.ExceptionsCollector) -> insecureHandleEntry$PathsKt__PathRecursiveFunctionsKt
    384:385:boolean isDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream,java.nio.file.Path,java.nio.file.LinkOption[]) -> isDirectory$PathsKt__PathRecursiveFunctionsKt
    231:234:java.nio.file.FileVisitResult toFileVisitResult$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.CopyActionResult) -> toFileVisitResult$PathsKt__PathRecursiveFunctionsKt
    238:240:java.nio.file.FileVisitResult toFileVisitResult$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.OnErrorResult) -> toFileVisitResult$PathsKt__PathRecursiveFunctionsKt
    344:344:java.lang.Object tryIgnoreNoSuchFileException$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function0) -> tryIgnoreNoSuchFileException$PathsKt__PathRecursiveFunctionsKt
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline0 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.FileVisitResult kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$0151ed1058060fca0ae7df02144bfaa3ade3695ce40b826a4f1f5c87ea12a56a$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline1 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.FileVisitResult kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$0151ed1058060fca0ae7df02144bfaa3ade3695ce40b826a4f1f5c87ea12a56a$1.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline10 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Iterator kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$ccbdc1313be614f55ced91b40d1a1ac2dcb7400920c248307500b74005963c14$2.m(java.nio.file.SecureDirectoryStream) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline11 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Iterator kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$d44be9cb1b60e39be553bfd2a176e4a1d1f372a91287f215e7957aca1e7468ef$1.m(java.nio.file.DirectoryStream) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline12 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$d7c5c413a6dcd520cb0c58f2a9b8bd5a7cd8a5119a3a3d66ad713f80c221f216$0.m(java.nio.file.Path,java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline13 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline13:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$dd0b7dadb557b418d0474390e62bd550a7ae70d1e2dfc43a8589278c0d06da4f$10.m(java.nio.file.Path,java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline14 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline14:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$dd0b7dadb557b418d0474390e62bd550a7ae70d1e2dfc43a8589278c0d06da4f$13.m(java.nio.file.Path,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline15 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline15:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$dd0b7dadb557b418d0474390e62bd550a7ae70d1e2dfc43a8589278c0d06da4f$2.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline16 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline16:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$fe78a065d37f6e94e16d6b0f4d6b14c2ce1c8ce0f114fff40b316364b7465f12$2.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline2 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.FileVisitResult kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$35b3919ca83ac17354b6a57f634e5d1cb88093d1a01f94c0b87975a68282b9b3$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline3 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.attribute.FileAttributeView kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$5f4b3eebc6f3ee555903395b8ec0173e6a580e026e8a6625394ce5072cda4094$0.m(java.nio.file.SecureDirectoryStream,java.lang.Object,java.lang.Class,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline4 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.attribute.BasicFileAttributes kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$5f4b3eebc6f3ee555903395b8ec0173e6a580e026e8a6625394ce5072cda4094$1.m(java.nio.file.attribute.BasicFileAttributeView) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline5 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$5f4b3eebc6f3ee555903395b8ec0173e6a580e026e8a6625394ce5072cda4094$2.m(java.nio.file.attribute.BasicFileAttributes) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline6 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$c559e52a042f9dcf2b863557eb1143886031f7f424f175ea594fd0cc95b6a321$1.m(java.nio.file.SecureDirectoryStream,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline7 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$c559e52a042f9dcf2b863557eb1143886031f7f424f175ea594fd0cc95b6a321$2.m(java.nio.file.SecureDirectoryStream,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline8 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.DirectoryStream kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$c98d3f73b59eda3038e8a81bf9a04e4b4da4b856513f4d49361f1a20d47e2e4a$1.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline9 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$ExternalSyntheticApiModelOutline9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.SecureDirectoryStream kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$$InternalSyntheticApiModelOutline$1$ccbdc1313be614f55ced91b40d1a1ac2dcb7400920c248307500b74005963c14$1.m(java.nio.file.SecureDirectoryStream,java.lang.Object,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$WhenMappings -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$WhenMappings:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    67:67:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    67:67:java.lang.Void invoke(java.nio.file.Path,java.nio.file.Path,java.lang.Exception) -> invoke
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <init>(boolean) -> <init>
    72:72:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    73:84:kotlin.io.path.CopyActionResult invoke(kotlin.io.path.CopyActionContext,java.nio.file.Path,java.nio.file.Path) -> invoke
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2$$ExternalSyntheticApiModelOutline0 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.StandardCopyOption kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2$$InternalSyntheticApiModelOutline$1$a95ca272c35e94ffc6934f9e87c752d9cfd0d4e0487463efa9928bbfd3123014$3.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    143:143:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    143:143:java.lang.Void invoke(java.nio.file.Path,java.nio.file.Path,java.lang.Exception) -> invoke
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <init>(boolean) -> <init>
    145:145:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    146:146:kotlin.io.path.CopyActionResult invoke(kotlin.io.path.CopyActionContext,java.nio.file.Path,java.nio.file.Path) -> invoke
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3) -> <init>
    199:199:java.lang.Object invoke(java.lang.Object) -> invoke
    200:203:void invoke(kotlin.io.path.FileVisitorBuilder) -> invoke
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3) -> <init>
    200:200:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    200:200:java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> invoke
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3) -> <init>
    201:201:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    201:201:java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> invoke
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path) -> <init>
    202:202:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    202:202:java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.lang.Exception) -> invoke
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4 -> kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4:
# {"id":"sourceFile","fileName":"PathRecursiveFunctions.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path) -> <init>
    203:203:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    205:207:java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.io.IOException) -> invoke
kotlin.io.path.PathsKt__PathUtilsKt -> kotlin.io.path.PathsKt__PathUtilsKt:
# {"id":"sourceFile","fileName":"PathUtils.kt"}
    0:0:void <init>() -> <init>
    1019:1019:java.nio.file.Path Path(java.lang.String) -> Path
    1031:1031:java.nio.file.Path Path(java.lang.String,java.lang.String[]) -> Path
    96:96:java.nio.file.Path absolute(java.nio.file.Path) -> absolute
    110:110:java.lang.String absolutePathString(java.nio.file.Path) -> absolutePathString
    221:222:java.nio.file.Path copyTo(java.nio.file.Path,java.nio.file.Path,boolean) -> copyTo
    261:261:java.nio.file.Path copyTo(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[]) -> copyTo
    220:222:java.nio.file.Path copyTo$default(java.nio.file.Path,java.nio.file.Path,boolean,int,java.lang.Object) -> copyTo$default
    538:538:java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[]) -> createDirectories
    511:511:java.nio.file.Path createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[]) -> createDirectory
    903:903:java.nio.file.Path createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute[]) -> createFile
    848:848:java.nio.file.Path createLinkPointingTo(java.nio.file.Path,java.nio.file.Path) -> createLinkPointingTo
    566:571:java.nio.file.Path createParentDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[]) -> createParentDirectories
    868:868:java.nio.file.Path createSymbolicLinkPointingTo(java.nio.file.Path,java.nio.file.Path,java.nio.file.attribute.FileAttribute[]) -> createSymbolicLinkPointingTo
    963:963:java.nio.file.Path createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[]) -> createTempDirectory
    983:985:java.nio.file.Path createTempDirectory(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute[]) -> createTempDirectory
    962:963:java.nio.file.Path createTempDirectory$default(java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object) -> createTempDirectory$default
    981:981:java.nio.file.Path createTempDirectory$default(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object) -> createTempDirectory$default
    922:922:java.nio.file.Path createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]) -> createTempFile
    943:945:java.nio.file.Path createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]) -> createTempFile
    921:922:java.nio.file.Path createTempFile$default(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object) -> createTempFile$default
    941:941:java.nio.file.Path createTempFile$default(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object) -> createTempFile$default
    469:469:void deleteExisting(java.nio.file.Path) -> deleteExisting
    486:486:boolean deleteIfExists(java.nio.file.Path) -> deleteIfExists
    996:996:java.nio.file.Path div(java.nio.file.Path,java.nio.file.Path) -> div
    1007:1007:java.nio.file.Path div(java.nio.file.Path,java.lang.String) -> div
    277:277:boolean exists(java.nio.file.Path,java.nio.file.LinkOption[]) -> exists
    708:708:java.lang.Void fileAttributeViewNotAvailable(java.nio.file.Path,java.lang.Class) -> fileAttributeViewNotAvailable
    704:704:java.nio.file.attribute.FileAttributeView fileAttributesView(java.nio.file.Path,java.nio.file.LinkOption[]) -> fileAttributesView
    688:688:java.nio.file.attribute.FileAttributeView fileAttributesViewOrNull(java.nio.file.Path,java.nio.file.LinkOption[]) -> fileAttributesViewOrNull
    454:454:long fileSize(java.nio.file.Path) -> fileSize
    630:630:java.nio.file.FileStore fileStore(java.nio.file.Path) -> fileStore
    1172:1172:java.nio.file.FileVisitor fileVisitor(kotlin.jvm.functions.Function1) -> fileVisitor
    440:1177:void forEachDirectoryEntry(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1) -> forEachDirectoryEntry
    439:1177:void forEachDirectoryEntry$default(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object) -> forEachDirectoryEntry$default
    650:650:java.lang.Object getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[]) -> getAttribute
    47:47:java.lang.String getExtension(java.nio.file.Path) -> getExtension
    0:0:void getExtension$annotations(java.nio.file.Path) -> getExtension$annotations
    81:81:java.lang.String getInvariantSeparatorsPath(java.nio.file.Path) -> getInvariantSeparatorsPath
    0:0:void getInvariantSeparatorsPath$annotations(java.nio.file.Path) -> getInvariantSeparatorsPath$annotations
    71:72:java.lang.String getInvariantSeparatorsPathString(java.nio.file.Path) -> getInvariantSeparatorsPathString
    0:0:void getInvariantSeparatorsPathString$annotations(java.nio.file.Path) -> getInvariantSeparatorsPathString$annotations
    759:759:java.nio.file.attribute.FileTime getLastModifiedTime(java.nio.file.Path,java.nio.file.LinkOption[]) -> getLastModifiedTime
    29:29:java.lang.String getName(java.nio.file.Path) -> getName
    0:0:void getName$annotations(java.nio.file.Path) -> getName$annotations
    38:38:java.lang.String getNameWithoutExtension(java.nio.file.Path) -> getNameWithoutExtension
    0:0:void getNameWithoutExtension$annotations(java.nio.file.Path) -> getNameWithoutExtension$annotations
    787:787:java.nio.file.attribute.UserPrincipal getOwner(java.nio.file.Path,java.nio.file.LinkOption[]) -> getOwner
    61:61:java.lang.String getPathString(java.nio.file.Path) -> getPathString
    0:0:void getPathString$annotations(java.nio.file.Path) -> getPathString$annotations
    815:815:java.util.Set getPosixFilePermissions(java.nio.file.Path,java.nio.file.LinkOption[]) -> getPosixFilePermissions
    318:318:boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[]) -> isDirectory
    338:338:boolean isExecutable(java.nio.file.Path) -> isExecutable
    352:352:boolean isHidden(java.nio.file.Path) -> isHidden
    362:362:boolean isReadable(java.nio.file.Path) -> isReadable
    304:304:boolean isRegularFile(java.nio.file.Path,java.nio.file.LinkOption[]) -> isRegularFile
    383:383:boolean isSameFileAs(java.nio.file.Path,java.nio.file.Path) -> isSameFileAs
    328:328:boolean isSymbolicLink(java.nio.file.Path) -> isSymbolicLink
    372:372:boolean isWritable(java.nio.file.Path) -> isWritable
    400:400:java.util.List listDirectoryEntries(java.nio.file.Path,java.lang.String) -> listDirectoryEntries
    399:399:java.util.List listDirectoryEntries$default(java.nio.file.Path,java.lang.String,int,java.lang.Object) -> listDirectoryEntries$default
    595:595:java.nio.file.Path moveTo(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[]) -> moveTo
    616:617:java.nio.file.Path moveTo(java.nio.file.Path,java.nio.file.Path,boolean) -> moveTo
    615:617:java.nio.file.Path moveTo$default(java.nio.file.Path,java.nio.file.Path,boolean,int,java.lang.Object) -> moveTo$default
    292:292:boolean notExists(java.nio.file.Path,java.nio.file.LinkOption[]) -> notExists
    723:723:java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.nio.file.LinkOption[]) -> readAttributes
    745:745:java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[]) -> readAttributes
    884:884:java.nio.file.Path readSymbolicLink(java.nio.file.Path) -> readSymbolicLink
    125:127:java.nio.file.Path relativeTo(java.nio.file.Path,java.nio.file.Path) -> relativeTo
    154:154:java.nio.file.Path relativeToOrNull(java.nio.file.Path,java.nio.file.Path) -> relativeToOrNull
    141:141:java.nio.file.Path relativeToOrSelf(java.nio.file.Path,java.nio.file.Path) -> relativeToOrSelf
    672:672:java.nio.file.Path setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[]) -> setAttribute
    773:773:java.nio.file.Path setLastModifiedTime(java.nio.file.Path,java.nio.file.attribute.FileTime) -> setLastModifiedTime
    801:801:java.nio.file.Path setOwner(java.nio.file.Path,java.nio.file.attribute.UserPrincipal) -> setOwner
    829:829:java.nio.file.Path setPosixFilePermissions(java.nio.file.Path,java.util.Set) -> setPosixFilePermissions
    1042:1042:java.nio.file.Path toPath(java.net.URI) -> toPath
    421:421:java.lang.Object useDirectoryEntries(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1) -> useDirectoryEntries
    420:421:java.lang.Object useDirectoryEntries$default(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object) -> useDirectoryEntries$default
    1077:1078:void visitFileTree(java.nio.file.Path,java.nio.file.FileVisitor,int,boolean) -> visitFileTree
    1125:1125:void visitFileTree(java.nio.file.Path,int,boolean,kotlin.jvm.functions.Function1) -> visitFileTree
    1076:1076:void visitFileTree$default(java.nio.file.Path,java.nio.file.FileVisitor,int,boolean,int,java.lang.Object) -> visitFileTree$default
    1119:1119:void visitFileTree$default(java.nio.file.Path,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> visitFileTree$default
    1061:1061:kotlin.sequences.Sequence walk(java.nio.file.Path,kotlin.io.path.PathWalkOption[]) -> walk
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline0 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$070f305d982d2b105f4b90d35038d3d3fca70145084f5bb2a713c6e58656d7c0$2.m(java.nio.file.Path,java.nio.file.attribute.FileAttribute[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline1 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$1078882d4d9ea69af5d1835d2c4744a4850a8e85097c9e407c6b40c11c80cff1$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline10 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$5a2cf49b249447a4d6c42b07b569f58cddeae649fa79e484cea7a15aa5da3468$0.m(java.nio.file.Path,java.util.Set) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline11 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$5a8203a1ae373956004a2cfa5c40743ce51e5579af03dc15612bf7ae8550607c$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline12 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$5bc4d0ddda7d3bef1f5066ba82514a6d58a262e135a645d3a056a02f1808a1a1$1.m(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline13 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline13:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$6a2d2a0c7245ff0a42d561ebd1ae8f4977d76d06aca2ed74fb4fab12061f69ab$0.m(java.nio.file.Path,java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline14 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline14:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$7582c6c94f6fac24b046bfdce3f1b2c12f630a6c055c8dec6a7b871f2896e3a9$0.m(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline15 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline15:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$7582c6c94f6fac24b046bfdce3f1b2c12f630a6c055c8dec6a7b871f2896e3a9$1.m(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline16 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline16:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$79312aa8e0e4ec5513193db0ed84511f91fcc544b18e6a85b5afc27af3654c09$0.m(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline17 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline17:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.attribute.FileTime kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$7afc57c136d9054301c671d7e8932cbdec50b6a4320c8316d72f8888d9519430$0.m(java.nio.file.Path,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline18 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline18:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$7c11a57a4d01ee98b3bd224a97b1ffc876d56b6e1554b6cd7433b9599bf2ed3b$0.m(java.nio.file.Path,java.nio.file.attribute.UserPrincipal) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline19 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline19:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$7d3901a4e39cf8acf3417b3d222fcda1ccb9eabe828aad0053d87dadeba9406d$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline2 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$165540a59f6fd5672c234f08c6bcb75108cae4736aec0808b89311194dbeff9e$0.m(java.nio.file.Path,java.nio.file.attribute.FileTime) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline20 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline20:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.attribute.FileAttributeView kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$7f37f1e70f4f4ae8f9f87b7049c1e9b572ae260aadbc940ec21a4c8c80eebc7e$0.m(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline21 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline21:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:long kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$9806d03e865b96e272de1968db6b732a1db2b87a5b5fa81856834821520b079b$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline22 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline22:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.attribute.UserPrincipal kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$9afa329b6f9399c567091445f53bd0652ce7835a43dbdda0df89ea2e6c79b201$0.m(java.nio.file.Path,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline23 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline23:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$a43226f935b6962cf49273fb2bc2a41bb8938f4707ae025d00be56a30458d3fa$0.m(java.nio.file.Path,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline24 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline24:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Map kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$afca61b9021380342b411828d89182a7b92207249b4e2fcec29317af2c1ffec8$0.m(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline25 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline25:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Set kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$c81e4deb8c1bf22498def6c1bef70fa0933e9d31d49eae0e87c8db55c580a081$0.m(java.nio.file.Path,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline26 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline26:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$caa105f28af41514dfe884779aea513172bcaf8747b2d8ed68e68ef24a42ff1f$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline27 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline27:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$d20f27618ad024d73e410fd911f258bdce4429d07d4555ee7fcc31f3346f0e69$0.m(java.nio.file.Path,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline28 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline28:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$d4e38225f624fafb9a7eb67751088fa196390f01ababec47bb44360b035de6a0$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline29 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline29:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.FileStore kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$d865f3b1771f04bc8b13b75a8be67c6133d17b68dfe7daad0dd1c768b17a6258$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline3 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.DirectoryStream kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$1b9d53541cb8b617ac218b30f1ae61bc48d4051f7f3aa46ecc7dd1978b78e64c$0.m(java.nio.file.Path,java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline30 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline30:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$d9da15412710e3f7a73afac62a705d6c469235f410acabd17675e1ab69ab9d02$0.m(java.nio.file.Path,java.nio.file.attribute.FileAttribute[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline31 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline31:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$f14b6ed2f3cb9fbd08492b2eae915691e3fc3edaf5d560e9753be3ef6aa3ac18$0.m(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline32 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline32:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$fe98b6b5968a16efd2dc26531586471aa6735812801db1846d2e8565d69d0272$0.m(java.nio.file.Path,java.nio.file.attribute.FileAttribute[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline4 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$2cb261ab91650da228c72cd1d45bf294e1ed2ae268e3dd138d39df8f9e8d6c49$0.m(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline5 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$2cb261ab91650da228c72cd1d45bf294e1ed2ae268e3dd138d39df8f9e8d6c49$1.m(java.lang.String,java.nio.file.attribute.FileAttribute[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline6 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$35eef5a05fddd13089788f3b554cddd2173e86bb3381398f43549d4b71c7fedb$0.m(java.net.URI) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline7 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$395c3ddfb061579068d103e9210c4bb58a19d9482c526f15daae9b21aed1ff5d$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline8 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$3bdbe60d1d9c9f354827eb97ac8915c20f4e39473968a5f9c4175ebfd62b56b3$0.m(java.nio.file.Path) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline9 -> kotlin.io.path.PathsKt__PathUtilsKt$$ExternalSyntheticApiModelOutline9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.Path kotlin.io.path.PathsKt__PathUtilsKt$$InternalSyntheticApiModelOutline$1$5477c791173286934c9a03313c604d14a8c3912ae3a440e288ce8280a5ffb00e$0.m(java.nio.file.Path,java.nio.file.Path,java.nio.file.attribute.FileAttribute[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.jdk7.AutoCloseableKt -> kotlin.jdk7.AutoCloseableKt:
# {"id":"sourceFile","fileName":"AutoCloseableJVM.kt"}
    46:51:void closeFinally(java.lang.AutoCloseable,java.lang.Throwable) -> closeFinally
    33:38:java.lang.Object use(java.lang.AutoCloseable,kotlin.jvm.functions.Function1) -> use
kotlin.js.ExperimentalJsExport -> kotlin.js.ExperimentalJsExport:
# {"id":"sourceFile","fileName":"JsAnnotationsH.kt"}
kotlin.jvm.JvmClassMappingKt -> kotlin.jvm.JvmClassMappingKt:
# {"id":"sourceFile","fileName":"JvmClassMapping.kt"}
    108:108:kotlin.reflect.KClass getAnnotationClass(java.lang.annotation.Annotation) -> getAnnotationClass
    118:118:java.lang.Class getDeclaringJavaClass(java.lang.Enum) -> getDeclaringJavaClass
    0:0:void getDeclaringJavaClass$annotations(java.lang.Enum) -> getDeclaringJavaClass$annotations
    29:29:java.lang.Class getJavaClass(kotlin.reflect.KClass) -> getJavaClass
    89:89:java.lang.Class getJavaClass(java.lang.Object) -> getJavaClass
    0:0:void getJavaClass$annotations(kotlin.reflect.KClass) -> getJavaClass$annotations
    59:62:java.lang.Class getJavaObjectType(kotlin.reflect.KClass) -> getJavaObjectType
    36:48:java.lang.Class getJavaPrimitiveType(kotlin.reflect.KClass) -> getJavaPrimitiveType
    81:81:kotlin.reflect.KClass getKotlinClass(java.lang.Class) -> getKotlinClass
    95:95:java.lang.Class getRuntimeClassOfKClassInstance(kotlin.reflect.KClass) -> getRuntimeClassOfKClassInstance
    0:0:void getRuntimeClassOfKClassInstance$annotations(kotlin.reflect.KClass) -> getRuntimeClassOfKClassInstance$annotations
    102:102:boolean isArrayOf(java.lang.Object[]) -> isArrayOf
kotlin.jvm.JvmDefault -> kotlin.jvm.JvmDefault:
# {"id":"sourceFile","fileName":"JvmDefault.kt"}
kotlin.jvm.JvmDefaultWithCompatibility -> kotlin.jvm.JvmDefaultWithCompatibility:
# {"id":"sourceFile","fileName":"JvmDefault.kt"}
kotlin.jvm.JvmDefaultWithoutCompatibility -> kotlin.jvm.JvmDefaultWithoutCompatibility:
# {"id":"sourceFile","fileName":"JvmDefault.kt"}
kotlin.jvm.JvmField -> kotlin.jvm.JvmField:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.JvmInline -> kotlin.jvm.JvmInline:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.JvmMultifileClass -> kotlin.jvm.JvmMultifileClass:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.JvmName -> kotlin.jvm.JvmName:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.JvmOverloads -> kotlin.jvm.JvmOverloads:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.JvmPackageName -> kotlin.jvm.JvmPackageName:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.JvmRecord -> kotlin.jvm.JvmRecord:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.JvmSerializableLambda -> kotlin.jvm.JvmSerializableLambda:
# {"id":"sourceFile","fileName":"JvmFlagAnnotations.kt"}
kotlin.jvm.JvmStatic -> kotlin.jvm.JvmStatic:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.JvmSuppressWildcards -> kotlin.jvm.JvmSuppressWildcards:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.JvmSynthetic -> kotlin.jvm.JvmSynthetic:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.JvmWildcard -> kotlin.jvm.JvmWildcard:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.KotlinReflectionNotSupportedError -> kotlin.jvm.KotlinReflectionNotSupportedError:
# {"id":"sourceFile","fileName":"KotlinReflectionNotSupportedError.kt"}
    11:11:void <init>() -> <init>
    13:13:void <init>(java.lang.String) -> <init>
    15:15:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    17:17:void <init>(java.lang.Throwable) -> <init>
kotlin.jvm.PurelyImplements -> kotlin.jvm.PurelyImplements:
# {"id":"sourceFile","fileName":"PurelyImplements.kt"}
kotlin.jvm.Strictfp -> kotlin.jvm.Strictfp:
# {"id":"sourceFile","fileName":"JvmFlagAnnotations.kt"}
kotlin.jvm.Synchronized -> kotlin.jvm.Synchronized:
# {"id":"sourceFile","fileName":"JvmFlagAnnotations.kt"}
kotlin.jvm.Throws -> kotlin.jvm.Throws:
# {"id":"sourceFile","fileName":"JvmPlatformAnnotations.kt"}
kotlin.jvm.Transient -> kotlin.jvm.Transient:
# {"id":"sourceFile","fileName":"JvmFlagAnnotations.kt"}
kotlin.jvm.Volatile -> kotlin.jvm.Volatile:
# {"id":"sourceFile","fileName":"JvmFlagAnnotations.kt"}
kotlin.jvm.functions.Function0 -> kotlin.jvm.functions.Function0:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function1 -> kotlin.jvm.functions.Function1:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function10 -> kotlin.jvm.functions.Function10:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function11 -> kotlin.jvm.functions.Function11:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function12 -> kotlin.jvm.functions.Function12:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function13 -> kotlin.jvm.functions.Function13:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function14 -> kotlin.jvm.functions.Function14:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function15 -> kotlin.jvm.functions.Function15:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function16 -> kotlin.jvm.functions.Function16:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function17 -> kotlin.jvm.functions.Function17:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function18 -> kotlin.jvm.functions.Function18:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function19 -> kotlin.jvm.functions.Function19:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function2 -> kotlin.jvm.functions.Function2:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function20 -> kotlin.jvm.functions.Function20:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function21 -> kotlin.jvm.functions.Function21:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function22 -> kotlin.jvm.functions.Function22:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function3 -> kotlin.jvm.functions.Function3:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function4 -> kotlin.jvm.functions.Function4:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function5 -> kotlin.jvm.functions.Function5:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function6 -> kotlin.jvm.functions.Function6:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function7 -> kotlin.jvm.functions.Function7:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function8 -> kotlin.jvm.functions.Function8:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function9 -> kotlin.jvm.functions.Function9:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.FunctionN -> kotlin.jvm.functions.FunctionN:
# {"id":"sourceFile","fileName":"FunctionN.kt"}
kotlin.jvm.internal.AdaptedFunctionReference -> kotlin.jvm.internal.AdaptedFunctionReference:
    39:39:void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    42:49:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    65:73:boolean equals(java.lang.Object) -> equals
    54:54:int getArity() -> getArity
    58:59:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    78:84:int hashCode() -> hashCode
    90:90:java.lang.String toString() -> toString
kotlin.jvm.internal.ArrayBooleanIterator -> kotlin.jvm.internal.ArrayBooleanIterator:
# {"id":"sourceFile","fileName":"ArrayIterators.kt"}
    52:52:void <init>(boolean[]) -> <init>
    54:54:boolean hasNext() -> hasNext
    55:55:boolean nextBoolean() -> nextBoolean
kotlin.jvm.internal.ArrayByteIterator -> kotlin.jvm.internal.ArrayByteIterator:
# {"id":"sourceFile","fileName":"ArrayIterators.kt"}
    10:10:void <init>(byte[]) -> <init>
    12:12:boolean hasNext() -> hasNext
    13:13:byte nextByte() -> nextByte
kotlin.jvm.internal.ArrayCharIterator -> kotlin.jvm.internal.ArrayCharIterator:
# {"id":"sourceFile","fileName":"ArrayIterators.kt"}
    16:16:void <init>(char[]) -> <init>
    18:18:boolean hasNext() -> hasNext
    19:19:char nextChar() -> nextChar
kotlin.jvm.internal.ArrayDoubleIterator -> kotlin.jvm.internal.ArrayDoubleIterator:
# {"id":"sourceFile","fileName":"ArrayIterators.kt"}
    46:46:void <init>(double[]) -> <init>
    48:48:boolean hasNext() -> hasNext
    49:49:double nextDouble() -> nextDouble
kotlin.jvm.internal.ArrayFloatIterator -> kotlin.jvm.internal.ArrayFloatIterator:
# {"id":"sourceFile","fileName":"ArrayIterators.kt"}
    40:40:void <init>(float[]) -> <init>
    42:42:boolean hasNext() -> hasNext
    43:43:float nextFloat() -> nextFloat
kotlin.jvm.internal.ArrayIntIterator -> kotlin.jvm.internal.ArrayIntIterator:
# {"id":"sourceFile","fileName":"ArrayIterators.kt"}
    28:28:void <init>(int[]) -> <init>
    30:30:boolean hasNext() -> hasNext
    31:31:int nextInt() -> nextInt
kotlin.jvm.internal.ArrayIterator -> kotlin.jvm.internal.ArrayIterator:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    8:8:void <init>(java.lang.Object[]) -> <init>
    8:8:java.lang.Object[] getArray() -> getArray
    10:10:boolean hasNext() -> hasNext
    11:11:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.jvm.internal.ArrayIteratorKt -> kotlin.jvm.internal.ArrayIteratorKt:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    14:14:java.util.Iterator iterator(java.lang.Object[]) -> iterator
kotlin.jvm.internal.ArrayIteratorsKt -> kotlin.jvm.internal.ArrayIteratorsKt:
# {"id":"sourceFile","fileName":"ArrayIterators.kt"}
    58:58:kotlin.collections.ByteIterator iterator(byte[]) -> iterator
    59:59:kotlin.collections.CharIterator iterator(char[]) -> iterator
    60:60:kotlin.collections.ShortIterator iterator(short[]) -> iterator
    61:61:kotlin.collections.IntIterator iterator(int[]) -> iterator
    62:62:kotlin.collections.LongIterator iterator(long[]) -> iterator
    63:63:kotlin.collections.FloatIterator iterator(float[]) -> iterator
    64:64:kotlin.collections.DoubleIterator iterator(double[]) -> iterator
    65:65:kotlin.collections.BooleanIterator iterator(boolean[]) -> iterator
kotlin.jvm.internal.ArrayLongIterator -> kotlin.jvm.internal.ArrayLongIterator:
# {"id":"sourceFile","fileName":"ArrayIterators.kt"}
    34:34:void <init>(long[]) -> <init>
    36:36:boolean hasNext() -> hasNext
    37:37:long nextLong() -> nextLong
kotlin.jvm.internal.ArrayShortIterator -> kotlin.jvm.internal.ArrayShortIterator:
# {"id":"sourceFile","fileName":"ArrayIterators.kt"}
    22:22:void <init>(short[]) -> <init>
    24:24:boolean hasNext() -> hasNext
    25:25:short nextShort() -> nextShort
kotlin.jvm.internal.BooleanCompanionObject -> kotlin.jvm.internal.BooleanCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    0:0:void <clinit>() -> <clinit>
    112:112:void <init>() -> <init>
kotlin.jvm.internal.BooleanSpreadBuilder -> kotlin.jvm.internal.BooleanSpreadBuilder:
# {"id":"sourceFile","fileName":"PrimitiveSpreadBuilders.kt"}
    129:130:void <init>(int) -> <init>
    134:134:void add(boolean) -> add
    129:129:int getSize(java.lang.Object) -> getSize
    131:131:int getSize(boolean[]) -> getSize
    137:137:boolean[] toArray() -> toArray
kotlin.jvm.internal.ByteCompanionObject -> kotlin.jvm.internal.ByteCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    0:0:void <clinit>() -> <clinit>
    83:83:void <init>() -> <init>
    0:0:void getSIZE_BITS$annotations() -> getSIZE_BITS$annotations
    0:0:void getSIZE_BYTES$annotations() -> getSIZE_BYTES$annotations
kotlin.jvm.internal.ByteSpreadBuilder -> kotlin.jvm.internal.ByteSpreadBuilder:
# {"id":"sourceFile","fileName":"PrimitiveSpreadBuilders.kt"}
    52:53:void <init>(int) -> <init>
    57:57:void add(byte) -> add
    52:52:int getSize(java.lang.Object) -> getSize
    54:54:int getSize(byte[]) -> getSize
    60:60:byte[] toArray() -> toArray
kotlin.jvm.internal.CallableReference -> kotlin.jvm.internal.CallableReference:
    48:48:void <clinit>() -> <clinit>
    60:60:void <init>() -> <init>
    65:65:void <init>(java.lang.Object) -> <init>
    69:74:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean) -> <init>
    161:161:java.lang.Object call(java.lang.Object[]) -> call
    166:166:java.lang.Object callBy(java.util.Map) -> callBy
    86:89:kotlin.reflect.KCallable compute() -> compute
    150:150:java.util.List getAnnotations() -> getAnnotations
    81:81:java.lang.Object getBoundReceiver() -> getBoundReceiver
    120:120:java.lang.String getName() -> getName
    111:112:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    140:140:java.util.List getParameters() -> getParameters
    96:98:kotlin.reflect.KCallable getReflected() -> getReflected
    145:145:kotlin.reflect.KType getReturnType() -> getReturnType
    132:132:java.lang.String getSignature() -> getSignature
    156:156:java.util.List getTypeParameters() -> getTypeParameters
    172:172:kotlin.reflect.KVisibility getVisibility() -> getVisibility
    190:190:boolean isAbstract() -> isAbstract
    178:178:boolean isFinal() -> isFinal
    184:184:boolean isOpen() -> isOpen
    196:196:boolean isSuspend() -> isSuspend
kotlin.jvm.internal.CallableReference$NoReceiver -> kotlin.jvm.internal.CallableReference$NoReceiver:
    52:52:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:kotlin.jvm.internal.CallableReference$NoReceiver access$000() -> access$000
    55:55:java.lang.Object readResolve() -> readResolve
kotlin.jvm.internal.CharCompanionObject -> kotlin.jvm.internal.CharCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    0:0:void <clinit>() -> <clinit>
    93:93:void <init>() -> <init>
    0:0:void getMAX_VALUE$annotations() -> getMAX_VALUE$annotations
    0:0:void getMIN_VALUE$annotations() -> getMIN_VALUE$annotations
    0:0:void getSIZE_BITS$annotations() -> getSIZE_BITS$annotations
    0:0:void getSIZE_BYTES$annotations() -> getSIZE_BYTES$annotations
kotlin.jvm.internal.CharSpreadBuilder -> kotlin.jvm.internal.CharSpreadBuilder:
# {"id":"sourceFile","fileName":"PrimitiveSpreadBuilders.kt"}
    63:64:void <init>(int) -> <init>
    68:68:void add(char) -> add
    63:63:int getSize(java.lang.Object) -> getSize
    65:65:int getSize(char[]) -> getSize
    71:71:char[] toArray() -> toArray
kotlin.jvm.internal.ClassBasedDeclarationContainer -> kotlin.jvm.internal.ClassBasedDeclarationContainer:
# {"id":"sourceFile","fileName":"ClassBasedDeclarationContainer.kt"}
kotlin.jvm.internal.ClassReference -> kotlin.jvm.internal.ClassReference:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    101:218:void <clinit>() -> <clinit>
    10:10:void <init>(java.lang.Class) -> <init>
    10:10:java.util.HashMap access$getClassFqNames$cp() -> access$getClassFqNames$cp
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> access$getFUNCTION_CLASSES$cp
    10:10:java.util.Map access$getSimpleNames$cp() -> access$getSimpleNames$cp
    91:91:boolean equals(java.lang.Object) -> equals
    88:88:java.lang.Void error() -> error
    27:27:java.util.List getAnnotations() -> getAnnotations
    21:21:java.util.Collection getConstructors() -> getConstructors
    10:10:java.lang.Class getJClass() -> getJClass
    18:18:java.util.Collection getMembers() -> getMembers
    24:24:java.util.Collection getNestedClasses() -> getNestedClasses
    30:30:java.lang.Object getObjectInstance() -> getObjectInstance
    15:15:java.lang.String getQualifiedName() -> getQualifiedName
    46:46:java.util.List getSealedSubclasses() -> getSealedSubclasses
    0:0:void getSealedSubclasses$annotations() -> getSealedSubclasses$annotations
    12:12:java.lang.String getSimpleName() -> getSimpleName
    42:42:java.util.List getSupertypes() -> getSupertypes
    0:0:void getSupertypes$annotations() -> getSupertypes$annotations
    38:38:java.util.List getTypeParameters() -> getTypeParameters
    0:0:void getTypeParameters$annotations() -> getTypeParameters$annotations
    50:50:kotlin.reflect.KVisibility getVisibility() -> getVisibility
    0:0:void getVisibility$annotations() -> getVisibility$annotations
    94:94:int hashCode() -> hashCode
    62:62:boolean isAbstract() -> isAbstract
    0:0:void isAbstract$annotations() -> isAbstract$annotations
    78:78:boolean isCompanion() -> isCompanion
    0:0:void isCompanion$annotations() -> isCompanion$annotations
    70:70:boolean isData() -> isData
    0:0:void isData$annotations() -> isData$annotations
    54:54:boolean isFinal() -> isFinal
    0:0:void isFinal$annotations() -> isFinal$annotations
    82:82:boolean isFun() -> isFun
    0:0:void isFun$annotations() -> isFun$annotations
    74:74:boolean isInner() -> isInner
    0:0:void isInner$annotations() -> isInner$annotations
    34:34:boolean isInstance(java.lang.Object) -> isInstance
    58:58:boolean isOpen() -> isOpen
    0:0:void isOpen$annotations() -> isOpen$annotations
    66:66:boolean isSealed() -> isSealed
    0:0:void isSealed$annotations() -> isSealed$annotations
    86:86:boolean isValue() -> isValue
    0:0:void isValue$annotations() -> isValue$annotations
    97:97:java.lang.String toString() -> toString
kotlin.jvm.internal.ClassReference$Companion -> kotlin.jvm.internal.ClassReference$Companion:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    99:99:void <init>() -> <init>
    184:193:java.lang.String getClassQualifiedName(java.lang.Class) -> getClassQualifiedName
    166:180:java.lang.String getClassSimpleName(java.lang.Class) -> getClassSimpleName
    197:201:boolean isInstance(java.lang.Object,java.lang.Class) -> isInstance
kotlin.jvm.internal.CollectionToArray -> kotlin.jvm.internal.CollectionToArray:
# {"id":"sourceFile","fileName":"CollectionToArray.kt"}
    14:14:void <clinit>() -> <clinit>
    30:126:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    21:104:java.lang.Object[] toArray(java.util.Collection) -> toArray
    57:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArrayImpl
kotlin.jvm.internal.DefaultConstructorMarker -> kotlin.jvm.internal.DefaultConstructorMarker:
    9:9:void <init>() -> <init>
kotlin.jvm.internal.DoubleCompanionObject -> kotlin.jvm.internal.DoubleCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    0:0:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    0:0:double getMAX_VALUE() -> getMAX_VALUE
    0:0:void getMAX_VALUE$annotations() -> getMAX_VALUE$annotations
    0:0:double getMIN_VALUE() -> getMIN_VALUE
    0:0:void getMIN_VALUE$annotations() -> getMIN_VALUE$annotations
    0:0:double getNEGATIVE_INFINITY() -> getNEGATIVE_INFINITY
    0:0:void getNEGATIVE_INFINITY$annotations() -> getNEGATIVE_INFINITY$annotations
    0:0:double getNaN() -> getNaN
    0:0:void getNaN$annotations() -> getNaN$annotations
    0:0:double getPOSITIVE_INFINITY() -> getPOSITIVE_INFINITY
    0:0:void getPOSITIVE_INFINITY$annotations() -> getPOSITIVE_INFINITY$annotations
    0:0:void getSIZE_BITS$annotations() -> getSIZE_BITS$annotations
    0:0:void getSIZE_BYTES$annotations() -> getSIZE_BYTES$annotations
kotlin.jvm.internal.DoubleSpreadBuilder -> kotlin.jvm.internal.DoubleSpreadBuilder:
# {"id":"sourceFile","fileName":"PrimitiveSpreadBuilders.kt"}
    74:75:void <init>(int) -> <init>
    79:79:void add(double) -> add
    74:74:int getSize(java.lang.Object) -> getSize
    76:76:int getSize(double[]) -> getSize
    82:82:double[] toArray() -> toArray
kotlin.jvm.internal.EnumCompanionObject -> kotlin.jvm.internal.EnumCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    0:0:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
kotlin.jvm.internal.FloatCompanionObject -> kotlin.jvm.internal.FloatCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    0:0:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    0:0:float getMAX_VALUE() -> getMAX_VALUE
    0:0:void getMAX_VALUE$annotations() -> getMAX_VALUE$annotations
    0:0:float getMIN_VALUE() -> getMIN_VALUE
    0:0:void getMIN_VALUE$annotations() -> getMIN_VALUE$annotations
    0:0:float getNEGATIVE_INFINITY() -> getNEGATIVE_INFINITY
    0:0:void getNEGATIVE_INFINITY$annotations() -> getNEGATIVE_INFINITY$annotations
    0:0:float getNaN() -> getNaN
    0:0:void getNaN$annotations() -> getNaN$annotations
    0:0:float getPOSITIVE_INFINITY() -> getPOSITIVE_INFINITY
    0:0:void getPOSITIVE_INFINITY$annotations() -> getPOSITIVE_INFINITY$annotations
    0:0:void getSIZE_BITS$annotations() -> getSIZE_BITS$annotations
    0:0:void getSIZE_BYTES$annotations() -> getSIZE_BYTES$annotations
kotlin.jvm.internal.FloatSpreadBuilder -> kotlin.jvm.internal.FloatSpreadBuilder:
# {"id":"sourceFile","fileName":"PrimitiveSpreadBuilders.kt"}
    85:86:void <init>(int) -> <init>
    90:90:void add(float) -> add
    85:85:int getSize(java.lang.Object) -> getSize
    87:87:int getSize(float[]) -> getSize
    93:93:float[] toArray() -> toArray
kotlin.jvm.internal.FunInterfaceConstructorReference -> kotlin.jvm.internal.FunInterfaceConstructorReference:
    31:32:void <init>(java.lang.Class) -> <init>
    38:40:boolean equals(java.lang.Object) -> equals
    25:25:kotlin.reflect.KCallable getReflected() -> getReflected
    55:55:kotlin.reflect.KFunction getReflected() -> getReflected
    45:45:int hashCode() -> hashCode
    50:50:java.lang.String toString() -> toString
kotlin.jvm.internal.FunctionBase -> kotlin.jvm.internal.FunctionBase:
# {"id":"sourceFile","fileName":"FunctionBase.kt"}
kotlin.jvm.internal.FunctionImpl -> kotlin.jvm.internal.FunctionImpl:
    17:17:void <init>() -> <init>
    31:32:void checkArity(int) -> checkArity
    42:43:java.lang.Object invoke() -> invoke
    48:49:java.lang.Object invoke(java.lang.Object) -> invoke
    54:55:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    60:61:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    66:67:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    72:73:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    78:79:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    84:85:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    90:91:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    96:97:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    102:103:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    108:109:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    114:115:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    120:121:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    126:127:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    132:133:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    138:139:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    144:145:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    150:151:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    156:157:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    162:163:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    168:169:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    174:175:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    27:27:java.lang.Object invokeVararg(java.lang.Object[]) -> invokeVararg
    37:37:void throwWrongArity(int) -> throwWrongArity
kotlin.jvm.internal.FunctionReference -> kotlin.jvm.internal.FunctionReference:
    40:40:void <init>(int) -> <init>
    45:45:void <init>(int,java.lang.Object) -> <init>
    50:52:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    69:69:kotlin.reflect.KCallable computeReflected() -> computeReflected
    105:116:boolean equals(java.lang.Object) -> equals
    57:57:int getArity() -> getArity
    12:12:kotlin.reflect.KCallable getReflected() -> getReflected
    63:63:kotlin.reflect.KFunction getReflected() -> getReflected
    123:123:int hashCode() -> hashCode
    81:81:boolean isExternal() -> isExternal
    93:93:boolean isInfix() -> isInfix
    75:75:boolean isInline() -> isInline
    87:87:boolean isOperator() -> isOperator
    99:99:boolean isSuspend() -> isSuspend
    128:136:java.lang.String toString() -> toString
kotlin.jvm.internal.FunctionReferenceImpl -> kotlin.jvm.internal.FunctionReferenceImpl:
    15:17:void <init>(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    24:24:void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:29:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
kotlin.jvm.internal.InlineMarker -> kotlin.jvm.internal.InlineMarker:
    8:8:void <init>() -> <init>
    0:0:void afterInlineCall() -> afterInlineCall
    0:0:void beforeInlineCall() -> beforeInlineCall
    0:0:void finallyEnd(int) -> finallyEnd
    0:0:void finallyStart(int) -> finallyStart
    0:0:void mark(int) -> mark
    0:0:void mark(java.lang.String) -> mark
kotlin.jvm.internal.IntCompanionObject -> kotlin.jvm.internal.IntCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    0:0:void <clinit>() -> <clinit>
    56:56:void <init>() -> <init>
    0:0:void getSIZE_BITS$annotations() -> getSIZE_BITS$annotations
    0:0:void getSIZE_BYTES$annotations() -> getSIZE_BYTES$annotations
kotlin.jvm.internal.IntSpreadBuilder -> kotlin.jvm.internal.IntSpreadBuilder:
# {"id":"sourceFile","fileName":"PrimitiveSpreadBuilders.kt"}
    96:97:void <init>(int) -> <init>
    101:101:void add(int) -> add
    96:96:int getSize(java.lang.Object) -> getSize
    98:98:int getSize(int[]) -> getSize
    104:104:int[] toArray() -> toArray
kotlin.jvm.internal.Intrinsics -> kotlin.jvm.internal.Intrinsics:
    16:16:void <init>() -> <init>
    169:169:boolean areEqual(java.lang.Object,java.lang.Object) -> areEqual
    174:174:boolean areEqual(java.lang.Double,java.lang.Double) -> areEqual
    179:179:boolean areEqual(java.lang.Double,double) -> areEqual
    184:184:boolean areEqual(double,java.lang.Double) -> areEqual
    189:189:boolean areEqual(java.lang.Float,java.lang.Float) -> areEqual
    194:194:boolean areEqual(java.lang.Float,float) -> areEqual
    199:199:boolean areEqual(float,java.lang.Float) -> areEqual
    87:87:void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String) -> checkExpressionValueIsNotNull
    113:113:void checkFieldIsNotNull(java.lang.Object,java.lang.String,java.lang.String) -> checkFieldIsNotNull
    119:119:void checkFieldIsNotNull(java.lang.Object,java.lang.String) -> checkFieldIsNotNull
    229:234:void checkHasClass(java.lang.String) -> checkHasClass
    241:246:void checkHasClass(java.lang.String,java.lang.String) -> checkHasClass
    25:25:void checkNotNull(java.lang.Object) -> checkNotNull
    31:31:void checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    93:93:void checkNotNullExpressionValue(java.lang.Object,java.lang.String) -> checkNotNullExpressionValue
    131:131:void checkNotNullParameter(java.lang.Object,java.lang.String) -> checkNotNullParameter
    125:125:void checkParameterIsNotNull(java.lang.Object,java.lang.String) -> checkParameterIsNotNull
    99:99:void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String,java.lang.String) -> checkReturnedValueIsNotNull
    107:107:void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String) -> checkReturnedValueIsNotNull
    0:0:int compare(int,int) -> compare
    0:0:int compare(long,long) -> compare
    144:157:java.lang.String createParameterIsNullExceptionMessage(java.lang.String) -> createParameterIsNullExceptionMessage
    221:221:void needClassReification() -> needClassReification
    225:225:void needClassReification(java.lang.String) -> needClassReification
    213:213:void reifiedOperationMarker(int,java.lang.String) -> reifiedOperationMarker
    217:217:void reifiedOperationMarker(int,java.lang.String,java.lang.String) -> reifiedOperationMarker
    253:253:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    257:268:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> sanitizeStackTrace
    20:20:java.lang.String stringPlus(java.lang.String,java.lang.Object) -> stringPlus
    62:62:void throwAssert() -> throwAssert
    66:66:void throwAssert(java.lang.String) -> throwAssert
    70:70:void throwIllegalArgument() -> throwIllegalArgument
    74:74:void throwIllegalArgument(java.lang.String) -> throwIllegalArgument
    78:78:void throwIllegalState() -> throwIllegalState
    82:82:void throwIllegalState(java.lang.String) -> throwIllegalState
    45:45:void throwJavaNpe() -> throwJavaNpe
    50:50:void throwJavaNpe(java.lang.String) -> throwJavaNpe
    36:36:void throwNpe() -> throwNpe
    40:40:void throwNpe(java.lang.String) -> throwNpe
    136:136:void throwParameterIsNullIAE(java.lang.String) -> throwParameterIsNullIAE
    140:140:void throwParameterIsNullNPE(java.lang.String) -> throwParameterIsNullNPE
    203:203:void throwUndefinedForReified() -> throwUndefinedForReified
    209:209:void throwUndefinedForReified(java.lang.String) -> throwUndefinedForReified
    54:54:void throwUninitializedProperty(java.lang.String) -> throwUninitializedProperty
    58:58:void throwUninitializedPropertyAccessException(java.lang.String) -> throwUninitializedPropertyAccessException
kotlin.jvm.internal.Intrinsics$Kotlin -> kotlin.jvm.internal.Intrinsics$Kotlin:
    275:275:void <init>() -> <init>
kotlin.jvm.internal.KTypeBase -> kotlin.jvm.internal.KTypeBase:
# {"id":"sourceFile","fileName":"KTypeBase.kt"}
kotlin.jvm.internal.Lambda -> kotlin.jvm.internal.Lambda:
# {"id":"sourceFile","fileName":"Lambda.kt"}
    10:10:void <init>(int) -> <init>
    10:10:int getArity() -> getArity
    11:11:java.lang.String toString() -> toString
kotlin.jvm.internal.LocalVariableReference -> kotlin.jvm.internal.LocalVariableReference:
# {"id":"sourceFile","fileName":"localVariableReferences.kt"}
    17:17:void <init>() -> <init>
    20:20:java.lang.Object get() -> get
    18:18:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
kotlin.jvm.internal.LocalVariableReferencesKt -> kotlin.jvm.internal.LocalVariableReferencesKt:
# {"id":"sourceFile","fileName":"localVariableReferences.kt"}
    1:1:java.lang.Void access$notSupportedError() -> access$notSupportedError
    13:13:java.lang.Void notSupportedError() -> notSupportedError
kotlin.jvm.internal.LongCompanionObject -> kotlin.jvm.internal.LongCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    0:0:void <clinit>() -> <clinit>
    65:65:void <init>() -> <init>
    0:0:void getSIZE_BITS$annotations() -> getSIZE_BITS$annotations
    0:0:void getSIZE_BYTES$annotations() -> getSIZE_BYTES$annotations
kotlin.jvm.internal.LongSpreadBuilder -> kotlin.jvm.internal.LongSpreadBuilder:
# {"id":"sourceFile","fileName":"PrimitiveSpreadBuilders.kt"}
    107:108:void <init>(int) -> <init>
    112:112:void add(long) -> add
    107:107:int getSize(java.lang.Object) -> getSize
    109:109:int getSize(long[]) -> getSize
    115:115:long[] toArray() -> toArray
kotlin.jvm.internal.MagicApiIntrinsics -> kotlin.jvm.internal.MagicApiIntrinsics:
    11:11:void <init>() -> <init>
    0:0:java.lang.Object anyMagicApiCall(int) -> anyMagicApiCall
    0:0:java.lang.Object anyMagicApiCall(int,long,long,java.lang.Object) -> anyMagicApiCall
    0:0:java.lang.Object anyMagicApiCall(int,long,java.lang.Object) -> anyMagicApiCall
    0:0:java.lang.Object anyMagicApiCall(int,java.lang.Object,java.lang.Object) -> anyMagicApiCall
    0:0:java.lang.Object anyMagicApiCall(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> anyMagicApiCall
    0:0:java.lang.Object anyMagicApiCall(java.lang.Object) -> anyMagicApiCall
    0:0:int intMagicApiCall(int) -> intMagicApiCall
    0:0:int intMagicApiCall(int,long,long,java.lang.Object) -> intMagicApiCall
    0:0:int intMagicApiCall(int,long,java.lang.Object) -> intMagicApiCall
    0:0:int intMagicApiCall(int,java.lang.Object,java.lang.Object) -> intMagicApiCall
    0:0:int intMagicApiCall(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> intMagicApiCall
    0:0:int intMagicApiCall(java.lang.Object) -> intMagicApiCall
    0:0:void voidMagicApiCall(int) -> voidMagicApiCall
    0:0:void voidMagicApiCall(java.lang.Object) -> voidMagicApiCall
kotlin.jvm.internal.MutableLocalVariableReference -> kotlin.jvm.internal.MutableLocalVariableReference:
# {"id":"sourceFile","fileName":"localVariableReferences.kt"}
    25:25:void <init>() -> <init>
    28:28:java.lang.Object get() -> get
    26:26:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    30:30:void set(java.lang.Object) -> set
kotlin.jvm.internal.MutablePropertyReference -> kotlin.jvm.internal.MutablePropertyReference:
    13:13:void <init>() -> <init>
    18:18:void <init>(java.lang.Object) -> <init>
    23:23:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
kotlin.jvm.internal.MutablePropertyReference0 -> kotlin.jvm.internal.MutablePropertyReference0:
    15:15:void <init>() -> <init>
    20:20:void <init>(java.lang.Object) -> <init>
    25:25:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    30:30:kotlin.reflect.KCallable computeReflected() -> computeReflected
    51:51:java.lang.Object getDelegate() -> getDelegate
    13:13:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    40:40:kotlin.reflect.KProperty0$Getter getGetter() -> getGetter
    13:13:kotlin.reflect.KMutableProperty$Setter getSetter() -> getSetter
    45:45:kotlin.reflect.KMutableProperty0$Setter getSetter() -> getSetter
    35:35:java.lang.Object invoke() -> invoke
kotlin.jvm.internal.MutablePropertyReference0Impl -> kotlin.jvm.internal.MutablePropertyReference0Impl:
    15:17:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    24:24:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:29:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    34:34:java.lang.Object get() -> get
    39:39:void set(java.lang.Object) -> set
kotlin.jvm.internal.MutablePropertyReference1 -> kotlin.jvm.internal.MutablePropertyReference1:
    16:16:void <init>() -> <init>
    21:21:void <init>(java.lang.Object) -> <init>
    26:26:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    31:31:kotlin.reflect.KCallable computeReflected() -> computeReflected
    52:52:java.lang.Object getDelegate(java.lang.Object) -> getDelegate
    13:13:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    41:41:kotlin.reflect.KProperty1$Getter getGetter() -> getGetter
    13:13:kotlin.reflect.KMutableProperty$Setter getSetter() -> getSetter
    46:46:kotlin.reflect.KMutableProperty1$Setter getSetter() -> getSetter
    36:36:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.jvm.internal.MutablePropertyReference1Impl -> kotlin.jvm.internal.MutablePropertyReference1Impl:
    15:17:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    24:24:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:29:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    34:34:java.lang.Object get(java.lang.Object) -> get
    39:39:void set(java.lang.Object,java.lang.Object) -> set
kotlin.jvm.internal.MutablePropertyReference2 -> kotlin.jvm.internal.MutablePropertyReference2:
    16:16:void <init>() -> <init>
    21:21:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    26:26:kotlin.reflect.KCallable computeReflected() -> computeReflected
    47:47:java.lang.Object getDelegate(java.lang.Object,java.lang.Object) -> getDelegate
    13:13:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    36:36:kotlin.reflect.KProperty2$Getter getGetter() -> getGetter
    13:13:kotlin.reflect.KMutableProperty$Setter getSetter() -> getSetter
    41:41:kotlin.reflect.KMutableProperty2$Setter getSetter() -> getSetter
    31:31:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlin.jvm.internal.MutablePropertyReference2Impl -> kotlin.jvm.internal.MutablePropertyReference2Impl:
    15:16:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    23:23:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    28:28:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    33:33:void set(java.lang.Object,java.lang.Object,java.lang.Object) -> set
kotlin.jvm.internal.PackageReference -> kotlin.jvm.internal.PackageReference:
# {"id":"sourceFile","fileName":"PackageReference.kt"}
    10:13:void <init>(java.lang.Class,java.lang.String) -> <init>
    19:19:boolean equals(java.lang.Object) -> equals
    12:12:java.lang.Class getJClass() -> getJClass
    16:16:java.util.Collection getMembers() -> getMembers
    22:22:int hashCode() -> hashCode
    25:25:java.lang.String toString() -> toString
kotlin.jvm.internal.PrimitiveSpreadBuilder -> kotlin.jvm.internal.PrimitiveSpreadBuilder:
# {"id":"sourceFile","fileName":"PrimitiveSpreadBuilders.kt"}
    8:14:void <init>(int) -> <init>
    17:17:void addSpread(java.lang.Object) -> addSpread
    11:11:int getPosition() -> getPosition
    0:0:void getSpreads$annotations() -> getSpreads$annotations
    11:11:void setPosition(int) -> setPosition
    22:23:int size() -> size
    31:45:java.lang.Object toArray(java.lang.Object,java.lang.Object) -> toArray
kotlin.jvm.internal.PropertyReference -> kotlin.jvm.internal.PropertyReference:
    17:19:void <init>() -> <init>
    24:26:void <init>(java.lang.Object) -> <init>
    31:33:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    47:47:kotlin.reflect.KCallable compute() -> compute
    65:73:boolean equals(java.lang.Object) -> equals
    12:12:kotlin.reflect.KCallable getReflected() -> getReflected
    39:42:kotlin.reflect.KProperty getReflected() -> getReflected
    80:80:int hashCode() -> hashCode
    59:59:boolean isConst() -> isConst
    53:53:boolean isLateinit() -> isLateinit
    85:90:java.lang.String toString() -> toString
kotlin.jvm.internal.PropertyReference0 -> kotlin.jvm.internal.PropertyReference0:
    15:15:void <init>() -> <init>
    20:20:void <init>(java.lang.Object) -> <init>
    25:25:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    30:30:kotlin.reflect.KCallable computeReflected() -> computeReflected
    46:46:java.lang.Object getDelegate() -> getDelegate
    12:12:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    40:40:kotlin.reflect.KProperty0$Getter getGetter() -> getGetter
    35:35:java.lang.Object invoke() -> invoke
kotlin.jvm.internal.PropertyReference0Impl -> kotlin.jvm.internal.PropertyReference0Impl:
    15:17:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    24:24:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:29:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    34:34:java.lang.Object get() -> get
kotlin.jvm.internal.PropertyReference1 -> kotlin.jvm.internal.PropertyReference1:
    15:15:void <init>() -> <init>
    20:20:void <init>(java.lang.Object) -> <init>
    25:25:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    30:30:kotlin.reflect.KCallable computeReflected() -> computeReflected
    46:46:java.lang.Object getDelegate(java.lang.Object) -> getDelegate
    12:12:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    40:40:kotlin.reflect.KProperty1$Getter getGetter() -> getGetter
    35:35:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.jvm.internal.PropertyReference1Impl -> kotlin.jvm.internal.PropertyReference1Impl:
    15:17:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    24:24:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:29:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    34:34:java.lang.Object get(java.lang.Object) -> get
kotlin.jvm.internal.PropertyReference2 -> kotlin.jvm.internal.PropertyReference2:
    15:15:void <init>() -> <init>
    20:20:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    25:25:kotlin.reflect.KCallable computeReflected() -> computeReflected
    41:41:java.lang.Object getDelegate(java.lang.Object,java.lang.Object) -> getDelegate
    12:12:kotlin.reflect.KProperty$Getter getGetter() -> getGetter
    35:35:kotlin.reflect.KProperty2$Getter getGetter() -> getGetter
    30:30:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
kotlin.jvm.internal.PropertyReference2Impl -> kotlin.jvm.internal.PropertyReference2Impl:
    15:16:void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    23:23:void <init>(java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    28:28:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
kotlin.jvm.internal.Ref -> kotlin.jvm.internal.Ref:
    11:11:void <init>() -> <init>
kotlin.jvm.internal.Ref$BooleanRef -> kotlin.jvm.internal.Ref$BooleanRef:
    85:85:void <init>() -> <init>
    90:90:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ByteRef -> kotlin.jvm.internal.Ref$ByteRef:
    22:22:void <init>() -> <init>
    27:27:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$CharRef -> kotlin.jvm.internal.Ref$CharRef:
    76:76:void <init>() -> <init>
    81:81:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$DoubleRef -> kotlin.jvm.internal.Ref$DoubleRef:
    67:67:void <init>() -> <init>
    72:72:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$FloatRef -> kotlin.jvm.internal.Ref$FloatRef:
    58:58:void <init>() -> <init>
    63:63:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$IntRef -> kotlin.jvm.internal.Ref$IntRef:
    40:40:void <init>() -> <init>
    45:45:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$LongRef -> kotlin.jvm.internal.Ref$LongRef:
    49:49:void <init>() -> <init>
    54:54:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ObjectRef -> kotlin.jvm.internal.Ref$ObjectRef:
    13:13:void <init>() -> <init>
    18:18:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ShortRef -> kotlin.jvm.internal.Ref$ShortRef:
    31:31:void <init>() -> <init>
    36:36:java.lang.String toString() -> toString
kotlin.jvm.internal.Reflection -> kotlin.jvm.internal.Reflection:
    26:39:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    42:42:kotlin.reflect.KClass createKotlinClass(java.lang.Class) -> createKotlinClass
    46:46:kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String) -> createKotlinClass
    90:90:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> function
    60:60:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    64:64:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String) -> getOrCreateKotlinClass
    68:72:kotlin.reflect.KClass[] getOrCreateKotlinClasses(java.lang.Class[]) -> getOrCreateKotlinClasses
    51:51:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class) -> getOrCreateKotlinPackage
    56:56:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String) -> getOrCreateKotlinPackage
    197:197:kotlin.reflect.KType mutableCollectionType(kotlin.reflect.KType) -> mutableCollectionType
    100:100:kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0) -> mutableProperty0
    108:108:kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1) -> mutableProperty1
    116:116:kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2) -> mutableProperty2
    202:202:kotlin.reflect.KType nothingType(kotlin.reflect.KType) -> nothingType
    148:148:kotlin.reflect.KType nullableTypeOf(kotlin.reflect.KClassifier) -> nullableTypeOf
    153:153:kotlin.reflect.KType nullableTypeOf(java.lang.Class) -> nullableTypeOf
    158:158:kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection) -> nullableTypeOf
    163:163:kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection) -> nullableTypeOf
    168:168:kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection[]) -> nullableTypeOf
    192:192:kotlin.reflect.KType platformType(kotlin.reflect.KType,kotlin.reflect.KType) -> platformType
    96:96:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0) -> property0
    104:104:kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1) -> property1
    112:112:kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2) -> property2
    79:79:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    84:84:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
    180:180:void setUpperBounds(kotlin.reflect.KTypeParameter,kotlin.reflect.KType) -> setUpperBounds
    185:185:void setUpperBounds(kotlin.reflect.KTypeParameter,kotlin.reflect.KType[]) -> setUpperBounds
    123:123:kotlin.reflect.KType typeOf(kotlin.reflect.KClassifier) -> typeOf
    128:128:kotlin.reflect.KType typeOf(java.lang.Class) -> typeOf
    133:133:kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection) -> typeOf
    138:138:kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection) -> typeOf
    143:143:kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection[]) -> typeOf
    175:175:kotlin.reflect.KTypeParameter typeParameter(java.lang.Object,java.lang.String,kotlin.reflect.KVariance,boolean) -> typeParameter
kotlin.jvm.internal.ReflectionFactory -> kotlin.jvm.internal.ReflectionFactory:
    14:14:void <init>() -> <init>
    18:18:kotlin.reflect.KClass createKotlinClass(java.lang.Class) -> createKotlinClass
    22:22:kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String) -> createKotlinClass
    0:0:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> function
    30:30:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> getOrCreateKotlinClass
    34:34:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String) -> getOrCreateKotlinClass
    26:26:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String) -> getOrCreateKotlinPackage
    107:110:kotlin.reflect.KType mutableCollectionType(kotlin.reflect.KType) -> mutableCollectionType
    0:0:kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0) -> mutableProperty0
    0:0:kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1) -> mutableProperty1
    0:0:kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2) -> mutableProperty2
    116:119:kotlin.reflect.KType nothingType(kotlin.reflect.KType) -> nothingType
    99:101:kotlin.reflect.KType platformType(kotlin.reflect.KType,kotlin.reflect.KType) -> platformType
    0:0:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0) -> property0
    0:0:kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1) -> property1
    0:0:kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2) -> property2
    39:39:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    44:45:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
    94:94:void setUpperBounds(kotlin.reflect.KTypeParameter,java.util.List) -> setUpperBounds
    84:84:kotlin.reflect.KType typeOf(kotlin.reflect.KClassifier,java.util.List,boolean) -> typeOf
    89:89:kotlin.reflect.KTypeParameter typeParameter(java.lang.Object,java.lang.String,kotlin.reflect.KVariance,boolean) -> typeParameter
kotlin.jvm.internal.SerializedIr -> kotlin.jvm.internal.SerializedIr:
# {"id":"sourceFile","fileName":"SerializedIr.kt"}
kotlin.jvm.internal.ShortCompanionObject -> kotlin.jvm.internal.ShortCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    0:0:void <clinit>() -> <clinit>
    74:74:void <init>() -> <init>
    0:0:void getSIZE_BITS$annotations() -> getSIZE_BITS$annotations
    0:0:void getSIZE_BYTES$annotations() -> getSIZE_BYTES$annotations
kotlin.jvm.internal.ShortSpreadBuilder -> kotlin.jvm.internal.ShortSpreadBuilder:
# {"id":"sourceFile","fileName":"PrimitiveSpreadBuilders.kt"}
    118:119:void <init>(int) -> <init>
    123:123:void add(short) -> add
    118:118:int getSize(java.lang.Object) -> getSize
    120:120:int getSize(short[]) -> getSize
    126:126:short[] toArray() -> toArray
kotlin.jvm.internal.SourceDebugExtension -> kotlin.jvm.internal.SourceDebugExtension:
# {"id":"sourceFile","fileName":"SourceDebugExtension.kt"}
kotlin.jvm.internal.SpreadBuilder -> kotlin.jvm.internal.SpreadBuilder:
    17:18:void <init>(int) -> <init>
    55:55:void add(java.lang.Object) -> add
    25:46:void addSpread(java.lang.Object) -> addSpread
    51:51:int size() -> size
    59:59:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
kotlin.jvm.internal.StringCompanionObject -> kotlin.jvm.internal.StringCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    0:0:void <clinit>() -> <clinit>
    110:110:void <init>() -> <init>
kotlin.jvm.internal.TypeIntrinsics -> kotlin.jvm.internal.TypeIntrinsics:
    15:15:void <init>() -> <init>
    123:126:java.util.Collection asMutableCollection(java.lang.Object) -> asMutableCollection
    130:133:java.util.Collection asMutableCollection(java.lang.Object,java.lang.String) -> asMutableCollection
    95:98:java.lang.Iterable asMutableIterable(java.lang.Object) -> asMutableIterable
    102:105:java.lang.Iterable asMutableIterable(java.lang.Object,java.lang.String) -> asMutableIterable
    39:42:java.util.Iterator asMutableIterator(java.lang.Object) -> asMutableIterator
    46:49:java.util.Iterator asMutableIterator(java.lang.Object,java.lang.String) -> asMutableIterator
    151:154:java.util.List asMutableList(java.lang.Object) -> asMutableList
    158:161:java.util.List asMutableList(java.lang.Object,java.lang.String) -> asMutableList
    67:70:java.util.ListIterator asMutableListIterator(java.lang.Object) -> asMutableListIterator
    74:77:java.util.ListIterator asMutableListIterator(java.lang.Object,java.lang.String) -> asMutableListIterator
    207:210:java.util.Map asMutableMap(java.lang.Object) -> asMutableMap
    214:217:java.util.Map asMutableMap(java.lang.Object,java.lang.String) -> asMutableMap
    235:238:java.util.Map$Entry asMutableMapEntry(java.lang.Object) -> asMutableMapEntry
    242:245:java.util.Map$Entry asMutableMapEntry(java.lang.Object,java.lang.String) -> asMutableMapEntry
    179:182:java.util.Set asMutableSet(java.lang.Object) -> asMutableSet
    186:189:java.util.Set asMutableSet(java.lang.Object,java.lang.String) -> asMutableSet
    341:342:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int) -> beforeCheckcastToFunctionOfArity
    348:349:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int,java.lang.String) -> beforeCheckcastToFunctionOfArity
    138:141:java.util.Collection castToCollection(java.lang.Object) -> castToCollection
    110:113:java.lang.Iterable castToIterable(java.lang.Object) -> castToIterable
    54:57:java.util.Iterator castToIterator(java.lang.Object) -> castToIterator
    166:169:java.util.List castToList(java.lang.Object) -> castToList
    82:85:java.util.ListIterator castToListIterator(java.lang.Object) -> castToListIterator
    222:225:java.util.Map castToMap(java.lang.Object) -> castToMap
    250:253:java.util.Map$Entry castToMapEntry(java.lang.Object) -> castToMapEntry
    194:197:java.util.Set castToSet(java.lang.Object) -> castToSet
    258:327:int getFunctionArity(java.lang.Object) -> getFunctionArity
    336:336:boolean isFunctionOfArity(java.lang.Object,int) -> isFunctionOfArity
    118:118:boolean isMutableCollection(java.lang.Object) -> isMutableCollection
    90:90:boolean isMutableIterable(java.lang.Object) -> isMutableIterable
    34:34:boolean isMutableIterator(java.lang.Object) -> isMutableIterator
    146:146:boolean isMutableList(java.lang.Object) -> isMutableList
    62:62:boolean isMutableListIterator(java.lang.Object) -> isMutableListIterator
    202:202:boolean isMutableMap(java.lang.Object) -> isMutableMap
    230:230:boolean isMutableMapEntry(java.lang.Object) -> isMutableMapEntry
    174:174:boolean isMutableSet(java.lang.Object) -> isMutableSet
    17:17:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    21:22:void throwCce(java.lang.Object,java.lang.String) -> throwCce
    26:26:void throwCce(java.lang.String) -> throwCce
    30:30:java.lang.ClassCastException throwCce(java.lang.ClassCastException) -> throwCce
kotlin.jvm.internal.TypeParameterReference -> kotlin.jvm.internal.TypeParameterReference:
# {"id":"sourceFile","fileName":"TypeParameterReference.kt"}
    0:0:void <clinit>() -> <clinit>
    13:18:void <init>(java.lang.Object,java.lang.String,kotlin.reflect.KVariance,boolean) -> <init>
    37:37:boolean equals(java.lang.Object) -> equals
    16:16:java.lang.String getName() -> getName
    25:25:java.util.List getUpperBounds() -> getUpperBounds
    0:0:void getUpperBounds$annotations() -> getUpperBounds$annotations
    17:17:kotlin.reflect.KVariance getVariance() -> getVariance
    40:40:int hashCode() -> hashCode
    18:18:boolean isReified() -> isReified
    30:33:void setUpperBounds(java.util.List) -> setUpperBounds
    42:42:java.lang.String toString() -> toString
kotlin.jvm.internal.TypeParameterReference$Companion -> kotlin.jvm.internal.TypeParameterReference$Companion:
# {"id":"sourceFile","fileName":"TypeParameterReference.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    44:44:void <init>() -> <init>
    46:54:java.lang.String toString(kotlin.reflect.KTypeParameter) -> toString
kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings -> kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings:
# {"id":"sourceFile","fileName":"TypeParameterReference.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.jvm.internal.TypeReference -> kotlin.jvm.internal.TypeReference:
# {"id":"sourceFile","fileName":"TypeReference.kt"}
    0:0:void <clinit>() -> <clinit>
    10:15:void <init>(kotlin.reflect.KClassifier,java.util.List,kotlin.reflect.KType,int) -> <init>
    21:21:void <init>(kotlin.reflect.KClassifier,java.util.List,boolean) -> <init>
    10:10:java.lang.String access$asString(kotlin.jvm.internal.TypeReference,kotlin.reflect.KTypeProjection) -> access$asString
    41:65:java.lang.String asString(boolean) -> asString
    88:94:java.lang.String asString(kotlin.reflect.KTypeProjection) -> asString
    30:32:boolean equals(java.lang.Object) -> equals
    24:24:java.util.List getAnnotations() -> getAnnotations
    13:13:java.util.List getArguments() -> getArguments
    74:81:java.lang.String getArrayClassName(java.lang.Class) -> getArrayClassName
    12:12:kotlin.reflect.KClassifier getClassifier() -> getClassifier
    15:15:int getFlags$kotlin_stdlib() -> getFlags$kotlin_stdlib
    0:0:void getFlags$kotlin_stdlib$annotations() -> getFlags$kotlin_stdlib$annotations
    14:14:kotlin.reflect.KType getPlatformTypeUpperBound$kotlin_stdlib() -> getPlatformTypeUpperBound$kotlin_stdlib
    0:0:void getPlatformTypeUpperBound$kotlin_stdlib$annotations() -> getPlatformTypeUpperBound$kotlin_stdlib$annotations
    35:35:int hashCode() -> hashCode
    27:27:boolean isMarkedNullable() -> isMarkedNullable
    38:38:java.lang.String toString() -> toString
kotlin.jvm.internal.TypeReference$Companion -> kotlin.jvm.internal.TypeReference$Companion:
# {"id":"sourceFile","fileName":"TypeReference.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    99:99:void <init>() -> <init>
kotlin.jvm.internal.TypeReference$WhenMappings -> kotlin.jvm.internal.TypeReference$WhenMappings:
# {"id":"sourceFile","fileName":"TypeReference.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.jvm.internal.TypeReference$asString$args$1 -> kotlin.jvm.internal.TypeReference$asString$args$1:
# {"id":"sourceFile","fileName":"TypeReference.kt"}
    0:0:void <init>(kotlin.jvm.internal.TypeReference) -> <init>
    51:51:java.lang.CharSequence invoke(kotlin.reflect.KTypeProjection) -> invoke
    51:51:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.jvm.internal.markers.KMappedMarker -> kotlin.jvm.internal.markers.KMappedMarker:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.jvm.internal.markers.KMutableCollection -> kotlin.jvm.internal.markers.KMutableCollection:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.jvm.internal.markers.KMutableIterable -> kotlin.jvm.internal.markers.KMutableIterable:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.jvm.internal.markers.KMutableIterator -> kotlin.jvm.internal.markers.KMutableIterator:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.jvm.internal.markers.KMutableList -> kotlin.jvm.internal.markers.KMutableList:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.jvm.internal.markers.KMutableListIterator -> kotlin.jvm.internal.markers.KMutableListIterator:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.jvm.internal.markers.KMutableMap -> kotlin.jvm.internal.markers.KMutableMap:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.jvm.internal.markers.KMutableMap$Entry -> kotlin.jvm.internal.markers.KMutableMap$Entry:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.jvm.internal.markers.KMutableSet -> kotlin.jvm.internal.markers.KMutableSet:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.jvm.internal.unsafe.MonitorKt -> kotlin.jvm.internal.unsafe.MonitorKt:
# {"id":"sourceFile","fileName":"monitor.kt"}
    9:9:void monitorEnter(java.lang.Object) -> monitorEnter
    12:12:void monitorExit(java.lang.Object) -> monitorExit
kotlin.jvm.jdk8.JvmRepeatableKt -> kotlin.jvm.jdk8.JvmRepeatableKt:
# {"id":"sourceFile","fileName":"JvmRepeatable.kt"}
    0:0:void JvmRepeatable$annotations() -> JvmRepeatable$annotations
kotlin.jvm.optionals.OptionalsKt -> kotlin.jvm.optionals.OptionalsKt:
# {"id":"sourceFile","fileName":"Optionals.kt"}
    68:68:kotlin.sequences.Sequence asSequence(java.util.Optional) -> asSequence
    22:22:java.lang.Object getOrDefault(java.util.Optional,java.lang.Object) -> getOrDefault
    30:30:java.lang.Object getOrElse(java.util.Optional,kotlin.jvm.functions.Function0) -> getOrElse
    15:15:java.lang.Object getOrNull(java.util.Optional) -> getOrNull
    38:39:java.util.Collection toCollection(java.util.Optional,java.util.Collection) -> toCollection
    51:51:java.util.List toList(java.util.Optional) -> toList
    60:60:java.util.Set toSet(java.util.Optional) -> toSet
kotlin.jvm.optionals.OptionalsKt$$ExternalSyntheticApiModelOutline0 -> kotlin.jvm.optionals.OptionalsKt$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlin.jvm.optionals.OptionalsKt$$InternalSyntheticApiModelOutline$1$6b42ea28dc063bf0534e525b50022d50b0a3ba579257350b064bf64317003314$0.m(java.util.Optional) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.jvm.optionals.OptionalsKt$$ExternalSyntheticApiModelOutline1 -> kotlin.jvm.optionals.OptionalsKt$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object kotlin.jvm.optionals.OptionalsKt$$InternalSyntheticApiModelOutline$1$6b42ea28dc063bf0534e525b50022d50b0a3ba579257350b064bf64317003314$1.m(java.util.Optional) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.jvm.optionals.OptionalsKt$$ExternalSyntheticApiModelOutline2 -> kotlin.jvm.optionals.OptionalsKt$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object kotlin.jvm.optionals.OptionalsKt$$InternalSyntheticApiModelOutline$1$721224749e2f07a1ce5d80f0ff6f730f4c7ca06d1eadd6feabd2cff683f58055$0.m(java.util.Optional,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.math.Constants -> kotlin.math.Constants:
# {"id":"sourceFile","fileName":"MathJVM.kt"}
    24:35:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
kotlin.math.MathKt -> kotlin.math.MathKt:
    1:1:void <init>() -> <init>
    0:0:int getSign(int) -> getSign
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getSign(long) -> getSign
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int roundToInt(double) -> roundToInt
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long roundToLong(double) -> roundToLong
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.math.MathKt__MathHKt -> kotlin.math.MathKt__MathHKt:
# {"id":"sourceFile","fileName":"MathH.kt"}
    0:0:void <init>() -> <init>
    0:0:void getE$annotations() -> getE$annotations
    0:0:void getPI$annotations() -> getPI$annotations
kotlin.math.MathKt__MathJVMKt -> kotlin.math.MathKt__MathJVMKt:
# {"id":"sourceFile","fileName":"MathJVM.kt"}
    0:0:void <init>() -> <init>
    524:524:double IEEErem(double,double) -> IEEErem
    1070:1070:float IEEErem(float,float) -> IEEErem
    431:431:double abs(double) -> abs
    978:978:float abs(float) -> abs
    1196:1196:int abs(int) -> abs
    1249:1249:long abs(long) -> abs
    88:88:double acos(double) -> acos
    692:692:float acos(float) -> acos
    213:229:double acosh(double) -> acosh
    786:786:float acosh(float) -> acosh
    77:77:double asin(double) -> asin
    681:681:float asin(float) -> asin
    173:189:double asinh(double) -> asinh
    772:772:float asinh(float) -> asinh
    99:99:double atan(double) -> atan
    703:703:float atan(float) -> atan
    119:119:double atan2(double,double) -> atan2
    723:723:float atan2(float,float) -> atan2
    246:253:double atanh(double) -> atanh
    801:801:float atanh(float) -> atanh
    480:480:double cbrt(double) -> cbrt
    1027:1027:float cbrt(float) -> cbrt
    381:381:double ceil(double) -> ceil
    928:928:float ceil(float) -> ceil
    57:57:double cos(double) -> cos
    661:661:float cos(float) -> cos
    142:142:double cosh(double) -> cosh
    746:746:float cosh(float) -> cosh
    287:287:double exp(double) -> exp
    834:834:float exp(float) -> exp
    303:303:double expm1(double) -> expm1
    850:850:float expm1(float) -> expm1
    393:393:double floor(double) -> floor
    940:940:float floor(float) -> floor
    536:536:double getAbsoluteValue(double) -> getAbsoluteValue
    1082:1082:float getAbsoluteValue(float) -> getAbsoluteValue
    1222:1222:int getAbsoluteValue(int) -> getAbsoluteValue
    1275:1275:long getAbsoluteValue(long) -> getAbsoluteValue
    0:0:void getAbsoluteValue$annotations(double) -> getAbsoluteValue$annotations
    0:0:void getAbsoluteValue$annotations(float) -> getAbsoluteValue$annotations
    0:0:void getAbsoluteValue$annotations(int) -> getAbsoluteValue$annotations
    0:0:void getAbsoluteValue$annotations(long) -> getAbsoluteValue$annotations
    0:0:int getSign(int) -> getSign
    0:0:int getSign(long) -> getSign
    549:549:double getSign(double) -> getSign
    1095:1095:float getSign(float) -> getSign
    0:0:void getSign$annotations(double) -> getSign$annotations
    0:0:void getSign$annotations(float) -> getSign$annotations
    0:0:void getSign$annotations(int) -> getSign$annotations
    0:0:void getSign$annotations(long) -> getSign$annotations
    579:579:double getUlp(double) -> getUlp
    1125:1125:float getUlp(float) -> getUlp
    0:0:void getUlp$annotations(double) -> getUlp$annotations
    0:0:void getUlp$annotations(float) -> getUlp$annotations
    265:265:double hypot(double,double) -> hypot
    812:812:float hypot(float,float) -> hypot
    334:334:double ln(double) -> ln
    881:881:float ln(float) -> ln
    369:369:double ln1p(double) -> ln1p
    916:916:float ln1p(float) -> ln1p
    320:320:double log(double,double) -> log
    867:867:float log(float,float) -> log
    343:343:double log10(double) -> log10
    890:890:float log10(float) -> log10
    351:351:double log2(double) -> log2
    898:898:float log2(float) -> log2
    464:464:double max(double,double) -> max
    1011:1011:float max(float,float) -> max
    1210:1210:int max(int,int) -> max
    1263:1263:long max(long,long) -> max
    455:455:double min(double,double) -> min
    1002:1002:float min(float,float) -> min
    1203:1203:int min(int,int) -> min
    1256:1256:long min(long,long) -> min
    593:593:double nextDown(double) -> nextDown
    1139:1139:float nextDown(float) -> nextDown
    605:605:double nextTowards(double,double) -> nextTowards
    1151:1151:float nextTowards(float,float) -> nextTowards
    586:586:double nextUp(double) -> nextUp
    1132:1132:float nextUp(float) -> nextUp
    499:499:double pow(double,double) -> pow
    508:508:double pow(double,int) -> pow
    1045:1045:float pow(float,float) -> pow
    1054:1054:float pow(float,int) -> pow
    418:418:double round(double) -> round
    965:965:float round(float) -> round
    619:622:int roundToInt(double) -> roundToInt
    1165:1165:int roundToInt(float) -> roundToInt
    637:637:long roundToLong(double) -> roundToLong
    1178:1178:long roundToLong(float) -> roundToLong
    444:444:double sign(double) -> sign
    991:991:float sign(float) -> sign
    48:48:double sin(double) -> sin
    652:652:float sin(float) -> sin
    131:131:double sinh(double) -> sinh
    735:735:float sinh(float) -> sinh
    275:275:double sqrt(double) -> sqrt
    822:822:float sqrt(float) -> sqrt
    66:66:double tan(double) -> tan
    670:670:float tan(float) -> tan
    154:154:double tanh(double) -> tanh
    758:758:float tanh(float) -> tanh
    405:407:double truncate(double) -> truncate
    952:954:float truncate(float) -> truncate
    558:558:double withSign(double,double) -> withSign
    565:565:double withSign(double,int) -> withSign
    1104:1104:float withSign(float,float) -> withSign
    1111:1111:float withSign(float,int) -> withSign
kotlin.math.UMathKt -> kotlin.math.UMathKt:
# {"id":"sourceFile","fileName":"UMath.kt"}
    35:35:int max-J1ME1BU(int,int) -> max-J1ME1BU
    45:45:long max-eb3DHEI(long,long) -> max-eb3DHEI
    15:15:int min-J1ME1BU(int,int) -> min-J1ME1BU
    25:25:long min-eb3DHEI(long,long) -> min-eb3DHEI
kotlin.properties.Delegates -> kotlin.properties.Delegates:
# {"id":"sourceFile","fileName":"Delegates.kt"}
    0:0:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    21:21:kotlin.properties.ReadWriteProperty notNull() -> notNull
    33:33:kotlin.properties.ReadWriteProperty observable(java.lang.Object,kotlin.jvm.functions.Function3) -> observable
    51:51:kotlin.properties.ReadWriteProperty vetoable(java.lang.Object,kotlin.jvm.functions.Function3) -> vetoable
kotlin.properties.Delegates$observable$1 -> kotlin.properties.Delegates$observable$1:
# {"id":"sourceFile","fileName":"Delegates.kt"}
    33:33:void <init>(java.lang.Object,kotlin.jvm.functions.Function3) -> <init>
    34:34:void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object) -> afterChange
kotlin.properties.Delegates$vetoable$1 -> kotlin.properties.Delegates$vetoable$1:
# {"id":"sourceFile","fileName":"Delegates.kt"}
    51:51:void <init>(java.lang.Object,kotlin.jvm.functions.Function3) -> <init>
    52:52:boolean beforeChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object) -> beforeChange
kotlin.properties.NotNullVar -> kotlin.properties.NotNullVar:
# {"id":"sourceFile","fileName":"Delegates.kt"}
    58:58:void <init>() -> <init>
    62:62:java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty) -> getValue
    66:66:void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
    70:70:java.lang.String toString() -> toString
kotlin.properties.ObservableProperty -> kotlin.properties.ObservableProperty:
# {"id":"sourceFile","fileName":"ObservableProperty.kt"}
    14:15:void <init>(java.lang.Object) -> <init>
    0:0:void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object) -> afterChange
    0:0:boolean beforeChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object) -> beforeChange
    32:32:java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty) -> getValue
    36:41:void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object) -> setValue
    44:44:java.lang.String toString() -> toString
kotlin.properties.PropertyDelegateProvider -> kotlin.properties.PropertyDelegateProvider:
# {"id":"sourceFile","fileName":"Interfaces.kt"}
kotlin.properties.ReadOnlyProperty -> kotlin.properties.ReadOnlyProperty:
# {"id":"sourceFile","fileName":"Interfaces.kt"}
kotlin.properties.ReadWriteProperty -> kotlin.properties.ReadWriteProperty:
# {"id":"sourceFile","fileName":"Interfaces.kt"}
kotlin.random.AbstractPlatformRandom -> kotlin.random.AbstractPlatformRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    35:35:void <init>() -> <init>
    39:39:int nextBits(int) -> nextBits
    44:44:boolean nextBoolean() -> nextBoolean
    47:47:byte[] nextBytes(byte[]) -> nextBytes
    45:45:double nextDouble() -> nextDouble
    46:46:float nextFloat() -> nextFloat
    41:41:int nextInt() -> nextInt
    42:42:int nextInt(int) -> nextInt
    43:43:long nextLong() -> nextLong
kotlin.random.FallbackThreadLocalRandom -> kotlin.random.FallbackThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    50:51:void <init>() -> <init>
    56:56:java.util.Random getImpl() -> getImpl
kotlin.random.FallbackThreadLocalRandom$implStorage$1 -> kotlin.random.FallbackThreadLocalRandom$implStorage$1:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    51:51:void <init>() -> <init>
    51:51:java.lang.Object initialValue() -> initialValue
    52:52:java.util.Random initialValue() -> initialValue
kotlin.random.KotlinRandom -> kotlin.random.KotlinRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    0:0:void <clinit>() -> <clinit>
    65:65:void <init>(kotlin.random.Random) -> <init>
    65:65:kotlin.random.Random getImpl() -> getImpl
    66:66:int next(int) -> next
    69:69:boolean nextBoolean() -> nextBoolean
    75:75:void nextBytes(byte[]) -> nextBytes
    72:72:double nextDouble() -> nextDouble
    71:71:float nextFloat() -> nextFloat
    67:67:int nextInt() -> nextInt
    68:68:int nextInt(int) -> nextInt
    70:70:long nextLong() -> nextLong
    81:85:void setSeed(long) -> setSeed
kotlin.random.KotlinRandom$Companion -> kotlin.random.KotlinRandom$Companion:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    89:89:void <init>() -> <init>
kotlin.random.PlatformRandom -> kotlin.random.PlatformRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    0:0:void <clinit>() -> <clinit>
    59:59:void <init>(java.util.Random) -> <init>
    59:59:java.util.Random getImpl() -> getImpl
kotlin.random.PlatformRandom$Companion -> kotlin.random.PlatformRandom$Companion:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    60:60:void <init>() -> <init>
kotlin.random.PlatformRandomKt -> kotlin.random.PlatformRandomKt:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    16:16:java.util.Random asJavaRandom(kotlin.random.Random) -> asJavaRandom
    23:23:kotlin.random.Random asKotlinRandom(java.util.Random) -> asKotlinRandom
    29:29:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
    0:0:double doubleFromParts(int,int) -> doubleFromParts
kotlin.random.Random -> kotlin.random.Random:
# {"id":"sourceFile","fileName":"Random.kt"}
    271:271:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    19:19:kotlin.random.Random access$getDefaultRandom$cp() -> access$getDefaultRandom$cp
    163:163:boolean nextBoolean() -> nextBoolean
    222:240:byte[] nextBytes(byte[],int,int) -> nextBytes
    253:253:byte[] nextBytes(byte[]) -> nextBytes
    260:260:byte[] nextBytes(int) -> nextBytes
    221:221:byte[] nextBytes$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object) -> nextBytes$default
    170:170:double nextDouble() -> nextDouble
    181:181:double nextDouble(double) -> nextDouble
    195:203:double nextDouble(double,double) -> nextDouble
    211:211:float nextFloat() -> nextFloat
    40:40:int nextInt() -> nextInt
    53:53:int nextInt(int) -> nextInt
    65:82:int nextInt(int,int) -> nextInt
    95:95:long nextLong() -> nextLong
    108:108:long nextLong(long) -> nextLong
    120:152:long nextLong(long,long) -> nextLong
kotlin.random.Random$Default -> kotlin.random.Random$Default:
# {"id":"sourceFile","fileName":"Random.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    270:270:void <init>() -> <init>
    281:281:int nextBits(int) -> nextBits
    290:290:boolean nextBoolean() -> nextBoolean
    298:298:byte[] nextBytes(byte[]) -> nextBytes
    299:299:byte[] nextBytes(int) -> nextBytes
    301:301:byte[] nextBytes(byte[],int,int) -> nextBytes
    292:292:double nextDouble() -> nextDouble
    293:293:double nextDouble(double) -> nextDouble
    294:294:double nextDouble(double,double) -> nextDouble
    296:296:float nextFloat() -> nextFloat
    282:282:int nextInt() -> nextInt
    283:283:int nextInt(int) -> nextInt
    284:284:int nextInt(int,int) -> nextInt
    286:286:long nextLong() -> nextLong
    287:287:long nextLong(long) -> nextLong
    288:288:long nextLong(long,long) -> nextLong
    279:279:java.lang.Object writeReplace() -> writeReplace
kotlin.random.Random$Default$Serialized -> kotlin.random.Random$Default$Serialized:
# {"id":"sourceFile","fileName":"Random.kt"}
    0:0:void <clinit>() -> <clinit>
    273:273:void <init>() -> <init>
    276:276:java.lang.Object readResolve() -> readResolve
kotlin.random.RandomKt -> kotlin.random.RandomKt:
# {"id":"sourceFile","fileName":"Random.kt"}
    318:318:kotlin.random.Random Random(int) -> Random
    333:333:kotlin.random.Random Random(long) -> Random
    382:382:java.lang.String boundsErrorMessage(java.lang.Object,java.lang.Object) -> boundsErrorMessage
    378:378:void checkRangeBounds(int,int) -> checkRangeBounds
    379:379:void checkRangeBounds(long,long) -> checkRangeBounds
    380:380:void checkRangeBounds(double,double) -> checkRangeBounds
    372:372:int fastLog2(int) -> fastLog2
    346:349:int nextInt(kotlin.random.Random,kotlin.ranges.IntRange) -> nextInt
    362:365:long nextLong(kotlin.random.Random,kotlin.ranges.LongRange) -> nextLong
    0:0:int takeUpperBits(int,int) -> takeUpperBits
kotlin.random.URandomKt -> kotlin.random.URandomKt:
# {"id":"sourceFile","fileName":"URandom.kt"}
    153:153:void checkUIntRangeBounds-J1ME1BU(int,int) -> checkUIntRangeBounds-J1ME1BU
    154:154:void checkULongRangeBounds-eb3DHEI(long,long) -> checkULongRangeBounds-eb3DHEI
    138:138:byte[] nextUBytes(kotlin.random.Random,int) -> nextUBytes
    129:129:byte[] nextUBytes-EVgfTAA(kotlin.random.Random,byte[]) -> nextUBytes-EVgfTAA
    148:148:byte[] nextUBytes-Wvrt4B4(kotlin.random.Random,byte[],int,int) -> nextUBytes-Wvrt4B4
    147:147:byte[] nextUBytes-Wvrt4B4$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object) -> nextUBytes-Wvrt4B4$default
    16:16:int nextUInt(kotlin.random.Random) -> nextUInt
    59:62:int nextUInt(kotlin.random.Random,kotlin.ranges.UIntRange) -> nextUInt
    39:45:int nextUInt-a8DCA5k(kotlin.random.Random,int,int) -> nextUInt-a8DCA5k
    27:27:int nextUInt-qCasIEU(kotlin.random.Random,int) -> nextUInt-qCasIEU
    72:72:long nextULong(kotlin.random.Random) -> nextULong
    115:118:long nextULong(kotlin.random.Random,kotlin.ranges.ULongRange) -> nextULong
    83:83:long nextULong-V1Xi4fY(kotlin.random.Random,long) -> nextULong-V1Xi4fY
    95:101:long nextULong-jmpaW-c(kotlin.random.Random,long,long) -> nextULong-jmpaW-c
kotlin.random.XorWowRandom -> kotlin.random.XorWowRandom:
# {"id":"sourceFile","fileName":"XorWowRandom.kt"}
    0:0:void <clinit>() -> <clinit>
    19:34:void <init>(int,int,int,int,int,int) -> <init>
    28:28:void <init>(int,int) -> <init>
    54:54:int nextBits(int) -> nextBits
    40:49:int nextInt() -> nextInt
kotlin.random.XorWowRandom$Companion -> kotlin.random.XorWowRandom$Companion:
# {"id":"sourceFile","fileName":"XorWowRandom.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    56:56:void <init>() -> <init>
kotlin.random.jdk8.PlatformThreadLocalRandom -> kotlin.random.jdk8.PlatformThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformThreadLocalRandom.kt"}
    11:11:void <init>() -> <init>
    13:13:java.util.Random getImpl() -> getImpl
    18:18:double nextDouble(double) -> nextDouble
    15:15:int nextInt(int,int) -> nextInt
    16:16:long nextLong(long) -> nextLong
    17:17:long nextLong(long,long) -> nextLong
kotlin.ranges.CharProgression -> kotlin.ranges.CharProgression:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    0:0:void <clinit>() -> <clinit>
    15:40:void <init>(char,char,int) -> <init>
    53:54:boolean equals(java.lang.Object) -> equals
    30:30:char getFirst() -> getFirst
    35:35:char getLast() -> getLast
    40:40:int getStep() -> getStep
    57:57:int hashCode() -> hashCode
    50:50:boolean isEmpty() -> isEmpty
    15:15:java.util.Iterator iterator() -> iterator
    42:42:kotlin.collections.CharIterator iterator() -> iterator
    59:59:java.lang.String toString() -> toString
kotlin.ranges.CharProgression$Companion -> kotlin.ranges.CharProgression$Companion:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    61:61:void <init>() -> <init>
    70:70:kotlin.ranges.CharProgression fromClosedRange(char,char,int) -> fromClosedRange
kotlin.ranges.CharProgressionIterator -> kotlin.ranges.CharProgressionIterator:
# {"id":"sourceFile","fileName":"ProgressionIterators.kt"}
    14:17:void <init>(char,char,int) -> <init>
    14:14:int getStep() -> getStep
    19:19:boolean hasNext() -> hasNext
    22:28:char nextChar() -> nextChar
kotlin.ranges.CharRange -> kotlin.ranges.CharRange:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    45:45:void <clinit>() -> <clinit>
    13:13:void <init>(char,char) -> <init>
    13:13:kotlin.ranges.CharRange access$getEMPTY$cp() -> access$getEMPTY$cp
    13:13:boolean contains(java.lang.Comparable) -> contains
    25:25:boolean contains(char) -> contains
    35:36:boolean equals(java.lang.Object) -> equals
    13:13:java.lang.Comparable getEndExclusive() -> getEndExclusive
    21:22:java.lang.Character getEndExclusive() -> getEndExclusive
    0:0:void getEndExclusive$annotations() -> getEndExclusive$annotations
    13:13:java.lang.Comparable getEndInclusive() -> getEndInclusive
    15:15:java.lang.Character getEndInclusive() -> getEndInclusive
    13:13:java.lang.Comparable getStart() -> getStart
    14:14:java.lang.Character getStart() -> getStart
    39:39:int hashCode() -> hashCode
    32:32:boolean isEmpty() -> isEmpty
    41:41:java.lang.String toString() -> toString
kotlin.ranges.CharRange$Companion -> kotlin.ranges.CharRange$Companion:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    43:43:void <init>() -> <init>
    45:45:kotlin.ranges.CharRange getEMPTY() -> getEMPTY
kotlin.ranges.ClosedDoubleRange -> kotlin.ranges.ClosedDoubleRange:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    94:99:void <init>(double,double) -> <init>
    94:94:boolean contains(java.lang.Comparable) -> contains
    105:105:boolean contains(double) -> contains
    109:110:boolean equals(java.lang.Object) -> equals
    94:94:java.lang.Comparable getEndInclusive() -> getEndInclusive
    101:101:java.lang.Double getEndInclusive() -> getEndInclusive
    94:94:java.lang.Comparable getStart() -> getStart
    100:100:java.lang.Double getStart() -> getStart
    114:114:int hashCode() -> hashCode
    106:106:boolean isEmpty() -> isEmpty
    0:0:boolean lessThanOrEquals(double,double) -> lessThanOrEquals
    94:94:boolean lessThanOrEquals(java.lang.Comparable,java.lang.Comparable) -> lessThanOrEquals
    117:117:java.lang.String toString() -> toString
kotlin.ranges.ClosedDoubleRange$$ExternalSyntheticBackport0 -> kotlin.ranges.ClosedDoubleRange$$ExternalSyntheticBackport0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.ranges.ClosedDoubleRange$$InternalSyntheticBackport$1$63f83270302693a8781a89724ea4eda074f94b7c766c56bf330ce4aaa981c1fe$0.m(double) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ranges.ClosedFloatRange -> kotlin.ranges.ClosedFloatRange:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    175:180:void <init>(float,float) -> <init>
    175:175:boolean contains(java.lang.Comparable) -> contains
    186:186:boolean contains(float) -> contains
    190:191:boolean equals(java.lang.Object) -> equals
    175:175:java.lang.Comparable getEndInclusive() -> getEndInclusive
    182:182:java.lang.Float getEndInclusive() -> getEndInclusive
    175:175:java.lang.Comparable getStart() -> getStart
    181:181:java.lang.Float getStart() -> getStart
    195:195:int hashCode() -> hashCode
    187:187:boolean isEmpty() -> isEmpty
    0:0:boolean lessThanOrEquals(float,float) -> lessThanOrEquals
    175:175:boolean lessThanOrEquals(java.lang.Comparable,java.lang.Comparable) -> lessThanOrEquals
    198:198:java.lang.String toString() -> toString
kotlin.ranges.ClosedFloatingPointRange -> kotlin.ranges.ClosedFloatingPointRange:
# {"id":"sourceFile","fileName":"Ranges.kt"}
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls -> kotlin.ranges.ClosedFloatingPointRange$DefaultImpls:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    79:79:boolean contains(kotlin.ranges.ClosedFloatingPointRange,java.lang.Comparable) -> contains
    80:80:boolean isEmpty(kotlin.ranges.ClosedFloatingPointRange) -> isEmpty
kotlin.ranges.ClosedRange -> kotlin.ranges.ClosedRange:
# {"id":"sourceFile","fileName":"Range.kt"}
kotlin.ranges.ClosedRange$DefaultImpls -> kotlin.ranges.ClosedRange$DefaultImpls:
# {"id":"sourceFile","fileName":"Range.kt"}
    28:28:boolean contains(kotlin.ranges.ClosedRange,java.lang.Comparable) -> contains
    35:35:boolean isEmpty(kotlin.ranges.ClosedRange) -> isEmpty
kotlin.ranges.ComparableOpenEndRange -> kotlin.ranges.ComparableOpenEndRange:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    42:44:void <init>(java.lang.Comparable,java.lang.Comparable) -> <init>
    42:42:boolean contains(java.lang.Comparable) -> contains
    48:49:boolean equals(java.lang.Object) -> equals
    44:44:java.lang.Comparable getEndExclusive() -> getEndExclusive
    43:43:java.lang.Comparable getStart() -> getStart
    53:53:int hashCode() -> hashCode
    42:42:boolean isEmpty() -> isEmpty
    56:56:java.lang.String toString() -> toString
kotlin.ranges.ComparableRange -> kotlin.ranges.ComparableRange:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    14:16:void <init>(java.lang.Comparable,java.lang.Comparable) -> <init>
    14:14:boolean contains(java.lang.Comparable) -> contains
    20:21:boolean equals(java.lang.Object) -> equals
    16:16:java.lang.Comparable getEndInclusive() -> getEndInclusive
    15:15:java.lang.Comparable getStart() -> getStart
    25:25:int hashCode() -> hashCode
    14:14:boolean isEmpty() -> isEmpty
    28:28:java.lang.String toString() -> toString
kotlin.ranges.IntProgression -> kotlin.ranges.IntProgression:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    0:0:void <clinit>() -> <clinit>
    77:102:void <init>(int,int,int) -> <init>
    115:116:boolean equals(java.lang.Object) -> equals
    92:92:int getFirst() -> getFirst
    97:97:int getLast() -> getLast
    102:102:int getStep() -> getStep
    119:119:int hashCode() -> hashCode
    112:112:boolean isEmpty() -> isEmpty
    77:77:java.util.Iterator iterator() -> iterator
    104:104:kotlin.collections.IntIterator iterator() -> iterator
    121:121:java.lang.String toString() -> toString
kotlin.ranges.IntProgression$Companion -> kotlin.ranges.IntProgression$Companion:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    123:123:void <init>() -> <init>
    132:132:kotlin.ranges.IntProgression fromClosedRange(int,int,int) -> fromClosedRange
kotlin.ranges.IntProgressionIterator -> kotlin.ranges.IntProgressionIterator:
# {"id":"sourceFile","fileName":"ProgressionIterators.kt"}
    38:41:void <init>(int,int,int) -> <init>
    38:38:int getStep() -> getStep
    43:43:boolean hasNext() -> hasNext
    46:52:int nextInt() -> nextInt
kotlin.ranges.IntRange -> kotlin.ranges.IntRange:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    84:84:void <clinit>() -> <clinit>
    52:52:void <init>(int,int) -> <init>
    52:52:kotlin.ranges.IntRange access$getEMPTY$cp() -> access$getEMPTY$cp
    52:52:boolean contains(java.lang.Comparable) -> contains
    64:64:boolean contains(int) -> contains
    74:75:boolean equals(java.lang.Object) -> equals
    52:52:java.lang.Comparable getEndExclusive() -> getEndExclusive
    60:61:java.lang.Integer getEndExclusive() -> getEndExclusive
    0:0:void getEndExclusive$annotations() -> getEndExclusive$annotations
    52:52:java.lang.Comparable getEndInclusive() -> getEndInclusive
    54:54:java.lang.Integer getEndInclusive() -> getEndInclusive
    52:52:java.lang.Comparable getStart() -> getStart
    53:53:java.lang.Integer getStart() -> getStart
    78:78:int hashCode() -> hashCode
    71:71:boolean isEmpty() -> isEmpty
    80:80:java.lang.String toString() -> toString
kotlin.ranges.IntRange$Companion -> kotlin.ranges.IntRange$Companion:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    82:82:void <init>() -> <init>
    84:84:kotlin.ranges.IntRange getEMPTY() -> getEMPTY
kotlin.ranges.LongProgression -> kotlin.ranges.LongProgression:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    0:0:void <clinit>() -> <clinit>
    139:164:void <init>(long,long,long) -> <init>
    177:178:boolean equals(java.lang.Object) -> equals
    154:154:long getFirst() -> getFirst
    159:159:long getLast() -> getLast
    164:164:long getStep() -> getStep
    181:181:int hashCode() -> hashCode
    174:174:boolean isEmpty() -> isEmpty
    139:139:java.util.Iterator iterator() -> iterator
    166:166:kotlin.collections.LongIterator iterator() -> iterator
    183:183:java.lang.String toString() -> toString
kotlin.ranges.LongProgression$Companion -> kotlin.ranges.LongProgression$Companion:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    185:185:void <init>() -> <init>
    194:194:kotlin.ranges.LongProgression fromClosedRange(long,long,long) -> fromClosedRange
kotlin.ranges.LongProgressionIterator -> kotlin.ranges.LongProgressionIterator:
# {"id":"sourceFile","fileName":"ProgressionIterators.kt"}
    62:65:void <init>(long,long,long) -> <init>
    62:62:long getStep() -> getStep
    67:67:boolean hasNext() -> hasNext
    70:76:long nextLong() -> nextLong
kotlin.ranges.LongRange -> kotlin.ranges.LongRange:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    123:123:void <clinit>() -> <clinit>
    91:91:void <init>(long,long) -> <init>
    91:91:kotlin.ranges.LongRange access$getEMPTY$cp() -> access$getEMPTY$cp
    91:91:boolean contains(java.lang.Comparable) -> contains
    103:103:boolean contains(long) -> contains
    113:114:boolean equals(java.lang.Object) -> equals
    91:91:java.lang.Comparable getEndExclusive() -> getEndExclusive
    99:100:java.lang.Long getEndExclusive() -> getEndExclusive
    0:0:void getEndExclusive$annotations() -> getEndExclusive$annotations
    91:91:java.lang.Comparable getEndInclusive() -> getEndInclusive
    93:93:java.lang.Long getEndInclusive() -> getEndInclusive
    91:91:java.lang.Comparable getStart() -> getStart
    92:92:java.lang.Long getStart() -> getStart
    117:117:int hashCode() -> hashCode
    110:110:boolean isEmpty() -> isEmpty
    119:119:java.lang.String toString() -> toString
kotlin.ranges.LongRange$Companion -> kotlin.ranges.LongRange$Companion:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    121:121:void <init>() -> <init>
    123:123:kotlin.ranges.LongRange getEMPTY() -> getEMPTY
kotlin.ranges.OpenEndDoubleRange -> kotlin.ranges.OpenEndDoubleRange:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    134:139:void <init>(double,double) -> <init>
    134:134:boolean contains(java.lang.Comparable) -> contains
    145:145:boolean contains(double) -> contains
    149:150:boolean equals(java.lang.Object) -> equals
    134:134:java.lang.Comparable getEndExclusive() -> getEndExclusive
    141:141:java.lang.Double getEndExclusive() -> getEndExclusive
    134:134:java.lang.Comparable getStart() -> getStart
    140:140:java.lang.Double getStart() -> getStart
    154:154:int hashCode() -> hashCode
    146:146:boolean isEmpty() -> isEmpty
    0:0:boolean lessThanOrEquals(double,double) -> lessThanOrEquals
    157:157:java.lang.String toString() -> toString
kotlin.ranges.OpenEndFloatRange -> kotlin.ranges.OpenEndFloatRange:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    216:221:void <init>(float,float) -> <init>
    216:216:boolean contains(java.lang.Comparable) -> contains
    227:227:boolean contains(float) -> contains
    231:232:boolean equals(java.lang.Object) -> equals
    216:216:java.lang.Comparable getEndExclusive() -> getEndExclusive
    223:223:java.lang.Float getEndExclusive() -> getEndExclusive
    216:216:java.lang.Comparable getStart() -> getStart
    222:222:java.lang.Float getStart() -> getStart
    236:236:int hashCode() -> hashCode
    228:228:boolean isEmpty() -> isEmpty
    0:0:boolean lessThanOrEquals(float,float) -> lessThanOrEquals
    239:239:java.lang.String toString() -> toString
kotlin.ranges.OpenEndRange -> kotlin.ranges.OpenEndRange:
# {"id":"sourceFile","fileName":"Range.kt"}
kotlin.ranges.OpenEndRange$DefaultImpls -> kotlin.ranges.OpenEndRange$DefaultImpls:
# {"id":"sourceFile","fileName":"Range.kt"}
    63:63:boolean contains(kotlin.ranges.OpenEndRange,java.lang.Comparable) -> contains
    70:70:boolean isEmpty(kotlin.ranges.OpenEndRange) -> isEmpty
kotlin.ranges.RangesKt -> kotlin.ranges.RangesKt:
    1:1:void <init>() -> <init>
    0:0:int coerceAtLeast(int,int) -> coerceAtLeast
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int coerceAtMost(int,int) -> coerceAtMost
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long coerceAtMost(long,long) -> coerceAtMost
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int coerceIn(int,int,int) -> coerceIn
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long coerceIn(long,long,long) -> coerceIn
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long coerceIn(long,kotlin.ranges.ClosedRange) -> coerceIn
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntProgression downTo(int,int) -> downTo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean intRangeContains(kotlin.ranges.ClosedRange,long) -> intRangeContains
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int) -> step
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntRange until(int,int) -> until
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ranges.RangesKt__RangesKt -> kotlin.ranges.RangesKt__RangesKt:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    0:0:void <init>() -> <init>
    274:274:void checkStepIsPositive(boolean,java.lang.Number) -> checkStepIsPositive
    260:260:boolean contains(kotlin.ranges.ClosedRange,java.lang.Object) -> contains
    271:271:boolean contains(kotlin.ranges.OpenEndRange,java.lang.Object) -> contains
    37:37:kotlin.ranges.ClosedRange rangeTo(java.lang.Comparable,java.lang.Comparable) -> rangeTo
    127:127:kotlin.ranges.ClosedFloatingPointRange rangeTo(double,double) -> rangeTo
    208:208:kotlin.ranges.ClosedFloatingPointRange rangeTo(float,float) -> rangeTo
    67:67:kotlin.ranges.OpenEndRange rangeUntil(java.lang.Comparable,java.lang.Comparable) -> rangeUntil
    167:167:kotlin.ranges.OpenEndRange rangeUntil(double,double) -> rangeUntil
    249:249:kotlin.ranges.OpenEndRange rangeUntil(float,float) -> rangeUntil
kotlin.ranges.RangesKt___RangesKt -> kotlin.ranges.RangesKt___RangesKt:
# {"id":"sourceFile","fileName":"_Ranges.kt"}
    0:0:void <init>() -> <init>
    438:438:boolean byteRangeContains(kotlin.ranges.ClosedRange,double) -> byteRangeContains
    486:486:boolean byteRangeContains(kotlin.ranges.ClosedRange,float) -> byteRangeContains
    530:530:boolean byteRangeContains(kotlin.ranges.ClosedRange,int) -> byteRangeContains
    578:578:boolean byteRangeContains(kotlin.ranges.OpenEndRange,int) -> byteRangeContains
    612:612:boolean byteRangeContains(kotlin.ranges.ClosedRange,long) -> byteRangeContains
    660:660:boolean byteRangeContains(kotlin.ranges.OpenEndRange,long) -> byteRangeContains
    702:702:boolean byteRangeContains(kotlin.ranges.ClosedRange,short) -> byteRangeContains
    752:752:boolean byteRangeContains(kotlin.ranges.OpenEndRange,short) -> byteRangeContains
    0:0:byte coerceAtLeast(byte,byte) -> coerceAtLeast
    0:0:double coerceAtLeast(double,double) -> coerceAtLeast
    0:0:float coerceAtLeast(float,float) -> coerceAtLeast
    0:0:int coerceAtLeast(int,int) -> coerceAtLeast
    0:0:long coerceAtLeast(long,long) -> coerceAtLeast
    0:0:short coerceAtLeast(short,short) -> coerceAtLeast
    1211:1211:java.lang.Comparable coerceAtLeast(java.lang.Comparable,java.lang.Comparable) -> coerceAtLeast
    0:0:byte coerceAtMost(byte,byte) -> coerceAtMost
    0:0:double coerceAtMost(double,double) -> coerceAtMost
    0:0:float coerceAtMost(float,float) -> coerceAtMost
    0:0:int coerceAtMost(int,int) -> coerceAtMost
    0:0:long coerceAtMost(long,long) -> coerceAtMost
    0:0:short coerceAtMost(short,short) -> coerceAtMost
    1288:1288:java.lang.Comparable coerceAtMost(java.lang.Comparable,java.lang.Comparable) -> coerceAtMost
    1366:1372:java.lang.Comparable coerceIn(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> coerceIn
    1385:1385:byte coerceIn(byte,byte,byte) -> coerceIn
    1399:1399:short coerceIn(short,short,short) -> coerceIn
    1413:1413:int coerceIn(int,int,int) -> coerceIn
    1427:1427:long coerceIn(long,long,long) -> coerceIn
    1441:1441:float coerceIn(float,float,float) -> coerceIn
    1455:1455:double coerceIn(double,double,double) -> coerceIn
    1470:1475:java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedFloatingPointRange) -> coerceIn
    1488:1494:java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedRange) -> coerceIn
    1507:1513:int coerceIn(int,kotlin.ranges.ClosedRange) -> coerceIn
    1526:1532:long coerceIn(long,kotlin.ranges.ClosedRange) -> coerceIn
    296:296:boolean contains(kotlin.ranges.IntRange,java.lang.Integer) -> contains
    307:307:boolean contains(kotlin.ranges.LongRange,java.lang.Long) -> contains
    318:318:boolean contains(kotlin.ranges.CharRange,java.lang.Character) -> contains
    400:400:boolean contains(kotlin.ranges.IntRange,byte) -> contains
    408:408:boolean contains(kotlin.ranges.LongRange,byte) -> contains
    596:596:boolean contains(kotlin.ranges.LongRange,int) -> contains
    678:678:boolean contains(kotlin.ranges.IntRange,long) -> contains
    760:760:boolean contains(kotlin.ranges.IntRange,short) -> contains
    768:768:boolean contains(kotlin.ranges.LongRange,short) -> contains
    352:352:boolean doubleRangeContains(kotlin.ranges.ClosedRange,byte) -> doubleRangeContains
    504:504:boolean doubleRangeContains(kotlin.ranges.ClosedRange,float) -> doubleRangeContains
    514:514:boolean doubleRangeContains(kotlin.ranges.OpenEndRange,float) -> doubleRangeContains
    548:548:boolean doubleRangeContains(kotlin.ranges.ClosedRange,int) -> doubleRangeContains
    630:630:boolean doubleRangeContains(kotlin.ranges.ClosedRange,long) -> doubleRangeContains
    712:712:boolean doubleRangeContains(kotlin.ranges.ClosedRange,short) -> doubleRangeContains
    778:778:kotlin.ranges.IntProgression downTo(int,byte) -> downTo
    788:788:kotlin.ranges.LongProgression downTo(long,byte) -> downTo
    798:798:kotlin.ranges.IntProgression downTo(byte,byte) -> downTo
    808:808:kotlin.ranges.IntProgression downTo(short,byte) -> downTo
    818:818:kotlin.ranges.CharProgression downTo(char,char) -> downTo
    828:828:kotlin.ranges.IntProgression downTo(int,int) -> downTo
    838:838:kotlin.ranges.LongProgression downTo(long,int) -> downTo
    848:848:kotlin.ranges.IntProgression downTo(byte,int) -> downTo
    858:858:kotlin.ranges.IntProgression downTo(short,int) -> downTo
    868:868:kotlin.ranges.LongProgression downTo(int,long) -> downTo
    878:878:kotlin.ranges.LongProgression downTo(long,long) -> downTo
    888:888:kotlin.ranges.LongProgression downTo(byte,long) -> downTo
    898:898:kotlin.ranges.LongProgression downTo(short,long) -> downTo
    908:908:kotlin.ranges.IntProgression downTo(int,short) -> downTo
    918:918:kotlin.ranges.LongProgression downTo(long,short) -> downTo
    928:928:kotlin.ranges.IntProgression downTo(byte,short) -> downTo
    938:938:kotlin.ranges.IntProgression downTo(short,short) -> downTo
    25:27:int first(kotlin.ranges.IntProgression) -> first
    37:39:long first(kotlin.ranges.LongProgression) -> first
    49:51:char first(kotlin.ranges.CharProgression) -> first
    59:59:java.lang.Integer firstOrNull(kotlin.ranges.IntProgression) -> firstOrNull
    67:67:java.lang.Long firstOrNull(kotlin.ranges.LongProgression) -> firstOrNull
    75:75:java.lang.Character firstOrNull(kotlin.ranges.CharProgression) -> firstOrNull
    362:362:boolean floatRangeContains(kotlin.ranges.ClosedRange,byte) -> floatRangeContains
    456:456:boolean floatRangeContains(kotlin.ranges.ClosedRange,double) -> floatRangeContains
    558:558:boolean floatRangeContains(kotlin.ranges.ClosedRange,int) -> floatRangeContains
    640:640:boolean floatRangeContains(kotlin.ranges.ClosedRange,long) -> floatRangeContains
    722:722:boolean floatRangeContains(kotlin.ranges.ClosedRange,short) -> floatRangeContains
    326:326:boolean intRangeContains(kotlin.ranges.ClosedRange,byte) -> intRangeContains
    372:372:boolean intRangeContains(kotlin.ranges.OpenEndRange,byte) -> intRangeContains
    418:418:boolean intRangeContains(kotlin.ranges.ClosedRange,double) -> intRangeContains
    466:466:boolean intRangeContains(kotlin.ranges.ClosedRange,float) -> intRangeContains
    604:604:boolean intRangeContains(kotlin.ranges.ClosedRange,long) -> intRangeContains
    650:650:boolean intRangeContains(kotlin.ranges.OpenEndRange,long) -> intRangeContains
    686:686:boolean intRangeContains(kotlin.ranges.ClosedRange,short) -> intRangeContains
    732:732:boolean intRangeContains(kotlin.ranges.OpenEndRange,short) -> intRangeContains
    87:89:int last(kotlin.ranges.IntProgression) -> last
    101:103:long last(kotlin.ranges.LongProgression) -> last
    115:117:char last(kotlin.ranges.CharProgression) -> last
    127:127:java.lang.Integer lastOrNull(kotlin.ranges.IntProgression) -> lastOrNull
    137:137:java.lang.Long lastOrNull(kotlin.ranges.LongProgression) -> lastOrNull
    147:147:java.lang.Character lastOrNull(kotlin.ranges.CharProgression) -> lastOrNull
    334:334:boolean longRangeContains(kotlin.ranges.ClosedRange,byte) -> longRangeContains
    382:382:boolean longRangeContains(kotlin.ranges.OpenEndRange,byte) -> longRangeContains
    428:428:boolean longRangeContains(kotlin.ranges.ClosedRange,double) -> longRangeContains
    476:476:boolean longRangeContains(kotlin.ranges.ClosedRange,float) -> longRangeContains
    522:522:boolean longRangeContains(kotlin.ranges.ClosedRange,int) -> longRangeContains
    568:568:boolean longRangeContains(kotlin.ranges.OpenEndRange,int) -> longRangeContains
    694:694:boolean longRangeContains(kotlin.ranges.ClosedRange,short) -> longRangeContains
    742:742:boolean longRangeContains(kotlin.ranges.OpenEndRange,short) -> longRangeContains
    158:158:int random(kotlin.ranges.IntRange) -> random
    169:169:long random(kotlin.ranges.LongRange) -> random
    180:180:char random(kotlin.ranges.CharRange) -> random
    191:193:int random(kotlin.ranges.IntRange,kotlin.random.Random) -> random
    205:207:long random(kotlin.ranges.LongRange,kotlin.random.Random) -> random
    219:221:char random(kotlin.ranges.CharRange,kotlin.random.Random) -> random
    232:232:java.lang.Integer randomOrNull(kotlin.ranges.IntRange) -> randomOrNull
    242:242:java.lang.Long randomOrNull(kotlin.ranges.LongRange) -> randomOrNull
    252:252:java.lang.Character randomOrNull(kotlin.ranges.CharRange) -> randomOrNull
    261:263:java.lang.Integer randomOrNull(kotlin.ranges.IntRange,kotlin.random.Random) -> randomOrNull
    272:274:java.lang.Long randomOrNull(kotlin.ranges.LongRange,kotlin.random.Random) -> randomOrNull
    283:285:java.lang.Character randomOrNull(kotlin.ranges.CharRange,kotlin.random.Random) -> randomOrNull
    945:945:kotlin.ranges.IntProgression reversed(kotlin.ranges.IntProgression) -> reversed
    952:952:kotlin.ranges.LongProgression reversed(kotlin.ranges.LongProgression) -> reversed
    959:959:kotlin.ranges.CharProgression reversed(kotlin.ranges.CharProgression) -> reversed
    342:342:boolean shortRangeContains(kotlin.ranges.ClosedRange,byte) -> shortRangeContains
    392:392:boolean shortRangeContains(kotlin.ranges.OpenEndRange,byte) -> shortRangeContains
    448:448:boolean shortRangeContains(kotlin.ranges.ClosedRange,double) -> shortRangeContains
    496:496:boolean shortRangeContains(kotlin.ranges.ClosedRange,float) -> shortRangeContains
    538:538:boolean shortRangeContains(kotlin.ranges.ClosedRange,int) -> shortRangeContains
    588:588:boolean shortRangeContains(kotlin.ranges.OpenEndRange,int) -> shortRangeContains
    620:620:boolean shortRangeContains(kotlin.ranges.ClosedRange,long) -> shortRangeContains
    670:670:boolean shortRangeContains(kotlin.ranges.OpenEndRange,long) -> shortRangeContains
    966:967:kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int) -> step
    974:975:kotlin.ranges.LongProgression step(kotlin.ranges.LongProgression,long) -> step
    982:983:kotlin.ranges.CharProgression step(kotlin.ranges.CharProgression,int) -> step
    987:987:java.lang.Byte toByteExactOrNull(int) -> toByteExactOrNull
    991:991:java.lang.Byte toByteExactOrNull(long) -> toByteExactOrNull
    995:995:java.lang.Byte toByteExactOrNull(short) -> toByteExactOrNull
    999:999:java.lang.Byte toByteExactOrNull(double) -> toByteExactOrNull
    1003:1003:java.lang.Byte toByteExactOrNull(float) -> toByteExactOrNull
    1007:1007:java.lang.Integer toIntExactOrNull(long) -> toIntExactOrNull
    1011:1011:java.lang.Integer toIntExactOrNull(double) -> toIntExactOrNull
    1015:1015:java.lang.Integer toIntExactOrNull(float) -> toIntExactOrNull
    1019:1019:java.lang.Long toLongExactOrNull(double) -> toLongExactOrNull
    1023:1023:java.lang.Long toLongExactOrNull(float) -> toLongExactOrNull
    1027:1027:java.lang.Short toShortExactOrNull(int) -> toShortExactOrNull
    1031:1031:java.lang.Short toShortExactOrNull(long) -> toShortExactOrNull
    1035:1035:java.lang.Short toShortExactOrNull(double) -> toShortExactOrNull
    1039:1039:java.lang.Short toShortExactOrNull(float) -> toShortExactOrNull
    1048:1048:kotlin.ranges.IntRange until(int,byte) -> until
    1057:1057:kotlin.ranges.LongRange until(long,byte) -> until
    1066:1066:kotlin.ranges.IntRange until(byte,byte) -> until
    1075:1075:kotlin.ranges.IntRange until(short,byte) -> until
    1084:1085:kotlin.ranges.CharRange until(char,char) -> until
    1094:1095:kotlin.ranges.IntRange until(int,int) -> until
    1104:1104:kotlin.ranges.LongRange until(long,int) -> until
    1113:1114:kotlin.ranges.IntRange until(byte,int) -> until
    1123:1124:kotlin.ranges.IntRange until(short,int) -> until
    1133:1134:kotlin.ranges.LongRange until(int,long) -> until
    1143:1144:kotlin.ranges.LongRange until(long,long) -> until
    1153:1154:kotlin.ranges.LongRange until(byte,long) -> until
    1163:1164:kotlin.ranges.LongRange until(short,long) -> until
    1173:1173:kotlin.ranges.IntRange until(int,short) -> until
    1182:1182:kotlin.ranges.LongRange until(long,short) -> until
    1191:1191:kotlin.ranges.IntRange until(byte,short) -> until
    1200:1200:kotlin.ranges.IntRange until(short,short) -> until
kotlin.ranges.UIntProgression -> kotlin.ranges.UIntProgression:
# {"id":"sourceFile","fileName":"UIntRange.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    58:84:void <init>(int,int,int) -> <init>
    97:98:boolean equals(java.lang.Object) -> equals
    74:74:int getFirst-pVg5ArA() -> getFirst-pVg5ArA
    79:79:int getLast-pVg5ArA() -> getLast-pVg5ArA
    84:84:int getStep() -> getStep
    101:101:int hashCode() -> hashCode
    94:94:boolean isEmpty() -> isEmpty
    86:86:java.util.Iterator iterator() -> iterator
    103:103:java.lang.String toString() -> toString
kotlin.ranges.UIntProgression$Companion -> kotlin.ranges.UIntProgression$Companion:
# {"id":"sourceFile","fileName":"UIntRange.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    105:105:void <init>() -> <init>
    114:114:kotlin.ranges.UIntProgression fromClosedRange-Nkh28Cs(int,int,int) -> fromClosedRange-Nkh28Cs
kotlin.ranges.UIntProgressionIterator -> kotlin.ranges.UIntProgressionIterator:
# {"id":"sourceFile","fileName":"UIntRange.kt"}
    0:0:void <init>(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    123:128:void <init>(int,int,int) -> <init>
    130:130:boolean hasNext() -> hasNext
    123:123:java.lang.Object next() -> next
    133:138:int next-pVg5ArA() -> next-pVg5ArA
    0:0:void remove() -> remove
kotlin.ranges.UIntRange -> kotlin.ranges.UIntRange:
# {"id":"sourceFile","fileName":"UIntRange.kt"}
    51:51:void <clinit>() -> <clinit>
    0:0:void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    19:19:void <init>(int,int) -> <init>
    17:17:kotlin.ranges.UIntRange access$getEMPTY$cp() -> access$getEMPTY$cp
    17:17:boolean contains(java.lang.Comparable) -> contains
    31:31:boolean contains-WZ4Q5Ns(int) -> contains-WZ4Q5Ns
    41:42:boolean equals(java.lang.Object) -> equals
    17:17:java.lang.Comparable getEndExclusive() -> getEndExclusive
    27:28:int getEndExclusive-pVg5ArA() -> getEndExclusive-pVg5ArA
    0:0:void getEndExclusive-pVg5ArA$annotations() -> getEndExclusive-pVg5ArA$annotations
    17:17:java.lang.Comparable getEndInclusive() -> getEndInclusive
    21:21:int getEndInclusive-pVg5ArA() -> getEndInclusive-pVg5ArA
    17:17:java.lang.Comparable getStart() -> getStart
    20:20:int getStart-pVg5ArA() -> getStart-pVg5ArA
    45:45:int hashCode() -> hashCode
    38:38:boolean isEmpty() -> isEmpty
    47:47:java.lang.String toString() -> toString
kotlin.ranges.UIntRange$Companion -> kotlin.ranges.UIntRange$Companion:
# {"id":"sourceFile","fileName":"UIntRange.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    49:49:void <init>() -> <init>
    51:51:kotlin.ranges.UIntRange getEMPTY() -> getEMPTY
kotlin.ranges.ULongProgression -> kotlin.ranges.ULongProgression:
# {"id":"sourceFile","fileName":"ULongRange.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(long,long,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    58:84:void <init>(long,long,long) -> <init>
    97:98:boolean equals(java.lang.Object) -> equals
    74:74:long getFirst-s-VKNKU() -> getFirst-s-VKNKU
    79:79:long getLast-s-VKNKU() -> getLast-s-VKNKU
    84:84:long getStep() -> getStep
    101:101:int hashCode() -> hashCode
    94:94:boolean isEmpty() -> isEmpty
    86:86:java.util.Iterator iterator() -> iterator
    103:103:java.lang.String toString() -> toString
kotlin.ranges.ULongProgression$Companion -> kotlin.ranges.ULongProgression$Companion:
# {"id":"sourceFile","fileName":"ULongRange.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    105:105:void <init>() -> <init>
    114:114:kotlin.ranges.ULongProgression fromClosedRange-7ftBX0g(long,long,long) -> fromClosedRange-7ftBX0g
kotlin.ranges.ULongProgressionIterator -> kotlin.ranges.ULongProgressionIterator:
# {"id":"sourceFile","fileName":"ULongRange.kt"}
    0:0:void <init>(long,long,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    123:128:void <init>(long,long,long) -> <init>
    130:130:boolean hasNext() -> hasNext
    123:123:java.lang.Object next() -> next
    133:138:long next-s-VKNKU() -> next-s-VKNKU
    0:0:void remove() -> remove
kotlin.ranges.ULongRange -> kotlin.ranges.ULongRange:
# {"id":"sourceFile","fileName":"ULongRange.kt"}
    51:51:void <clinit>() -> <clinit>
    0:0:void <init>(long,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    19:19:void <init>(long,long) -> <init>
    17:17:kotlin.ranges.ULongRange access$getEMPTY$cp() -> access$getEMPTY$cp
    17:17:boolean contains(java.lang.Comparable) -> contains
    31:31:boolean contains-VKZWuLQ(long) -> contains-VKZWuLQ
    41:42:boolean equals(java.lang.Object) -> equals
    17:17:java.lang.Comparable getEndExclusive() -> getEndExclusive
    27:28:long getEndExclusive-s-VKNKU() -> getEndExclusive-s-VKNKU
    0:0:void getEndExclusive-s-VKNKU$annotations() -> getEndExclusive-s-VKNKU$annotations
    17:17:java.lang.Comparable getEndInclusive() -> getEndInclusive
    21:21:long getEndInclusive-s-VKNKU() -> getEndInclusive-s-VKNKU
    17:17:java.lang.Comparable getStart() -> getStart
    20:20:long getStart-s-VKNKU() -> getStart-s-VKNKU
    45:45:int hashCode() -> hashCode
    38:38:boolean isEmpty() -> isEmpty
    47:47:java.lang.String toString() -> toString
kotlin.ranges.ULongRange$Companion -> kotlin.ranges.ULongRange$Companion:
# {"id":"sourceFile","fileName":"ULongRange.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    49:49:void <init>() -> <init>
    51:51:kotlin.ranges.ULongRange getEMPTY() -> getEMPTY
kotlin.ranges.URangesKt -> kotlin.ranges.URangesKt:
# {"id":"sourceFile","fileName":"_URanges.kt"}
    1:1:void <init>() -> <init>
    0:0:kotlin.ranges.UIntRange until-J1ME1BU(int,int) -> until-J1ME1BU
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.ULongRange until-eb3DHEI(long,long) -> until-eb3DHEI
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ranges.URangesKt___URangesKt -> kotlin.ranges.URangesKt___URangesKt:
# {"id":"sourceFile","fileName":"_URanges.kt"}
    0:0:void <init>() -> <init>
    463:463:short coerceAtLeast-5PvTz6A(short,short) -> coerceAtLeast-5PvTz6A
    424:424:int coerceAtLeast-J1ME1BU(int,int) -> coerceAtLeast-J1ME1BU
    450:450:byte coerceAtLeast-Kr8caGY(byte,byte) -> coerceAtLeast-Kr8caGY
    437:437:long coerceAtLeast-eb3DHEI(long,long) -> coerceAtLeast-eb3DHEI
    515:515:short coerceAtMost-5PvTz6A(short,short) -> coerceAtMost-5PvTz6A
    476:476:int coerceAtMost-J1ME1BU(int,int) -> coerceAtMost-J1ME1BU
    502:502:byte coerceAtMost-Kr8caGY(byte,byte) -> coerceAtMost-Kr8caGY
    489:489:long coerceAtMost-eb3DHEI(long,long) -> coerceAtMost-eb3DHEI
    613:619:long coerceIn-JPwROB0(long,kotlin.ranges.ClosedRange) -> coerceIn-JPwROB0
    576:578:short coerceIn-VKSA0NQ(short,short,short) -> coerceIn-VKSA0NQ
    528:530:int coerceIn-WZ9TVnA(int,int,int) -> coerceIn-WZ9TVnA
    560:562:byte coerceIn-b33U2AM(byte,byte,byte) -> coerceIn-b33U2AM
    544:546:long coerceIn-sambcqE(long,long,long) -> coerceIn-sambcqE
    592:598:int coerceIn-wuiCnnA(int,kotlin.ranges.ClosedRange) -> coerceIn-wuiCnnA
    232:232:boolean contains-68kG9v0(kotlin.ranges.UIntRange,byte) -> contains-68kG9v0
    223:223:boolean contains-GYNo2lE(kotlin.ranges.ULongRange,kotlin.ULong) -> contains-GYNo2lE
    250:250:boolean contains-Gab390E(kotlin.ranges.ULongRange,int) -> contains-Gab390E
    241:241:boolean contains-ULb-yJY(kotlin.ranges.ULongRange,byte) -> contains-ULb-yJY
    268:268:boolean contains-ZsK3CEQ(kotlin.ranges.UIntRange,short) -> contains-ZsK3CEQ
    211:211:boolean contains-biwQdVI(kotlin.ranges.UIntRange,kotlin.UInt) -> contains-biwQdVI
    259:259:boolean contains-fz5IDCE(kotlin.ranges.UIntRange,long) -> contains-fz5IDCE
    277:277:boolean contains-uhHAxoY(kotlin.ranges.ULongRange,short) -> contains-uhHAxoY
    325:325:kotlin.ranges.UIntProgression downTo-5PvTz6A(short,short) -> downTo-5PvTz6A
    301:301:kotlin.ranges.UIntProgression downTo-J1ME1BU(int,int) -> downTo-J1ME1BU
    289:289:kotlin.ranges.UIntProgression downTo-Kr8caGY(byte,byte) -> downTo-Kr8caGY
    313:313:kotlin.ranges.ULongProgression downTo-eb3DHEI(long,long) -> downTo-eb3DHEI
    25:27:int first(kotlin.ranges.UIntProgression) -> first
    37:39:long first(kotlin.ranges.ULongProgression) -> first
    47:47:kotlin.UInt firstOrNull(kotlin.ranges.UIntProgression) -> firstOrNull
    55:55:kotlin.ULong firstOrNull(kotlin.ranges.ULongProgression) -> firstOrNull
    67:69:int last(kotlin.ranges.UIntProgression) -> last
    81:83:long last(kotlin.ranges.ULongProgression) -> last
    93:93:kotlin.UInt lastOrNull(kotlin.ranges.UIntProgression) -> lastOrNull
    103:103:kotlin.ULong lastOrNull(kotlin.ranges.ULongProgression) -> lastOrNull
    115:115:int random(kotlin.ranges.UIntRange) -> random
    127:127:long random(kotlin.ranges.ULongRange) -> random
    139:141:int random(kotlin.ranges.UIntRange,kotlin.random.Random) -> random
    154:156:long random(kotlin.ranges.ULongRange,kotlin.random.Random) -> random
    167:167:kotlin.UInt randomOrNull(kotlin.ranges.UIntRange) -> randomOrNull
    177:177:kotlin.ULong randomOrNull(kotlin.ranges.ULongRange) -> randomOrNull
    186:188:kotlin.UInt randomOrNull(kotlin.ranges.UIntRange,kotlin.random.Random) -> randomOrNull
    197:199:kotlin.ULong randomOrNull(kotlin.ranges.ULongRange,kotlin.random.Random) -> randomOrNull
    334:334:kotlin.ranges.UIntProgression reversed(kotlin.ranges.UIntProgression) -> reversed
    343:343:kotlin.ranges.ULongProgression reversed(kotlin.ranges.ULongProgression) -> reversed
    352:353:kotlin.ranges.UIntProgression step(kotlin.ranges.UIntProgression,int) -> step
    362:363:kotlin.ranges.ULongProgression step(kotlin.ranges.ULongProgression,long) -> step
    410:411:kotlin.ranges.UIntRange until-5PvTz6A(short,short) -> until-5PvTz6A
    386:387:kotlin.ranges.UIntRange until-J1ME1BU(int,int) -> until-J1ME1BU
    374:375:kotlin.ranges.UIntRange until-Kr8caGY(byte,byte) -> until-Kr8caGY
    398:399:kotlin.ranges.ULongRange until-eb3DHEI(long,long) -> until-eb3DHEI
kotlin.reflect.GenericArrayTypeImpl -> kotlin.reflect.GenericArrayTypeImpl:
# {"id":"sourceFile","fileName":"TypesJVM.kt"}
    144:145:void <init>(java.lang.reflect.Type) -> <init>
    150:150:boolean equals(java.lang.Object) -> equals
    146:146:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    148:148:java.lang.String getTypeName() -> getTypeName
    152:152:int hashCode() -> hashCode
    154:154:java.lang.String toString() -> toString
kotlin.reflect.KAnnotatedElement -> kotlin.reflect.KAnnotatedElement:
# {"id":"sourceFile","fileName":"KAnnotatedElement.kt"}
kotlin.reflect.KCallable -> kotlin.reflect.KCallable:
# {"id":"sourceFile","fileName":"KCallable.kt"}
kotlin.reflect.KCallable$DefaultImpls -> kotlin.reflect.KCallable$DefaultImpls:
# {"id":"sourceFile","fileName":"KCallable.kt"}
    0:0:void getName$annotations() -> getName$annotations
    0:0:void getTypeParameters$annotations() -> getTypeParameters$annotations
    0:0:void getVisibility$annotations() -> getVisibility$annotations
    0:0:void isAbstract$annotations() -> isAbstract$annotations
    0:0:void isFinal$annotations() -> isFinal$annotations
    0:0:void isOpen$annotations() -> isOpen$annotations
    0:0:void isSuspend$annotations() -> isSuspend$annotations
kotlin.reflect.KClass -> kotlin.reflect.KClass:
# {"id":"sourceFile","fileName":"KClass.kt"}
kotlin.reflect.KClass$DefaultImpls -> kotlin.reflect.KClass$DefaultImpls:
# {"id":"sourceFile","fileName":"KClass.kt"}
    0:0:void getSealedSubclasses$annotations() -> getSealedSubclasses$annotations
    0:0:void getSupertypes$annotations() -> getSupertypes$annotations
    0:0:void getTypeParameters$annotations() -> getTypeParameters$annotations
    0:0:void getVisibility$annotations() -> getVisibility$annotations
    0:0:void isAbstract$annotations() -> isAbstract$annotations
    0:0:void isCompanion$annotations() -> isCompanion$annotations
    0:0:void isData$annotations() -> isData$annotations
    0:0:void isFinal$annotations() -> isFinal$annotations
    0:0:void isFun$annotations() -> isFun$annotations
    0:0:void isInner$annotations() -> isInner$annotations
    0:0:void isOpen$annotations() -> isOpen$annotations
    0:0:void isSealed$annotations() -> isSealed$annotations
    0:0:void isValue$annotations() -> isValue$annotations
kotlin.reflect.KClasses -> kotlin.reflect.KClasses:
# {"id":"sourceFile","fileName":"KClasses.kt"}
    26:49:java.lang.Object cast(kotlin.reflect.KClass,java.lang.Object) -> cast
    46:46:java.lang.Object safeCast(kotlin.reflect.KClass,java.lang.Object) -> safeCast
kotlin.reflect.KClassesImplKt -> kotlin.reflect.KClassesImplKt:
# {"id":"sourceFile","fileName":"KClassesImpl.kt"}
    9:9:java.lang.String getQualifiedOrSimpleName(kotlin.reflect.KClass) -> getQualifiedOrSimpleName
kotlin.reflect.KClassifier -> kotlin.reflect.KClassifier:
# {"id":"sourceFile","fileName":"KClassifier.kt"}
kotlin.reflect.KDeclarationContainer -> kotlin.reflect.KDeclarationContainer:
# {"id":"sourceFile","fileName":"KDeclarationContainer.kt"}
kotlin.reflect.KFunction -> kotlin.reflect.KFunction:
# {"id":"sourceFile","fileName":"KFunction.kt"}
kotlin.reflect.KFunction$DefaultImpls -> kotlin.reflect.KFunction$DefaultImpls:
# {"id":"sourceFile","fileName":"KFunction.kt"}
    0:0:void isExternal$annotations() -> isExternal$annotations
    0:0:void isInfix$annotations() -> isInfix$annotations
    0:0:void isInline$annotations() -> isInline$annotations
    0:0:void isOperator$annotations() -> isOperator$annotations
    0:0:void isSuspend$annotations() -> isSuspend$annotations
kotlin.reflect.KMutableProperty -> kotlin.reflect.KMutableProperty:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty$Setter -> kotlin.reflect.KMutableProperty$Setter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty0 -> kotlin.reflect.KMutableProperty0:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty0$Setter -> kotlin.reflect.KMutableProperty0$Setter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty1 -> kotlin.reflect.KMutableProperty1:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty1$Setter -> kotlin.reflect.KMutableProperty1$Setter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty2 -> kotlin.reflect.KMutableProperty2:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KMutableProperty2$Setter -> kotlin.reflect.KMutableProperty2$Setter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KParameter -> kotlin.reflect.KParameter:
# {"id":"sourceFile","fileName":"KParameter.kt"}
kotlin.reflect.KParameter$DefaultImpls -> kotlin.reflect.KParameter$DefaultImpls:
# {"id":"sourceFile","fileName":"KParameter.kt"}
    0:0:void isVararg$annotations() -> isVararg$annotations
kotlin.reflect.KParameter$Kind -> kotlin.reflect.KParameter$Kind:
# {"id":"sourceFile","fileName":"KParameter.kt"}
    0:0:kotlin.reflect.KParameter$Kind[] $values() -> $values
    55:61:void <clinit>() -> <clinit>
    53:53:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.reflect.KParameter$Kind valueOf(java.lang.String) -> valueOf
    0:0:kotlin.reflect.KParameter$Kind[] values() -> values
kotlin.reflect.KProperty -> kotlin.reflect.KProperty:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty$Accessor -> kotlin.reflect.KProperty$Accessor:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty$DefaultImpls -> kotlin.reflect.KProperty$DefaultImpls:
# {"id":"sourceFile","fileName":"KProperty.kt"}
    0:0:void isConst$annotations() -> isConst$annotations
    0:0:void isLateinit$annotations() -> isLateinit$annotations
kotlin.reflect.KProperty$Getter -> kotlin.reflect.KProperty$Getter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty0 -> kotlin.reflect.KProperty0:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty0$Getter -> kotlin.reflect.KProperty0$Getter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty1 -> kotlin.reflect.KProperty1:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty1$Getter -> kotlin.reflect.KProperty1$Getter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty2 -> kotlin.reflect.KProperty2:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KProperty2$Getter -> kotlin.reflect.KProperty2$Getter:
# {"id":"sourceFile","fileName":"KProperty.kt"}
kotlin.reflect.KType -> kotlin.reflect.KType:
# {"id":"sourceFile","fileName":"KType.kt"}
kotlin.reflect.KType$DefaultImpls -> kotlin.reflect.KType$DefaultImpls:
# {"id":"sourceFile","fileName":"KType.kt"}
    0:0:void getArguments$annotations() -> getArguments$annotations
    0:0:void getClassifier$annotations() -> getClassifier$annotations
kotlin.reflect.KTypeParameter -> kotlin.reflect.KTypeParameter:
# {"id":"sourceFile","fileName":"KTypeParameter.kt"}
kotlin.reflect.KTypeProjection -> kotlin.reflect.KTypeProjection:
# {"id":"sourceFile","fileName":"KTypeProjection.kt"}
    54:54:void <clinit>() -> <clinit>
    22:39:void <init>(kotlin.reflect.KVariance,kotlin.reflect.KType) -> <init>
    0:0:kotlin.reflect.KVariance component1() -> component1
    0:0:kotlin.reflect.KType component2() -> component2
    0:0:kotlin.reflect.KTypeProjection contravariant(kotlin.reflect.KType) -> contravariant
    0:0:kotlin.reflect.KTypeProjection copy(kotlin.reflect.KVariance,kotlin.reflect.KType) -> copy
    0:0:kotlin.reflect.KTypeProjection copy$default(kotlin.reflect.KTypeProjection,kotlin.reflect.KVariance,kotlin.reflect.KType,int,java.lang.Object) -> copy$default
    0:0:kotlin.reflect.KTypeProjection covariant(kotlin.reflect.KType) -> covariant
    0:0:boolean equals(java.lang.Object) -> equals
    31:31:kotlin.reflect.KType getType() -> getType
    27:27:kotlin.reflect.KVariance getVariance() -> getVariance
    0:0:int hashCode() -> hashCode
    0:0:kotlin.reflect.KTypeProjection invariant(kotlin.reflect.KType) -> invariant
    43:47:java.lang.String toString() -> toString
kotlin.reflect.KTypeProjection$Companion -> kotlin.reflect.KTypeProjection$Companion:
# {"id":"sourceFile","fileName":"KTypeProjection.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    50:50:void <init>() -> <init>
    79:79:kotlin.reflect.KTypeProjection contravariant(kotlin.reflect.KType) -> contravariant
    87:87:kotlin.reflect.KTypeProjection covariant(kotlin.reflect.KType) -> covariant
    62:62:kotlin.reflect.KTypeProjection getSTAR() -> getSTAR
    0:0:void getStar$annotations() -> getStar$annotations
    71:71:kotlin.reflect.KTypeProjection invariant(kotlin.reflect.KType) -> invariant
kotlin.reflect.KTypeProjection$WhenMappings -> kotlin.reflect.KTypeProjection$WhenMappings:
# {"id":"sourceFile","fileName":"KTypeProjection.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.reflect.KVariance -> kotlin.reflect.KVariance:
# {"id":"sourceFile","fileName":"KVariance.kt"}
    0:0:kotlin.reflect.KVariance[] $values() -> $values
    23:33:void <clinit>() -> <clinit>
    18:18:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.reflect.KVariance valueOf(java.lang.String) -> valueOf
    0:0:kotlin.reflect.KVariance[] values() -> values
kotlin.reflect.KVisibility -> kotlin.reflect.KVisibility:
# {"id":"sourceFile","fileName":"KVisibility.kt"}
    0:0:kotlin.reflect.KVisibility[] $values() -> $values
    34:49:void <clinit>() -> <clinit>
    29:29:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    0:0:kotlin.reflect.KVisibility valueOf(java.lang.String) -> valueOf
    0:0:kotlin.reflect.KVisibility[] values() -> values
kotlin.reflect.ParameterizedTypeImpl -> kotlin.reflect.ParameterizedTypeImpl:
# {"id":"sourceFile","fileName":"TypesJVM.kt"}
    184:232:void <init>(java.lang.Class,java.lang.reflect.Type,java.util.List) -> <init>
    213:214:boolean equals(java.lang.Object) -> equals
    196:196:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    194:194:java.lang.reflect.Type getOwnerType() -> getOwnerType
    192:192:java.lang.reflect.Type getRawType() -> getRawType
    198:208:java.lang.String getTypeName() -> getTypeName
    217:217:int hashCode() -> hashCode
    219:219:java.lang.String toString() -> toString
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1 -> kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1:
# {"id":"sourceFile","fileName":"TypesJVM.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    208:208:java.lang.Object invoke(java.lang.Object) -> invoke
    208:208:java.lang.String invoke(java.lang.reflect.Type) -> invoke
kotlin.reflect.TypeImpl -> kotlin.reflect.TypeImpl:
# {"id":"sourceFile","fileName":"TypesJVM.kt"}
kotlin.reflect.TypeOfKt -> kotlin.reflect.TypeOfKt:
# {"id":"sourceFile","fileName":"typeOf.kt"}
    17:17:kotlin.reflect.KType typeOf() -> typeOf
kotlin.reflect.TypeVariableImpl -> kotlin.reflect.TypeVariableImpl:
# {"id":"sourceFile","fileName":"TypesJVM.kt"}
    108:110:void <init>(kotlin.reflect.KTypeParameter) -> <init>
    121:121:boolean equals(java.lang.Object) -> equals
    0:0:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    0:0:java.lang.annotation.Annotation[] getAnnotations() -> getAnnotations
    116:236:java.lang.reflect.Type[] getBounds() -> getBounds
    0:0:java.lang.annotation.Annotation[] getDeclaredAnnotations() -> getDeclaredAnnotations
    114:114:java.lang.reflect.GenericDeclaration getGenericDeclaration() -> getGenericDeclaration
    111:111:java.lang.String getName() -> getName
    118:118:java.lang.String getTypeName() -> getTypeName
    124:124:int hashCode() -> hashCode
    126:126:java.lang.String toString() -> toString
kotlin.reflect.TypesJVMKt -> kotlin.reflect.TypesJVMKt:
# {"id":"sourceFile","fileName":"TypesJVM.kt"}
    1:1:java.lang.reflect.Type access$computeJavaType(kotlin.reflect.KType,boolean) -> access$computeJavaType
    1:1:java.lang.String access$typeToString(java.lang.reflect.Type) -> access$typeToString
    38:62:java.lang.reflect.Type computeJavaType(kotlin.reflect.KType,boolean) -> computeJavaType
    37:37:java.lang.reflect.Type computeJavaType$default(kotlin.reflect.KType,boolean,int,java.lang.Object) -> computeJavaType$default
    68:242:java.lang.reflect.Type createPossiblyInnerType(java.lang.Class,java.util.List) -> createPossiblyInnerType
    28:33:java.lang.reflect.Type getJavaType(kotlin.reflect.KType) -> getJavaType
    84:93:java.lang.reflect.Type getJavaType(kotlin.reflect.KTypeProjection) -> getJavaType
    0:0:void getJavaType$annotations(kotlin.reflect.KType) -> getJavaType$annotations
    0:0:void getJavaType$annotations(kotlin.reflect.KTypeProjection) -> getJavaType$annotations
    224:229:java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
kotlin.reflect.TypesJVMKt$WhenMappings -> kotlin.reflect.TypesJVMKt$WhenMappings:
# {"id":"sourceFile","fileName":"TypesJVM.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1 -> kotlin.reflect.TypesJVMKt$typeToString$unwrap$1:
# {"id":"sourceFile","fileName":"TypesJVM.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    226:226:java.lang.Class invoke(java.lang.Class) -> invoke
    226:226:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.reflect.WildcardTypeImpl -> kotlin.reflect.WildcardTypeImpl:
# {"id":"sourceFile","fileName":"TypesJVM.kt"}
    180:180:void <clinit>() -> <clinit>
    157:158:void <init>(java.lang.reflect.Type,java.lang.reflect.Type) -> <init>
    157:157:kotlin.reflect.WildcardTypeImpl access$getSTAR$cp() -> access$getSTAR$cp
    172:172:boolean equals(java.lang.Object) -> equals
    163:163:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    166:167:java.lang.String getTypeName() -> getTypeName
    160:160:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    175:175:int hashCode() -> hashCode
    177:177:java.lang.String toString() -> toString
kotlin.reflect.WildcardTypeImpl$Companion -> kotlin.reflect.WildcardTypeImpl$Companion:
# {"id":"sourceFile","fileName":"TypesJVM.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    179:179:void <init>() -> <init>
    180:180:kotlin.reflect.WildcardTypeImpl getSTAR() -> getSTAR
kotlin.sequences.ConstrainedOnceSequence -> kotlin.sequences.ConstrainedOnceSequence:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
    19:20:void <init>(kotlin.sequences.Sequence) -> <init>
    23:24:java.util.Iterator iterator() -> iterator
kotlin.sequences.DistinctIterator -> kotlin.sequences.DistinctIterator:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    566:567:void <init>(java.util.Iterator,kotlin.jvm.functions.Function1) -> <init>
    570:580:void computeNext() -> computeNext
kotlin.sequences.DistinctSequence -> kotlin.sequences.DistinctSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    562:562:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    563:563:java.util.Iterator iterator() -> iterator
kotlin.sequences.DropSequence -> kotlin.sequences.DropSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    478:483:void <init>(kotlin.sequences.Sequence,int) -> <init>
    478:478:int access$getCount$p(kotlin.sequences.DropSequence) -> access$getCount$p
    478:478:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropSequence) -> access$getSequence$p
    486:486:kotlin.sequences.Sequence drop(int) -> drop
    489:489:java.util.Iterator iterator() -> iterator
    487:487:kotlin.sequences.Sequence take(int) -> take
kotlin.sequences.DropSequence$iterator$1 -> kotlin.sequences.DropSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    489:491:void <init>(kotlin.sequences.DropSequence) -> <init>
    495:497:void drop() -> drop
    490:490:java.util.Iterator getIterator() -> getIterator
    491:491:int getLeft() -> getLeft
    507:508:boolean hasNext() -> hasNext
    502:503:java.lang.Object next() -> next
    0:0:void remove() -> remove
    491:491:void setLeft(int) -> setLeft
kotlin.sequences.DropTakeSequence -> kotlin.sequences.DropTakeSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
kotlin.sequences.DropWhileSequence -> kotlin.sequences.DropWhileSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    517:520:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    517:517:kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.DropWhileSequence) -> access$getPredicate$p
    517:517:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropWhileSequence) -> access$getSequence$p
    523:523:java.util.Iterator iterator() -> iterator
kotlin.sequences.DropWhileSequence$iterator$1 -> kotlin.sequences.DropWhileSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    523:525:void <init>(kotlin.sequences.DropWhileSequence) -> <init>
    529:537:void drop() -> drop
    525:525:int getDropState() -> getDropState
    524:524:java.util.Iterator getIterator() -> getIterator
    526:526:java.lang.Object getNextItem() -> getNextItem
    555:557:boolean hasNext() -> hasNext
    541:551:java.lang.Object next() -> next
    0:0:void remove() -> remove
    525:525:void setDropState(int) -> setDropState
    526:526:void setNextItem(java.lang.Object) -> setNextItem
kotlin.sequences.EmptySequence -> kotlin.sequences.EmptySequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    44:44:kotlin.sequences.Sequence drop(int) -> drop
    46:46:kotlin.sequences.EmptySequence drop(int) -> drop
    45:45:java.util.Iterator iterator() -> iterator
    44:44:kotlin.sequences.Sequence take(int) -> take
    47:47:kotlin.sequences.EmptySequence take(int) -> take
kotlin.sequences.FilteringSequence -> kotlin.sequences.FilteringSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    157:160:void <init>(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1) -> <init>
    157:157:void <init>(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    157:157:kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.FilteringSequence) -> access$getPredicate$p
    157:157:boolean access$getSendWhen$p(kotlin.sequences.FilteringSequence) -> access$getSendWhen$p
    157:157:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FilteringSequence) -> access$getSequence$p
    163:163:java.util.Iterator iterator() -> iterator
kotlin.sequences.FilteringSequence$iterator$1 -> kotlin.sequences.FilteringSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    163:165:void <init>(kotlin.sequences.FilteringSequence) -> <init>
    169:177:void calcNext() -> calcNext
    164:164:java.util.Iterator getIterator() -> getIterator
    166:166:java.lang.Object getNextItem() -> getNextItem
    165:165:int getNextState() -> getNextState
    193:195:boolean hasNext() -> hasNext
    181:187:java.lang.Object next() -> next
    0:0:void remove() -> remove
    166:166:void setNextItem(java.lang.Object) -> setNextItem
    165:165:void setNextState(int) -> setNextState
kotlin.sequences.FlatteningSequence -> kotlin.sequences.FlatteningSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    286:290:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    286:286:kotlin.jvm.functions.Function1 access$getIterator$p(kotlin.sequences.FlatteningSequence) -> access$getIterator$p
    286:286:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FlatteningSequence) -> access$getSequence$p
    286:286:kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.FlatteningSequence) -> access$getTransformer$p
    292:292:java.util.Iterator iterator() -> iterator
kotlin.sequences.FlatteningSequence$iterator$1 -> kotlin.sequences.FlatteningSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    292:293:void <init>(kotlin.sequences.FlatteningSequence) -> <init>
    307:317:boolean ensureItemIterator() -> ensureItemIterator
    294:294:java.util.Iterator getItemIterator() -> getItemIterator
    293:293:java.util.Iterator getIterator() -> getIterator
    303:303:boolean hasNext() -> hasNext
    297:299:java.lang.Object next() -> next
    0:0:void remove() -> remove
    294:294:void setItemIterator(java.util.Iterator) -> setItemIterator
kotlin.sequences.GeneratorSequence -> kotlin.sequences.GeneratorSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    585:585:void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
    585:585:kotlin.jvm.functions.Function0 access$getGetInitialValue$p(kotlin.sequences.GeneratorSequence) -> access$getGetInitialValue$p
    585:585:kotlin.jvm.functions.Function1 access$getGetNextValue$p(kotlin.sequences.GeneratorSequence) -> access$getGetNextValue$p
    586:586:java.util.Iterator iterator() -> iterator
kotlin.sequences.GeneratorSequence$iterator$1 -> kotlin.sequences.GeneratorSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    586:588:void <init>(kotlin.sequences.GeneratorSequence) -> <init>
    591:592:void calcNext() -> calcNext
    587:587:java.lang.Object getNextItem() -> getNextItem
    588:588:int getNextState() -> getNextState
    608:610:boolean hasNext() -> hasNext
    596:603:java.lang.Object next() -> next
    0:0:void remove() -> remove
    587:587:void setNextItem(java.lang.Object) -> setNextItem
    588:588:void setNextState(int) -> setNextState
kotlin.sequences.IndexingSequence -> kotlin.sequences.IndexingSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    247:248:void <init>(kotlin.sequences.Sequence) -> <init>
    247:247:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.IndexingSequence) -> access$getSequence$p
    249:249:java.util.Iterator iterator() -> iterator
kotlin.sequences.IndexingSequence$iterator$1 -> kotlin.sequences.IndexingSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    249:250:void <init>(kotlin.sequences.IndexingSequence) -> <init>
    251:251:int getIndex() -> getIndex
    250:250:java.util.Iterator getIterator() -> getIterator
    257:257:boolean hasNext() -> hasNext
    249:249:java.lang.Object next() -> next
    253:253:kotlin.collections.IndexedValue next() -> next
    0:0:void remove() -> remove
    251:251:void setIndex(int) -> setIndex
kotlin.sequences.MergingSequence -> kotlin.sequences.MergingSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    267:271:void <init>(kotlin.sequences.Sequence,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> <init>
    267:267:kotlin.sequences.Sequence access$getSequence1$p(kotlin.sequences.MergingSequence) -> access$getSequence1$p
    267:267:kotlin.sequences.Sequence access$getSequence2$p(kotlin.sequences.MergingSequence) -> access$getSequence2$p
    267:267:kotlin.jvm.functions.Function2 access$getTransform$p(kotlin.sequences.MergingSequence) -> access$getTransform$p
    273:273:java.util.Iterator iterator() -> iterator
kotlin.sequences.MergingSequence$iterator$1 -> kotlin.sequences.MergingSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    273:275:void <init>(kotlin.sequences.MergingSequence) -> <init>
    274:274:java.util.Iterator getIterator1() -> getIterator1
    275:275:java.util.Iterator getIterator2() -> getIterator2
    281:281:boolean hasNext() -> hasNext
    277:277:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.sequences.Sequence -> kotlin.sequences.Sequence:
# {"id":"sourceFile","fileName":"Sequence.kt"}
kotlin.sequences.SequenceBuilderIterator -> kotlin.sequences.SequenceBuilderIterator:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    104:104:void <init>() -> <init>
    155:158:java.lang.Throwable exceptionalState() -> exceptionalState
    188:188:kotlin.coroutines.CoroutineContext getContext() -> getContext
    108:108:kotlin.coroutines.Continuation getNextStep() -> getNextStep
    112:129:boolean hasNext() -> hasNext
    134:147:java.lang.Object next() -> next
    152:152:java.lang.Object nextNotReady() -> nextNotReady
    0:0:void remove() -> remove
    183:184:void resumeWith(java.lang.Object) -> resumeWith
    108:108:void setNextStep(kotlin.coroutines.Continuation) -> setNextStep
    163:167:java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation) -> yield
    172:177:java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation) -> yieldAll
kotlin.sequences.SequenceScope -> kotlin.sequences.SequenceScope:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    51:51:void <init>() -> <init>
    80:81:java.lang.Object yieldAll(java.lang.Iterable,kotlin.coroutines.Continuation) -> yieldAll
    92:92:java.lang.Object yieldAll(kotlin.sequences.Sequence,kotlin.coroutines.Continuation) -> yieldAll
kotlin.sequences.SequencesKt -> kotlin.sequences.SequencesKt:
    1:1:void <init>() -> <init>
    0:0:java.lang.Iterable asIterable(kotlin.sequences.Sequence) -> asIterable
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence) -> constrainOnce
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int count(kotlin.sequences.Sequence) -> count
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence drop(kotlin.sequences.Sequence,int) -> drop
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence emptySequence() -> emptySequence
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1) -> generateSequence
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> generateSequence
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Iterator iterator(kotlin.jvm.functions.Function2) -> iterator
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object last(kotlin.sequences.Sequence) -> last
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> map
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2) -> sequence
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence sequenceOf(java.lang.Object[]) -> sequenceOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List toList(kotlin.sequences.Sequence) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.sequences.SequencesKt__SequenceBuilderKt -> kotlin.sequences.SequencesKt__SequenceBuilderKt:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    0:0:void <init>() -> <init>
    37:38:java.util.Iterator iterator(kotlin.jvm.functions.Function2) -> iterator
    26:26:kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2) -> sequence
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(kotlin.jvm.functions.Function2) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt__SequencesJVMKt -> kotlin.sequences.SequencesKt__SequencesJVMKt:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
    0:0:void <init>() -> <init>
    16:16:kotlin.sequences.Sequence asSequence(java.util.Enumeration) -> asSequence
kotlin.sequences.SequencesKt__SequencesKt -> kotlin.sequences.SequencesKt__SequencesKt:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <init>() -> <init>
    21:21:kotlin.sequences.Sequence Sequence(kotlin.jvm.functions.Function0) -> Sequence
    30:30:kotlin.sequences.Sequence asSequence(java.util.Iterator) -> asSequence
    626:626:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence) -> constrainOnce
    42:42:kotlin.sequences.Sequence emptySequence() -> emptySequence
    328:328:kotlin.sequences.Sequence flatMapIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1) -> flatMapIndexed
    82:82:kotlin.sequences.Sequence flatten(kotlin.sequences.Sequence) -> flatten
    95:98:kotlin.sequences.Sequence flatten$SequencesKt__SequencesKt(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> flatten$SequencesKt__SequencesKt
    92:92:kotlin.sequences.Sequence flattenSequenceOfIterable(kotlin.sequences.Sequence) -> flattenSequenceOfIterable
    641:641:kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0) -> generateSequence
    660:662:kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1) -> generateSequence
    678:678:kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> generateSequence
    66:66:kotlin.sequences.Sequence ifEmpty(kotlin.sequences.Sequence,kotlin.jvm.functions.Function0) -> ifEmpty
    56:56:kotlin.sequences.Sequence orEmpty(kotlin.sequences.Sequence) -> orEmpty
    37:37:kotlin.sequences.Sequence sequenceOf(java.lang.Object[]) -> sequenceOf
    128:128:kotlin.sequences.Sequence shuffled(kotlin.sequences.Sequence) -> shuffled
    139:139:kotlin.sequences.Sequence shuffled(kotlin.sequences.Sequence,kotlin.random.Random) -> shuffled
    111:117:kotlin.Pair unzip(kotlin.sequences.Sequence) -> unzip
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(kotlin.jvm.functions.Function0) -> <init>
    22:22:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(java.util.Iterator) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1 -> kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    328:334:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.sequences.SequencesKt__SequencesKt$flatten$1 -> kotlin.sequences.SequencesKt__SequencesKt$flatten$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    82:82:java.lang.Object invoke(java.lang.Object) -> invoke
    82:82:java.util.Iterator invoke(kotlin.sequences.Sequence) -> invoke
kotlin.sequences.SequencesKt__SequencesKt$flatten$2 -> kotlin.sequences.SequencesKt__SequencesKt$flatten$2:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    92:92:java.lang.Object invoke(java.lang.Object) -> invoke
    92:92:java.util.Iterator invoke(java.lang.Iterable) -> invoke
kotlin.sequences.SequencesKt__SequencesKt$flatten$3 -> kotlin.sequences.SequencesKt__SequencesKt$flatten$3:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function0) -> <init>
    641:641:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2 -> kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <init>(java.lang.Object) -> <init>
    662:662:java.lang.Object invoke() -> invoke
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1 -> kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    66:73:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1 -> kotlin.sequences.SequencesKt__SequencesKt$shuffled$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    0:0:void <init>(kotlin.sequences.Sequence,kotlin.random.Random,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    139:147:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.sequences.SequencesKt___SequencesJvmKt -> kotlin.sequences.SequencesKt___SequencesJvmKt:
# {"id":"sourceFile","fileName":"_SequencesJvm.kt"}
    0:0:void <init>() -> <init>
    26:26:kotlin.sequences.Sequence filterIsInstance(kotlin.sequences.Sequence,java.lang.Class) -> filterIsInstance
    38:38:java.util.Collection filterIsInstanceTo(kotlin.sequences.Sequence,java.util.Collection,java.lang.Class) -> filterIsInstanceTo
    67:67:java.lang.Double max(kotlin.sequences.Sequence) -> max
    75:75:java.lang.Float max(kotlin.sequences.Sequence) -> max
    82:82:java.lang.Comparable max(kotlin.sequences.Sequence) -> max
    173:185:java.lang.Object maxBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> maxBy
    96:96:java.lang.Object maxWith(kotlin.sequences.Sequence,java.util.Comparator) -> maxWith
    104:104:java.lang.Double min(kotlin.sequences.Sequence) -> min
    112:112:java.lang.Float min(kotlin.sequences.Sequence) -> min
    119:119:java.lang.Comparable min(kotlin.sequences.Sequence) -> min
    187:199:java.lang.Object minBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> minBy
    133:133:java.lang.Object minWith(kotlin.sequences.Sequence,java.util.Comparator) -> minWith
    147:149:java.math.BigDecimal sumOfBigDecimal(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    165:167:java.math.BigInteger sumOfBigInteger(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sumOfBigInteger
    48:48:java.util.SortedSet toSortedSet(kotlin.sequences.Sequence) -> toSortedSet
    59:59:java.util.SortedSet toSortedSet(kotlin.sequences.Sequence,java.util.Comparator) -> toSortedSet
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1 -> kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1:
# {"id":"sourceFile","fileName":"_SequencesJvm.kt"}
    0:0:void <init>(java.lang.Class) -> <init>
    26:26:java.lang.Boolean invoke(java.lang.Object) -> invoke
    26:26:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt -> kotlin.sequences.SequencesKt___SequencesKt:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>() -> <init>
    1224:1224:boolean all(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> all
    1236:1236:boolean any(kotlin.sequences.Sequence) -> any
    1247:1247:boolean any(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> any
    2921:2921:java.lang.Iterable asIterable(kotlin.sequences.Sequence) -> asIterable
    0:0:kotlin.sequences.Sequence asSequence(kotlin.sequences.Sequence) -> asSequence
    658:3127:java.util.Map associate(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> associate
    674:3131:java.util.Map associateBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> associateBy
    689:3135:java.util.Map associateBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    704:705:java.util.Map associateByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    722:723:java.util.Map associateByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    739:740:java.util.Map associateTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    759:3139:java.util.Map associateWith(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> associateWith
    775:776:java.util.Map associateWithTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    2941:2943:double averageOfByte(kotlin.sequences.Sequence) -> averageOfByte
    3021:3023:double averageOfDouble(kotlin.sequences.Sequence) -> averageOfDouble
    3005:3007:double averageOfFloat(kotlin.sequences.Sequence) -> averageOfFloat
    2973:2975:double averageOfInt(kotlin.sequences.Sequence) -> averageOfInt
    2989:2991:double averageOfLong(kotlin.sequences.Sequence) -> averageOfLong
    2957:2959:double averageOfShort(kotlin.sequences.Sequence) -> averageOfShort
    2592:2592:kotlin.sequences.Sequence chunked(kotlin.sequences.Sequence,int) -> chunked
    2613:2613:kotlin.sequences.Sequence chunked(kotlin.sequences.Sequence,int,kotlin.jvm.functions.Function1) -> chunked
    24:24:boolean contains(kotlin.sequences.Sequence,java.lang.Object) -> contains
    1258:1258:int count(kotlin.sequences.Sequence) -> count
    1269:1269:int count(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> count
    1181:1181:kotlin.sequences.Sequence distinct(kotlin.sequences.Sequence) -> distinct
    1196:1196:kotlin.sequences.Sequence distinctBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> distinctBy
    404:408:kotlin.sequences.Sequence drop(kotlin.sequences.Sequence,int) -> drop
    420:420:kotlin.sequences.Sequence dropWhile(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> dropWhile
    35:35:java.lang.Object elementAt(kotlin.sequences.Sequence,int) -> elementAt
    47:55:java.lang.Object elementAtOrElse(kotlin.sequences.Sequence,int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    68:71:java.lang.Object elementAtOrNull(kotlin.sequences.Sequence,int) -> elementAtOrNull
    431:431:kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> filter
    445:445:kotlin.sequences.Sequence filterIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> filterIndexed
    459:3124:java.util.Collection filterIndexedTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2) -> filterIndexedTo
    473:473:kotlin.sequences.Sequence filterIsInstance(kotlin.sequences.Sequence) -> filterIsInstance
    484:484:java.util.Collection filterIsInstanceTo(kotlin.sequences.Sequence,java.util.Collection) -> filterIsInstanceTo
    496:496:kotlin.sequences.Sequence filterNot(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> filterNot
    508:508:kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence) -> filterNotNull
    519:519:java.util.Collection filterNotNullTo(kotlin.sequences.Sequence,java.util.Collection) -> filterNotNullTo
    531:531:java.util.Collection filterNotTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1) -> filterNotTo
    543:543:java.util.Collection filterTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1) -> filterTo
    3113:3113:java.lang.Object find(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> find
    3116:3117:java.lang.Object findLast(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> findLast
    110:113:java.lang.Object first(kotlin.sequences.Sequence) -> first
    123:124:java.lang.Object first(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> first
    138:138:java.lang.Object firstNotNullOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> firstNotNullOf
    152:153:java.lang.Object firstNotNullOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> firstNotNullOfOrNull
    167:170:java.lang.Object firstOrNull(kotlin.sequences.Sequence) -> firstOrNull
    179:179:java.lang.Object firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> firstOrNull
    872:872:kotlin.sequences.Sequence flatMap(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> flatMap
    888:888:kotlin.sequences.Sequence flatMapIndexedIterable(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    920:922:java.util.Collection flatMapIndexedIterableTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    904:904:kotlin.sequences.Sequence flatMapIndexedSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> flatMapIndexedSequence
    940:942:java.util.Collection flatMapIndexedSequenceTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedSequenceTo
    861:861:kotlin.sequences.Sequence flatMapIterable(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> flatMapIterable
    957:959:java.util.Collection flatMapIterableTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapIterableTo
    970:972:java.util.Collection flatMapTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    1285:1285:java.lang.Object fold(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    1303:1303:java.lang.Object foldIndexed(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    1313:1313:void forEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> forEach
    1325:1325:void forEachIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> forEachIndexed
    988:3152:java.util.Map groupBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> groupBy
    1003:3165:java.util.Map groupBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    1017:3171:java.util.Map groupByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    1037:3178:java.util.Map groupByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    1055:1055:kotlin.collections.Grouping groupingBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> groupingBy
    190:192:int indexOf(kotlin.sequences.Sequence,java.lang.Object) -> indexOf
    206:208:int indexOfFirst(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> indexOfFirst
    223:225:int indexOfLast(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> indexOfLast
    2890:2899:java.lang.Appendable joinTo(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    2889:2889:java.lang.Appendable joinTo$default(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    2914:2914:java.lang.String joinToString(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    2913:2913:java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    242:247:java.lang.Object last(kotlin.sequences.Sequence) -> last
    263:269:java.lang.Object last(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> last
    282:284:int lastIndexOf(kotlin.sequences.Sequence,java.lang.Object) -> lastIndexOf
    299:304:java.lang.Object lastOrNull(kotlin.sequences.Sequence) -> lastOrNull
    317:318:java.lang.Object lastOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> lastOrNull
    1070:1070:kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> map
    1082:1082:kotlin.sequences.Sequence mapIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> mapIndexed
    1094:1094:kotlin.sequences.Sequence mapIndexedNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> mapIndexedNotNull
    1106:3183:java.util.Collection mapIndexedNotNullTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedNotNullTo
    1120:1121:java.util.Collection mapIndexedTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    1134:1134:kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> mapNotNull
    1144:3185:java.util.Collection mapNotNullTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1) -> mapNotNullTo
    1155:1156:java.util.Collection mapTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    1433:1445:java.lang.Object maxByOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> maxByOrNull
    1408:1420:java.lang.Object maxByOrThrow(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> maxByOrThrow
    1464:1469:double maxOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> maxOf
    1489:1494:float maxOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> maxOf
    1512:1517:java.lang.Comparable maxOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> maxOf
    1537:1544:java.lang.Double maxOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> maxOfOrNull
    1560:1567:java.lang.Float maxOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> maxOfOrNull
    1581:1586:java.lang.Comparable maxOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> maxOfOrNull
    1606:1611:java.lang.Object maxOfWith(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    1629:1634:java.lang.Object maxOfWithOrNull(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    1650:1657:java.lang.Double maxOrNull(kotlin.sequences.Sequence) -> maxOrNull
    1669:1676:java.lang.Float maxOrNull(kotlin.sequences.Sequence) -> maxOrNull
    1686:1691:java.lang.Comparable maxOrNull(kotlin.sequences.Sequence) -> maxOrNull
    1341:1346:double maxOrThrow(kotlin.sequences.Sequence) -> maxOrThrow
    1364:1369:float maxOrThrow(kotlin.sequences.Sequence) -> maxOrThrow
    1385:1390:java.lang.Comparable maxOrThrow(kotlin.sequences.Sequence) -> maxOrThrow
    1724:1729:java.lang.Object maxWithOrNull(kotlin.sequences.Sequence,java.util.Comparator) -> maxWithOrNull
    1707:1712:java.lang.Object maxWithOrThrow(kotlin.sequences.Sequence,java.util.Comparator) -> maxWithOrThrow
    1839:1851:java.lang.Object minByOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> minByOrNull
    1814:1826:java.lang.Object minByOrThrow(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> minByOrThrow
    1870:1875:double minOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> minOf
    1895:1900:float minOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> minOf
    1918:1923:java.lang.Comparable minOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> minOf
    1943:1950:java.lang.Double minOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> minOfOrNull
    1966:1973:java.lang.Float minOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> minOfOrNull
    1987:1992:java.lang.Comparable minOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> minOfOrNull
    2012:2017:java.lang.Object minOfWith(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    2035:2040:java.lang.Object minOfWithOrNull(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    2056:2063:java.lang.Double minOrNull(kotlin.sequences.Sequence) -> minOrNull
    2075:2082:java.lang.Float minOrNull(kotlin.sequences.Sequence) -> minOrNull
    2092:2097:java.lang.Comparable minOrNull(kotlin.sequences.Sequence) -> minOrNull
    1747:1752:double minOrThrow(kotlin.sequences.Sequence) -> minOrThrow
    1770:1775:float minOrThrow(kotlin.sequences.Sequence) -> minOrThrow
    1791:1796:java.lang.Comparable minOrThrow(kotlin.sequences.Sequence) -> minOrThrow
    2130:2135:java.lang.Object minWithOrNull(kotlin.sequences.Sequence,java.util.Comparator) -> minWithOrNull
    2113:2118:java.lang.Object minWithOrThrow(kotlin.sequences.Sequence,java.util.Comparator) -> minWithOrThrow
    2622:2622:kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Object) -> minus
    2639:2640:kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Object[]) -> minus
    2656:2656:kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Iterable) -> minus
    2676:2676:kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,kotlin.sequences.Sequence) -> minus
    2694:2694:kotlin.sequences.Sequence minusElement(kotlin.sequences.Sequence,java.lang.Object) -> minusElement
    2148:2148:boolean none(kotlin.sequences.Sequence) -> none
    2159:2159:boolean none(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> none
    2170:2170:kotlin.sequences.Sequence onEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> onEach
    2185:2185:kotlin.sequences.Sequence onEachIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> onEachIndexed
    2707:2716:kotlin.Pair partition(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> partition
    2725:2725:kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Object) -> plus
    2737:2737:kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Object[]) -> plus
    2749:2749:kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Iterable) -> plus
    2761:2761:kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,kotlin.sequences.Sequence) -> plus
    2771:2771:kotlin.sequences.Sequence plusElement(kotlin.sequences.Sequence,java.lang.Object) -> plusElement
    2206:2210:java.lang.Object reduce(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> reduce
    2230:2235:java.lang.Object reduceIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3) -> reduceIndexed
    2255:2260:java.lang.Object reduceIndexedOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    2281:2285:java.lang.Object reduceOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> reduceOrNull
    2576:2576:kotlin.sequences.Sequence requireNoNulls(kotlin.sequences.Sequence) -> requireNoNulls
    2307:2307:kotlin.sequences.Sequence runningFold(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    2335:2335:kotlin.sequences.Sequence runningFoldIndexed(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    2362:2362:kotlin.sequences.Sequence runningReduce(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> runningReduce
    2391:2391:kotlin.sequences.Sequence runningReduceIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3) -> runningReduceIndexed
    2423:2423:kotlin.sequences.Sequence scan(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    2445:2445:kotlin.sequences.Sequence scanIndexed(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    331:336:java.lang.Object single(kotlin.sequences.Sequence) -> single
    348:355:java.lang.Object single(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> single
    366:370:java.lang.Object singleOrNull(kotlin.sequences.Sequence) -> singleOrNull
    383:384:java.lang.Object singleOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> singleOrNull
    584:584:kotlin.sequences.Sequence sorted(kotlin.sequences.Sequence) -> sorted
    603:603:kotlin.sequences.Sequence sortedBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sortedBy
    614:614:kotlin.sequences.Sequence sortedByDescending(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sortedByDescending
    625:625:kotlin.sequences.Sequence sortedDescending(kotlin.sequences.Sequence) -> sortedDescending
    636:636:kotlin.sequences.Sequence sortedWith(kotlin.sequences.Sequence,java.util.Comparator) -> sortedWith
    2457:2458:int sumBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sumBy
    2472:2473:double sumByDouble(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sumByDouble
    3036:3036:int sumOfByte(kotlin.sequences.Sequence) -> sumOfByte
    2490:2491:double sumOfDouble(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sumOfDouble
    3106:3106:double sumOfDouble(kotlin.sequences.Sequence) -> sumOfDouble
    3092:3092:float sumOfFloat(kotlin.sequences.Sequence) -> sumOfFloat
    2508:2509:int sumOfInt(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sumOfInt
    3064:3064:int sumOfInt(kotlin.sequences.Sequence) -> sumOfInt
    2526:2527:long sumOfLong(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sumOfLong
    3078:3078:long sumOfLong(kotlin.sequences.Sequence) -> sumOfLong
    3050:3050:int sumOfShort(kotlin.sequences.Sequence) -> sumOfShort
    2544:2546:int sumOfUInt(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sumOfUInt
    2563:2565:long sumOfULong(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> sumOfULong
    557:561:kotlin.sequences.Sequence take(kotlin.sequences.Sequence,int) -> take
    573:573:kotlin.sequences.Sequence takeWhile(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> takeWhile
    787:788:java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection) -> toCollection
    799:799:java.util.HashSet toHashSet(kotlin.sequences.Sequence) -> toHashSet
    808:816:java.util.List toList(kotlin.sequences.Sequence) -> toList
    826:826:java.util.List toMutableList(kotlin.sequences.Sequence) -> toMutableList
    1207:1208:java.util.Set toMutableSet(kotlin.sequences.Sequence) -> toMutableSet
    837:845:java.util.Set toSet(kotlin.sequences.Sequence) -> toSet
    2791:2791:kotlin.sequences.Sequence windowed(kotlin.sequences.Sequence,int,int,boolean) -> windowed
    2813:2813:kotlin.sequences.Sequence windowed(kotlin.sequences.Sequence,int,int,boolean,kotlin.jvm.functions.Function1) -> windowed
    2790:2790:kotlin.sequences.Sequence windowed$default(kotlin.sequences.Sequence,int,int,boolean,int,java.lang.Object) -> windowed$default
    2812:2812:kotlin.sequences.Sequence windowed$default(kotlin.sequences.Sequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> windowed$default
    1167:1167:kotlin.sequences.Sequence withIndex(kotlin.sequences.Sequence) -> withIndex
    2825:2825:kotlin.sequences.Sequence zip(kotlin.sequences.Sequence,kotlin.sequences.Sequence) -> zip
    2838:2838:kotlin.sequences.Sequence zip(kotlin.sequences.Sequence,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> zip
    2852:2852:kotlin.sequences.Sequence zipWithNext(kotlin.sequences.Sequence) -> zipWithNext
    2867:2867:kotlin.sequences.Sequence zipWithNext(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> zipWithNext
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1 -> kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(kotlin.sequences.Sequence) -> <init>
    71:71:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$distinct$1 -> kotlin.sequences.SequencesKt___SequencesKt$distinct$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1 -> kotlin.sequences.SequencesKt___SequencesKt$elementAt$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(int) -> <init>
    35:35:java.lang.Object invoke(int) -> invoke
    35:35:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1 -> kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function2) -> <init>
    445:445:java.lang.Boolean invoke(kotlin.collections.IndexedValue) -> invoke
    445:445:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2 -> kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    445:445:java.lang.Object invoke(java.lang.Object) -> invoke
    445:445:java.lang.Object invoke(kotlin.collections.IndexedValue) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1 -> kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    473:473:java.lang.Boolean invoke(java.lang.Object) -> invoke
    473:473:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1 -> kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    508:508:java.lang.Boolean invoke(java.lang.Object) -> invoke
    508:508:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1 -> kotlin.sequences.SequencesKt___SequencesKt$flatMap$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    861:861:java.lang.Object invoke(java.lang.Object) -> invoke
    861:861:java.util.Iterator invoke(java.lang.Iterable) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2 -> kotlin.sequences.SequencesKt___SequencesKt$flatMap$2:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    872:872:java.lang.Object invoke(java.lang.Object) -> invoke
    872:872:java.util.Iterator invoke(kotlin.sequences.Sequence) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1 -> kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    888:888:java.lang.Object invoke(java.lang.Object) -> invoke
    888:888:java.util.Iterator invoke(java.lang.Iterable) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2 -> kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    904:904:java.lang.Object invoke(java.lang.Object) -> invoke
    904:904:java.util.Iterator invoke(kotlin.sequences.Sequence) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1 -> kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    1055:1055:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    1057:1057:java.lang.Object keyOf(java.lang.Object) -> keyOf
    1056:1056:java.util.Iterator sourceIterator() -> sourceIterator
kotlin.sequences.SequencesKt___SequencesKt$minus$1 -> kotlin.sequences.SequencesKt___SequencesKt$minus$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    2622:2622:void <init>(kotlin.sequences.Sequence,java.lang.Object) -> <init>
    2624:2625:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1 -> kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(kotlin.jvm.internal.Ref$BooleanRef,java.lang.Object) -> <init>
    2625:2625:java.lang.Boolean invoke(java.lang.Object) -> invoke
    2625:2625:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$minus$2 -> kotlin.sequences.SequencesKt___SequencesKt$minus$2:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    2640:2640:void <init>(kotlin.sequences.Sequence,java.lang.Object[]) -> <init>
    2642:2642:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1 -> kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(java.lang.Object[]) -> <init>
    2642:2642:java.lang.Boolean invoke(java.lang.Object) -> invoke
    2642:2642:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$minus$3 -> kotlin.sequences.SequencesKt___SequencesKt$minus$3:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    2656:2656:void <init>(java.lang.Iterable,kotlin.sequences.Sequence) -> <init>
    2658:2662:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1 -> kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(java.util.Collection) -> <init>
    2662:2662:java.lang.Boolean invoke(java.lang.Object) -> invoke
    2662:2662:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$minus$4 -> kotlin.sequences.SequencesKt___SequencesKt$minus$4:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    2676:2676:void <init>(kotlin.sequences.Sequence,kotlin.sequences.Sequence) -> <init>
    2678:2682:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1 -> kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(java.util.List) -> <init>
    2682:2682:java.lang.Boolean invoke(java.lang.Object) -> invoke
    2682:2682:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$onEach$1 -> kotlin.sequences.SequencesKt___SequencesKt$onEach$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function1) -> <init>
    2171:2171:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1 -> kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function2) -> <init>
    2185:2185:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    2186:2186:java.lang.Object invoke(int,java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1 -> kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(kotlin.sequences.Sequence) -> <init>
    2576:2576:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1 -> kotlin.sequences.SequencesKt___SequencesKt$runningFold$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(java.lang.Object,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    2307:2314:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1 -> kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(java.lang.Object,kotlin.sequences.Sequence,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    2335:2343:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1 -> kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    2362:2372:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1 -> kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    2391:2402:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.sequences.SequencesKt___SequencesKt$sorted$1 -> kotlin.sequences.SequencesKt___SequencesKt$sorted$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    584:584:void <init>(kotlin.sequences.Sequence) -> <init>
    586:588:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1 -> kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    636:636:void <init>(kotlin.sequences.Sequence,java.util.Comparator) -> <init>
    638:640:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt___SequencesKt$zip$1 -> kotlin.sequences.SequencesKt___SequencesKt$zip$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    2825:2825:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    2825:2825:kotlin.Pair invoke(java.lang.Object,java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1 -> kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    2852:2852:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    2852:2852:kotlin.Pair invoke(java.lang.Object,java.lang.Object) -> invoke
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2 -> kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    0:0:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    2867:2876:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.sequences.SubSequence -> kotlin.sequences.SubSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    348:357:void <init>(kotlin.sequences.Sequence,int,int) -> <init>
    348:348:int access$getEndIndex$p(kotlin.sequences.SubSequence) -> access$getEndIndex$p
    348:348:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.SubSequence) -> access$getSequence$p
    348:348:int access$getStartIndex$p(kotlin.sequences.SubSequence) -> access$getStartIndex$p
    362:362:kotlin.sequences.Sequence drop(int) -> drop
    360:360:int getCount() -> getCount
    365:365:java.util.Iterator iterator() -> iterator
    363:363:kotlin.sequences.Sequence take(int) -> take
kotlin.sequences.SubSequence$iterator$1 -> kotlin.sequences.SubSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    365:367:void <init>(kotlin.sequences.SubSequence) -> <init>
    372:374:void drop() -> drop
    367:367:java.util.Iterator getIterator() -> getIterator
    368:368:int getPosition() -> getPosition
    379:380:boolean hasNext() -> hasNext
    384:388:java.lang.Object next() -> next
    0:0:void remove() -> remove
    368:368:void setPosition(int) -> setPosition
kotlin.sequences.TakeSequence -> kotlin.sequences.TakeSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    397:403:void <init>(kotlin.sequences.Sequence,int) -> <init>
    397:397:int access$getCount$p(kotlin.sequences.TakeSequence) -> access$getCount$p
    397:397:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeSequence) -> access$getSequence$p
    406:406:kotlin.sequences.Sequence drop(int) -> drop
    409:409:java.util.Iterator iterator() -> iterator
    407:407:kotlin.sequences.Sequence take(int) -> take
kotlin.sequences.TakeSequence$iterator$1 -> kotlin.sequences.TakeSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    409:411:void <init>(kotlin.sequences.TakeSequence) -> <init>
    411:411:java.util.Iterator getIterator() -> getIterator
    410:410:int getLeft() -> getLeft
    421:421:boolean hasNext() -> hasNext
    414:417:java.lang.Object next() -> next
    0:0:void remove() -> remove
    410:410:void setLeft(int) -> setLeft
kotlin.sequences.TakeWhileSequence -> kotlin.sequences.TakeWhileSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    430:433:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    430:430:kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.TakeWhileSequence) -> access$getPredicate$p
    430:430:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeWhileSequence) -> access$getSequence$p
    435:435:java.util.Iterator iterator() -> iterator
kotlin.sequences.TakeWhileSequence$iterator$1 -> kotlin.sequences.TakeWhileSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    435:437:void <init>(kotlin.sequences.TakeWhileSequence) -> <init>
    441:449:void calcNext() -> calcNext
    436:436:java.util.Iterator getIterator() -> getIterator
    438:438:java.lang.Object getNextItem() -> getNextItem
    437:437:int getNextState() -> getNextState
    467:469:boolean hasNext() -> hasNext
    453:462:java.lang.Object next() -> next
    0:0:void remove() -> remove
    438:438:void setNextItem(java.lang.Object) -> setNextItem
    437:437:void setNextState(int) -> setNextState
kotlin.sequences.TransformingIndexedSequence -> kotlin.sequences.TransformingIndexedSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    228:229:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> <init>
    228:228:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingIndexedSequence) -> access$getSequence$p
    228:228:kotlin.jvm.functions.Function2 access$getTransformer$p(kotlin.sequences.TransformingIndexedSequence) -> access$getTransformer$p
    230:230:java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingIndexedSequence$iterator$1 -> kotlin.sequences.TransformingIndexedSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    230:231:void <init>(kotlin.sequences.TransformingIndexedSequence) -> <init>
    232:232:int getIndex() -> getIndex
    231:231:java.util.Iterator getIterator() -> getIterator
    238:238:boolean hasNext() -> hasNext
    234:234:java.lang.Object next() -> next
    0:0:void remove() -> remove
    232:232:void setIndex(int) -> setIndex
kotlin.sequences.TransformingSequence -> kotlin.sequences.TransformingSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    205:206:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    205:205:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence) -> access$getSequence$p
    205:205:kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence) -> access$getTransformer$p
    219:219:kotlin.sequences.Sequence flatten$kotlin_stdlib(kotlin.jvm.functions.Function1) -> flatten$kotlin_stdlib
    207:207:java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingSequence$iterator$1 -> kotlin.sequences.TransformingSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    207:208:void <init>(kotlin.sequences.TransformingSequence) -> <init>
    208:208:java.util.Iterator getIterator() -> getIterator
    214:214:boolean hasNext() -> hasNext
    210:210:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.sequences.USequencesKt -> kotlin.sequences.USequencesKt:
# {"id":"sourceFile","fileName":"_USequences.kt"}
    1:1:void <init>() -> <init>
kotlin.sequences.USequencesKt___USequencesKt -> kotlin.sequences.USequencesKt___USequencesKt:
# {"id":"sourceFile","fileName":"_USequences.kt"}
    0:0:void <init>() -> <init>
    60:61:int sumOfUByte(kotlin.sequences.Sequence) -> sumOfUByte
    28:29:int sumOfUInt(kotlin.sequences.Sequence) -> sumOfUInt
    44:45:long sumOfULong(kotlin.sequences.Sequence) -> sumOfULong
    76:77:int sumOfUShort(kotlin.sequences.Sequence) -> sumOfUShort
kotlin.streams.jdk8.StreamsKt -> kotlin.streams.jdk8.StreamsKt:
# {"id":"sourceFile","fileName":"Streams.kt"}
    0:0:java.util.Spliterator $r8$lambda$D6rJ2g9z2pCQAEMFkqgtKPOz0JA(kotlin.sequences.Sequence) -> $r8$lambda$D6rJ2g9z2pCQAEMFkqgtKPOz0JA
      # {"id":"com.android.tools.r8.synthesized"}
    31:31:kotlin.sequences.Sequence asSequence(java.util.stream.Stream) -> asSequence
    39:39:kotlin.sequences.Sequence asSequence(java.util.stream.IntStream) -> asSequence
    47:47:kotlin.sequences.Sequence asSequence(java.util.stream.LongStream) -> asSequence
    55:55:kotlin.sequences.Sequence asSequence(java.util.stream.DoubleStream) -> asSequence
    64:64:java.util.stream.Stream asStream(kotlin.sequences.Sequence) -> asStream
    64:64:java.util.Spliterator asStream$lambda$4(kotlin.sequences.Sequence) -> asStream$lambda$4
    72:72:java.util.List toList(java.util.stream.Stream) -> toList
    80:80:java.util.List toList(java.util.stream.IntStream) -> toList
    88:88:java.util.List toList(java.util.stream.LongStream) -> toList
    96:96:java.util.List toList(java.util.stream.DoubleStream) -> toList
kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline0 -> kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:long[] kotlin.streams.jdk8.StreamsKt$$InternalSyntheticApiModelOutline$1$232e912a4a49e7f0c1cba18f3c020dab031875df8aa7f5ff1fcfbfd9ae3497ea$0.m(java.util.stream.LongStream) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline1 -> kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.stream.Collector kotlin.streams.jdk8.StreamsKt$$InternalSyntheticApiModelOutline$1$25aa8c555d995fc82e3419c56dffa3b8ab5d878c4ce57db8a5168280a5d9db1a$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline2 -> kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object kotlin.streams.jdk8.StreamsKt$$InternalSyntheticApiModelOutline$1$25aa8c555d995fc82e3419c56dffa3b8ab5d878c4ce57db8a5168280a5d9db1a$1.m(java.util.stream.Stream,java.util.stream.Collector) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline3 -> kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Spliterator kotlin.streams.jdk8.StreamsKt$$InternalSyntheticApiModelOutline$1$26883553235f52968e53afc0f1046aa3ff9a263aaf5098494a60ca1d0543c9f4$0.m(java.util.Iterator,int) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline4 -> kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:double[] kotlin.streams.jdk8.StreamsKt$$InternalSyntheticApiModelOutline$1$55a4a221dd68c4f220e5f6524aba1f9240eb45acc20b9b349a61a70a8b14679e$0.m(java.util.stream.DoubleStream) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline5 -> kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.stream.Stream kotlin.streams.jdk8.StreamsKt$$InternalSyntheticApiModelOutline$1$6ee60fe1e8514605b4f733e7cb9555fb8c69a4b6f1694321b31a4d175fd0f962$1.m(java.util.function.Supplier,int,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline6 -> kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int[] kotlin.streams.jdk8.StreamsKt$$InternalSyntheticApiModelOutline$1$bed23958bf5682b4f63c6654befa01e51a635226c1fae42070f49056707e852d$0.m(java.util.stream.IntStream) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticLambda7 -> kotlin.streams.jdk8.StreamsKt$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.sequences.Sequence kotlin.streams.jdk8.StreamsKt$$InternalSyntheticLambda$1$6ee60fe1e8514605b4f733e7cb9555fb8c69a4b6f1694321b31a4d175fd0f962$0.f$0 -> f$0
    0:0:void kotlin.streams.jdk8.StreamsKt$$InternalSyntheticLambda$1$6ee60fe1e8514605b4f733e7cb9555fb8c69a4b6f1694321b31a4d175fd0f962$0.<init>(kotlin.sequences.Sequence) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object kotlin.streams.jdk8.StreamsKt$$InternalSyntheticLambda$1$6ee60fe1e8514605b4f733e7cb9555fb8c69a4b6f1694321b31a4d175fd0f962$0.get() -> get
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(java.util.stream.Stream) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1$$ExternalSyntheticApiModelOutline0 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Iterator kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1$$InternalSyntheticApiModelOutline$1$c92b36e499deca19a63f74e512a2f3c32a5c56741e00838b6a896b1101d1e07d$0.m(java.util.stream.Stream) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(java.util.stream.IntStream) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2$$ExternalSyntheticApiModelOutline0 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.PrimitiveIterator$OfInt kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2$$InternalSyntheticApiModelOutline$1$1692d0c1af722a89b4e2669e6436ab8ca7c862f2581a2be54c53ff20dc15859e$0.m(java.util.stream.IntStream) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(java.util.stream.LongStream) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3$$ExternalSyntheticApiModelOutline0 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.PrimitiveIterator$OfLong kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3$$InternalSyntheticApiModelOutline$1$671eee7b4bff27491b231f4a787edb727aafa8d77b46b052b6e93fef5408effc$0.m(java.util.stream.LongStream) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(java.util.stream.DoubleStream) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4$$ExternalSyntheticApiModelOutline0 -> kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.PrimitiveIterator$OfDouble kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4$$InternalSyntheticApiModelOutline$1$e2406798e4182752c7ccc3fafb4c513aa467797b637ecb03fa69be4b7262549c$0.m(java.util.stream.DoubleStream) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.system.ProcessKt -> kotlin.system.ProcessKt:
# {"id":"sourceFile","fileName":"Process.kt"}
    19:20:java.lang.Void exitProcess(int) -> exitProcess
kotlin.system.TimingKt -> kotlin.system.TimingKt:
# {"id":"sourceFile","fileName":"Timing.kt"}
    34:36:long measureNanoTime(kotlin.jvm.functions.Function0) -> measureNanoTime
    20:22:long measureTimeMillis(kotlin.jvm.functions.Function0) -> measureTimeMillis
kotlin.text.CharCategory -> kotlin.text.CharCategory:
# {"id":"sourceFile","fileName":"CharCategoryJVM.kt"}
    0:0:kotlin.text.CharCategory[] $values() -> $values
    12:157:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    162:162:boolean contains(char) -> contains
    8:8:java.lang.String getCode() -> getCode
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    8:8:int getValue() -> getValue
    0:0:kotlin.text.CharCategory valueOf(java.lang.String) -> valueOf
    0:0:kotlin.text.CharCategory[] values() -> values
kotlin.text.CharCategory$Companion -> kotlin.text.CharCategory$Companion:
# {"id":"sourceFile","fileName":"CharCategoryJVM.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    164:164:void <init>() -> <init>
    172:174:kotlin.text.CharCategory valueOf(int) -> valueOf
kotlin.text.CharDirectionality -> kotlin.text.CharDirectionality:
# {"id":"sourceFile","fileName":"CharDirectionality.kt"}
    0:0:kotlin.text.CharDirectionality[] $values() -> $values
    19:118:void <clinit>() -> <clinit>
    13:13:void <init>(java.lang.String,int,int) -> <init>
    13:13:kotlin.Lazy access$getDirectionalityMap$delegate$cp() -> access$getDirectionalityMap$delegate$cp
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    13:13:int getValue() -> getValue
    0:0:kotlin.text.CharDirectionality valueOf(java.lang.String) -> valueOf
    0:0:kotlin.text.CharDirectionality[] values() -> values
kotlin.text.CharDirectionality$Companion -> kotlin.text.CharDirectionality$Companion:
# {"id":"sourceFile","fileName":"CharDirectionality.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    117:117:void <init>() -> <init>
    118:118:java.util.Map getDirectionalityMap() -> getDirectionalityMap
    120:120:kotlin.text.CharDirectionality valueOf(int) -> valueOf
kotlin.text.CharDirectionality$Companion$directionalityMap$2 -> kotlin.text.CharDirectionality$Companion$directionalityMap$2:
# {"id":"sourceFile","fileName":"CharDirectionality.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    118:118:java.lang.Object invoke() -> invoke
    118:127:java.util.Map invoke() -> invoke
kotlin.text.CharsKt -> kotlin.text.CharsKt:
    1:1:void <init>() -> <init>
    0:0:int checkRadix(int) -> checkRadix
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.text.CharsKt__CharJVMKt -> kotlin.text.CharsKt__CharJVMKt:
# {"id":"sourceFile","fileName":"CharJVM.kt"}
    0:0:void <init>() -> <init>
    313:314:int checkRadix(int) -> checkRadix
    306:306:int digitOf(char,int) -> digitOf
    17:17:kotlin.text.CharCategory getCategory(char) -> getCategory
    284:284:kotlin.text.CharDirectionality getDirectionality(char) -> getDirectionality
    25:25:boolean isDefined(char) -> isDefined
    57:57:boolean isDigit(char) -> isDigit
    290:290:boolean isHighSurrogate(char) -> isHighSurrogate
    76:76:boolean isISOControl(char) -> isISOControl
    65:65:boolean isIdentifierIgnorable(char) -> isIdentifierIgnorable
    83:83:boolean isJavaIdentifierPart(char) -> isJavaIdentifierPart
    90:90:boolean isJavaIdentifierStart(char) -> isJavaIdentifierStart
    36:36:boolean isLetter(char) -> isLetter
    47:47:boolean isLetterOrDigit(char) -> isLetterOrDigit
    296:296:boolean isLowSurrogate(char) -> isLowSurrogate
    120:120:boolean isLowerCase(char) -> isLowerCase
    232:232:boolean isTitleCase(char) -> isTitleCase
    109:109:boolean isUpperCase(char) -> isUpperCase
    98:98:boolean isWhitespace(char) -> isWhitespace
    208:208:java.lang.String lowercase(char) -> lowercase
    222:222:java.lang.String lowercase(char,java.util.Locale) -> lowercase
    193:193:char lowercaseChar(char) -> lowercaseChar
    271:278:java.lang.String titlecase(char,java.util.Locale) -> titlecase
    256:256:char titlecaseChar(char) -> titlecaseChar
    179:179:char toLowerCase(char) -> toLowerCase
    242:242:char toTitleCase(char) -> toTitleCase
    128:128:char toUpperCase(char) -> toUpperCase
    157:157:java.lang.String uppercase(char) -> uppercase
    171:171:java.lang.String uppercase(char,java.util.Locale) -> uppercase
    142:142:char uppercaseChar(char) -> uppercaseChar
kotlin.text.CharsKt__CharKt -> kotlin.text.CharsKt__CharKt:
# {"id":"sourceFile","fileName":"Char.kt"}
    0:0:void <init>() -> <init>
    93:96:char digitToChar(int) -> digitToChar
    111:115:char digitToChar(int,int) -> digitToChar
    23:24:int digitToInt(char) -> digitToInt
    44:44:int digitToInt(char,int) -> digitToInt
    59:59:java.lang.Integer digitToIntOrNull(char) -> digitToIntOrNull
    78:79:java.lang.Integer digitToIntOrNull(char,int) -> digitToIntOrNull
    237:240:boolean equals(char,char,boolean) -> equals
    233:233:boolean equals$default(char,char,boolean,int,java.lang.Object) -> equals$default
    246:246:boolean isSurrogate(char) -> isSurrogate
    223:223:java.lang.String plus(char,java.lang.String) -> plus
    215:215:java.lang.String titlecase(char) -> titlecase
kotlin.text.Charsets -> kotlin.text.Charsets:
# {"id":"sourceFile","fileName":"Charsets.kt"}
    29:61:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    68:70:java.nio.charset.Charset UTF32() -> UTF32
    96:98:java.nio.charset.Charset UTF32_BE() -> UTF32_BE
    82:84:java.nio.charset.Charset UTF32_LE() -> UTF32_LE
kotlin.text.CharsetsKt -> kotlin.text.CharsetsKt:
# {"id":"sourceFile","fileName":"Charsets.kt"}
    17:17:java.nio.charset.Charset charset(java.lang.String) -> charset
kotlin.text.DelimitedRangesSequence -> kotlin.text.DelimitedRangesSequence:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1171:1175:void <init>(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2) -> <init>
    1171:1171:kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence) -> access$getGetNextMatch$p
    1171:1171:java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence) -> access$getInput$p
    1171:1171:int access$getLimit$p(kotlin.text.DelimitedRangesSequence) -> access$getLimit$p
    1171:1171:int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence) -> access$getStartIndex$p
    1178:1178:java.util.Iterator iterator() -> iterator
kotlin.text.DelimitedRangesSequence$iterator$1 -> kotlin.text.DelimitedRangesSequence$iterator$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1178:1181:void <init>(kotlin.text.DelimitedRangesSequence) -> <init>
    1186:1205:void calcNext() -> calcNext
    1183:1183:int getCounter() -> getCounter
    1180:1180:int getCurrentStartIndex() -> getCurrentStartIndex
    1182:1182:kotlin.ranges.IntRange getNextItem() -> getNextItem
    1181:1181:int getNextSearchIndex() -> getNextSearchIndex
    1179:1179:int getNextState() -> getNextState
    1222:1224:boolean hasNext() -> hasNext
    1178:1178:java.lang.Object next() -> next
    1210:1217:kotlin.ranges.IntRange next() -> next
    0:0:void remove() -> remove
    1183:1183:void setCounter(int) -> setCounter
    1180:1180:void setCurrentStartIndex(int) -> setCurrentStartIndex
    1182:1182:void setNextItem(kotlin.ranges.IntRange) -> setNextItem
    1181:1181:void setNextSearchIndex(int) -> setNextSearchIndex
    1179:1179:void setNextState(int) -> setNextState
kotlin.text.FlagEnum -> kotlin.text.FlagEnum:
# {"id":"sourceFile","fileName":"Regex.kt"}
kotlin.text.HexExtensionsKt -> kotlin.text.HexExtensionsKt:
# {"id":"sourceFile","fileName":"HexExtensions.kt"}
    15:600:void <clinit>() -> <clinit>
    305:305:long charsPerSet(long,int,int) -> charsPerSet
    566:569:int checkContainsAt(java.lang.String,java.lang.String,int,int,java.lang.String) -> checkContainsAt
    580:582:void checkHexLength(java.lang.String,int,int,int,boolean) -> checkHexLength
    315:320:int checkNewLineAt(java.lang.String,int,int) -> checkNewLineAt
    588:590:int decimalFromHexDigitAt(java.lang.String,int) -> decimalFromHexDigitAt
    123:147:int formattedStringLength(int,int,int,int,int,int,int) -> formattedStringLength
    0:0:void getHEX_DIGITS_TO_DECIMAL$annotations() -> getHEX_DIGITS_TO_DECIMAL$annotations
    349:349:byte hexToByte(java.lang.String,kotlin.text.HexFormat) -> hexToByte
    368:368:byte hexToByte(java.lang.String,int,int,kotlin.text.HexFormat) -> hexToByte
    349:349:byte hexToByte$default(java.lang.String,kotlin.text.HexFormat,int,java.lang.Object) -> hexToByte$default
    367:367:byte hexToByte$default(java.lang.String,int,int,kotlin.text.HexFormat,int,java.lang.Object) -> hexToByte$default
    166:166:byte[] hexToByteArray(java.lang.String,kotlin.text.HexFormat) -> hexToByteArray
    190:243:byte[] hexToByteArray(java.lang.String,int,int,kotlin.text.HexFormat) -> hexToByteArray
    166:166:byte[] hexToByteArray$default(java.lang.String,kotlin.text.HexFormat,int,java.lang.Object) -> hexToByteArray$default
    185:188:byte[] hexToByteArray$default(java.lang.String,int,int,kotlin.text.HexFormat,int,java.lang.Object) -> hexToByteArray$default
    441:441:int hexToInt(java.lang.String,kotlin.text.HexFormat) -> hexToInt
    460:460:int hexToInt(java.lang.String,int,int,kotlin.text.HexFormat) -> hexToInt
    441:441:int hexToInt$default(java.lang.String,kotlin.text.HexFormat,int,java.lang.Object) -> hexToInt$default
    459:459:int hexToInt$default(java.lang.String,int,int,kotlin.text.HexFormat,int,java.lang.Object) -> hexToInt$default
    487:487:long hexToLong(java.lang.String,kotlin.text.HexFormat) -> hexToLong
    506:506:long hexToLong(java.lang.String,int,int,kotlin.text.HexFormat) -> hexToLong
    487:487:long hexToLong$default(java.lang.String,kotlin.text.HexFormat,int,java.lang.Object) -> hexToLong$default
    505:505:long hexToLong$default(java.lang.String,int,int,kotlin.text.HexFormat,int,java.lang.Object) -> hexToLong$default
    541:560:long hexToLongImpl(java.lang.String,int,int,kotlin.text.HexFormat,int) -> hexToLongImpl
    540:540:long hexToLongImpl$default(java.lang.String,int,int,kotlin.text.HexFormat,int,int,java.lang.Object) -> hexToLongImpl$default
    395:395:short hexToShort(java.lang.String,kotlin.text.HexFormat) -> hexToShort
    414:414:short hexToShort(java.lang.String,int,int,kotlin.text.HexFormat) -> hexToShort
    395:395:short hexToShort$default(java.lang.String,kotlin.text.HexFormat,int,java.lang.Object) -> hexToShort$default
    413:413:short hexToShort$default(java.lang.String,int,int,kotlin.text.HexFormat,int,java.lang.Object) -> hexToShort$default
    256:290:int parsedByteArrayMaxSize(int,int,int,int,int,int,int) -> parsedByteArrayMaxSize
    33:33:java.lang.String toHexString(byte[],kotlin.text.HexFormat) -> toHexString
    55:109:java.lang.String toHexString(byte[],int,int,kotlin.text.HexFormat) -> toHexString
    335:335:java.lang.String toHexString(byte,kotlin.text.HexFormat) -> toHexString
    381:381:java.lang.String toHexString(short,kotlin.text.HexFormat) -> toHexString
    427:427:java.lang.String toHexString(int,kotlin.text.HexFormat) -> toHexString
    473:473:java.lang.String toHexString(long,kotlin.text.HexFormat) -> toHexString
    33:33:java.lang.String toHexString$default(byte[],kotlin.text.HexFormat,int,java.lang.Object) -> toHexString$default
    50:53:java.lang.String toHexString$default(byte[],int,int,kotlin.text.HexFormat,int,java.lang.Object) -> toHexString$default
    335:335:java.lang.String toHexString$default(byte,kotlin.text.HexFormat,int,java.lang.Object) -> toHexString$default
    381:381:java.lang.String toHexString$default(short,kotlin.text.HexFormat,int,java.lang.Object) -> toHexString$default
    427:427:java.lang.String toHexString$default(int,kotlin.text.HexFormat,int,java.lang.Object) -> toHexString$default
    473:473:java.lang.String toHexString$default(long,kotlin.text.HexFormat,int,java.lang.Object) -> toHexString$default
    512:535:java.lang.String toHexStringImpl(long,kotlin.text.HexFormat,int) -> toHexStringImpl
    311:311:long wholeElementsPerSet(long,long,int) -> wholeElementsPerSet
kotlin.text.HexFormat -> kotlin.text.HexFormat:
# {"id":"sourceFile","fileName":"HexFormat.kt"}
    379:394:void <clinit>() -> <clinit>
    15:32:void <init>(boolean,kotlin.text.HexFormat$BytesHexFormat,kotlin.text.HexFormat$NumberHexFormat) -> <init>
    15:15:kotlin.text.HexFormat access$getDefault$cp() -> access$getDefault$cp
    15:15:kotlin.text.HexFormat access$getUpperCase$cp() -> access$getUpperCase$cp
    28:28:kotlin.text.HexFormat$BytesHexFormat getBytes() -> getBytes
    32:32:kotlin.text.HexFormat$NumberHexFormat getNumber() -> getNumber
    24:24:boolean getUpperCase() -> getUpperCase
    35:44:java.lang.String toString() -> toString
kotlin.text.HexFormat$Builder -> kotlin.text.HexFormat$Builder:
# {"id":"sourceFile","fileName":"HexFormat.kt"}
    296:298:void <init>() -> <init>
    352:355:kotlin.text.HexFormat build() -> build
    337:337:void bytes(kotlin.jvm.functions.Function1) -> bytes
    307:310:kotlin.text.HexFormat$BytesHexFormat$Builder getBytes() -> getBytes
    322:325:kotlin.text.HexFormat$NumberHexFormat$Builder getNumber() -> getNumber
    298:298:boolean getUpperCase() -> getUpperCase
    347:347:void number(kotlin.jvm.functions.Function1) -> number
    298:298:void setUpperCase(boolean) -> setUpperCase
kotlin.text.HexFormat$BytesHexFormat -> kotlin.text.HexFormat$BytesHexFormat:
# {"id":"sourceFile","fileName":"HexFormat.kt"}
    181:181:void <clinit>() -> <clinit>
    65:79:void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    65:65:kotlin.text.HexFormat$BytesHexFormat access$getDefault$cp() -> access$getDefault$cp
    89:94:java.lang.StringBuilder appendOptionsTo$kotlin_stdlib(java.lang.StringBuilder,java.lang.String) -> appendOptionsTo$kotlin_stdlib
    77:77:java.lang.String getBytePrefix() -> getBytePrefix
    75:75:java.lang.String getByteSeparator() -> getByteSeparator
    79:79:java.lang.String getByteSuffix() -> getByteSuffix
    70:70:int getBytesPerGroup() -> getBytesPerGroup
    67:67:int getBytesPerLine() -> getBytesPerLine
    72:72:java.lang.String getGroupSeparator() -> getGroupSeparator
    82:85:java.lang.String toString() -> toString
kotlin.text.HexFormat$BytesHexFormat$Builder -> kotlin.text.HexFormat$BytesHexFormat$Builder:
# {"id":"sourceFile","fileName":"HexFormat.kt"}
    101:168:void <init>() -> <init>
    176:176:kotlin.text.HexFormat$BytesHexFormat build$kotlin_stdlib() -> build$kotlin_stdlib
    154:154:java.lang.String getBytePrefix() -> getBytePrefix
    140:140:java.lang.String getByteSeparator() -> getByteSeparator
    168:168:java.lang.String getByteSuffix() -> getByteSuffix
    123:123:int getBytesPerGroup() -> getBytesPerGroup
    109:109:int getBytesPerLine() -> getBytesPerLine
    131:131:java.lang.String getGroupSeparator() -> getGroupSeparator
    156:158:void setBytePrefix(java.lang.String) -> setBytePrefix
    142:144:void setByteSeparator(java.lang.String) -> setByteSeparator
    170:172:void setByteSuffix(java.lang.String) -> setByteSuffix
    126:127:void setBytesPerGroup(int) -> setBytesPerGroup
    112:113:void setBytesPerLine(int) -> setBytesPerLine
    131:131:void setGroupSeparator(java.lang.String) -> setGroupSeparator
kotlin.text.HexFormat$BytesHexFormat$Companion -> kotlin.text.HexFormat$BytesHexFormat$Companion:
# {"id":"sourceFile","fileName":"HexFormat.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    180:180:void <init>() -> <init>
    181:181:kotlin.text.HexFormat$BytesHexFormat getDefault$kotlin_stdlib() -> getDefault$kotlin_stdlib
kotlin.text.HexFormat$Companion -> kotlin.text.HexFormat$Companion:
# {"id":"sourceFile","fileName":"HexFormat.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    361:361:void <init>() -> <init>
    379:379:kotlin.text.HexFormat getDefault() -> getDefault
    391:391:kotlin.text.HexFormat getUpperCase() -> getUpperCase
kotlin.text.HexFormat$NumberHexFormat -> kotlin.text.HexFormat$NumberHexFormat:
# {"id":"sourceFile","fileName":"HexFormat.kt"}
    284:284:void <clinit>() -> <clinit>
    221:227:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    221:221:kotlin.text.HexFormat$NumberHexFormat access$getDefault$cp() -> access$getDefault$cp
    237:239:java.lang.StringBuilder appendOptionsTo$kotlin_stdlib(java.lang.StringBuilder,java.lang.String) -> appendOptionsTo$kotlin_stdlib
    223:223:java.lang.String getPrefix() -> getPrefix
    227:227:boolean getRemoveLeadingZeros() -> getRemoveLeadingZeros
    225:225:java.lang.String getSuffix() -> getSuffix
    230:233:java.lang.String toString() -> toString
kotlin.text.HexFormat$NumberHexFormat$Builder -> kotlin.text.HexFormat$NumberHexFormat$Builder:
# {"id":"sourceFile","fileName":"HexFormat.kt"}
    246:276:void <init>() -> <init>
    279:279:kotlin.text.HexFormat$NumberHexFormat build$kotlin_stdlib() -> build$kotlin_stdlib
    254:254:java.lang.String getPrefix() -> getPrefix
    276:276:boolean getRemoveLeadingZeros() -> getRemoveLeadingZeros
    268:268:java.lang.String getSuffix() -> getSuffix
    256:258:void setPrefix(java.lang.String) -> setPrefix
    276:276:void setRemoveLeadingZeros(boolean) -> setRemoveLeadingZeros
    270:272:void setSuffix(java.lang.String) -> setSuffix
kotlin.text.HexFormat$NumberHexFormat$Companion -> kotlin.text.HexFormat$NumberHexFormat$Companion:
# {"id":"sourceFile","fileName":"HexFormat.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    283:283:void <init>() -> <init>
    284:284:kotlin.text.HexFormat$NumberHexFormat getDefault$kotlin_stdlib() -> getDefault$kotlin_stdlib
kotlin.text.HexFormatKt -> kotlin.text.HexFormatKt:
# {"id":"sourceFile","fileName":"HexFormat.kt"}
    410:410:kotlin.text.HexFormat HexFormat(kotlin.jvm.functions.Function1) -> HexFormat
kotlin.text.MatchGroup -> kotlin.text.MatchGroup:
# {"id":"sourceFile","fileName":"Regex.kt"}
    73:73:void <init>(java.lang.String,kotlin.ranges.IntRange) -> <init>
    0:0:java.lang.String component1() -> component1
    0:0:kotlin.ranges.IntRange component2() -> component2
    0:0:kotlin.text.MatchGroup copy(java.lang.String,kotlin.ranges.IntRange) -> copy
    0:0:kotlin.text.MatchGroup copy$default(kotlin.text.MatchGroup,java.lang.String,kotlin.ranges.IntRange,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    73:73:kotlin.ranges.IntRange getRange() -> getRange
    73:73:java.lang.String getValue() -> getValue
    0:0:int hashCode() -> hashCode
    0:0:java.lang.String toString() -> toString
kotlin.text.MatchGroupCollection -> kotlin.text.MatchGroupCollection:
# {"id":"sourceFile","fileName":"MatchResult.kt"}
kotlin.text.MatchNamedGroupCollection -> kotlin.text.MatchNamedGroupCollection:
# {"id":"sourceFile","fileName":"MatchResult.kt"}
kotlin.text.MatchResult -> kotlin.text.MatchResult:
# {"id":"sourceFile","fileName":"MatchResult.kt"}
kotlin.text.MatchResult$DefaultImpls -> kotlin.text.MatchResult$DefaultImpls:
# {"id":"sourceFile","fileName":"MatchResult.kt"}
    80:80:kotlin.text.MatchResult$Destructured getDestructured(kotlin.text.MatchResult) -> getDestructured
kotlin.text.MatchResult$Destructured -> kotlin.text.MatchResult$Destructured:
# {"id":"sourceFile","fileName":"MatchResult.kt"}
    97:97:void <init>(kotlin.text.MatchResult) -> <init>
    99:99:java.lang.String component1() -> component1
    117:117:java.lang.String component10() -> component10
    101:101:java.lang.String component2() -> component2
    103:103:java.lang.String component3() -> component3
    105:105:java.lang.String component4() -> component4
    107:107:java.lang.String component5() -> component5
    109:109:java.lang.String component6() -> component6
    111:111:java.lang.String component7() -> component7
    113:113:java.lang.String component8() -> component8
    115:115:java.lang.String component9() -> component9
    97:97:kotlin.text.MatchResult getMatch() -> getMatch
    125:125:java.util.List toList() -> toList
kotlin.text.MatcherMatchResult -> kotlin.text.MatcherMatchResult:
# {"id":"sourceFile","fileName":"Regex.kt"}
    349:356:void <init>(java.util.regex.Matcher,java.lang.CharSequence) -> <init>
    349:349:java.util.regex.MatchResult access$getMatchResult(kotlin.text.MatcherMatchResult) -> access$getMatchResult
    349:349:kotlin.text.MatchResult$Destructured getDestructured() -> getDestructured
    378:384:java.util.List getGroupValues() -> getGroupValues
    356:356:kotlin.text.MatchGroupCollection getGroups() -> getGroups
    350:350:java.util.regex.MatchResult getMatchResult() -> getMatchResult
    352:352:kotlin.ranges.IntRange getRange() -> getRange
    354:354:java.lang.String getValue() -> getValue
    388:389:kotlin.text.MatchResult next() -> next
kotlin.text.MatcherMatchResult$groupValues$1 -> kotlin.text.MatcherMatchResult$groupValues$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    379:379:void <init>(kotlin.text.MatcherMatchResult) -> <init>
    379:379:boolean contains(java.lang.Object) -> contains
    379:379:boolean contains(java.lang.String) -> contains
    379:379:java.lang.Object get(int) -> get
    381:381:java.lang.String get(int) -> get
    380:380:int getSize() -> getSize
    379:379:int indexOf(java.lang.Object) -> indexOf
    379:379:int indexOf(java.lang.String) -> indexOf
    379:379:int lastIndexOf(java.lang.Object) -> lastIndexOf
    379:379:int lastIndexOf(java.lang.String) -> lastIndexOf
kotlin.text.MatcherMatchResult$groups$1 -> kotlin.text.MatcherMatchResult$groups$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    356:356:void <init>(kotlin.text.MatcherMatchResult) -> <init>
    356:356:boolean contains(java.lang.Object) -> contains
    356:356:boolean contains(kotlin.text.MatchGroup) -> contains
    362:364:kotlin.text.MatchGroup get(int) -> get
    370:370:kotlin.text.MatchGroup get(java.lang.String) -> get
    357:357:int getSize() -> getSize
    0:0:boolean isEmpty() -> isEmpty
    360:360:java.util.Iterator iterator() -> iterator
kotlin.text.MatcherMatchResult$groups$1$iterator$1 -> kotlin.text.MatcherMatchResult$groups$1$iterator$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.text.MatcherMatchResult$groups$1) -> <init>
    360:360:java.lang.Object invoke(java.lang.Object) -> invoke
    360:360:kotlin.text.MatchGroup invoke(int) -> invoke
kotlin.text.Regex -> kotlin.text.Regex:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <clinit>() -> <clinit>
    81:83:void <init>(java.util.regex.Pattern) -> <init>
    87:87:void <init>(java.lang.String) -> <init>
    90:90:void <init>(java.lang.String,kotlin.text.RegexOption) -> <init>
    93:93:void <init>(java.lang.String,java.util.Set) -> <init>
    81:81:java.util.regex.Pattern access$getNativePattern$p(kotlin.text.Regex) -> access$getNativePattern$p
    108:108:boolean containsMatchIn(java.lang.CharSequence) -> containsMatchIn
    120:120:kotlin.text.MatchResult find(java.lang.CharSequence,int) -> find
    119:119:kotlin.text.MatchResult find$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object) -> find$default
    131:134:kotlin.sequences.Sequence findAll(java.lang.CharSequence,int) -> findAll
    130:130:kotlin.sequences.Sequence findAll$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object) -> findAll$default
    102:398:java.util.Set getOptions() -> getOptions
    98:98:java.lang.String getPattern() -> getPattern
    147:148:kotlin.text.MatchResult matchAt(java.lang.CharSequence,int) -> matchAt
    142:142:kotlin.text.MatchResult matchEntire(java.lang.CharSequence) -> matchEntire
    105:105:boolean matches(java.lang.CharSequence) -> matches
    154:154:boolean matchesAt(java.lang.CharSequence,int) -> matchesAt
    177:177:java.lang.String replace(java.lang.CharSequence,java.lang.String) -> replace
    185:202:java.lang.String replace(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> replace
    227:227:java.lang.String replaceFirst(java.lang.CharSequence,java.lang.String) -> replaceFirst
    238:253:java.util.List split(java.lang.CharSequence,int) -> split
    237:237:java.util.List split$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object) -> split$default
    269:271:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,int) -> splitToSequence
    268:268:kotlin.sequences.Sequence splitToSequence$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object) -> splitToSequence$default
    303:303:java.util.regex.Pattern toPattern() -> toPattern
    296:296:java.lang.String toString() -> toString
    305:305:java.lang.Object writeReplace() -> writeReplace
kotlin.text.Regex$Companion -> kotlin.text.Regex$Companion:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    315:315:void <init>() -> <init>
    315:315:int access$ensureUnicodeCase(kotlin.text.Regex$Companion,int) -> access$ensureUnicodeCase
    0:0:int ensureUnicodeCase(int) -> ensureUnicodeCase
    326:326:java.lang.String escape(java.lang.String) -> escape
    332:332:java.lang.String escapeReplacement(java.lang.String) -> escapeReplacement
    320:320:kotlin.text.Regex fromLiteral(java.lang.String) -> fromLiteral
kotlin.text.Regex$Serialized -> kotlin.text.Regex$Serialized:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <clinit>() -> <clinit>
    307:307:void <init>(java.lang.String,int) -> <init>
    307:307:int getFlags() -> getFlags
    307:307:java.lang.String getPattern() -> getPattern
    312:312:java.lang.Object readResolve() -> readResolve
kotlin.text.Regex$Serialized$Companion -> kotlin.text.Regex$Serialized$Companion:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    308:308:void <init>() -> <init>
kotlin.text.Regex$findAll$1 -> kotlin.text.Regex$findAll$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.text.Regex,java.lang.CharSequence,int) -> <init>
    134:134:java.lang.Object invoke() -> invoke
    134:134:kotlin.text.MatchResult invoke() -> invoke
kotlin.text.Regex$findAll$2 -> kotlin.text.Regex$findAll$2:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    134:134:java.lang.Object invoke(java.lang.Object) -> invoke
    134:134:kotlin.text.MatchResult invoke(kotlin.text.MatchResult) -> invoke
kotlin.text.Regex$special$$inlined$fromInt$1 -> kotlin.text.Regex$special$$inlined$fromInt$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(int) -> <init>
    23:23:java.lang.Boolean invoke(java.lang.Enum) -> invoke
    23:23:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.text.Regex$splitToSequence$1 -> kotlin.text.Regex$splitToSequence$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.text.Regex,java.lang.CharSequence,int,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    271:287:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.text.RegexKt -> kotlin.text.RegexKt:
# {"id":"sourceFile","fileName":"Regex.kt"}
    1:1:kotlin.text.MatchResult access$findNext(java.util.regex.Matcher,int,java.lang.CharSequence) -> access$findNext
    1:1:kotlin.text.MatchResult access$matchEntire(java.util.regex.Matcher,java.lang.CharSequence) -> access$matchEntire
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult) -> access$range
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int) -> access$range
    1:1:int access$toInt(java.lang.Iterable) -> access$toInt
    342:342:kotlin.text.MatchResult findNext(java.util.regex.Matcher,int,java.lang.CharSequence) -> findNext
    22:23:java.util.Set fromInt(int) -> fromInt
    346:346:kotlin.text.MatchResult matchEntire(java.util.regex.Matcher,java.lang.CharSequence) -> matchEntire
    394:394:kotlin.ranges.IntRange range(java.util.regex.MatchResult) -> range
    395:395:kotlin.ranges.IntRange range(java.util.regex.MatchResult,int) -> range
    19:398:int toInt(java.lang.Iterable) -> toInt
kotlin.text.RegexKt$fromInt$1$1 -> kotlin.text.RegexKt$fromInt$1$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(int) -> <init>
    23:23:java.lang.Boolean invoke(java.lang.Enum) -> invoke
    23:23:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.text.RegexOption -> kotlin.text.RegexOption:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:kotlin.text.RegexOption[] $values() -> $values
    33:63:void <clinit>() -> <clinit>
    29:29:void <init>(java.lang.String,int,int,int) -> <init>
    29:29:void <init>(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    29:29:int getMask() -> getMask
    29:29:int getValue() -> getValue
    0:0:kotlin.text.RegexOption valueOf(java.lang.String) -> valueOf
    0:0:kotlin.text.RegexOption[] values() -> values
kotlin.text.ScreenFloatValueRegEx -> kotlin.text.ScreenFloatValueRegEx:
# {"id":"sourceFile","fileName":"StringNumberConversionsJVM.kt"}
    246:260:void <clinit>() -> <clinit>
    245:245:void <init>() -> <init>
kotlin.text.StringsKt -> kotlin.text.StringsKt:
    1:1:void <init>() -> <init>
    0:0:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> appendElement
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String concatToString(char[]) -> concatToString
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String concatToString(char[],int,int) -> concatToString
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> contains$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> contains$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String drop(java.lang.String,int) -> drop
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String dropLast(java.lang.String,int) -> dropLast
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean endsWith(java.lang.String,java.lang.String,boolean) -> endsWith
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean endsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> endsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> endsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean equals(java.lang.String,java.lang.String,boolean) -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Comparator getCASE_INSENSITIVE_ORDER(kotlin.jvm.internal.StringCompanionObject) -> getCASE_INSENSITIVE_ORDER
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getLastIndex(java.lang.CharSequence) -> getLastIndex
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> indexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> indexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:char last(java.lang.CharSequence) -> last
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> lastIndexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> lastIndexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String padStart(java.lang.String,int,char) -> padStart
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> regionMatches
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object) -> regionMatches$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String removePrefix(java.lang.String,java.lang.CharSequence) -> removePrefix
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence) -> removeSuffix
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence) -> removeSurrounding
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String repeat(java.lang.CharSequence,int) -> repeat
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object) -> replace$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replace$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object) -> split$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean startsWith(java.lang.String,java.lang.String,int,boolean) -> startsWith
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean startsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> startsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object) -> startsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfter$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfter$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String) -> substringAfterLast
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBeforeLast$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String take(java.lang.String,int) -> take
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Integer toIntOrNull(java.lang.String) -> toIntOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object) -> trimMargin$default
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.text.StringsKt__AppendableKt -> kotlin.text.StringsKt__AppendableKt:
# {"id":"sourceFile","fileName":"Appendable.kt"}
    0:0:void <init>() -> <init>
    62:63:java.lang.Appendable append(java.lang.Appendable,java.lang.CharSequence[]) -> append
    85:88:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> appendElement
    70:70:java.lang.Appendable appendLine(java.lang.Appendable) -> appendLine
    75:75:java.lang.Appendable appendLine(java.lang.Appendable,java.lang.CharSequence) -> appendLine
    80:80:java.lang.Appendable appendLine(java.lang.Appendable,char) -> appendLine
    55:55:java.lang.Appendable appendRange(java.lang.Appendable,java.lang.CharSequence,int,int) -> appendRange
kotlin.text.StringsKt__IndentKt -> kotlin.text.StringsKt__IndentKt:
# {"id":"sourceFile","fileName":"Indent.kt"}
    0:0:void <init>() -> <init>
    104:105:kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String) -> getIndentFunction$StringsKt__IndentKt
    101:187:int indentWidth$StringsKt__IndentKt(java.lang.String) -> indentWidth$StringsKt__IndentKt
    87:99:java.lang.String prependIndent(java.lang.String,java.lang.String) -> prependIndent
    86:86:java.lang.String prependIndent$default(java.lang.String,java.lang.String,int,java.lang.Object) -> prependIndent$default
    113:204:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> reindent$StringsKt__IndentKt
    71:185:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> replaceIndent
    70:70:java.lang.String replaceIndent$default(java.lang.String,java.lang.String,int,java.lang.Object) -> replaceIndent$default
    35:154:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> replaceIndentByMargin
    34:34:java.lang.String replaceIndentByMargin$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceIndentByMargin$default
    65:65:java.lang.String trimIndent(java.lang.String) -> trimIndent
    27:27:java.lang.String trimMargin(java.lang.String,java.lang.String) -> trimMargin
    26:26:java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object) -> trimMargin$default
kotlin.text.StringsKt__IndentKt$getIndentFunction$1 -> kotlin.text.StringsKt__IndentKt$getIndentFunction$1:
# {"id":"sourceFile","fileName":"Indent.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:java.lang.String invoke(java.lang.String) -> invoke
    104:104:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.text.StringsKt__IndentKt$getIndentFunction$2 -> kotlin.text.StringsKt__IndentKt$getIndentFunction$2:
# {"id":"sourceFile","fileName":"Indent.kt"}
    0:0:void <init>(java.lang.String) -> <init>
    105:105:java.lang.Object invoke(java.lang.Object) -> invoke
    105:105:java.lang.String invoke(java.lang.String) -> invoke
kotlin.text.StringsKt__IndentKt$prependIndent$1 -> kotlin.text.StringsKt__IndentKt$prependIndent$1:
# {"id":"sourceFile","fileName":"Indent.kt"}
    0:0:void <init>(java.lang.String) -> <init>
    88:88:java.lang.Object invoke(java.lang.Object) -> invoke
    90:96:java.lang.String invoke(java.lang.String) -> invoke
kotlin.text.StringsKt__RegexExtensionsJVMKt -> kotlin.text.StringsKt__RegexExtensionsJVMKt:
# {"id":"sourceFile","fileName":"RegexExtensionsJVM.kt"}
    0:0:void <init>() -> <init>
    18:18:kotlin.text.Regex toRegex(java.util.regex.Pattern) -> toRegex
kotlin.text.StringsKt__RegexExtensionsKt -> kotlin.text.StringsKt__RegexExtensionsKt:
# {"id":"sourceFile","fileName":"RegexExtensions.kt"}
    0:0:void <init>() -> <init>
    15:15:kotlin.text.Regex toRegex(java.lang.String) -> toRegex
    21:21:kotlin.text.Regex toRegex(java.lang.String,kotlin.text.RegexOption) -> toRegex
    27:27:kotlin.text.Regex toRegex(java.lang.String,java.util.Set) -> toRegex
kotlin.text.StringsKt__StringBuilderJVMKt -> kotlin.text.StringsKt__StringBuilderJVMKt:
# {"id":"sourceFile","fileName":"StringBuilderJVM.kt"}
    0:0:void <init>() -> <init>
    162:162:java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.StringBuffer) -> appendLine
    167:167:java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.StringBuilder) -> appendLine
    172:172:java.lang.StringBuilder appendLine(java.lang.StringBuilder,int) -> appendLine
    177:177:java.lang.StringBuilder appendLine(java.lang.StringBuilder,short) -> appendLine
    182:182:java.lang.StringBuilder appendLine(java.lang.StringBuilder,byte) -> appendLine
    187:187:java.lang.StringBuilder appendLine(java.lang.StringBuilder,long) -> appendLine
    192:192:java.lang.StringBuilder appendLine(java.lang.StringBuilder,float) -> appendLine
    197:197:java.lang.StringBuilder appendLine(java.lang.StringBuilder,double) -> appendLine
    103:103:java.lang.StringBuilder appendRange(java.lang.StringBuilder,char[],int,int) -> appendRange
    118:118:java.lang.StringBuilder appendRange(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> appendRange
    212:212:java.lang.Appendable appendln(java.lang.Appendable) -> appendln
    222:222:java.lang.Appendable appendln(java.lang.Appendable,java.lang.CharSequence) -> appendln
    232:232:java.lang.Appendable appendln(java.lang.Appendable,char) -> appendln
    240:240:java.lang.StringBuilder appendln(java.lang.StringBuilder) -> appendln
    250:250:java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuffer) -> appendln
    260:260:java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.CharSequence) -> appendln
    270:270:java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.String) -> appendln
    280:280:java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.Object) -> appendln
    290:290:java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuilder) -> appendln
    300:300:java.lang.StringBuilder appendln(java.lang.StringBuilder,char[]) -> appendln
    310:310:java.lang.StringBuilder appendln(java.lang.StringBuilder,char) -> appendln
    320:320:java.lang.StringBuilder appendln(java.lang.StringBuilder,boolean) -> appendln
    330:330:java.lang.StringBuilder appendln(java.lang.StringBuilder,int) -> appendln
    340:340:java.lang.StringBuilder appendln(java.lang.StringBuilder,short) -> appendln
    350:350:java.lang.StringBuilder appendln(java.lang.StringBuilder,byte) -> appendln
    360:360:java.lang.StringBuilder appendln(java.lang.StringBuilder,long) -> appendln
    370:370:java.lang.StringBuilder appendln(java.lang.StringBuilder,float) -> appendln
    380:380:java.lang.StringBuilder appendln(java.lang.StringBuilder,double) -> appendln
    17:17:java.lang.StringBuilder clear(java.lang.StringBuilder) -> clear
    54:54:java.lang.StringBuilder deleteAt(java.lang.StringBuilder,int) -> deleteAt
    67:67:java.lang.StringBuilder deleteRange(java.lang.StringBuilder,int,int) -> deleteRange
    137:137:java.lang.StringBuilder insertRange(java.lang.StringBuilder,int,char[],int,int) -> insertRange
    156:156:java.lang.StringBuilder insertRange(java.lang.StringBuilder,int,java.lang.CharSequence,int,int) -> insertRange
    25:25:void set(java.lang.StringBuilder,int,char) -> set
    40:40:java.lang.StringBuilder setRange(java.lang.StringBuilder,int,int,java.lang.String) -> setRange
    86:86:void toCharArray(java.lang.StringBuilder,char[],int,int,int) -> toCharArray
    85:86:void toCharArray$default(java.lang.StringBuilder,char[],int,int,int,int,java.lang.Object) -> toCharArray$default
kotlin.text.StringsKt__StringBuilderKt -> kotlin.text.StringsKt__StringBuilderKt:
# {"id":"sourceFile","fileName":"StringBuilder.kt"}
    0:0:void <init>() -> <init>
    399:399:java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.Object) -> append
    426:427:java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.String[]) -> append
    435:436:java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.Object[]) -> append
    444:444:java.lang.StringBuilder append(java.lang.StringBuilder,char[],int,int) -> append
    449:449:java.lang.StringBuilder appendLine(java.lang.StringBuilder) -> appendLine
    454:454:java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.CharSequence) -> appendLine
    459:459:java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.String) -> appendLine
    464:464:java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.Object) -> appendLine
    469:469:java.lang.StringBuilder appendLine(java.lang.StringBuilder,char[]) -> appendLine
    474:474:java.lang.StringBuilder appendLine(java.lang.StringBuilder,char) -> appendLine
    479:479:java.lang.StringBuilder appendLine(java.lang.StringBuilder,boolean) -> appendLine
    408:408:java.lang.String buildString(kotlin.jvm.functions.Function1) -> buildString
    419:419:java.lang.String buildString(int,kotlin.jvm.functions.Function1) -> buildString
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> kotlin.text.StringsKt__StringNumberConversionsJVMKt:
# {"id":"sourceFile","fileName":"StringNumberConversionsJVM.kt"}
    0:0:void <init>() -> <init>
    266:267:java.lang.Object screenFloatValue$StringsKt__StringNumberConversionsJVMKt(java.lang.String,kotlin.jvm.functions.Function1) -> screenFloatValue$StringsKt__StringNumberConversionsJVMKt
    209:209:java.math.BigDecimal toBigDecimal(java.lang.String) -> toBigDecimal
    221:221:java.math.BigDecimal toBigDecimal(java.lang.String,java.math.MathContext) -> toBigDecimal
    229:291:java.math.BigDecimal toBigDecimalOrNull(java.lang.String) -> toBigDecimalOrNull
    240:298:java.math.BigDecimal toBigDecimalOrNull(java.lang.String,java.math.MathContext) -> toBigDecimalOrNull
    158:158:java.math.BigInteger toBigInteger(java.lang.String) -> toBigInteger
    168:168:java.math.BigInteger toBigInteger(java.lang.String,int) -> toBigInteger
    175:175:java.math.BigInteger toBigIntegerOrNull(java.lang.String) -> toBigIntegerOrNull
    185:198:java.math.BigInteger toBigIntegerOrNull(java.lang.String,int) -> toBigIntegerOrNull
    55:55:boolean toBoolean(java.lang.String) -> toBoolean
    62:62:byte toByte(java.lang.String) -> toByte
    71:71:byte toByte(java.lang.String,int) -> toByte
    134:134:double toDouble(java.lang.String) -> toDouble
    149:283:java.lang.Double toDoubleOrNull(java.lang.String) -> toDoubleOrNull
    127:127:float toFloat(java.lang.String) -> toFloat
    142:276:java.lang.Float toFloatOrNull(java.lang.String) -> toFloatOrNull
    95:95:int toInt(java.lang.String) -> toInt
    104:104:int toInt(java.lang.String,int) -> toInt
    111:111:long toLong(java.lang.String) -> toLong
    120:120:long toLong(java.lang.String,int) -> toLong
    79:79:short toShort(java.lang.String) -> toShort
    88:88:short toShort(java.lang.String,int) -> toShort
    19:19:java.lang.String toString(byte,int) -> toString
    28:28:java.lang.String toString(short,int) -> toString
    37:37:java.lang.String toString(int,int) -> toString
    46:46:java.lang.String toString(long,int) -> toString
kotlin.text.StringsKt__StringNumberConversionsKt -> kotlin.text.StringsKt__StringNumberConversionsKt:
# {"id":"sourceFile","fileName":"StringNumberConversions.kt"}
    0:0:void <init>() -> <init>
    203:203:java.lang.Void numberFormatError(java.lang.String) -> numberFormatError
    17:17:java.lang.Byte toByteOrNull(java.lang.String) -> toByteOrNull
    27:29:java.lang.Byte toByteOrNull(java.lang.String,int) -> toByteOrNull
    57:57:java.lang.Integer toIntOrNull(java.lang.String) -> toIntOrNull
    67:124:java.lang.Integer toIntOrNull(java.lang.String,int) -> toIntOrNull
    132:132:java.lang.Long toLongOrNull(java.lang.String) -> toLongOrNull
    142:199:java.lang.Long toLongOrNull(java.lang.String,int) -> toLongOrNull
    37:37:java.lang.Short toShortOrNull(java.lang.String) -> toShortOrNull
    47:49:java.lang.Short toShortOrNull(java.lang.String,int) -> toShortOrNull
kotlin.text.StringsKt__StringsJVMKt -> kotlin.text.StringsKt__StringsJVMKt:
# {"id":"sourceFile","fileName":"StringsJVM.kt"}
    0:0:void <init>() -> <init>
    437:437:java.lang.String String(byte[],int,int,java.nio.charset.Charset) -> String
    444:444:java.lang.String String(byte[],java.nio.charset.Charset) -> String
    456:456:java.lang.String String(byte[],int,int) -> String
    464:464:java.lang.String String(byte[]) -> String
    471:471:java.lang.String String(char[]) -> String
    481:481:java.lang.String String(char[],int,int) -> String
    488:488:java.lang.String String(int[],int,int) -> String
    495:495:java.lang.String String(java.lang.StringBuffer) -> String
    502:502:java.lang.String String(java.lang.StringBuilder) -> String
    710:710:java.lang.String capitalize(java.lang.String) -> capitalize
    726:736:java.lang.String capitalize(java.lang.String,java.util.Locale) -> capitalize
    508:508:int codePointAt(java.lang.String,int) -> codePointAt
    514:514:int codePointBefore(java.lang.String,int) -> codePointBefore
    521:521:int codePointCount(java.lang.String,int,int) -> codePointCount
    531:533:int compareTo(java.lang.String,java.lang.String,boolean) -> compareTo
    529:529:int compareTo$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> compareTo$default
    176:176:java.lang.String concatToString(char[]) -> concatToString
    192:193:java.lang.String concatToString(char[],int,int) -> concatToString
    191:191:java.lang.String concatToString$default(char[],int,int,int,java.lang.Object) -> concatToString$default
    543:543:boolean contentEquals(java.lang.String,java.lang.CharSequence) -> contentEquals
    552:552:boolean contentEquals(java.lang.String,java.lang.StringBuffer) -> contentEquals
    565:568:boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence) -> contentEquals
    584:586:boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contentEquals
    753:753:java.lang.String decapitalize(java.lang.String) -> decapitalize
    766:766:java.lang.String decapitalize(java.lang.String,java.util.Locale) -> decapitalize
    221:221:java.lang.String decodeToString(byte[]) -> decodeToString
    243:253:java.lang.String decodeToString(byte[],int,int,boolean) -> decodeToString
    238:240:java.lang.String decodeToString$default(byte[],int,int,boolean,int,java.lang.Object) -> decodeToString$default
    264:264:byte[] encodeToByteArray(java.lang.String) -> encodeToByteArray
    286:300:byte[] encodeToByteArray(java.lang.String,int,int,boolean) -> encodeToByteArray
    281:283:byte[] encodeToByteArray$default(java.lang.String,int,int,boolean,int,java.lang.Object) -> encodeToByteArray$default
    419:421:boolean endsWith(java.lang.String,java.lang.String,boolean) -> endsWith
    417:417:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> endsWith$default
    57:59:boolean equals(java.lang.String,java.lang.String,boolean) -> equals
    53:53:boolean equals$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> equals$default
    334:334:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    341:341:java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.lang.String,java.lang.Object[]) -> format
    349:349:java.lang.String format(java.lang.String,java.util.Locale,java.lang.Object[]) -> format
    358:358:java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.util.Locale,java.lang.String,java.lang.Object[]) -> format
    804:804:java.util.Comparator getCASE_INSENSITIVE_ORDER(kotlin.jvm.internal.StringCompanionObject) -> getCASE_INSENSITIVE_ORDER
    593:593:java.lang.String intern(java.lang.String) -> intern
    600:810:boolean isBlank(java.lang.CharSequence) -> isBlank
    168:168:java.lang.String lowercase(java.lang.String) -> lowercase
    657:657:java.lang.String lowercase(java.lang.String,java.util.Locale) -> lowercase
    24:24:int nativeIndexOf(java.lang.String,char,int) -> nativeIndexOf
    30:30:int nativeIndexOf(java.lang.String,java.lang.String,int) -> nativeIndexOf
    36:36:int nativeLastIndexOf(java.lang.String,char,int) -> nativeLastIndexOf
    42:42:int nativeLastIndexOf(java.lang.String,java.lang.String,int) -> nativeLastIndexOf
    607:607:int offsetByCodePoints(java.lang.String,int,int) -> offsetByCodePoints
    618:621:boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> regionMatches
    634:636:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> regionMatches
    617:617:boolean regionMatches$default(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean,int,java.lang.Object) -> regionMatches$default
    632:632:boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object) -> regionMatches$default
    775:789:java.lang.String repeat(java.lang.CharSequence,int) -> repeat
    70:806:java.lang.String replace(java.lang.String,char,char,boolean) -> replace
    88:105:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean) -> replace
    68:68:java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object) -> replace$default
    86:86:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replace$default
    114:115:java.lang.String replaceFirst(java.lang.String,char,char,boolean) -> replaceFirst
    124:125:java.lang.String replaceFirst(java.lang.String,java.lang.String,java.lang.String,boolean) -> replaceFirst
    113:113:java.lang.String replaceFirst$default(java.lang.String,char,char,boolean,int,java.lang.Object) -> replaceFirst$default
    123:123:java.lang.String replaceFirst$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replaceFirst$default
    372:373:java.util.List split(java.lang.CharSequence,java.util.regex.Pattern,int) -> split
    371:371:java.util.List split$default(java.lang.CharSequence,java.util.regex.Pattern,int,int,java.lang.Object) -> split$default
    397:399:boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
    408:410:boolean startsWith(java.lang.String,java.lang.String,int,boolean) -> startsWith
    395:395:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
    406:406:boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object) -> startsWith$default
    380:380:java.lang.String substring(java.lang.String,int) -> substring
    389:389:java.lang.String substring(java.lang.String,int,int) -> substring
    685:685:byte[] toByteArray(java.lang.String,java.nio.charset.Charset) -> toByteArray
    685:685:byte[] toByteArray$default(java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> toByteArray$default
    209:210:char[] toCharArray(java.lang.String,int,int) -> toCharArray
    308:308:char[] toCharArray(java.lang.String) -> toCharArray
    325:325:char[] toCharArray(java.lang.String,char[],int,int,int) -> toCharArray
    208:208:char[] toCharArray$default(java.lang.String,int,int,int,java.lang.Object) -> toCharArray$default
    319:325:char[] toCharArray$default(java.lang.String,char[],int,int,int,int,java.lang.Object) -> toCharArray$default
    155:155:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
    644:644:java.lang.String toLowerCase(java.lang.String,java.util.Locale) -> toLowerCase
    694:694:java.util.regex.Pattern toPattern(java.lang.String,int) -> toPattern
    693:694:java.util.regex.Pattern toPattern$default(java.lang.String,int,int,java.lang.Object) -> toPattern$default
    134:134:java.lang.String toUpperCase(java.lang.String) -> toUpperCase
    665:665:java.lang.String toUpperCase(java.lang.String,java.util.Locale) -> toUpperCase
    147:147:java.lang.String uppercase(java.lang.String) -> uppercase
    678:678:java.lang.String uppercase(java.lang.String,java.util.Locale) -> uppercase
kotlin.text.StringsKt__StringsKt -> kotlin.text.StringsKt__StringsKt:
# {"id":"sourceFile","fileName":"Strings.kt"}
    0:0:void <init>() -> <init>
    1:1:kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> access$findAnyOf
    886:895:java.lang.String commonPrefixWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> commonPrefixWith
    885:885:java.lang.String commonPrefixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> commonPrefixWith$default
    907:918:java.lang.String commonSuffixWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> commonSuffixWith
    906:906:java.lang.String commonSuffixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> commonSuffixWith$default
    1145:1148:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    1159:1159:boolean contains(java.lang.CharSequence,char,boolean) -> contains
    1165:1165:boolean contains(java.lang.CharSequence,kotlin.text.Regex) -> contains
    1144:1144:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> contains$default
    1158:1158:boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> contains$default
    1423:1431:boolean contentEqualsIgnoreCaseImpl(java.lang.CharSequence,java.lang.CharSequence) -> contentEqualsIgnoreCaseImpl
    1440:1448:boolean contentEqualsImpl(java.lang.CharSequence,java.lang.CharSequence) -> contentEqualsImpl
    842:842:boolean endsWith(java.lang.CharSequence,char,boolean) -> endsWith
    868:871:boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> endsWith
    841:841:boolean endsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> endsWith$default
    867:867:boolean endsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> endsWith$default
    1031:1031:kotlin.Pair findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean) -> findAnyOf
    993:1624:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    1030:1030:kotlin.Pair findAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object) -> findAnyOf$default
    1046:1046:kotlin.Pair findLastAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean) -> findLastAnyOf
    1045:1045:kotlin.Pair findLastAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object) -> findLastAnyOf$default
    373:373:kotlin.ranges.IntRange getIndices(java.lang.CharSequence) -> getIndices
    379:379:int getLastIndex(java.lang.CharSequence) -> getLastIndex
    385:387:boolean hasSurrogatePairAt(java.lang.CharSequence,int) -> hasSurrogatePairAt
    367:367:java.lang.Object ifBlank(java.lang.CharSequence,kotlin.jvm.functions.Function0) -> ifBlank
    356:356:java.lang.Object ifEmpty(java.lang.CharSequence,kotlin.jvm.functions.Function0) -> ifEmpty
    1087:1090:int indexOf(java.lang.CharSequence,char,int,boolean) -> indexOf
    1102:1105:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> indexOf
    974:985:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean) -> indexOf$StringsKt__StringsKt
    972:972:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object) -> indexOf$StringsKt__StringsKt$default
    1086:1086:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> indexOf$default
    1101:1101:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> indexOf$default
    933:1618:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    1060:1060:int indexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean) -> indexOfAny
    932:932:int indexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object) -> indexOfAny$default
    1059:1059:int indexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object) -> indexOfAny$default
    296:296:boolean isEmpty(java.lang.CharSequence) -> isEmpty
    316:316:boolean isNotBlank(java.lang.CharSequence) -> isNotBlank
    304:304:boolean isNotEmpty(java.lang.CharSequence) -> isNotEmpty
    329:329:boolean isNullOrBlank(java.lang.CharSequence) -> isNullOrBlank
    287:287:boolean isNullOrEmpty(java.lang.CharSequence) -> isNullOrEmpty
    335:335:kotlin.collections.CharIterator iterator(java.lang.CharSequence) -> iterator
    1117:1120:int lastIndexOf(java.lang.CharSequence,char,int,boolean) -> lastIndexOf
    1132:1135:int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> lastIndexOf
    1116:1116:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    1131:1131:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    956:1620:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    1075:1075:int lastIndexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean) -> lastIndexOfAny
    955:955:int lastIndexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object) -> lastIndexOfAny$default
    1074:1074:int lastIndexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object) -> lastIndexOfAny$default
    1394:1394:kotlin.sequences.Sequence lineSequence(java.lang.CharSequence) -> lineSequence
    1401:1401:java.util.List lines(java.lang.CharSequence) -> lines
    814:814:boolean matches(java.lang.CharSequence,kotlin.text.Regex) -> matches
    0:0:java.lang.String orEmpty(java.lang.String) -> orEmpty
    253:260:java.lang.CharSequence padEnd(java.lang.CharSequence,int,char) -> padEnd
    274:274:java.lang.String padEnd(java.lang.String,int,char) -> padEnd
    251:251:java.lang.CharSequence padEnd$default(java.lang.CharSequence,int,char,int,java.lang.Object) -> padEnd$default
    273:273:java.lang.String padEnd$default(java.lang.String,int,char,int,java.lang.Object) -> padEnd$default
    218:225:java.lang.CharSequence padStart(java.lang.CharSequence,int,char) -> padStart
    239:239:java.lang.String padStart(java.lang.String,int,char) -> padStart
    216:216:java.lang.CharSequence padStart$default(java.lang.CharSequence,int,char,int,java.lang.Object) -> padStart$default
    238:238:java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object) -> padStart$default
    1240:1242:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,char[],int,boolean,int) -> rangesDelimitedBy$StringsKt__StringsKt
    1263:1266:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int) -> rangesDelimitedBy$StringsKt__StringsKt
    1239:1239:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,char[],int,boolean,int,int,java.lang.Object) -> rangesDelimitedBy$StringsKt__StringsKt$default
    1262:1262:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object) -> rangesDelimitedBy$StringsKt__StringsKt$default
    821:826:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> regionMatchesImpl
    593:596:java.lang.CharSequence removePrefix(java.lang.CharSequence,java.lang.CharSequence) -> removePrefix
    604:605:java.lang.String removePrefix(java.lang.String,java.lang.CharSequence) -> removePrefix
    550:557:java.lang.CharSequence removeRange(java.lang.CharSequence,int,int) -> removeRange
    570:570:java.lang.String removeRange(java.lang.String,int,int) -> removeRange
    577:577:java.lang.CharSequence removeRange(java.lang.CharSequence,kotlin.ranges.IntRange) -> removeRange
    586:586:java.lang.String removeRange(java.lang.String,kotlin.ranges.IntRange) -> removeRange
    615:618:java.lang.CharSequence removeSuffix(java.lang.CharSequence,java.lang.CharSequence) -> removeSuffix
    626:627:java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence) -> removeSuffix
    638:641:java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence) -> removeSurrounding
    650:651:java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence,java.lang.CharSequence) -> removeSurrounding
    661:661:java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence) -> removeSurrounding
    668:668:java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence) -> removeSurrounding
    754:754:java.lang.String replace(java.lang.CharSequence,kotlin.text.Regex,java.lang.String) -> replace
    763:763:java.lang.String replace(java.lang.CharSequence,kotlin.text.Regex,kotlin.jvm.functions.Function1) -> replace
    693:694:java.lang.String replaceAfter(java.lang.String,char,java.lang.String,java.lang.String) -> replaceAfter
    702:703:java.lang.String replaceAfter(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> replaceAfter
    692:692:java.lang.String replaceAfter$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceAfter$default
    701:701:java.lang.String replaceAfter$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceAfter$default
    711:712:java.lang.String replaceAfterLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> replaceAfterLast
    720:721:java.lang.String replaceAfterLast(java.lang.String,char,java.lang.String,java.lang.String) -> replaceAfterLast
    710:710:java.lang.String replaceAfterLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceAfterLast$default
    719:719:java.lang.String replaceAfterLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceAfterLast$default
    675:676:java.lang.String replaceBefore(java.lang.String,char,java.lang.String,java.lang.String) -> replaceBefore
    684:685:java.lang.String replaceBefore(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> replaceBefore
    674:674:java.lang.String replaceBefore$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceBefore$default
    683:683:java.lang.String replaceBefore$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceBefore$default
    729:730:java.lang.String replaceBeforeLast(java.lang.String,char,java.lang.String,java.lang.String) -> replaceBeforeLast
    738:739:java.lang.String replaceBeforeLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> replaceBeforeLast
    728:728:java.lang.String replaceBeforeLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceBeforeLast$default
    737:737:java.lang.String replaceBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> replaceBeforeLast$default
    771:771:java.lang.String replaceFirst(java.lang.CharSequence,kotlin.text.Regex,java.lang.String) -> replaceFirst
    788:788:java.lang.String replaceFirstCharWithChar(java.lang.String,kotlin.jvm.functions.Function1) -> replaceFirstCharWithChar
    806:806:java.lang.String replaceFirstCharWithCharSequence(java.lang.String,kotlin.jvm.functions.Function1) -> replaceFirstCharWithCharSequence
    505:509:java.lang.CharSequence replaceRange(java.lang.CharSequence,int,int,java.lang.CharSequence) -> replaceRange
    520:520:java.lang.String replaceRange(java.lang.String,int,int,java.lang.CharSequence) -> replaceRange
    529:529:java.lang.CharSequence replaceRange(java.lang.CharSequence,kotlin.ranges.IntRange,java.lang.CharSequence) -> replaceRange
    538:538:java.lang.String replaceRange(java.lang.String,kotlin.ranges.IntRange,java.lang.CharSequence) -> replaceRange
    1271:1271:void requireNonNegativeLimit(int) -> requireNonNegativeLimit
    1302:1629:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> split
    1330:1633:java.util.List split(java.lang.CharSequence,char[],boolean,int) -> split
    1375:1375:java.util.List split(java.lang.CharSequence,kotlin.text.Regex,int) -> split
    1346:1364:java.util.List split$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String,boolean,int) -> split$StringsKt__StringsKt
    1301:1301:java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> split$default
    1329:1329:java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object) -> split$default
    1375:1375:java.util.List split$default(java.lang.CharSequence,kotlin.text.Regex,int,int,java.lang.Object) -> split$default
    1288:1288:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int) -> splitToSequence
    1320:1320:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,char[],boolean,int) -> splitToSequence
    1387:1387:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,kotlin.text.Regex,int) -> splitToSequence
    1287:1287:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> splitToSequence$default
    1319:1319:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object) -> splitToSequence$default
    1387:1387:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,kotlin.text.Regex,int,int,java.lang.Object) -> splitToSequence$default
    836:836:boolean startsWith(java.lang.CharSequence,char,boolean) -> startsWith
    848:851:boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> startsWith
    858:861:boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,int,boolean) -> startsWith
    835:835:boolean startsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> startsWith$default
    847:847:boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> startsWith$default
    857:857:boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,int,boolean,int,java.lang.Object) -> startsWith$default
    398:398:java.lang.CharSequence subSequence(java.lang.CharSequence,kotlin.ranges.IntRange) -> subSequence
    409:409:java.lang.CharSequence subSequence(java.lang.String,int,int) -> subSequence
    393:393:java.lang.String substring(java.lang.String,kotlin.ranges.IntRange) -> substring
    418:418:java.lang.String substring(java.lang.CharSequence,int,int) -> substring
    423:423:java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange) -> substring
    418:418:java.lang.String substring$default(java.lang.CharSequence,int,int,int,java.lang.Object) -> substring$default
    448:449:java.lang.String substringAfter(java.lang.String,char,java.lang.String) -> substringAfter
    457:458:java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String) -> substringAfter
    447:447:java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfter$default
    456:456:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfter$default
    484:485:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String) -> substringAfterLast
    493:494:java.lang.String substringAfterLast(java.lang.String,java.lang.String,java.lang.String) -> substringAfterLast
    483:483:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
    492:492:java.lang.String substringAfterLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
    430:431:java.lang.String substringBefore(java.lang.String,char,java.lang.String) -> substringBefore
    439:440:java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String) -> substringBefore
    429:429:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBefore$default
    438:438:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBefore$default
    466:467:java.lang.String substringBeforeLast(java.lang.String,char,java.lang.String) -> substringBeforeLast
    475:476:java.lang.String substringBeforeLast(java.lang.String,java.lang.String,java.lang.String) -> substringBeforeLast
    465:465:java.lang.String substringBeforeLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBeforeLast$default
    474:474:java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBeforeLast$default
    1467:1469:boolean toBooleanStrict(java.lang.String) -> toBooleanStrict
    1483:1484:java.lang.Boolean toBooleanStrictOrNull(java.lang.String) -> toBooleanStrictOrNull
    80:100:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    182:182:java.lang.String trim(java.lang.String) -> trim
    107:1508:java.lang.String trim(java.lang.String,kotlin.jvm.functions.Function1) -> trim
    146:1540:java.lang.CharSequence trim(java.lang.CharSequence,char[]) -> trim
    151:1563:java.lang.String trim(java.lang.String,char[]) -> trim
    176:1607:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
    130:132:java.lang.CharSequence trimEnd(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trimEnd
    204:204:java.lang.String trimEnd(java.lang.String) -> trimEnd
    141:1516:java.lang.String trimEnd(java.lang.String,kotlin.jvm.functions.Function1) -> trimEnd
    166:1577:java.lang.CharSequence trimEnd(java.lang.CharSequence,char[]) -> trimEnd
    171:1583:java.lang.String trimEnd(java.lang.String,char[]) -> trimEnd
    198:1615:java.lang.CharSequence trimEnd(java.lang.CharSequence) -> trimEnd
    113:115:java.lang.CharSequence trimStart(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trimStart
    193:193:java.lang.String trimStart(java.lang.String) -> trimStart
    124:1511:java.lang.String trimStart(java.lang.String,kotlin.jvm.functions.Function1) -> trimStart
    156:1566:java.lang.CharSequence trimStart(java.lang.CharSequence,char[]) -> trimStart
    161:1572:java.lang.String trimStart(java.lang.String,char[]) -> trimStart
    187:1610:java.lang.CharSequence trimStart(java.lang.CharSequence) -> trimStart
kotlin.text.StringsKt__StringsKt$iterator$1 -> kotlin.text.StringsKt__StringsKt$iterator$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    335:335:void <init>(java.lang.CharSequence) -> <init>
    340:340:boolean hasNext() -> hasNext
    338:338:char nextChar() -> nextChar
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1 -> kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    0:0:void <init>(char[],boolean) -> <init>
    1242:1242:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1243:1243:kotlin.Pair invoke(java.lang.CharSequence,int) -> invoke
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 -> kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2:
# {"id":"sourceFile","fileName":"Strings.kt"}
    0:0:void <init>(java.util.List,boolean) -> <init>
    1266:1266:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1266:1266:kotlin.Pair invoke(java.lang.CharSequence,int) -> invoke
kotlin.text.StringsKt__StringsKt$splitToSequence$1 -> kotlin.text.StringsKt__StringsKt$splitToSequence$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    0:0:void <init>(java.lang.CharSequence) -> <init>
    1288:1288:java.lang.Object invoke(java.lang.Object) -> invoke
    1288:1288:java.lang.String invoke(kotlin.ranges.IntRange) -> invoke
kotlin.text.StringsKt__StringsKt$splitToSequence$2 -> kotlin.text.StringsKt__StringsKt$splitToSequence$2:
# {"id":"sourceFile","fileName":"Strings.kt"}
    0:0:void <init>(java.lang.CharSequence) -> <init>
    1320:1320:java.lang.Object invoke(java.lang.Object) -> invoke
    1320:1320:java.lang.String invoke(kotlin.ranges.IntRange) -> invoke
kotlin.text.StringsKt___StringsJvmKt -> kotlin.text.StringsKt___StringsJvmKt:
# {"id":"sourceFile","fileName":"_StringsJvm.kt"}
    0:0:void <init>() -> <init>
    24:24:char elementAt(java.lang.CharSequence,int) -> elementAt
    38:38:java.lang.Character max(java.lang.CharSequence) -> max
    109:122:java.lang.Character maxBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> maxBy
    52:52:java.lang.Character maxWith(java.lang.CharSequence,java.util.Comparator) -> maxWith
    59:59:java.lang.Character min(java.lang.CharSequence) -> min
    123:136:java.lang.Character minBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> minBy
    73:73:java.lang.Character minWith(java.lang.CharSequence,java.util.Comparator) -> minWith
    85:87:java.math.BigDecimal sumOfBigDecimal(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> sumOfBigDecimal
    101:103:java.math.BigInteger sumOfBigInteger(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> sumOfBigInteger
    31:31:java.util.SortedSet toSortedSet(java.lang.CharSequence) -> toSortedSet
kotlin.text.StringsKt___StringsKt -> kotlin.text.StringsKt___StringsKt:
# {"id":"sourceFile","fileName":"_Strings.kt"}
    0:0:void <init>() -> <init>
    1064:1064:boolean all(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> all
    1074:1074:boolean any(java.lang.CharSequence) -> any
    1083:1083:boolean any(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> any
    2474:2475:java.lang.Iterable asIterable(java.lang.CharSequence) -> asIterable
    2482:2483:kotlin.sequences.Sequence asSequence(java.lang.CharSequence) -> asSequence
    676:2527:java.util.Map associate(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> associate
    691:2531:java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> associateBy
    705:2535:java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateBy
    719:720:java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateByTo
    735:736:java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> associateByTo
    750:751:java.util.Map associateTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateTo
    768:2539:java.util.Map associateWith(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> associateWith
    782:783:java.util.Map associateWithTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1) -> associateWithTo
    2217:2217:java.util.List chunked(java.lang.CharSequence,int) -> chunked
    2236:2236:java.util.List chunked(java.lang.CharSequence,int,kotlin.jvm.functions.Function1) -> chunked
    2250:2250:kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int) -> chunkedSequence
    2269:2269:kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int,kotlin.jvm.functions.Function1) -> chunkedSequence
    1092:1092:int count(java.lang.CharSequence) -> count
    1100:1100:int count(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> count
    326:327:java.lang.CharSequence drop(java.lang.CharSequence,int) -> drop
    338:339:java.lang.String drop(java.lang.String,int) -> drop
    350:351:java.lang.CharSequence dropLast(java.lang.CharSequence,int) -> dropLast
    362:363:java.lang.String dropLast(java.lang.String,int) -> dropLast
    372:374:java.lang.CharSequence dropLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> dropLastWhile
    384:386:java.lang.String dropLastWhile(java.lang.String,kotlin.jvm.functions.Function1) -> dropLastWhile
    396:398:java.lang.CharSequence dropWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> dropWhile
    408:410:java.lang.String dropWhile(java.lang.String,kotlin.jvm.functions.Function1) -> dropWhile
    32:32:char elementAtOrElse(java.lang.CharSequence,int,kotlin.jvm.functions.Function1) -> elementAtOrElse
    42:42:java.lang.Character elementAtOrNull(java.lang.CharSequence,int) -> elementAtOrNull
    420:2497:java.lang.CharSequence filter(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> filter
    429:2502:java.lang.String filter(java.lang.String,kotlin.jvm.functions.Function1) -> filter
    440:2508:java.lang.CharSequence filterIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> filterIndexed
    451:2515:java.lang.String filterIndexed(java.lang.String,kotlin.jvm.functions.Function2) -> filterIndexed
    463:2520:java.lang.Appendable filterIndexedTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function2) -> filterIndexedTo
    474:2522:java.lang.CharSequence filterNot(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> filterNot
    483:2524:java.lang.String filterNot(java.lang.String,kotlin.jvm.functions.Function1) -> filterNot
    492:492:java.lang.Appendable filterNotTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1) -> filterNotTo
    502:504:java.lang.Appendable filterTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1) -> filterTo
    2487:2487:java.lang.Character find(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> find
    2489:2491:java.lang.Character findLast(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> findLast
    71:73:char first(java.lang.CharSequence) -> first
    81:82:char first(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> first
    94:94:java.lang.Object firstNotNullOf(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> firstNotNullOf
    106:107:java.lang.Object firstNotNullOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> firstNotNullOfOrNull
    119:119:java.lang.Character firstOrNull(java.lang.CharSequence) -> firstOrNull
    126:126:java.lang.Character firstOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> firstOrNull
    842:2544:java.util.List flatMap(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> flatMap
    857:857:java.util.List flatMapIndexedIterable(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> flatMapIndexedIterable
    871:873:java.util.Collection flatMapIndexedIterableTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2) -> flatMapIndexedIterableTo
    882:884:java.util.Collection flatMapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1) -> flatMapTo
    1114:1114:java.lang.Object fold(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    1130:1130:java.lang.Object foldIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3) -> foldIndexed
    1143:1146:java.lang.Object foldRight(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2) -> foldRight
    1161:1164:java.lang.Object foldRightIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3) -> foldRightIndexed
    1174:1174:void forEach(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> forEach
    1184:1184:void forEachIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> forEachIndexed
    135:135:char getOrElse(java.lang.CharSequence,int,kotlin.jvm.functions.Function1) -> getOrElse
    144:144:java.lang.Character getOrNull(java.lang.CharSequence,int) -> getOrNull
    898:2557:java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> groupBy
    911:2570:java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupBy
    923:2576:java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1) -> groupByTo
    941:2583:java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> groupByTo
    957:957:kotlin.collections.Grouping groupingBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> groupingBy
    151:152:int indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> indexOfFirst
    163:164:int indexOfLast(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> indexOfLast
    179:181:char last(java.lang.CharSequence) -> last
    192:196:char last(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> last
    205:205:java.lang.Character lastOrNull(java.lang.CharSequence) -> lastOrNull
    214:216:java.lang.Character lastOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> lastOrNull
    970:2588:java.util.List map(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> map
    980:2592:java.util.List mapIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> mapIndexed
    990:2596:java.util.List mapIndexedNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> mapIndexedNotNull
    1000:2601:java.util.Collection mapIndexedNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedNotNullTo
    1012:1013:java.util.Collection mapIndexedTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2) -> mapIndexedTo
    1024:2604:java.util.List mapNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> mapNotNull
    1032:2608:java.util.Collection mapNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1) -> mapNotNullTo
    1041:1042:java.util.Collection mapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1) -> mapTo
    1239:1252:java.lang.Character maxByOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> maxByOrNull
    1216:1224:char maxByOrThrow(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> maxByOrThrow
    1268:1272:double maxOf(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> maxOf
    1290:1294:float maxOf(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> maxOf
    1310:1314:java.lang.Comparable maxOf(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> maxOf
    1332:1338:java.lang.Double maxOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> maxOfOrNull
    1352:1358:java.lang.Float maxOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> maxOfOrNull
    1370:1374:java.lang.Comparable maxOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> maxOfOrNull
    1392:1396:java.lang.Object maxOfWith(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWith
    1412:1416:java.lang.Object maxOfWithOrNull(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1) -> maxOfWithOrNull
    1428:1434:java.lang.Character maxOrNull(java.lang.CharSequence) -> maxOrNull
    1196:1200:char maxOrThrow(java.lang.CharSequence) -> maxOrThrow
    1460:1466:java.lang.Character maxWithOrNull(java.lang.CharSequence,java.util.Comparator) -> maxWithOrNull
    1446:1450:char maxWithOrThrow(java.lang.CharSequence,java.util.Comparator) -> maxWithOrThrow
    1521:1534:java.lang.Character minByOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> minByOrNull
    1498:1506:char minByOrThrow(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> minByOrThrow
    1550:1554:double minOf(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> minOf
    1572:1576:float minOf(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> minOf
    1592:1596:java.lang.Comparable minOf(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> minOf
    1614:1620:java.lang.Double minOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> minOfOrNull
    1634:1640:java.lang.Float minOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> minOfOrNull
    1652:1656:java.lang.Comparable minOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> minOfOrNull
    1674:1678:java.lang.Object minOfWith(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWith
    1694:1698:java.lang.Object minOfWithOrNull(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1) -> minOfWithOrNull
    1710:1716:java.lang.Character minOrNull(java.lang.CharSequence) -> minOrNull
    1478:1482:char minOrThrow(java.lang.CharSequence) -> minOrThrow
    1742:1748:java.lang.Character minWithOrNull(java.lang.CharSequence,java.util.Comparator) -> minWithOrNull
    1728:1732:char minWithOrThrow(java.lang.CharSequence,java.util.Comparator) -> minWithOrThrow
    1757:1757:boolean none(java.lang.CharSequence) -> none
    1766:1766:boolean none(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> none
    1775:1775:java.lang.CharSequence onEach(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> onEach
    2611:2611:java.lang.CharSequence onEachIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> onEachIndexed
    2280:2289:kotlin.Pair partition(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> partition
    2300:2309:kotlin.Pair partition(java.lang.String,kotlin.jvm.functions.Function1) -> partition
    229:229:char random(java.lang.CharSequence) -> random
    239:241:char random(java.lang.CharSequence,kotlin.random.Random) -> random
    251:251:java.lang.Character randomOrNull(java.lang.CharSequence) -> randomOrNull
    260:262:java.lang.Character randomOrNull(java.lang.CharSequence,kotlin.random.Random) -> randomOrNull
    1802:1806:char reduce(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> reduce
    1824:1828:char reduceIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3) -> reduceIndexed
    1846:1852:java.lang.Character reduceIndexedOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function3) -> reduceIndexedOrNull
    1869:1875:java.lang.Character reduceOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> reduceOrNull
    1891:1895:char reduceRight(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> reduceRight
    1913:1917:char reduceRightIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3) -> reduceRightIndexed
    1936:1943:java.lang.Character reduceRightIndexedOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function3) -> reduceRightIndexedOrNull
    1960:1966:java.lang.Character reduceRightOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> reduceRightOrNull
    654:654:java.lang.CharSequence reversed(java.lang.CharSequence) -> reversed
    662:662:java.lang.String reversed(java.lang.String) -> reversed
    1982:1987:java.util.List runningFold(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2) -> runningFold
    2006:2011:java.util.List runningFoldIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3) -> runningFoldIndexed
    2029:2034:java.util.List runningReduce(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> runningReduce
    2053:2058:java.util.List runningReduceIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3) -> runningReduceIndexed
    2613:2619:java.util.List scan(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2) -> scan
    2622:2628:java.util.List scanIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3) -> scanIndexed
    269:272:char single(java.lang.CharSequence) -> single
    282:291:char single(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> single
    298:298:java.lang.Character singleOrNull(java.lang.CharSequence) -> singleOrNull
    307:310:java.lang.Character singleOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> singleOrNull
    513:514:java.lang.CharSequence slice(java.lang.CharSequence,kotlin.ranges.IntRange) -> slice
    521:522:java.lang.String slice(java.lang.String,kotlin.ranges.IntRange) -> slice
    529:533:java.lang.CharSequence slice(java.lang.CharSequence,java.lang.Iterable) -> slice
    543:543:java.lang.String slice(java.lang.String,java.lang.Iterable) -> slice
    2105:2106:int sumBy(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> sumBy
    2118:2119:double sumByDouble(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> sumByDouble
    2134:2135:double sumOfDouble(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> sumOfDouble
    2150:2151:int sumOfInt(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> sumOfInt
    2166:2167:long sumOfLong(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> sumOfLong
    2182:2184:int sumOfUInt(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> sumOfUInt
    2199:2201:long sumOfULong(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> sumOfULong
    554:555:java.lang.CharSequence take(java.lang.CharSequence,int) -> take
    566:567:java.lang.String take(java.lang.String,int) -> take
    578:580:java.lang.CharSequence takeLast(java.lang.CharSequence,int) -> takeLast
    591:593:java.lang.String takeLast(java.lang.String,int) -> takeLast
    602:607:java.lang.CharSequence takeLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> takeLastWhile
    616:618:java.lang.String takeLastWhile(java.lang.String,kotlin.jvm.functions.Function1) -> takeLastWhile
    630:634:java.lang.CharSequence takeWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> takeWhile
    643:645:java.lang.String takeWhile(java.lang.String,kotlin.jvm.functions.Function1) -> takeWhile
    792:793:java.util.Collection toCollection(java.lang.CharSequence,java.util.Collection) -> toCollection
    802:802:java.util.HashSet toHashSet(java.lang.CharSequence) -> toHashSet
    809:812:java.util.List toList(java.lang.CharSequence) -> toList
    820:820:java.util.List toMutableList(java.lang.CharSequence) -> toMutableList
    829:832:java.util.Set toSet(java.lang.CharSequence) -> toSet
    2329:2329:java.util.List windowed(java.lang.CharSequence,int,int,boolean) -> windowed
    2351:2359:java.util.List windowed(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1) -> windowed
    2328:2328:java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object) -> windowed$default
    2350:2350:java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> windowed$default
    2382:2382:kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean) -> windowedSequence
    2404:2406:kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1) -> windowedSequence
    2381:2381:kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object) -> windowedSequence$default
    2403:2403:kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> windowedSequence$default
    1051:1051:java.lang.Iterable withIndex(java.lang.CharSequence) -> withIndex
    2431:2434:java.util.List zip(java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function2) -> zip
    2420:2634:java.util.List zip(java.lang.CharSequence,java.lang.CharSequence) -> zip
    2461:2465:java.util.List zipWithNext(java.lang.CharSequence,kotlin.jvm.functions.Function2) -> zipWithNext
    2448:2641:java.util.List zipWithNext(java.lang.CharSequence) -> zipWithNext
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1 -> kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void <init>(java.lang.CharSequence) -> <init>
    71:71:java.util.Iterator iterator() -> iterator
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1 -> kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void <init>(java.lang.CharSequence) -> <init>
    681:681:java.util.Iterator iterator() -> iterator
kotlin.text.StringsKt___StringsKt$chunkedSequence$1 -> kotlin.text.StringsKt___StringsKt$chunkedSequence$1:
# {"id":"sourceFile","fileName":"_Strings.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    2250:2250:java.lang.Object invoke(java.lang.Object) -> invoke
    2250:2250:java.lang.String invoke(java.lang.CharSequence) -> invoke
kotlin.text.StringsKt___StringsKt$groupingBy$1 -> kotlin.text.StringsKt___StringsKt$groupingBy$1:
# {"id":"sourceFile","fileName":"_Strings.kt"}
    957:957:void <init>(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> <init>
    957:957:java.lang.Object keyOf(java.lang.Object) -> keyOf
    959:959:java.lang.Object keyOf(char) -> keyOf
    958:958:java.util.Iterator sourceIterator() -> sourceIterator
kotlin.text.StringsKt___StringsKt$windowed$1 -> kotlin.text.StringsKt___StringsKt$windowed$1:
# {"id":"sourceFile","fileName":"_Strings.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    2329:2329:java.lang.Object invoke(java.lang.Object) -> invoke
    2329:2329:java.lang.String invoke(java.lang.CharSequence) -> invoke
kotlin.text.StringsKt___StringsKt$windowedSequence$1 -> kotlin.text.StringsKt___StringsKt$windowedSequence$1:
# {"id":"sourceFile","fileName":"_Strings.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    2382:2382:java.lang.Object invoke(java.lang.Object) -> invoke
    2382:2382:java.lang.String invoke(java.lang.CharSequence) -> invoke
kotlin.text.StringsKt___StringsKt$windowedSequence$2 -> kotlin.text.StringsKt___StringsKt$windowedSequence$2:
# {"id":"sourceFile","fileName":"_Strings.kt"}
    0:0:void <init>(int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> <init>
    2406:2406:java.lang.Object invoke(java.lang.Object) -> invoke
    2407:2409:java.lang.Object invoke(int) -> invoke
kotlin.text.StringsKt___StringsKt$withIndex$1 -> kotlin.text.StringsKt___StringsKt$withIndex$1:
# {"id":"sourceFile","fileName":"_Strings.kt"}
    0:0:void <init>(java.lang.CharSequence) -> <init>
    1051:1051:java.lang.Object invoke() -> invoke
    1051:1051:java.util.Iterator invoke() -> invoke
kotlin.text.SystemProperties -> kotlin.text.SystemProperties:
# {"id":"sourceFile","fileName":"StringBuilderJVM.kt"}
    203:203:void <clinit>() -> <clinit>
    200:200:void <init>() -> <init>
kotlin.text.TypeAliasesKt -> kotlin.text.TypeAliasesKt:
# {"id":"sourceFile","fileName":"TypeAliases.kt"}
    0:0:void Appendable$annotations() -> Appendable$annotations
    0:0:void CharacterCodingException$annotations() -> CharacterCodingException$annotations
    0:0:void StringBuilder$annotations() -> StringBuilder$annotations
kotlin.text.Typography -> kotlin.text.Typography:
# {"id":"sourceFile","fileName":"Typography.kt"}
    0:0:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    0:0:void getLeftGuillemet$annotations() -> getLeftGuillemet$annotations
    0:0:void getLeftGuillemete$annotations() -> getLeftGuillemete$annotations
    0:0:void getRightGuillemet$annotations() -> getRightGuillemet$annotations
    0:0:void getRightGuillemete$annotations() -> getRightGuillemete$annotations
kotlin.text.UHexExtensionsKt -> kotlin.text.UHexExtensionsKt:
# {"id":"sourceFile","fileName":"UHexExtensions.kt"}
    120:120:byte hexToUByte(java.lang.String,kotlin.text.HexFormat) -> hexToUByte
    120:120:byte hexToUByte$default(java.lang.String,kotlin.text.HexFormat,int,java.lang.Object) -> hexToUByte$default
    66:66:byte[] hexToUByteArray(java.lang.String,kotlin.text.HexFormat) -> hexToUByteArray
    65:66:byte[] hexToUByteArray$default(java.lang.String,kotlin.text.HexFormat,int,java.lang.Object) -> hexToUByteArray$default
    218:218:int hexToUInt(java.lang.String,kotlin.text.HexFormat) -> hexToUInt
    218:218:int hexToUInt$default(java.lang.String,kotlin.text.HexFormat,int,java.lang.Object) -> hexToUInt$default
    267:267:long hexToULong(java.lang.String,kotlin.text.HexFormat) -> hexToULong
    267:267:long hexToULong$default(java.lang.String,kotlin.text.HexFormat,int,java.lang.Object) -> hexToULong$default
    169:169:short hexToUShort(java.lang.String,kotlin.text.HexFormat) -> hexToUShort
    169:169:short hexToUShort$default(java.lang.String,kotlin.text.HexFormat,int,java.lang.Object) -> hexToUShort$default
    203:203:java.lang.String toHexString-8M7LxHw(int,kotlin.text.HexFormat) -> toHexString-8M7LxHw
    203:203:java.lang.String toHexString-8M7LxHw$default(int,kotlin.text.HexFormat,int,java.lang.Object) -> toHexString-8M7LxHw$default
    252:252:java.lang.String toHexString-8UJCm-I(long,kotlin.text.HexFormat) -> toHexString-8UJCm-I
    252:252:java.lang.String toHexString-8UJCm-I$default(long,kotlin.text.HexFormat,int,java.lang.Object) -> toHexString-8UJCm-I$default
    105:105:java.lang.String toHexString-ZQbaR00(byte,kotlin.text.HexFormat) -> toHexString-ZQbaR00
    105:105:java.lang.String toHexString-ZQbaR00$default(byte,kotlin.text.HexFormat,int,java.lang.Object) -> toHexString-ZQbaR00$default
    48:48:java.lang.String toHexString-lZCiFrA(byte[],int,int,kotlin.text.HexFormat) -> toHexString-lZCiFrA
    44:48:java.lang.String toHexString-lZCiFrA$default(byte[],int,int,kotlin.text.HexFormat,int,java.lang.Object) -> toHexString-lZCiFrA$default
    154:154:java.lang.String toHexString-r3ox_E0(short,kotlin.text.HexFormat) -> toHexString-r3ox_E0
    154:154:java.lang.String toHexString-r3ox_E0$default(short,kotlin.text.HexFormat,int,java.lang.Object) -> toHexString-r3ox_E0$default
    25:25:java.lang.String toHexString-zHuV2wU(byte[],kotlin.text.HexFormat) -> toHexString-zHuV2wU
    25:25:java.lang.String toHexString-zHuV2wU$default(byte[],kotlin.text.HexFormat,int,java.lang.Object) -> toHexString-zHuV2wU$default
kotlin.text.UStringsKt -> kotlin.text.UStringsKt:
# {"id":"sourceFile","fileName":"UStrings.kt"}
    48:48:java.lang.String toString-JSWoG40(long,int) -> toString-JSWoG40
    18:18:java.lang.String toString-LxnNnR4(byte,int) -> toString-LxnNnR4
    39:39:java.lang.String toString-V7xB4Y4(int,int) -> toString-V7xB4Y4
    28:28:java.lang.String toString-olVBNx4(short,int) -> toString-olVBNx4
    57:57:byte toUByte(java.lang.String) -> toUByte
    66:66:byte toUByte(java.lang.String,int) -> toUByte
    130:130:kotlin.UByte toUByteOrNull(java.lang.String) -> toUByteOrNull
    141:143:kotlin.UByte toUByteOrNull(java.lang.String,int) -> toUByteOrNull
    92:92:int toUInt(java.lang.String) -> toUInt
    101:101:int toUInt(java.lang.String,int) -> toUInt
    174:174:kotlin.UInt toUIntOrNull(java.lang.String) -> toUIntOrNull
    185:229:kotlin.UInt toUIntOrNull(java.lang.String,int) -> toUIntOrNull
    109:109:long toULong(java.lang.String) -> toULong
    118:118:long toULong(java.lang.String,int) -> toULong
    238:238:kotlin.ULong toULongOrNull(java.lang.String) -> toULongOrNull
    249:294:kotlin.ULong toULongOrNull(java.lang.String,int) -> toULongOrNull
    75:75:short toUShort(java.lang.String) -> toUShort
    84:84:short toUShort(java.lang.String,int) -> toUShort
    152:152:kotlin.UShort toUShortOrNull(java.lang.String) -> toUShortOrNull
    163:165:kotlin.UShort toUShortOrNull(java.lang.String,int) -> toUShortOrNull
kotlin.text._OneToManyTitlecaseMappingsKt -> kotlin.text._OneToManyTitlecaseMappingsKt:
# {"id":"sourceFile","fileName":"_OneToManyTitlecaseMappings.kt"}
    15:19:java.lang.String titlecaseImpl(char) -> titlecaseImpl
kotlin.text.jdk8.RegexExtensionsJDK8Kt -> kotlin.text.jdk8.RegexExtensionsJDK8Kt:
# {"id":"sourceFile","fileName":"RegexExtensions.kt"}
    20:23:kotlin.text.MatchGroup get(kotlin.text.MatchGroupCollection,java.lang.String) -> get
kotlin.time.AbstractDoubleTimeSource -> kotlin.time.AbstractDoubleTimeSource:
# {"id":"sourceFile","fileName":"TimeSources.kt"}
    95:98:void <init>(kotlin.time.DurationUnit) -> <init>
    98:98:kotlin.time.DurationUnit getUnit() -> getUnit
    95:95:kotlin.time.TimeMark markNow() -> markNow
    131:131:kotlin.time.ComparableTimeMark markNow() -> markNow
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark -> kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark:
# {"id":"sourceFile","fileName":"TimeSources.kt"}
    0:0:void <init>(double,kotlin.time.AbstractDoubleTimeSource,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    105:106:void <init>(double,kotlin.time.AbstractDoubleTimeSource,long) -> <init>
    105:105:int compareTo(java.lang.Object) -> compareTo
    105:105:int compareTo(kotlin.time.ComparableTimeMark) -> compareTo
    107:107:long elapsedNow-UwyO8pc() -> elapsedNow-UwyO8pc
    121:121:boolean equals(java.lang.Object) -> equals
    105:105:boolean hasNotPassedNow() -> hasNotPassedNow
    105:105:boolean hasPassedNow() -> hasPassedNow
    125:125:int hashCode() -> hashCode
    105:105:kotlin.time.ComparableTimeMark minus-LRDsOJo(long) -> minus-LRDsOJo
    105:105:kotlin.time.TimeMark minus-LRDsOJo(long) -> minus-LRDsOJo
    111:117:long minus-UwyO8pc(kotlin.time.ComparableTimeMark) -> minus-UwyO8pc
    105:105:kotlin.time.TimeMark plus-LRDsOJo(long) -> plus-LRDsOJo
    108:108:kotlin.time.ComparableTimeMark plus-LRDsOJo(long) -> plus-LRDsOJo
    128:128:java.lang.String toString() -> toString
kotlin.time.AbstractLongTimeSource -> kotlin.time.AbstractLongTimeSource:
# {"id":"sourceFile","fileName":"TimeSources.kt"}
    26:40:void <init>(kotlin.time.DurationUnit) -> <init>
    26:26:long access$adjustedRead(kotlin.time.AbstractLongTimeSource) -> access$adjustedRead
    41:41:long adjustedRead() -> adjustedRead
    28:28:kotlin.time.DurationUnit getUnit() -> getUnit
    40:40:long getZero() -> getZero
    26:26:kotlin.time.TimeMark markNow() -> markNow
    87:87:kotlin.time.ComparableTimeMark markNow() -> markNow
kotlin.time.AbstractLongTimeSource$LongTimeMark -> kotlin.time.AbstractLongTimeSource$LongTimeMark:
# {"id":"sourceFile","fileName":"TimeSources.kt"}
    0:0:void <init>(long,kotlin.time.AbstractLongTimeSource,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    43:43:void <init>(long,kotlin.time.AbstractLongTimeSource,long) -> <init>
    43:43:int compareTo(java.lang.Object) -> compareTo
    43:43:int compareTo(kotlin.time.ComparableTimeMark) -> compareTo
    45:45:long elapsedNow-UwyO8pc() -> elapsedNow-UwyO8pc
    80:80:boolean equals(java.lang.Object) -> equals
    43:43:boolean hasNotPassedNow() -> hasNotPassedNow
    43:43:boolean hasPassedNow() -> hasPassedNow
    82:82:int hashCode() -> hashCode
    43:43:kotlin.time.ComparableTimeMark minus-LRDsOJo(long) -> minus-LRDsOJo
    43:43:kotlin.time.TimeMark minus-LRDsOJo(long) -> minus-LRDsOJo
    72:76:long minus-UwyO8pc(kotlin.time.ComparableTimeMark) -> minus-UwyO8pc
    43:43:kotlin.time.TimeMark plus-LRDsOJo(long) -> plus-LRDsOJo
    48:68:kotlin.time.ComparableTimeMark plus-LRDsOJo(long) -> plus-LRDsOJo
    84:84:java.lang.String toString() -> toString
kotlin.time.AbstractLongTimeSource$zero$2 -> kotlin.time.AbstractLongTimeSource$zero$2:
# {"id":"sourceFile","fileName":"TimeSources.kt"}
    0:0:void <init>(kotlin.time.AbstractLongTimeSource) -> <init>
    40:40:java.lang.Long invoke() -> invoke
    40:40:java.lang.Object invoke() -> invoke
kotlin.time.AdjustedTimeMark -> kotlin.time.AdjustedTimeMark:
# {"id":"sourceFile","fileName":"TimeSource.kt"}
    0:0:void <init>(kotlin.time.TimeMark,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    224:224:void <init>(kotlin.time.TimeMark,long) -> <init>
    225:225:long elapsedNow-UwyO8pc() -> elapsedNow-UwyO8pc
    224:224:long getAdjustment-UwyO8pc() -> getAdjustment-UwyO8pc
    224:224:kotlin.time.TimeMark getMark() -> getMark
    224:224:boolean hasNotPassedNow() -> hasNotPassedNow
    224:224:boolean hasPassedNow() -> hasPassedNow
    224:224:kotlin.time.TimeMark minus-LRDsOJo(long) -> minus-LRDsOJo
    227:227:kotlin.time.TimeMark plus-LRDsOJo(long) -> plus-LRDsOJo
kotlin.time.ComparableTimeMark -> kotlin.time.ComparableTimeMark:
# {"id":"sourceFile","fileName":"TimeSource.kt"}
kotlin.time.ComparableTimeMark$DefaultImpls -> kotlin.time.ComparableTimeMark$DefaultImpls:
# {"id":"sourceFile","fileName":"TimeSource.kt"}
    213:213:int compareTo(kotlin.time.ComparableTimeMark,kotlin.time.ComparableTimeMark) -> compareTo
    180:180:boolean hasNotPassedNow(kotlin.time.ComparableTimeMark) -> hasNotPassedNow
    180:180:boolean hasPassedNow(kotlin.time.ComparableTimeMark) -> hasPassedNow
    182:182:kotlin.time.ComparableTimeMark minus-LRDsOJo(kotlin.time.ComparableTimeMark,long) -> minus-LRDsOJo
kotlin.time.Duration -> kotlin.time.Duration:
# {"id":"sourceFile","fileName":"Duration.kt"}
    56:60:void <clinit>() -> <clinit>
    35:35:void <init>(long) -> <init>
    32:32:long access$getINFINITE$cp() -> access$getINFINITE$cp
    32:32:long access$getNEG_INFINITE$cp() -> access$getNEG_INFINITE$cp
    32:32:long access$getZERO$cp() -> access$getZERO$cp
    495:501:long addValuesMixedRanges-UwyO8pc(long,long,long) -> addValuesMixedRanges-UwyO8pc
    1017:1504:void appendFractional-impl(long,java.lang.StringBuilder,int,int,int,java.lang.String,boolean) -> appendFractional-impl
    0:0:kotlin.time.Duration box-impl(long) -> box-impl
    32:32:int compareTo(java.lang.Object) -> compareTo
    657:657:int compareTo-LRDsOJo(long) -> compareTo-LRDsOJo
    660:663:int compareTo-LRDsOJo(long,long) -> compareTo-LRDsOJo
    44:49:long constructor-impl(long) -> constructor-impl
    627:628:double div-LRDsOJo(long,long) -> div-LRDsOJo
    587:604:long div-UwyO8pc(long,int) -> div-UwyO8pc
    615:622:long div-UwyO8pc(long,double) -> div-UwyO8pc
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(long,java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(long,long) -> equals-impl0
    655:655:long getAbsoluteValue-UwyO8pc(long) -> getAbsoluteValue-UwyO8pc
    0:0:void getHoursComponent$annotations() -> getHoursComponent$annotations
    737:737:int getHoursComponent-impl(long) -> getHoursComponent-impl
    0:0:void getInDays$annotations() -> getInDays$annotations
    809:809:double getInDays-impl(long) -> getInDays-impl
    0:0:void getInHours$annotations() -> getInHours$annotations
    815:815:double getInHours-impl(long) -> getInHours-impl
    0:0:void getInMicroseconds$annotations() -> getInMicroseconds$annotations
    839:839:double getInMicroseconds-impl(long) -> getInMicroseconds-impl
    0:0:void getInMilliseconds$annotations() -> getInMilliseconds$annotations
    833:833:double getInMilliseconds-impl(long) -> getInMilliseconds-impl
    0:0:void getInMinutes$annotations() -> getInMinutes$annotations
    821:821:double getInMinutes-impl(long) -> getInMinutes-impl
    0:0:void getInNanoseconds$annotations() -> getInNanoseconds$annotations
    845:845:double getInNanoseconds-impl(long) -> getInNanoseconds-impl
    0:0:void getInSeconds$annotations() -> getInSeconds$annotations
    827:827:double getInSeconds-impl(long) -> getInSeconds-impl
    854:854:long getInWholeDays-impl(long) -> getInWholeDays-impl
    862:862:long getInWholeHours-impl(long) -> getInWholeHours-impl
    900:900:long getInWholeMicroseconds-impl(long) -> getInWholeMicroseconds-impl
    887:887:long getInWholeMilliseconds-impl(long) -> getInWholeMilliseconds-impl
    870:870:long getInWholeMinutes-impl(long) -> getInWholeMinutes-impl
    913:918:long getInWholeNanoseconds-impl(long) -> getInWholeNanoseconds-impl
    878:878:long getInWholeSeconds-impl(long) -> getInWholeSeconds-impl
    0:0:void getMinutesComponent$annotations() -> getMinutesComponent$annotations
    741:741:int getMinutesComponent-impl(long) -> getMinutesComponent-impl
    0:0:void getNanosecondsComponent$annotations() -> getNanosecondsComponent$annotations
    750:752:int getNanosecondsComponent-impl(long) -> getNanosecondsComponent-impl
    0:0:void getSecondsComponent$annotations() -> getSecondsComponent$annotations
    745:745:int getSecondsComponent-impl(long) -> getSecondsComponent-impl
    41:41:kotlin.time.DurationUnit getStorageUnit-impl(long) -> getStorageUnit-impl
    0:0:int getUnitDiscriminator-impl(long) -> getUnitDiscriminator-impl
    0:0:long getValue-impl(long) -> getValue-impl
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(long) -> hashCode-impl
    652:652:boolean isFinite-impl(long) -> isFinite-impl
    0:0:boolean isInMillis-impl(long) -> isInMillis-impl
    0:0:boolean isInNanos-impl(long) -> isInNanos-impl
    649:649:boolean isInfinite-impl(long) -> isInfinite-impl
    0:0:boolean isNegative-impl(long) -> isNegative-impl
    0:0:boolean isPositive-impl(long) -> isPositive-impl
    511:511:long minus-LRDsOJo(long,long) -> minus-LRDsOJo
    468:490:long plus-LRDsOJo(long,long) -> plus-LRDsOJo
    520:554:long times-UwyO8pc(long,int) -> times-UwyO8pc
    568:575:long times-UwyO8pc(long,double) -> times-UwyO8pc
    684:684:java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function5) -> toComponents-impl
    701:701:java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function4) -> toComponents-impl
    717:717:java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function3) -> toComponents-impl
    732:732:java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function2) -> toComponents-impl
    767:771:double toDouble-impl(long,kotlin.time.DurationUnit) -> toDouble-impl
    803:803:int toInt-impl(long,kotlin.time.DurationUnit) -> toInt-impl
    1067:1511:java.lang.String toIsoString-impl(long) -> toIsoString-impl
    787:789:long toLong-impl(long,kotlin.time.DurationUnit) -> toLong-impl
    946:946:long toLongMilliseconds-impl(long) -> toLongMilliseconds-impl
    934:934:long toLongNanoseconds-impl(long) -> toLongNanoseconds-impl
    971:971:java.lang.String toString() -> toString
    973:1502:java.lang.String toString-impl(long) -> toString-impl
    1047:1050:java.lang.String toString-impl(long,kotlin.time.DurationUnit,int) -> toString-impl
    1046:1046:java.lang.String toString-impl$default(long,kotlin.time.DurationUnit,int,int,java.lang.Object) -> toString-impl$default
    635:639:long truncateTo-UwyO8pc$kotlin_stdlib(long,kotlin.time.DurationUnit) -> truncateTo-UwyO8pc$kotlin_stdlib
    458:458:long unaryMinus-UwyO8pc(long) -> unaryMinus-UwyO8pc
    0:0:long unbox-impl() -> unbox-impl
kotlin.time.Duration$Companion -> kotlin.time.Duration$Companion:
# {"id":"sourceFile","fileName":"Duration.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    54:54:void <init>() -> <init>
    65:65:double convert(double,kotlin.time.DurationUnit,kotlin.time.DurationUnit) -> convert
    365:365:long days-UwyO8pc(int) -> days-UwyO8pc
    372:372:long days-UwyO8pc(long) -> days-UwyO8pc
    383:383:long days-UwyO8pc(double) -> days-UwyO8pc
    185:185:long getDays-UwyO8pc(int) -> getDays-UwyO8pc
    189:189:long getDays-UwyO8pc(long) -> getDays-UwyO8pc
    199:199:long getDays-UwyO8pc(double) -> getDays-UwyO8pc
    0:0:void getDays-UwyO8pc$annotations(double) -> getDays-UwyO8pc$annotations
    0:0:void getDays-UwyO8pc$annotations(int) -> getDays-UwyO8pc$annotations
    0:0:void getDays-UwyO8pc$annotations(long) -> getDays-UwyO8pc$annotations
    166:166:long getHours-UwyO8pc(int) -> getHours-UwyO8pc
    170:170:long getHours-UwyO8pc(long) -> getHours-UwyO8pc
    180:180:long getHours-UwyO8pc(double) -> getHours-UwyO8pc
    0:0:void getHours-UwyO8pc$annotations(double) -> getHours-UwyO8pc$annotations
    0:0:void getHours-UwyO8pc$annotations(int) -> getHours-UwyO8pc$annotations
    0:0:void getHours-UwyO8pc$annotations(long) -> getHours-UwyO8pc$annotations
    59:59:long getINFINITE-UwyO8pc() -> getINFINITE-UwyO8pc
    90:90:long getMicroseconds-UwyO8pc(int) -> getMicroseconds-UwyO8pc
    94:94:long getMicroseconds-UwyO8pc(long) -> getMicroseconds-UwyO8pc
    104:104:long getMicroseconds-UwyO8pc(double) -> getMicroseconds-UwyO8pc
    0:0:void getMicroseconds-UwyO8pc$annotations(double) -> getMicroseconds-UwyO8pc$annotations
    0:0:void getMicroseconds-UwyO8pc$annotations(int) -> getMicroseconds-UwyO8pc$annotations
    0:0:void getMicroseconds-UwyO8pc$annotations(long) -> getMicroseconds-UwyO8pc$annotations
    109:109:long getMilliseconds-UwyO8pc(int) -> getMilliseconds-UwyO8pc
    113:113:long getMilliseconds-UwyO8pc(long) -> getMilliseconds-UwyO8pc
    123:123:long getMilliseconds-UwyO8pc(double) -> getMilliseconds-UwyO8pc
    0:0:void getMilliseconds-UwyO8pc$annotations(double) -> getMilliseconds-UwyO8pc$annotations
    0:0:void getMilliseconds-UwyO8pc$annotations(int) -> getMilliseconds-UwyO8pc$annotations
    0:0:void getMilliseconds-UwyO8pc$annotations(long) -> getMilliseconds-UwyO8pc$annotations
    147:147:long getMinutes-UwyO8pc(int) -> getMinutes-UwyO8pc
    151:151:long getMinutes-UwyO8pc(long) -> getMinutes-UwyO8pc
    161:161:long getMinutes-UwyO8pc(double) -> getMinutes-UwyO8pc
    0:0:void getMinutes-UwyO8pc$annotations(double) -> getMinutes-UwyO8pc$annotations
    0:0:void getMinutes-UwyO8pc$annotations(int) -> getMinutes-UwyO8pc$annotations
    0:0:void getMinutes-UwyO8pc$annotations(long) -> getMinutes-UwyO8pc$annotations
    60:60:long getNEG_INFINITE-UwyO8pc$kotlin_stdlib() -> getNEG_INFINITE-UwyO8pc$kotlin_stdlib
    71:71:long getNanoseconds-UwyO8pc(int) -> getNanoseconds-UwyO8pc
    75:75:long getNanoseconds-UwyO8pc(long) -> getNanoseconds-UwyO8pc
    85:85:long getNanoseconds-UwyO8pc(double) -> getNanoseconds-UwyO8pc
    0:0:void getNanoseconds-UwyO8pc$annotations(double) -> getNanoseconds-UwyO8pc$annotations
    0:0:void getNanoseconds-UwyO8pc$annotations(int) -> getNanoseconds-UwyO8pc$annotations
    0:0:void getNanoseconds-UwyO8pc$annotations(long) -> getNanoseconds-UwyO8pc$annotations
    128:128:long getSeconds-UwyO8pc(int) -> getSeconds-UwyO8pc
    132:132:long getSeconds-UwyO8pc(long) -> getSeconds-UwyO8pc
    142:142:long getSeconds-UwyO8pc(double) -> getSeconds-UwyO8pc
    0:0:void getSeconds-UwyO8pc$annotations(double) -> getSeconds-UwyO8pc$annotations
    0:0:void getSeconds-UwyO8pc$annotations(int) -> getSeconds-UwyO8pc$annotations
    0:0:void getSeconds-UwyO8pc$annotations(long) -> getSeconds-UwyO8pc$annotations
    56:56:long getZERO-UwyO8pc() -> getZERO-UwyO8pc
    339:339:long hours-UwyO8pc(int) -> hours-UwyO8pc
    346:346:long hours-UwyO8pc(long) -> hours-UwyO8pc
    357:357:long hours-UwyO8pc(double) -> hours-UwyO8pc
    235:235:long microseconds-UwyO8pc(int) -> microseconds-UwyO8pc
    242:242:long microseconds-UwyO8pc(long) -> microseconds-UwyO8pc
    253:253:long microseconds-UwyO8pc(double) -> microseconds-UwyO8pc
    261:261:long milliseconds-UwyO8pc(int) -> milliseconds-UwyO8pc
    268:268:long milliseconds-UwyO8pc(long) -> milliseconds-UwyO8pc
    279:279:long milliseconds-UwyO8pc(double) -> milliseconds-UwyO8pc
    313:313:long minutes-UwyO8pc(int) -> minutes-UwyO8pc
    320:320:long minutes-UwyO8pc(long) -> minutes-UwyO8pc
    331:331:long minutes-UwyO8pc(double) -> minutes-UwyO8pc
    209:209:long nanoseconds-UwyO8pc(int) -> nanoseconds-UwyO8pc
    216:216:long nanoseconds-UwyO8pc(long) -> nanoseconds-UwyO8pc
    227:227:long nanoseconds-UwyO8pc(double) -> nanoseconds-UwyO8pc
    398:400:long parse-UwyO8pc(java.lang.String) -> parse-UwyO8pc
    419:421:long parseIsoString-UwyO8pc(java.lang.String) -> parseIsoString-UwyO8pc
    449:449:kotlin.time.Duration parseIsoStringOrNull-FghU774(java.lang.String) -> parseIsoStringOrNull-FghU774
    436:436:kotlin.time.Duration parseOrNull-FghU774(java.lang.String) -> parseOrNull-FghU774
    287:287:long seconds-UwyO8pc(int) -> seconds-UwyO8pc
    294:294:long seconds-UwyO8pc(long) -> seconds-UwyO8pc
    305:305:long seconds-UwyO8pc(double) -> seconds-UwyO8pc
kotlin.time.DurationJvmKt -> kotlin.time.DurationJvmKt:
# {"id":"sourceFile","fileName":"DurationJvm.kt"}
    14:14:void <clinit>() -> <clinit>
    16:18:java.text.DecimalFormat createFormatForDecimals(int) -> createFormatForDecimals
    22:26:java.lang.String formatToExactDecimals(double,int) -> formatToExactDecimals
    30:32:java.lang.String formatUpToDecimals(double,int) -> formatUpToDecimals
    12:12:boolean getDurationAssertionsEnabled() -> getDurationAssertionsEnabled
kotlin.time.DurationKt -> kotlin.time.DurationKt:
# {"id":"sourceFile","fileName":"Duration.kt"}
    1:1:long access$durationOf(long,int) -> access$durationOf
    1:1:long access$durationOfMillis(long) -> access$durationOfMillis
    1:1:long access$durationOfMillisNormalized(long) -> access$durationOfMillisNormalized
    1:1:long access$durationOfNanos(long) -> access$durationOfNanos
    1:1:long access$durationOfNanosNormalized(long) -> access$durationOfNanosNormalized
    1:1:long access$millisToNanos(long) -> access$millisToNanos
    1:1:long access$nanosToMillis(long) -> access$nanosToMillis
    1:1:long access$parseDuration(java.lang.String,boolean) -> access$parseDuration
    1476:1476:long durationOf(long,int) -> durationOf
    1475:1475:long durationOfMillis(long) -> durationOfMillis
    1485:1488:long durationOfMillisNormalized(long) -> durationOfMillisNormalized
    1474:1474:long durationOfNanos(long) -> durationOfNanos
    1478:1481:long durationOfNanosNormalized(long) -> durationOfNanosNormalized
    1305:1305:long getDays(int) -> getDays
    1312:1312:long getDays(long) -> getDays
    1323:1323:long getDays(double) -> getDays
    0:0:void getDays$annotations(double) -> getDays$annotations
    0:0:void getDays$annotations(int) -> getDays$annotations
    0:0:void getDays$annotations(long) -> getDays$annotations
    1279:1279:long getHours(int) -> getHours
    1286:1286:long getHours(long) -> getHours
    1297:1297:long getHours(double) -> getHours
    0:0:void getHours$annotations(double) -> getHours$annotations
    0:0:void getHours$annotations(int) -> getHours$annotations
    0:0:void getHours$annotations(long) -> getHours$annotations
    1175:1175:long getMicroseconds(int) -> getMicroseconds
    1182:1182:long getMicroseconds(long) -> getMicroseconds
    1193:1193:long getMicroseconds(double) -> getMicroseconds
    0:0:void getMicroseconds$annotations(double) -> getMicroseconds$annotations
    0:0:void getMicroseconds$annotations(int) -> getMicroseconds$annotations
    0:0:void getMicroseconds$annotations(long) -> getMicroseconds$annotations
    1201:1201:long getMilliseconds(int) -> getMilliseconds
    1208:1208:long getMilliseconds(long) -> getMilliseconds
    1219:1219:long getMilliseconds(double) -> getMilliseconds
    0:0:void getMilliseconds$annotations(double) -> getMilliseconds$annotations
    0:0:void getMilliseconds$annotations(int) -> getMilliseconds$annotations
    0:0:void getMilliseconds$annotations(long) -> getMilliseconds$annotations
    1253:1253:long getMinutes(int) -> getMinutes
    1260:1260:long getMinutes(long) -> getMinutes
    1271:1271:long getMinutes(double) -> getMinutes
    0:0:void getMinutes$annotations(double) -> getMinutes$annotations
    0:0:void getMinutes$annotations(int) -> getMinutes$annotations
    0:0:void getMinutes$annotations(long) -> getMinutes$annotations
    1149:1149:long getNanoseconds(int) -> getNanoseconds
    1156:1156:long getNanoseconds(long) -> getNanoseconds
    1167:1167:long getNanoseconds(double) -> getNanoseconds
    0:0:void getNanoseconds$annotations(double) -> getNanoseconds$annotations
    0:0:void getNanoseconds$annotations(int) -> getNanoseconds$annotations
    0:0:void getNanoseconds$annotations(long) -> getNanoseconds$annotations
    1227:1227:long getSeconds(int) -> getSeconds
    1234:1234:long getSeconds(long) -> getSeconds
    1245:1245:long getSeconds(double) -> getSeconds
    0:0:void getSeconds$annotations(double) -> getSeconds$annotations
    0:0:void getSeconds$annotations(int) -> getSeconds$annotations
    0:0:void getSeconds$annotations(long) -> getSeconds$annotations
    0:0:long millisToNanos(long) -> millisToNanos
    1471:1471:long nanosToMillis(long) -> nanosToMillis
    1347:1516:long parseDuration(java.lang.String,boolean) -> parseDuration
    1433:1519:long parseOverLongIsoComponent(java.lang.String) -> parseOverLongIsoComponent
    1451:1451:int skipWhile(java.lang.String,int,kotlin.jvm.functions.Function1) -> skipWhile
    1447:1522:java.lang.String substringWhile(java.lang.String,int,kotlin.jvm.functions.Function1) -> substringWhile
    1342:1342:long times-kIfJnKk(double,long) -> times-kIfJnKk
    1330:1330:long times-mvk6XK0(int,long) -> times-mvk6XK0
    1101:1104:long toDuration(int,kotlin.time.DurationUnit) -> toDuration
    1111:1116:long toDuration(long,kotlin.time.DurationUnit) -> toDuration
    1130:1137:long toDuration(double,kotlin.time.DurationUnit) -> toDuration
kotlin.time.DurationUnit -> kotlin.time.DurationUnit:
# {"id":"sourceFile","fileName":"DurationUnitJvm.kt"}
    0:0:kotlin.time.DurationUnit[] $values() -> $values
    19:43:void <clinit>() -> <clinit>
    13:15:void <init>(java.lang.String,int,java.util.concurrent.TimeUnit) -> <init>
    0:0:kotlin.enums.EnumEntries getEntries() -> getEntries
    15:15:java.util.concurrent.TimeUnit getTimeUnit$kotlin_stdlib() -> getTimeUnit$kotlin_stdlib
    0:0:kotlin.time.DurationUnit valueOf(java.lang.String) -> valueOf
    0:0:kotlin.time.DurationUnit[] values() -> values
kotlin.time.DurationUnitKt -> kotlin.time.DurationUnitKt:
    1:1:void <init>() -> <init>
kotlin.time.DurationUnitKt__DurationUnitJvmKt -> kotlin.time.DurationUnitKt__DurationUnitJvmKt:
# {"id":"sourceFile","fileName":"DurationUnitJvm.kt"}
    0:0:void <init>() -> <init>
    70:74:double convertDurationUnit(double,kotlin.time.DurationUnit,kotlin.time.DurationUnit) -> convertDurationUnit
    85:85:long convertDurationUnit(long,kotlin.time.DurationUnit,kotlin.time.DurationUnit) -> convertDurationUnit
    80:80:long convertDurationUnitOverflow(long,kotlin.time.DurationUnit,kotlin.time.DurationUnit) -> convertDurationUnitOverflow
    58:65:kotlin.time.DurationUnit toDurationUnit(java.util.concurrent.TimeUnit) -> toDurationUnit
    51:51:java.util.concurrent.TimeUnit toTimeUnit(kotlin.time.DurationUnit) -> toTimeUnit
kotlin.time.DurationUnitKt__DurationUnitJvmKt$WhenMappings -> kotlin.time.DurationUnitKt__DurationUnitJvmKt$WhenMappings:
# {"id":"sourceFile","fileName":"DurationUnitJvm.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.time.DurationUnitKt__DurationUnitKt -> kotlin.time.DurationUnitKt__DurationUnitKt:
# {"id":"sourceFile","fileName":"DurationUnit.kt"}
    0:0:void <init>() -> <init>
    93:102:kotlin.time.DurationUnit durationUnitByIsoChar(char,boolean) -> durationUnitByIsoChar
    77:85:kotlin.time.DurationUnit durationUnitByShortName(java.lang.String) -> durationUnitByShortName
    65:73:java.lang.String shortName(kotlin.time.DurationUnit) -> shortName
kotlin.time.DurationUnitKt__DurationUnitKt$WhenMappings -> kotlin.time.DurationUnitKt__DurationUnitKt$WhenMappings:
# {"id":"sourceFile","fileName":"DurationUnit.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.time.ExperimentalTime -> kotlin.time.ExperimentalTime:
# {"id":"sourceFile","fileName":"ExperimentalTime.kt"}
kotlin.time.LongSaturatedMathKt -> kotlin.time.LongSaturatedMathKt:
# {"id":"sourceFile","fileName":"longSaturatedMath.kt"}
    29:29:long checkInfiniteSumDefined-PjuGub4(long,long,long) -> checkInfiniteSumDefined-PjuGub4
    43:43:long infinityOfSign(long) -> infinityOfSign
    0:0:boolean isSaturated(long) -> isSaturated
    13:18:long saturatingAdd-NuflL3o(long,kotlin.time.DurationUnit,long) -> saturatingAdd-NuflL3o
    34:39:long saturatingAddInHalves-NuflL3o(long,kotlin.time.DurationUnit,long) -> saturatingAddInHalves-NuflL3o
    47:49:long saturatingDiff(long,long,kotlin.time.DurationUnit) -> saturatingDiff
    66:75:long saturatingFiniteDiff(long,long,kotlin.time.DurationUnit) -> saturatingFiniteDiff
    54:60:long saturatingOriginsDiff(long,long,kotlin.time.DurationUnit) -> saturatingOriginsDiff
kotlin.time.MeasureTimeKt -> kotlin.time.MeasureTimeKt:
# {"id":"sourceFile","fileName":"measureTime.kt"}
    21:128:long measureTime(kotlin.jvm.functions.Function0) -> measureTime
    37:39:long measureTime(kotlin.time.TimeSource,kotlin.jvm.functions.Function0) -> measureTime
    54:56:long measureTime(kotlin.time.TimeSource$Monotonic,kotlin.jvm.functions.Function0) -> measureTime
    83:135:kotlin.time.TimedValue measureTimedValue(kotlin.jvm.functions.Function0) -> measureTimedValue
    99:101:kotlin.time.TimedValue measureTimedValue(kotlin.time.TimeSource,kotlin.jvm.functions.Function0) -> measureTimedValue
    117:119:kotlin.time.TimedValue measureTimedValue(kotlin.time.TimeSource$Monotonic,kotlin.jvm.functions.Function0) -> measureTimedValue
kotlin.time.MonoTimeSourceKt -> kotlin.time.MonoTimeSourceKt:
# {"id":"sourceFile","fileName":"MonoTimeSource.kt"}
    0:0:void ValueTimeMarkReading$annotations() -> ValueTimeMarkReading$annotations
kotlin.time.MonotonicTimeSource -> kotlin.time.MonotonicTimeSource:
# {"id":"sourceFile","fileName":"MonoTimeSource.kt"}
    12:12:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    24:24:long adjustReading-6QKq23U(long,long) -> adjustReading-6QKq23U
    21:21:long differenceBetween-fRLX17w(long,long) -> differenceBetween-fRLX17w
    18:18:long elapsedFrom-6eNON_k(long) -> elapsedFrom-6eNON_k
    10:10:kotlin.time.ComparableTimeMark markNow() -> markNow
    10:10:kotlin.time.TimeMark markNow() -> markNow
    16:16:long markNow-z9LOYto() -> markNow-z9LOYto
    13:13:long read() -> read
    0:0:java.lang.String toString() -> toString
kotlin.time.TestTimeSource -> kotlin.time.TestTimeSource:
# {"id":"sourceFile","fileName":"TimeSources.kt"}
    153:157:void <init>() -> <init>
    196:196:void overflow-LRDsOJo(long) -> overflow-LRDsOJo
    172:190:void plusAssign-LRDsOJo(long) -> plusAssign-LRDsOJo
    160:160:long read() -> read
kotlin.time.TimeMark -> kotlin.time.TimeMark:
# {"id":"sourceFile","fileName":"TimeSource.kt"}
kotlin.time.TimeMark$DefaultImpls -> kotlin.time.TimeMark$DefaultImpls:
# {"id":"sourceFile","fileName":"TimeSource.kt"}
    172:172:boolean hasNotPassedNow(kotlin.time.TimeMark) -> hasNotPassedNow
    164:164:boolean hasPassedNow(kotlin.time.TimeMark) -> hasPassedNow
    155:155:kotlin.time.TimeMark minus-LRDsOJo(kotlin.time.TimeMark,long) -> minus-LRDsOJo
    142:142:kotlin.time.TimeMark plus-LRDsOJo(kotlin.time.TimeMark,long) -> plus-LRDsOJo
kotlin.time.TimeSource -> kotlin.time.TimeSource:
# {"id":"sourceFile","fileName":"TimeSource.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.time.TimeSource$Companion -> kotlin.time.TimeSource$Companion:
# {"id":"sourceFile","fileName":"TimeSource.kt"}
    0:0:void <clinit>() -> <clinit>
    104:104:void <init>() -> <init>
kotlin.time.TimeSource$Monotonic -> kotlin.time.TimeSource$Monotonic:
# {"id":"sourceFile","fileName":"TimeSource.kt"}
    0:0:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    47:47:kotlin.time.ComparableTimeMark markNow() -> markNow
    47:47:kotlin.time.TimeMark markNow() -> markNow
    48:48:long markNow-z9LOYto() -> markNow-z9LOYto
    49:49:java.lang.String toString() -> toString
kotlin.time.TimeSource$Monotonic$ValueTimeMark -> kotlin.time.TimeSource$Monotonic$ValueTimeMark:
# {"id":"sourceFile","fileName":"TimeSource.kt"}
    66:66:void <init>(long) -> <init>
    0:0:kotlin.time.TimeSource$Monotonic$ValueTimeMark box-impl(long) -> box-impl
    63:63:int compareTo(java.lang.Object) -> compareTo
    63:63:int compareTo(kotlin.time.ComparableTimeMark) -> compareTo
    100:100:int compareTo-6eNON_k(long,long) -> compareTo-6eNON_k
    66:66:int compareTo-impl(long,kotlin.time.ComparableTimeMark) -> compareTo-impl
    0:0:long constructor-impl(long) -> constructor-impl
    67:67:long elapsedNow-UwyO8pc() -> elapsedNow-UwyO8pc
    67:67:long elapsedNow-UwyO8pc(long) -> elapsedNow-UwyO8pc
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:boolean equals-impl(long,java.lang.Object) -> equals-impl
    0:0:boolean equals-impl0(long,long) -> equals-impl0
    71:71:boolean hasNotPassedNow() -> hasNotPassedNow
    71:71:boolean hasNotPassedNow-impl(long) -> hasNotPassedNow-impl
    70:70:boolean hasPassedNow() -> hasPassedNow
    70:70:boolean hasPassedNow-impl(long) -> hasPassedNow-impl
    0:0:int hashCode() -> hashCode
    0:0:int hashCode-impl(long) -> hashCode-impl
    90:90:long minus-6eNON_k(long,long) -> minus-6eNON_k
    63:63:kotlin.time.ComparableTimeMark minus-LRDsOJo(long) -> minus-LRDsOJo
    63:63:kotlin.time.TimeMark minus-LRDsOJo(long) -> minus-LRDsOJo
    69:69:long minus-LRDsOJo(long) -> minus-LRDsOJo
    69:69:long minus-LRDsOJo(long,long) -> minus-LRDsOJo
    73:73:long minus-UwyO8pc(kotlin.time.ComparableTimeMark) -> minus-UwyO8pc
    74:76:long minus-UwyO8pc(long,kotlin.time.ComparableTimeMark) -> minus-UwyO8pc
    63:63:kotlin.time.ComparableTimeMark plus-LRDsOJo(long) -> plus-LRDsOJo
    63:63:kotlin.time.TimeMark plus-LRDsOJo(long) -> plus-LRDsOJo
    68:68:long plus-LRDsOJo(long) -> plus-LRDsOJo
    68:68:long plus-LRDsOJo(long,long) -> plus-LRDsOJo
    0:0:java.lang.String toString() -> toString
    0:0:java.lang.String toString-impl(long) -> toString-impl
    0:0:long unbox-impl() -> unbox-impl
kotlin.time.TimeSource$WithComparableMarks -> kotlin.time.TimeSource$WithComparableMarks:
# {"id":"sourceFile","fileName":"TimeSource.kt"}
kotlin.time.TimedValue -> kotlin.time.TimedValue:
# {"id":"sourceFile","fileName":"measureTime.kt"}
    0:0:void <init>(java.lang.Object,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    66:68:void <init>(java.lang.Object,long) -> <init>
    0:0:java.lang.Object component1() -> component1
    0:0:long component2-UwyO8pc() -> component2-UwyO8pc
    0:0:kotlin.time.TimedValue copy-RFiDyg4(java.lang.Object,long) -> copy-RFiDyg4
    0:0:kotlin.time.TimedValue copy-RFiDyg4$default(kotlin.time.TimedValue,java.lang.Object,long,int,java.lang.Object) -> copy-RFiDyg4$default
    0:0:boolean equals(java.lang.Object) -> equals
    68:68:long getDuration-UwyO8pc() -> getDuration-UwyO8pc
    68:68:java.lang.Object getValue() -> getValue
    0:0:int hashCode() -> hashCode
    0:0:java.lang.String toString() -> toString
kotlin.time.jdk8.DurationConversionsJDK8Kt -> kotlin.time.jdk8.DurationConversionsJDK8Kt:
# {"id":"sourceFile","fileName":"DurationConversions.kt"}
    33:35:java.time.Duration toJavaDuration-LRDsOJo(long) -> toJavaDuration-LRDsOJo
    21:21:long toKotlinDuration(java.time.Duration) -> toKotlinDuration
kotlin.time.jdk8.DurationConversionsJDK8Kt$$ExternalSyntheticApiModelOutline0 -> kotlin.time.jdk8.DurationConversionsJDK8Kt$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.time.Duration kotlin.time.jdk8.DurationConversionsJDK8Kt$$InternalSyntheticApiModelOutline$1$75bae2117be2d57a93f30c5ba1efcaa046340eebb8cf07b5f8cb4398387e9665$0.m(long,long) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.time.jdk8.DurationConversionsJDK8Kt$$ExternalSyntheticApiModelOutline1 -> kotlin.time.jdk8.DurationConversionsJDK8Kt$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:long kotlin.time.jdk8.DurationConversionsJDK8Kt$$InternalSyntheticApiModelOutline$1$7f8815ed2a96a136b9ea8a490ca8aa8a5b6a2bd85b3ce1ceeedc28b14fd9468b$0.m(java.time.Duration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.time.jdk8.DurationConversionsJDK8Kt$$ExternalSyntheticApiModelOutline2 -> kotlin.time.jdk8.DurationConversionsJDK8Kt$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int kotlin.time.jdk8.DurationConversionsJDK8Kt$$InternalSyntheticApiModelOutline$1$7f8815ed2a96a136b9ea8a490ca8aa8a5b6a2bd85b3ce1ceeedc28b14fd9468b$1.m(java.time.Duration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.Address -> okhttp3.Address:
# {"id":"sourceFile","fileName":"Address.kt"}
    164:164:okhttp3.CertificatePinner -deprecated_certificatePinner() -> -deprecated_certificatePinner
    129:129:java.util.List -deprecated_connectionSpecs() -> -deprecated_connectionSpecs
    101:101:okhttp3.Dns -deprecated_dns() -> -deprecated_dns
    157:157:javax.net.ssl.HostnameVerifier -deprecated_hostnameVerifier() -> -deprecated_hostnameVerifier
    122:122:java.util.List -deprecated_protocols() -> -deprecated_protocols
    143:143:java.net.Proxy -deprecated_proxy() -> -deprecated_proxy
    115:115:okhttp3.Authenticator -deprecated_proxyAuthenticator() -> -deprecated_proxyAuthenticator
    136:136:java.net.ProxySelector -deprecated_proxySelector() -> -deprecated_proxySelector
    108:108:javax.net.SocketFactory -deprecated_socketFactory() -> -deprecated_socketFactory
    150:150:javax.net.ssl.SSLSocketFactory -deprecated_sslSocketFactory() -> -deprecated_sslSocketFactory
    94:94:okhttp3.HttpUrl -deprecated_url() -> -deprecated_url
    34:87:void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector) -> <init>
    50:50:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    86:86:java.util.List connectionSpecs() -> connectionSpecs
    38:38:okhttp3.Dns dns() -> dns
    167:169:boolean equals(java.lang.Object) -> equals
    188:197:boolean equalsNonHost$okhttp(okhttp3.Address) -> equalsNonHost$okhttp
    174:183:int hashCode() -> hashCode
    47:47:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    84:84:java.util.List protocols() -> protocols
    59:59:java.net.Proxy proxy() -> proxy
    53:53:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    68:68:java.net.ProxySelector proxySelector() -> proxySelector
    41:41:javax.net.SocketFactory socketFactory() -> socketFactory
    44:44:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    201:203:java.lang.String toString() -> toString
    74:74:okhttp3.HttpUrl url() -> url
okhttp3.Authenticator -> okhttp3.Authenticator:
# {"id":"sourceFile","fileName":"Authenticator.kt"}
    130:137:void <clinit>() -> <clinit>
okhttp3.Authenticator$Companion -> okhttp3.Authenticator$Companion:
# {"id":"sourceFile","fileName":"Authenticator.kt"}
    0:0:void <clinit>() -> <clinit>
    127:127:void <init>() -> <init>
okhttp3.Authenticator$Companion$AuthenticatorNone -> okhttp3.Authenticator$Companion$AuthenticatorNone:
# {"id":"sourceFile","fileName":"Authenticator.kt"}
    131:131:void <init>() -> <init>
    0:0:okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response) -> authenticate
okhttp3.Cache -> okhttp3.Cache:
# {"id":"sourceFile","fileName":"Cache.kt"}
    366:366:java.io.File -deprecated_directory() -> -deprecated_directory
    0:0:void <clinit>() -> <clinit>
    142:153:void <init>(java.io.File,long,okhttp3.internal.io.FileSystem) -> <init>
    167:167:void <init>(java.io.File,long) -> <init>
    248:248:void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor) -> abortQuietly
    355:355:void close() -> close
    275:275:void delete() -> delete
    359:359:java.io.File directory() -> directory
    284:284:void evictAll() -> evictAll
    350:350:void flush() -> flush
    170:186:okhttp3.Response get$okhttp(okhttp3.Request) -> get$okhttp
    147:147:okhttp3.internal.cache.DiskLruCache getCache$okhttp() -> getCache$okhttp
    158:158:int getWriteAbortCount$okhttp() -> getWriteAbortCount$okhttp
    157:157:int getWriteSuccessCount$okhttp() -> getWriteSuccessCount$okhttp
    386:386:int hitCount() -> hitCount
    266:266:void initialize() -> initialize
    164:164:boolean isClosed() -> isClosed
    0:0:java.lang.String key(okhttp3.HttpUrl) -> key
    346:346:long maxSize() -> maxSize
    384:384:int networkCount() -> networkCount
    194:222:okhttp3.internal.cache.CacheRequest put$okhttp(okhttp3.Response) -> put$okhttp
    229:229:void remove$okhttp(okhttp3.Request) -> remove$okhttp
    388:388:int requestCount() -> requestCount
    158:158:void setWriteAbortCount$okhttp(int) -> setWriteAbortCount$okhttp
    157:157:void setWriteSuccessCount$okhttp(int) -> setWriteSuccessCount$okhttp
    343:343:long size() -> size
    381:382:void trackConditionalCacheHit$okhttp() -> trackConditionalCacheHit$okhttp
    369:378:void trackResponse$okhttp(okhttp3.internal.cache.CacheStrategy) -> trackResponse$okhttp
    233:241:void update$okhttp(okhttp3.Response,okhttp3.Response) -> update$okhttp
    298:298:java.util.Iterator urls() -> urls
    338:338:int writeAbortCount() -> writeAbortCount
    340:340:int writeSuccessCount() -> writeSuccessCount
okhttp3.Cache$CacheResponseBody -> okhttp3.Cache$CacheResponseBody:
# {"id":"sourceFile","fileName":"Cache.kt"}
    673:687:void <init>(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String) -> <init>
    692:692:long contentLength() -> contentLength
    690:690:okhttp3.MediaType contentType() -> contentType
    673:673:okhttp3.internal.cache.DiskLruCache$Snapshot getSnapshot() -> getSnapshot
    694:694:okio.BufferedSource source() -> source
okhttp3.Cache$CacheResponseBody$1 -> okhttp3.Cache$CacheResponseBody$1:
# {"id":"sourceFile","fileName":"Cache.kt"}
    681:681:void <init>(okio.Source,okhttp3.Cache$CacheResponseBody) -> <init>
    684:685:void close() -> close
okhttp3.Cache$Companion -> okhttp3.Cache$Companion:
# {"id":"sourceFile","fileName":"Cache.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    697:697:void <init>() -> <init>
    735:735:boolean hasVaryAll(okhttp3.Response) -> hasVaryAll
    704:704:java.lang.String key(okhttp3.HttpUrl) -> key
    709:716:int readInt$okhttp(okio.BufferedSource) -> readInt$okhttp
    742:755:java.util.Set varyFields(okhttp3.Headers) -> varyFields
    764:766:okhttp3.Headers varyHeaders(okhttp3.Response) -> varyHeaders
    774:784:okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers) -> varyHeaders
    729:790:boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request) -> varyMatches
okhttp3.Cache$Entry -> okhttp3.Cache$Entry:
# {"id":"sourceFile","fileName":"Cache.kt"}
    665:668:void <clinit>() -> <clinit>
    493:545:void <init>(okio.Source) -> <init>
    548:558:void <init>(okhttp3.Response) -> <init>
    440:440:boolean isHttps() -> isHttps
    637:639:boolean matches(okhttp3.Request,okhttp3.Response) -> matches
    603:618:java.util.List readCertificateList(okio.BufferedSource) -> readCertificateList
    643:660:okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot) -> response
    625:632:void writeCertList(okio.BufferedSink,java.util.List) -> writeCertList
    563:598:void writeTo(okhttp3.internal.cache.DiskLruCache$Editor) -> writeTo
okhttp3.Cache$Entry$Companion -> okhttp3.Cache$Entry$Companion:
# {"id":"sourceFile","fileName":"Cache.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    663:663:void <init>() -> <init>
okhttp3.Cache$RealCacheRequest -> okhttp3.Cache$RealCacheRequest:
# {"id":"sourceFile","fileName":"Cache.kt"}
    390:398:void <init>(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor) -> <init>
    413:420:void abort() -> abort
    390:390:okhttp3.internal.cache.DiskLruCache$Editor access$getEditor$p(okhttp3.Cache$RealCacheRequest) -> access$getEditor$p
    425:425:okio.Sink body() -> body
    395:395:boolean getDone() -> getDone
    395:395:void setDone(boolean) -> setDone
okhttp3.Cache$RealCacheRequest$1 -> okhttp3.Cache$RealCacheRequest$1:
# {"id":"sourceFile","fileName":"Cache.kt"}
    398:398:void <init>(okhttp3.Cache,okhttp3.Cache$RealCacheRequest,okio.Sink) -> <init>
    401:407:void close() -> close
okhttp3.Cache$urls$1 -> okhttp3.Cache$urls$1:
# {"id":"sourceFile","fileName":"Cache.kt"}
    298:299:void <init>(okhttp3.Cache) -> <init>
    304:312:boolean hasNext() -> hasNext
    298:298:java.lang.Object next() -> next
    324:327:java.lang.String next() -> next
    332:333:void remove() -> remove
okhttp3.CacheControl -> okhttp3.CacheControl:
# {"id":"sourceFile","fileName":"CacheControl.kt"}
    141:141:boolean -deprecated_immutable() -> -deprecated_immutable
    92:92:int -deprecated_maxAgeSeconds() -> -deprecated_maxAgeSeconds
    113:113:int -deprecated_maxStaleSeconds() -> -deprecated_maxStaleSeconds
    120:120:int -deprecated_minFreshSeconds() -> -deprecated_minFreshSeconds
    106:106:boolean -deprecated_mustRevalidate() -> -deprecated_mustRevalidate
    78:78:boolean -deprecated_noCache() -> -deprecated_noCache
    85:85:boolean -deprecated_noStore() -> -deprecated_noStore
    134:134:boolean -deprecated_noTransform() -> -deprecated_noTransform
    127:127:boolean -deprecated_onlyIfCached() -> -deprecated_onlyIfCached
    99:99:int -deprecated_sMaxAgeSeconds() -> -deprecated_sMaxAgeSeconds
    264:277:void <clinit>() -> <clinit>
    0:0:void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    28:71:void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String) -> <init>
    69:69:boolean immutable() -> immutable
    50:50:boolean isPrivate() -> isPrivate
    51:51:boolean isPublic() -> isPublic
    42:42:int maxAgeSeconds() -> maxAgeSeconds
    55:55:int maxStaleSeconds() -> maxStaleSeconds
    57:57:int minFreshSeconds() -> minFreshSeconds
    53:53:boolean mustRevalidate() -> mustRevalidate
    36:36:boolean noCache() -> noCache
    39:39:boolean noStore() -> noStore
    67:67:boolean noTransform() -> noTransform
    65:65:boolean onlyIfCached() -> onlyIfCached
    0:0:okhttp3.CacheControl parse(okhttp3.Headers) -> parse
    48:48:int sMaxAgeSeconds() -> sMaxAgeSeconds
    144:162:java.lang.String toString() -> toString
okhttp3.CacheControl$Builder -> okhttp3.CacheControl$Builder:
# {"id":"sourceFile","fileName":"CacheControl.kt"}
    168:173:void <init>() -> <init>
    253:254:okhttp3.CacheControl build() -> build
    0:0:int clampToInt(long) -> clampToInt
    242:242:okhttp3.CacheControl$Builder immutable() -> immutable
    196:198:okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit) -> maxAge
    209:211:okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit) -> maxStale
    223:225:okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit) -> minFresh
    180:180:okhttp3.CacheControl$Builder noCache() -> noCache
    185:185:okhttp3.CacheControl$Builder noStore() -> noStore
    238:238:okhttp3.CacheControl$Builder noTransform() -> noTransform
    233:233:okhttp3.CacheControl$Builder onlyIfCached() -> onlyIfCached
okhttp3.CacheControl$Companion -> okhttp3.CacheControl$Companion:
# {"id":"sourceFile","fileName":"CacheControl.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    258:258:void <init>() -> <init>
    407:412:int indexOfElement(java.lang.String,java.lang.String,int) -> indexOfElement
    406:406:int indexOfElement$default(okhttp3.CacheControl$Companion,java.lang.String,java.lang.String,int,int,java.lang.Object) -> indexOfElement$default
    301:397:okhttp3.CacheControl parse(okhttp3.Headers) -> parse
okhttp3.Call -> okhttp3.Call:
# {"id":"sourceFile","fileName":"Call.kt"}
okhttp3.Call$Factory -> okhttp3.Call$Factory:
# {"id":"sourceFile","fileName":"Call.kt"}
okhttp3.Callback -> okhttp3.Callback:
# {"id":"sourceFile","fileName":"Callback.kt"}
okhttp3.CertificatePinner -> okhttp3.CertificatePinner:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    347:347:void <clinit>() -> <clinit>
    135:138:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner) -> <init>
    136:136:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    150:150:void check(java.lang.String,java.util.List) -> check
    209:209:void check(java.lang.String,java.security.cert.Certificate[]) -> check
    157:200:void check$okhttp(java.lang.String,kotlin.jvm.functions.Function0) -> check$okhttp
    230:232:boolean equals(java.lang.Object) -> equals
    216:375:java.util.List findMatchingPins(java.lang.String) -> findMatchingPins
    138:138:okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp() -> getCertificateChainCleaner$okhttp
    137:137:java.util.Set getPins() -> getPins
    237:238:int hashCode() -> hashCode
    0:0:java.lang.String pin(java.security.cert.Certificate) -> pin
    0:0:okio.ByteString sha1Hash(java.security.cert.X509Certificate) -> sha1Hash
    0:0:okio.ByteString sha256Hash(java.security.cert.X509Certificate) -> sha256Hash
    222:225:okhttp3.CertificatePinner withCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner) -> withCertificateChainCleaner$okhttp
okhttp3.CertificatePinner$Builder -> okhttp3.CertificatePinner$Builder:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    326:327:void <init>() -> <init>
    337:338:okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[]) -> add
    342:342:okhttp3.CertificatePinner build() -> build
    327:327:java.util.List getPins() -> getPins
okhttp3.CertificatePinner$Companion -> okhttp3.CertificatePinner$Companion:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    345:345:void <init>() -> <init>
    365:366:java.lang.String pin(java.security.cert.Certificate) -> pin
    351:351:okio.ByteString sha1Hash(java.security.cert.X509Certificate) -> sha1Hash
    355:355:okio.ByteString sha256Hash(java.security.cert.X509Certificate) -> sha256Hash
okhttp3.CertificatePinner$Pin -> okhttp3.CertificatePinner$Pin:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    243:272:void <init>(java.lang.String,java.lang.String) -> <init>
    308:312:boolean equals(java.lang.Object) -> equals
    251:251:okio.ByteString getHash() -> getHash
    248:248:java.lang.String getHashAlgorithm() -> getHashAlgorithm
    245:245:java.lang.String getPattern() -> getPattern
    318:320:int hashCode() -> hashCode
    297:299:boolean matchesCertificate(java.security.cert.X509Certificate) -> matchesCertificate
    278:292:boolean matchesHostname(java.lang.String) -> matchesHostname
    304:304:java.lang.String toString() -> toString
okhttp3.CertificatePinner$check$1 -> okhttp3.CertificatePinner$check$1:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    0:0:void <init>(okhttp3.CertificatePinner,java.util.List,java.lang.String) -> <init>
    150:150:java.lang.Object invoke() -> invoke
    151:373:java.util.List invoke() -> invoke
okhttp3.Challenge -> okhttp3.Challenge:
# {"id":"sourceFile","fileName":"Challenge.kt"}
    88:88:java.util.Map -deprecated_authParams() -> -deprecated_authParams
    102:102:java.nio.charset.Charset -deprecated_charset() -> -deprecated_charset
    95:95:java.lang.String -deprecated_realm() -> -deprecated_realm
    81:81:java.lang.String -deprecated_scheme() -> -deprecated_scheme
    29:66:void <init>(java.lang.String,java.util.Map) -> <init>
    58:58:void <init>(java.lang.String,java.lang.String) -> <init>
    39:39:java.util.Map authParams() -> authParams
    48:55:java.nio.charset.Charset charset() -> charset
    105:107:boolean equals(java.lang.Object) -> equals
    112:113:int hashCode() -> hashCode
    43:43:java.lang.String realm() -> realm
    31:31:java.lang.String scheme() -> scheme
    117:117:java.lang.String toString() -> toString
    71:73:okhttp3.Challenge withCharset(java.nio.charset.Charset) -> withCharset
okhttp3.CipherSuite -> okhttp3.CipherSuite:
# {"id":"sourceFile","fileName":"CipherSuite.kt"}
    52:52:java.lang.String -deprecated_javaName() -> -deprecated_javaName
    62:419:void <clinit>() -> <clinit>
    0:0:void <init>(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    38:45:void <init>(java.lang.String) -> <init>
    38:38:java.util.Map access$getINSTANCES$cp() -> access$getINSTANCES$cp
    38:38:java.util.Comparator access$getORDER_BY_NAME$cp() -> access$getORDER_BY_NAME$cp
    0:0:okhttp3.CipherSuite forJavaName(java.lang.String) -> forJavaName
    45:45:java.lang.String javaName() -> javaName
    54:54:java.lang.String toString() -> toString
okhttp3.CipherSuite$Companion -> okhttp3.CipherSuite$Companion:
# {"id":"sourceFile","fileName":"CipherSuite.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    56:56:void <init>() -> <init>
    56:56:okhttp3.CipherSuite access$init(okhttp3.CipherSuite$Companion,java.lang.String,int) -> access$init
    427:438:okhttp3.CipherSuite forJavaName(java.lang.String) -> forJavaName
    62:62:java.util.Comparator getORDER_BY_NAME$okhttp() -> getORDER_BY_NAME$okhttp
    455:456:okhttp3.CipherSuite init(java.lang.String,int) -> init
    443:444:java.lang.String secondaryName(java.lang.String) -> secondaryName
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1 -> okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1:
# {"id":"sourceFile","fileName":"CipherSuite.kt"}
    62:62:void <init>() -> <init>
    62:62:int compare(java.lang.Object,java.lang.Object) -> compare
    65:73:int compare(java.lang.String,java.lang.String) -> compare
okhttp3.Connection -> okhttp3.Connection:
# {"id":"sourceFile","fileName":"Connection.kt"}
okhttp3.ConnectionPool -> okhttp3.ConnectionPool:
# {"id":"sourceFile","fileName":"ConnectionPool.kt"}
    33:34:void <init>(okhttp3.internal.connection.RealConnectionPool) -> <init>
    40:41:void <init>(int,long,java.util.concurrent.TimeUnit) -> <init>
    47:47:void <init>() -> <init>
    53:53:int connectionCount() -> connectionCount
    57:57:void evictAll() -> evictAll
    34:34:okhttp3.internal.connection.RealConnectionPool getDelegate$okhttp() -> getDelegate$okhttp
    50:50:int idleConnectionCount() -> idleConnectionCount
okhttp3.ConnectionSpec -> okhttp3.ConnectionSpec:
# {"id":"sourceFile","fileName":"ConnectionSpec.kt"}
    67:67:java.util.List -deprecated_cipherSuites() -> -deprecated_cipherSuites
    90:90:boolean -deprecated_supportsTlsExtensions() -> -deprecated_supportsTlsExtensions
    83:83:java.util.List -deprecated_tlsVersions() -> -deprecated_tlsVersions
    274:347:void <clinit>() -> <clinit>
    46:50:void <init>(boolean,boolean,java.lang.String[],java.lang.String[]) -> <init>
    46:46:java.lang.String[] access$getCipherSuitesAsString$p(okhttp3.ConnectionSpec) -> access$getCipherSuitesAsString$p
    46:46:java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec) -> access$getTlsVersionsAsString$p
    94:101:void apply$okhttp(javax.net.ssl.SSLSocket,boolean) -> apply$okhttp
    59:353:java.util.List cipherSuites() -> cipherSuites
    168:176:boolean equals(java.lang.Object) -> equals
    184:187:int hashCode() -> hashCode
    149:160:boolean isCompatible(javax.net.ssl.SSLSocket) -> isCompatible
    47:47:boolean isTls() -> isTls
    109:134:okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean) -> supportedSpec
    48:48:boolean supportsTlsExtensions() -> supportsTlsExtensions
    75:357:java.util.List tlsVersions() -> tlsVersions
    193:198:java.lang.String toString() -> toString
okhttp3.ConnectionSpec$Builder -> okhttp3.ConnectionSpec$Builder:
# {"id":"sourceFile","fileName":"ConnectionSpec.kt"}
    207:208:void <init>(boolean) -> <init>
    211:215:void <init>(okhttp3.ConnectionSpec) -> <init>
    219:220:okhttp3.ConnectionSpec$Builder allEnabledCipherSuites() -> allEnabledCipherSuites
    237:238:okhttp3.ConnectionSpec$Builder allEnabledTlsVersions() -> allEnabledTlsVersions
    263:267:okhttp3.ConnectionSpec build() -> build
    224:357:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> cipherSuites
    230:233:okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]) -> cipherSuites
    203:203:java.lang.String[] getCipherSuites$okhttp() -> getCipherSuites$okhttp
    205:205:boolean getSupportsTlsExtensions$okhttp() -> getSupportsTlsExtensions$okhttp
    202:202:boolean getTls$okhttp() -> getTls$okhttp
    204:204:java.lang.String[] getTlsVersions$okhttp() -> getTlsVersions$okhttp
    203:203:void setCipherSuites$okhttp(java.lang.String[]) -> setCipherSuites$okhttp
    205:205:void setSupportsTlsExtensions$okhttp(boolean) -> setSupportsTlsExtensions$okhttp
    202:202:void setTls$okhttp(boolean) -> setTls$okhttp
    204:204:void setTlsVersions$okhttp(java.lang.String[]) -> setTlsVersions$okhttp
    259:260:okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean) -> supportsTlsExtensions
    242:363:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> tlsVersions
    249:252:okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]) -> tlsVersions
okhttp3.ConnectionSpec$Companion -> okhttp3.ConnectionSpec$Companion:
# {"id":"sourceFile","fileName":"ConnectionSpec.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    271:271:void <init>() -> <init>
okhttp3.Cookie -> okhttp3.Cookie:
# {"id":"sourceFile","fileName":"Cookie.kt"}
    186:186:java.lang.String -deprecated_domain() -> -deprecated_domain
    172:172:long -deprecated_expiresAt() -> -deprecated_expiresAt
    179:179:boolean -deprecated_hostOnly() -> -deprecated_hostOnly
    200:200:boolean -deprecated_httpOnly() -> -deprecated_httpOnly
    151:151:java.lang.String -deprecated_name() -> -deprecated_name
    193:193:java.lang.String -deprecated_path() -> -deprecated_path
    165:165:boolean -deprecated_persistent() -> -deprecated_persistent
    207:207:boolean -deprecated_secure() -> -deprecated_secure
    158:158:java.lang.String -deprecated_value() -> -deprecated_value
    331:335:void <clinit>() -> <clinit>
    0:0:void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    43:96:void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> <init>
    43:43:java.util.regex.Pattern access$getDAY_OF_MONTH_PATTERN$cp() -> access$getDAY_OF_MONTH_PATTERN$cp
    43:43:java.util.regex.Pattern access$getMONTH_PATTERN$cp() -> access$getMONTH_PATTERN$cp
    43:43:java.util.regex.Pattern access$getTIME_PATTERN$cp() -> access$getTIME_PATTERN$cp
    43:43:java.util.regex.Pattern access$getYEAR_PATTERN$cp() -> access$getYEAR_PATTERN$cp
    66:66:java.lang.String domain() -> domain
    117:126:boolean equals(java.lang.Object) -> equals
    60:60:long expiresAt() -> expiresAt
    132:140:int hashCode() -> hashCode
    96:96:boolean hostOnly() -> hostOnly
    82:82:boolean httpOnly() -> httpOnly
    104:113:boolean matches(okhttp3.HttpUrl) -> matches
    46:46:java.lang.String name() -> name
    0:0:okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String) -> parse
    0:0:java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers) -> parseAll
    73:73:java.lang.String path() -> path
    85:85:boolean persistent() -> persistent
    76:76:boolean secure() -> secure
    144:144:java.lang.String toString() -> toString
    215:246:java.lang.String toString$okhttp(boolean) -> toString$okhttp
    49:49:java.lang.String value() -> value
okhttp3.Cookie$$ExternalSyntheticBackport0 -> okhttp3.Cookie$$ExternalSyntheticBackport0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:int okhttp3.Cookie$$InternalSyntheticBackport$1$b420cae2050b9b42b2bee39d535257074bbb3e690c0bebd452b3ef48f50cfea3$1.m(boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.Cookie$Builder -> okhttp3.Cookie$Builder:
# {"id":"sourceFile","fileName":"Cookie.kt"}
    254:259:void <init>() -> <init>
    316:325:okhttp3.Cookie build() -> build
    287:287:okhttp3.Cookie$Builder domain(java.lang.String) -> domain
    296:299:okhttp3.Cookie$Builder domain(java.lang.String,boolean) -> domain
    279:280:okhttp3.Cookie$Builder expiresAt(long) -> expiresAt
    293:293:okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String) -> hostOnlyDomain
    312:312:okhttp3.Cookie$Builder httpOnly() -> httpOnly
    266:267:okhttp3.Cookie$Builder name(java.lang.String) -> name
    303:304:okhttp3.Cookie$Builder path(java.lang.String) -> path
    308:308:okhttp3.Cookie$Builder secure() -> secure
    271:272:okhttp3.Cookie$Builder value(java.lang.String) -> value
okhttp3.Cookie$Companion -> okhttp3.Cookie$Companion:
# {"id":"sourceFile","fileName":"Cookie.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    329:329:void <init>() -> <init>
    329:329:boolean access$domainMatch(okhttp3.Cookie$Companion,java.lang.String,java.lang.String) -> access$domainMatch
    329:329:boolean access$pathMatch(okhttp3.Cookie$Companion,okhttp3.HttpUrl,java.lang.String) -> access$pathMatch
    555:555:int dateCharacterOffset(java.lang.String,int,int,boolean) -> dateCharacterOffset
    338:344:boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    368:368:okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String) -> parse
    371:481:okhttp3.Cookie parse$okhttp(long,okhttp3.HttpUrl,java.lang.String) -> parse$okhttp
    597:609:java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers) -> parseAll
    590:591:java.lang.String parseDomain(java.lang.String) -> parseDomain
    488:545:long parseExpires(java.lang.String,int,int) -> parseExpires
    574:581:long parseMaxAge(java.lang.String) -> parseMaxAge
    348:356:boolean pathMatch(okhttp3.HttpUrl,java.lang.String) -> pathMatch
okhttp3.CookieJar -> okhttp3.CookieJar:
# {"id":"sourceFile","fileName":"CookieJar.kt"}
    54:54:void <clinit>() -> <clinit>
okhttp3.CookieJar$Companion -> okhttp3.CookieJar$Companion:
# {"id":"sourceFile","fileName":"CookieJar.kt"}
    0:0:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
okhttp3.CookieJar$Companion$NoCookies -> okhttp3.CookieJar$Companion$NoCookies:
# {"id":"sourceFile","fileName":"CookieJar.kt"}
    55:55:void <init>() -> <init>
    60:60:java.util.List loadForRequest(okhttp3.HttpUrl) -> loadForRequest
    0:0:void saveFromResponse(okhttp3.HttpUrl,java.util.List) -> saveFromResponse
okhttp3.Credentials -> okhttp3.Credentials:
# {"id":"sourceFile","fileName":"Credentials.kt"}
    0:0:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    0:0:java.lang.String basic(java.lang.String,java.lang.String) -> basic
    30:32:java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset) -> basic
    25:28:java.lang.String basic$default(java.lang.String,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> basic$default
okhttp3.Dispatcher -> okhttp3.Dispatcher:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    239:239:java.util.concurrent.ExecutorService -deprecated_executorService() -> -deprecated_executorService
    38:108:void <init>() -> <init>
    110:111:void <init>(java.util.concurrent.ExecutorService) -> <init>
    143:152:void cancelAll() -> cancelAll
    115:125:void enqueue$okhttp(okhttp3.internal.connection.RealCall$AsyncCall) -> enqueue$okhttp
    192:193:void executed$okhttp(okhttp3.internal.connection.RealCall) -> executed$okhttp
    94:98:java.util.concurrent.ExecutorService executorService() -> executorService
    129:133:okhttp3.internal.connection.RealCall$AsyncCall findExistingCallWithHost(java.lang.String) -> findExistingCallWithHost
    208:216:void finished(java.util.Deque,java.lang.Object) -> finished
    197:198:void finished$okhttp(okhttp3.internal.connection.RealCall$AsyncCall) -> finished$okhttp
    203:203:void finished$okhttp(okhttp3.internal.connection.RealCall) -> finished$okhttp
    87:87:java.lang.Runnable getIdleCallback() -> getIdleCallback
    46:46:int getMaxRequests() -> getMaxRequests
    65:65:int getMaxRequestsPerHost() -> getMaxRequestsPerHost
    164:244:boolean promoteAndExecute() -> promoteAndExecute
    222:249:java.util.List queuedCalls() -> queuedCalls
    230:230:int queuedCallsCount() -> queuedCallsCount
    227:253:java.util.List runningCalls() -> runningCalls
    232:232:int runningCallsCount() -> runningCallsCount
    87:87:void setIdleCallback(java.lang.Runnable) -> setIdleCallback
    48:52:void setMaxRequests(int) -> setMaxRequests
    67:71:void setMaxRequestsPerHost(int) -> setMaxRequestsPerHost
okhttp3.Dns -> okhttp3.Dns:
# {"id":"sourceFile","fileName":"Dns.kt"}
    45:45:void <clinit>() -> <clinit>
okhttp3.Dns$Companion -> okhttp3.Dns$Companion:
# {"id":"sourceFile","fileName":"Dns.kt"}
    0:0:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
okhttp3.Dns$Companion$DnsSystem -> okhttp3.Dns$Companion$DnsSystem:
# {"id":"sourceFile","fileName":"Dns.kt"}
    46:46:void <init>() -> <init>
    49:52:java.util.List lookup(java.lang.String) -> lookup
okhttp3.EventListener -> okhttp3.EventListener:
# {"id":"sourceFile","fileName":"EventListener.kt"}
    475:475:void <clinit>() -> <clinit>
    61:61:void <init>() -> <init>
    0:0:void cacheConditionalHit(okhttp3.Call,okhttp3.Response) -> cacheConditionalHit
    0:0:void cacheHit(okhttp3.Call,okhttp3.Response) -> cacheHit
    0:0:void cacheMiss(okhttp3.Call) -> cacheMiss
    0:0:void callEnd(okhttp3.Call) -> callEnd
    0:0:void callFailed(okhttp3.Call,java.io.IOException) -> callFailed
    0:0:void callStart(okhttp3.Call) -> callStart
    0:0:void canceled(okhttp3.Call) -> canceled
    0:0:void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol) -> connectEnd
    0:0:void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException) -> connectFailed
    0:0:void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy) -> connectStart
    0:0:void connectionAcquired(okhttp3.Call,okhttp3.Connection) -> connectionAcquired
    0:0:void connectionReleased(okhttp3.Call,okhttp3.Connection) -> connectionReleased
    0:0:void dnsEnd(okhttp3.Call,java.lang.String,java.util.List) -> dnsEnd
    0:0:void dnsStart(okhttp3.Call,java.lang.String) -> dnsStart
    0:0:void proxySelectEnd(okhttp3.Call,okhttp3.HttpUrl,java.util.List) -> proxySelectEnd
    0:0:void proxySelectStart(okhttp3.Call,okhttp3.HttpUrl) -> proxySelectStart
    0:0:void requestBodyEnd(okhttp3.Call,long) -> requestBodyEnd
    0:0:void requestBodyStart(okhttp3.Call) -> requestBodyStart
    0:0:void requestFailed(okhttp3.Call,java.io.IOException) -> requestFailed
    0:0:void requestHeadersEnd(okhttp3.Call,okhttp3.Request) -> requestHeadersEnd
    0:0:void requestHeadersStart(okhttp3.Call) -> requestHeadersStart
    0:0:void responseBodyEnd(okhttp3.Call,long) -> responseBodyEnd
    0:0:void responseBodyStart(okhttp3.Call) -> responseBodyStart
    0:0:void responseFailed(okhttp3.Call,java.io.IOException) -> responseFailed
    0:0:void responseHeadersEnd(okhttp3.Call,okhttp3.Response) -> responseHeadersEnd
    0:0:void responseHeadersStart(okhttp3.Call) -> responseHeadersStart
    0:0:void satisfactionFailure(okhttp3.Call,okhttp3.Response) -> satisfactionFailure
    0:0:void secureConnectEnd(okhttp3.Call,okhttp3.Handshake) -> secureConnectEnd
    0:0:void secureConnectStart(okhttp3.Call) -> secureConnectStart
okhttp3.EventListener$Companion -> okhttp3.EventListener$Companion:
# {"id":"sourceFile","fileName":"EventListener.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    473:473:void <init>() -> <init>
okhttp3.EventListener$Companion$NONE$1 -> okhttp3.EventListener$Companion$NONE$1:
# {"id":"sourceFile","fileName":"EventListener.kt"}
    475:475:void <init>() -> <init>
okhttp3.EventListener$Factory -> okhttp3.EventListener$Factory:
# {"id":"sourceFile","fileName":"EventListener.kt"}
okhttp3.FormBody -> okhttp3.FormBody:
# {"id":"sourceFile","fileName":"FormBody.kt"}
    44:44:int -deprecated_size() -> -deprecated_size
    124:124:void <clinit>() -> <clinit>
    31:33:void <init>(java.util.List,java.util.List) -> <init>
    56:56:long contentLength() -> contentLength
    54:54:okhttp3.MediaType contentType() -> contentType
    46:46:java.lang.String encodedName(int) -> encodedName
    50:50:java.lang.String encodedValue(int) -> encodedValue
    48:48:java.lang.String name(int) -> name
    37:37:int size() -> size
    52:52:java.lang.String value(int) -> value
    71:82:long writeOrCountBytes(okio.BufferedSink,boolean) -> writeOrCountBytes
    60:60:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.FormBody$Builder -> okhttp3.FormBody$Builder:
# {"id":"sourceFile","fileName":"FormBody.kt"}
    0:0:void <init>() -> <init>
    88:90:void <init>(java.nio.charset.Charset) -> <init>
    88:88:void <init>(java.nio.charset.Charset,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    93:101:okhttp3.FormBody$Builder add(java.lang.String,java.lang.String) -> add
    106:116:okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String) -> addEncoded
    120:120:okhttp3.FormBody build() -> build
okhttp3.FormBody$Companion -> okhttp3.FormBody$Companion:
# {"id":"sourceFile","fileName":"FormBody.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    123:123:void <init>() -> <init>
okhttp3.Handshake -> okhttp3.Handshake:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    71:71:okhttp3.CipherSuite -deprecated_cipherSuite() -> -deprecated_cipherSuite
    97:97:java.util.List -deprecated_localCertificates() -> -deprecated_localCertificates
    109:109:java.security.Principal -deprecated_localPrincipal() -> -deprecated_localPrincipal
    78:78:java.util.List -deprecated_peerCertificates() -> -deprecated_peerCertificates
    90:90:java.security.Principal -deprecated_peerPrincipal() -> -deprecated_peerPrincipal
    64:64:okhttp3.TlsVersion -deprecated_tlsVersion() -> -deprecated_tlsVersion
    0:0:void <clinit>() -> <clinit>
    34:51:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0) -> <init>
    42:42:okhttp3.CipherSuite cipherSuite() -> cipherSuite
    112:116:boolean equals(java.lang.Object) -> equals
    0:0:okhttp3.Handshake get(javax.net.ssl.SSLSession) -> get
    0:0:okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List) -> get
    139:140:java.lang.String getName(java.security.cert.Certificate) -> getName
    121:124:int hashCode() -> hashCode
    45:45:java.util.List localCertificates() -> localCertificates
    102:102:java.security.Principal localPrincipal() -> localPrincipal
    51:51:java.util.List peerCertificates() -> peerCertificates
    83:83:java.security.Principal peerPrincipal() -> peerPrincipal
    39:39:okhttp3.TlsVersion tlsVersion() -> tlsVersion
    129:207:java.lang.String toString() -> toString
okhttp3.Handshake$Companion -> okhttp3.Handshake$Companion:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    184:184:okhttp3.Handshake -deprecated_get(javax.net.ssl.SSLSession) -> -deprecated_get
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    143:143:void <init>() -> <init>
    148:167:okhttp3.Handshake get(javax.net.ssl.SSLSession) -> get
    193:194:okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List) -> get
    172:174:java.util.List toImmutableList(java.security.cert.Certificate[]) -> toImmutableList
okhttp3.Handshake$Companion$get$1 -> okhttp3.Handshake$Companion$get$1:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    0:0:void <init>(java.util.List) -> <init>
    194:194:java.lang.Object invoke() -> invoke
    195:195:java.util.List invoke() -> invoke
okhttp3.Handshake$Companion$handshake$1 -> okhttp3.Handshake$Companion$handshake$1:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    0:0:void <init>(java.util.List) -> <init>
    167:167:java.lang.Object invoke() -> invoke
    167:167:java.util.List invoke() -> invoke
okhttp3.Handshake$peerCertificates$2 -> okhttp3.Handshake$peerCertificates$2:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function0) -> <init>
    51:51:java.lang.Object invoke() -> invoke
    53:55:java.util.List invoke() -> invoke
okhttp3.Headers -> okhttp3.Headers:
# {"id":"sourceFile","fileName":"Headers.kt"}
    82:82:int -deprecated_size() -> -deprecated_size
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    50:52:void <init>(java.lang.String[]) -> <init>
    123:126:long byteCount() -> byteCount
    179:179:boolean equals(java.lang.Object) -> equals
    55:55:java.lang.String get(java.lang.String) -> get
    61:61:java.util.Date getDate(java.lang.String) -> getDate
    69:70:java.time.Instant getInstant(java.lang.String) -> getInstant
    182:182:int hashCode() -> hashCode
    133:133:java.util.Iterator iterator() -> iterator
    85:85:java.lang.String name(int) -> name
    92:96:java.util.Set names() -> names
    137:138:okhttp3.Headers$Builder newBuilder() -> newBuilder
    0:0:okhttp3.Headers of(java.util.Map) -> of
    0:0:okhttp3.Headers of(java.lang.String[]) -> of
    75:75:int size() -> size
    211:219:java.util.Map toMultimap() -> toMultimap
    198:205:java.lang.String toString() -> toString
    88:88:java.lang.String value(int) -> value
    102:111:java.util.List values(java.lang.String) -> values
okhttp3.Headers$$ExternalSyntheticApiModelOutline0 -> okhttp3.Headers$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.time.Instant okhttp3.Headers$$InternalSyntheticApiModelOutline$1$d8c2313840d1052baa3b620f54352140a62f524e1ed7470b7dfcae74f5048a31$0.m(java.util.Date) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.Headers$Builder -> okhttp3.Headers$Builder:
# {"id":"sourceFile","fileName":"Headers.kt"}
    224:225:void <init>() -> <init>
    251:253:okhttp3.Headers$Builder add(java.lang.String) -> add
    260:262:okhttp3.Headers$Builder add(java.lang.String,java.lang.String) -> add
    288:288:okhttp3.Headers$Builder add(java.lang.String,java.util.Date) -> add
    297:297:okhttp3.Headers$Builder add(java.lang.String,java.time.Instant) -> add
    278:279:okhttp3.Headers$Builder addAll(okhttp3.Headers) -> addAll
    232:244:okhttp3.Headers$Builder addLenient$okhttp(java.lang.String) -> addLenient$okhttp
    322:323:okhttp3.Headers$Builder addLenient$okhttp(java.lang.String,java.lang.String) -> addLenient$okhttp
    270:271:okhttp3.Headers$Builder addUnsafeNonAscii(java.lang.String,java.lang.String) -> addUnsafeNonAscii
    359:461:okhttp3.Headers build() -> build
    351:353:java.lang.String get(java.lang.String) -> get
    225:225:java.util.List getNamesAndValues$okhttp() -> getNamesAndValues$okhttp
    328:331:okhttp3.Headers$Builder removeAll(java.lang.String) -> removeAll
    305:305:okhttp3.Headers$Builder set(java.lang.String,java.util.Date) -> set
    314:314:okhttp3.Headers$Builder set(java.lang.String,java.time.Instant) -> set
    343:346:okhttp3.Headers$Builder set(java.lang.String,java.lang.String) -> set
okhttp3.Headers$Builder$$ExternalSyntheticApiModelOutline0 -> okhttp3.Headers$Builder$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:long okhttp3.Headers$Builder$$InternalSyntheticApiModelOutline$1$d9b61e1d4f8737faf1c97060989919f171de12382f76d0cef57be3eeb9fc7ef8$0.m(java.time.Instant) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.Headers$Companion -> okhttp3.Headers$Companion:
# {"id":"sourceFile","fileName":"Headers.kt"}
    405:405:okhttp3.Headers -deprecated_of(java.lang.String[]) -> -deprecated_of
    434:434:okhttp3.Headers -deprecated_of(java.util.Map) -> -deprecated_of
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    362:362:void <init>() -> <init>
    362:362:void access$checkName(okhttp3.Headers$Companion,java.lang.String) -> access$checkName
    362:362:void access$checkValue(okhttp3.Headers$Companion,java.lang.String,java.lang.String) -> access$checkValue
    362:362:java.lang.String access$get(okhttp3.Headers$Companion,java.lang.String[],java.lang.String) -> access$get
    438:442:void checkName(java.lang.String) -> checkName
    448:452:void checkValue(java.lang.String,java.lang.String) -> checkValue
    364:366:java.lang.String get(java.lang.String[],java.lang.String) -> get
    379:396:okhttp3.Headers of(java.lang.String[]) -> of
    413:425:okhttp3.Headers of(java.util.Map) -> of
okhttp3.HttpUrl -> okhttp3.HttpUrl:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    900:900:java.lang.String -deprecated_encodedFragment() -> -deprecated_encodedFragment
    816:816:java.lang.String -deprecated_encodedPassword() -> -deprecated_encodedPassword
    851:851:java.lang.String -deprecated_encodedPath() -> -deprecated_encodedPath
    858:858:java.util.List -deprecated_encodedPathSegments() -> -deprecated_encodedPathSegments
    872:872:java.lang.String -deprecated_encodedQuery() -> -deprecated_encodedQuery
    802:802:java.lang.String -deprecated_encodedUsername() -> -deprecated_encodedUsername
    907:907:java.lang.String -deprecated_fragment() -> -deprecated_fragment
    830:830:java.lang.String -deprecated_host() -> -deprecated_host
    823:823:java.lang.String -deprecated_password() -> -deprecated_password
    865:865:java.util.List -deprecated_pathSegments() -> -deprecated_pathSegments
    844:844:int -deprecated_pathSize() -> -deprecated_pathSize
    837:837:int -deprecated_port() -> -deprecated_port
    879:879:java.lang.String -deprecated_query() -> -deprecated_query
    893:893:java.util.Set -deprecated_queryParameterNames() -> -deprecated_queryParameterNames
    886:886:int -deprecated_querySize() -> -deprecated_querySize
    795:795:java.lang.String -deprecated_scheme() -> -deprecated_scheme
    788:788:java.net.URI -deprecated_uri() -> -deprecated_uri
    781:781:java.net.URL -deprecated_url() -> -deprecated_url
    809:809:java.lang.String -deprecated_username() -> -deprecated_username
    1558:1558:void <clinit>() -> <clinit>
    288:384:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,java.util.List,java.lang.String,java.lang.String) -> <init>
    288:288:char[] access$getHEX_DIGITS$cp() -> access$getHEX_DIGITS$cp
    0:0:int defaultPort(java.lang.String) -> defaultPort
    689:691:java.lang.String encodedFragment() -> encodedFragment
    453:456:java.lang.String encodedPassword() -> encodedPassword
    483:485:java.lang.String encodedPath() -> encodedPath
    500:507:java.util.List encodedPathSegments() -> encodedPathSegments
    527:530:java.lang.String encodedQuery() -> encodedQuery
    435:438:java.lang.String encodedUsername() -> encodedUsername
    744:744:boolean equals(java.lang.Object) -> equals
    379:379:java.lang.String fragment() -> fragment
    0:0:okhttp3.HttpUrl get(java.lang.String) -> get
    0:0:okhttp3.HttpUrl get(java.net.URI) -> get
    0:0:okhttp3.HttpUrl get(java.net.URL) -> get
    747:747:int hashCode() -> hashCode
    334:334:java.lang.String host() -> host
    384:384:boolean isHttps() -> isHttps
    717:727:okhttp3.HttpUrl$Builder newBuilder() -> newBuilder
    737:737:okhttp3.HttpUrl$Builder newBuilder(java.lang.String) -> newBuilder
    0:0:okhttp3.HttpUrl parse(java.lang.String) -> parse
    314:314:java.lang.String password() -> password
    359:359:java.util.List pathSegments() -> pathSegments
    469:469:int pathSize() -> pathSize
    347:347:int port() -> port
    548:551:java.lang.String query() -> query
    585:588:java.lang.String queryParameter(java.lang.String) -> queryParameter
    654:655:java.lang.String queryParameterName(int) -> queryParameterName
    608:613:java.util.Set queryParameterNames() -> queryParameterNames
    672:673:java.lang.String queryParameterValue(int) -> queryParameterValue
    630:637:java.util.List queryParameterValues(java.lang.String) -> queryParameterValues
    569:569:int querySize() -> querySize
    700:704:java.lang.String redact() -> redact
    711:711:okhttp3.HttpUrl resolve(java.lang.String) -> resolve
    290:290:java.lang.String scheme() -> scheme
    749:749:java.lang.String toString() -> toString
    769:772:java.lang.String topPrivateDomain() -> topPrivateDomain
    409:418:java.net.URI uri() -> uri
    389:391:java.net.URL url() -> url
    302:302:java.lang.String username() -> username
okhttp3.HttpUrl$Builder -> okhttp3.HttpUrl$Builder:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    0:0:void <clinit>() -> <clinit>
    909:920:void <init>() -> <init>
    986:986:okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String) -> addEncodedPathSegment
    995:995:okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String) -> addEncodedPathSegments
    1068:1074:okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String) -> addEncodedQueryParameter
    976:976:okhttp3.HttpUrl$Builder addPathSegment(java.lang.String) -> addPathSegment
    983:983:okhttp3.HttpUrl$Builder addPathSegments(java.lang.String) -> addPathSegments
    1000:1004:okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean) -> addPathSegments
    1055:1060:okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String) -> addQueryParameter
    1174:1877:okhttp3.HttpUrl build() -> build
    972:972:int effectivePort() -> effectivePort
    1130:1130:okhttp3.HttpUrl$Builder encodedFragment(java.lang.String) -> encodedFragment
    950:950:okhttp3.HttpUrl$Builder encodedPassword(java.lang.String) -> encodedPassword
    1034:1035:okhttp3.HttpUrl$Builder encodedPath(java.lang.String) -> encodedPath
    1046:1050:okhttp3.HttpUrl$Builder encodedQuery(java.lang.String) -> encodedQuery
    939:939:okhttp3.HttpUrl$Builder encodedUsername(java.lang.String) -> encodedUsername
    1123:1123:okhttp3.HttpUrl$Builder fragment(java.lang.String) -> fragment
    917:917:java.lang.String getEncodedFragment$okhttp() -> getEncodedFragment$okhttp
    912:912:java.lang.String getEncodedPassword$okhttp() -> getEncodedPassword$okhttp
    915:915:java.util.List getEncodedPathSegments$okhttp() -> getEncodedPathSegments$okhttp
    916:916:java.util.List getEncodedQueryNamesAndValues$okhttp() -> getEncodedQueryNamesAndValues$okhttp
    911:911:java.lang.String getEncodedUsername$okhttp() -> getEncodedUsername$okhttp
    913:913:java.lang.String getHost$okhttp() -> getHost$okhttp
    914:914:int getPort$okhttp() -> getPort$okhttp
    910:910:java.lang.String getScheme$okhttp() -> getScheme$okhttp
    961:963:okhttp3.HttpUrl$Builder host(java.lang.String) -> host
    1452:1452:boolean isDot(java.lang.String) -> isDot
    1456:1459:boolean isDotDot(java.lang.String) -> isDotDot
    1239:1379:okhttp3.HttpUrl$Builder parse$okhttp(okhttp3.HttpUrl,java.lang.String) -> parse$okhttp
    946:946:okhttp3.HttpUrl$Builder password(java.lang.String) -> password
    1473:1479:void pop() -> pop
    967:968:okhttp3.HttpUrl$Builder port(int) -> port
    1428:1447:void push(java.lang.String,int,int,boolean,boolean) -> push
    1039:1042:okhttp3.HttpUrl$Builder query(java.lang.String) -> query
    1142:1164:okhttp3.HttpUrl$Builder reencodeForUri$okhttp() -> reencodeForUri$okhttp
    1110:1115:void removeAllCanonicalQueryParameters(java.lang.String) -> removeAllCanonicalQueryParameters
    1101:1102:okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String) -> removeAllEncodedQueryParameters
    1092:1097:okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String) -> removeAllQueryParameters
    1027:1029:okhttp3.HttpUrl$Builder removePathSegment(int) -> removePathSegment
    1398:1414:void resolvePath(java.lang.String,int,int) -> resolvePath
    928:930:okhttp3.HttpUrl$Builder scheme(java.lang.String) -> scheme
    917:917:void setEncodedFragment$okhttp(java.lang.String) -> setEncodedFragment$okhttp
    912:912:void setEncodedPassword$okhttp(java.lang.String) -> setEncodedPassword$okhttp
    1016:1022:okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String) -> setEncodedPathSegment
    916:916:void setEncodedQueryNamesAndValues$okhttp(java.util.List) -> setEncodedQueryNamesAndValues$okhttp
    1087:1088:okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String) -> setEncodedQueryParameter
    911:911:void setEncodedUsername$okhttp(java.lang.String) -> setEncodedUsername$okhttp
    913:913:void setHost$okhttp(java.lang.String) -> setHost$okhttp
    1008:1012:okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String) -> setPathSegment
    914:914:void setPort$okhttp(int) -> setPort$okhttp
    1082:1083:okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String) -> setQueryParameter
    910:910:void setScheme$okhttp(java.lang.String) -> setScheme$okhttp
    1188:1233:java.lang.String toString() -> toString
    935:935:okhttp3.HttpUrl$Builder username(java.lang.String) -> username
okhttp3.HttpUrl$Builder$Companion -> okhttp3.HttpUrl$Builder$Companion:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    1483:1483:void <init>() -> <init>
    1483:1483:int access$parsePort(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$parsePort
    1483:1483:int access$portColonOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$portColonOffset
    1483:1483:int access$schemeDelimiterOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$schemeDelimiterOffset
    1483:1483:int access$slashCount(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$slashCount
    1546:1547:int parsePort(java.lang.String,int,int) -> parsePort
    1530:1533:int portColonOffset(java.lang.String,int,int) -> portColonOffset
    1493:1497:int schemeDelimiterOffset(java.lang.String,int,int) -> schemeDelimiterOffset
    1516:1516:int slashCount(java.lang.String,int,int) -> slashCount
okhttp3.HttpUrl$Companion -> okhttp3.HttpUrl$Companion:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    1666:1666:okhttp3.HttpUrl -deprecated_get(java.lang.String) -> -deprecated_get
    1684:1684:okhttp3.HttpUrl -deprecated_get(java.net.URL) -> -deprecated_get
    1693:1693:okhttp3.HttpUrl -deprecated_get(java.net.URI) -> -deprecated_get
    1675:1675:okhttp3.HttpUrl -deprecated_parse(java.lang.String) -> -deprecated_parse
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    1556:1556:void <init>() -> <init>
    1784:1812:java.lang.String canonicalize$okhttp(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> canonicalize$okhttp
    1771:1773:java.lang.String canonicalize$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset,int,java.lang.Object) -> canonicalize$okhttp$default
    1575:1576:int defaultPort(java.lang.String) -> defaultPort
    1634:1634:okhttp3.HttpUrl get(java.lang.String) -> get
    1654:1654:okhttp3.HttpUrl get(java.net.URL) -> get
    1657:1657:okhttp3.HttpUrl get(java.net.URI) -> get
    1746:1748:boolean isPercentEncoded(java.lang.String,int,int) -> isPercentEncoded
    1643:1643:okhttp3.HttpUrl parse(java.lang.String) -> parse
    1701:1712:java.lang.String percentDecode$okhttp(java.lang.String,int,int,boolean) -> percentDecode$okhttp
    1695:1697:java.lang.String percentDecode$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,boolean,int,java.lang.Object) -> percentDecode$okhttp$default
    1583:1585:void toPathString$okhttp(java.util.List,java.lang.StringBuilder) -> toPathString$okhttp
    1609:1621:java.util.List toQueryNamesAndValues$okhttp(java.lang.String) -> toQueryNamesAndValues$okhttp
    1591:1598:void toQueryString$okhttp(java.util.List,java.lang.StringBuilder) -> toQueryString$okhttp
    1830:1864:void writeCanonicalized(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> writeCanonicalized
    1724:1740:void writePercentDecoded(okio.Buffer,java.lang.String,int,int,boolean) -> writePercentDecoded
okhttp3.Interceptor -> okhttp3.Interceptor:
# {"id":"sourceFile","fileName":"Interceptor.kt"}
    0:0:void <clinit>() -> <clinit>
okhttp3.Interceptor$Chain -> okhttp3.Interceptor$Chain:
# {"id":"sourceFile","fileName":"Interceptor.kt"}
okhttp3.Interceptor$Companion -> okhttp3.Interceptor$Companion:
# {"id":"sourceFile","fileName":"Interceptor.kt"}
    0:0:void <clinit>() -> <clinit>
    63:63:void <init>() -> <init>
    75:75:okhttp3.Interceptor invoke(kotlin.jvm.functions.Function1) -> invoke
okhttp3.Interceptor$Companion$invoke$1 -> okhttp3.Interceptor$Companion$invoke$1:
# {"id":"sourceFile","fileName":"Interceptor.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function1) -> <init>
    75:75:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.MediaType -> okhttp3.MediaType:
# {"id":"sourceFile","fileName":"MediaType.kt"}
    84:84:java.lang.String -deprecated_subtype() -> -deprecated_subtype
    77:77:java.lang.String -deprecated_type() -> -deprecated_type
    99:100:void <clinit>() -> <clinit>
    0:0:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    28:42:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    28:28:java.util.regex.Pattern access$getPARAMETER$cp() -> access$getPARAMETER$cp
    28:28:java.util.regex.Pattern access$getTYPE_SUBTYPE$cp() -> access$getTYPE_SUBTYPE$cp
    0:0:java.nio.charset.Charset charset() -> charset
    51:53:java.nio.charset.Charset charset(java.nio.charset.Charset) -> charset
    50:50:java.nio.charset.Charset charset$default(okhttp3.MediaType,java.nio.charset.Charset,int,java.lang.Object) -> charset$default
    92:92:boolean equals(java.lang.Object) -> equals
    0:0:okhttp3.MediaType get(java.lang.String) -> get
    94:94:int hashCode() -> hashCode
    64:66:java.lang.String parameter(java.lang.String) -> parameter
    0:0:okhttp3.MediaType parse(java.lang.String) -> parse
    39:39:java.lang.String subtype() -> subtype
    90:90:java.lang.String toString() -> toString
    34:34:java.lang.String type() -> type
okhttp3.MediaType$Companion -> okhttp3.MediaType$Companion:
# {"id":"sourceFile","fileName":"MediaType.kt"}
    169:169:okhttp3.MediaType -deprecated_get(java.lang.String) -> -deprecated_get
    178:178:okhttp3.MediaType -deprecated_parse(java.lang.String) -> -deprecated_parse
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    96:96:void <init>() -> <init>
    110:184:okhttp3.MediaType get(java.lang.String) -> get
    156:156:okhttp3.MediaType parse(java.lang.String) -> parse
okhttp3.MultipartBody -> okhttp3.MultipartBody:
# {"id":"sourceFile","fileName":"MultipartBody.kt"}
    65:65:java.lang.String -deprecated_boundary() -> -deprecated_boundary
    79:79:java.util.List -deprecated_parts() -> -deprecated_parts
    72:72:int -deprecated_size() -> -deprecated_size
    58:58:okhttp3.MediaType -deprecated_type() -> -deprecated_type
    284:319:void <clinit>() -> <clinit>
    34:39:void <init>(okio.ByteString,okhttp3.MediaType,java.util.List) -> <init>
    42:42:java.lang.String boundary() -> boundary
    83:86:long contentLength() -> contentLength
    51:51:okhttp3.MediaType contentType() -> contentType
    48:48:okhttp3.MultipartBody$Part part(int) -> part
    36:36:java.util.List parts() -> parts
    46:46:int size() -> size
    35:35:okhttp3.MediaType type() -> type
    112:170:long writeOrCountBytes(okio.BufferedSink,boolean) -> writeOrCountBytes
    93:93:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.MultipartBody$Builder -> okhttp3.MultipartBody$Builder:
# {"id":"sourceFile","fileName":"MultipartBody.kt"}
    0:0:void <init>() -> <init>
    231:234:void <init>(java.lang.String) -> <init>
    231:231:void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    257:257:okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String) -> addFormDataPart
    262:262:okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody) -> addFormDataPart
    247:247:okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody) -> addPart
    252:252:okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody) -> addPart
    267:267:okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part) -> addPart
    272:273:okhttp3.MultipartBody build() -> build
    241:242:okhttp3.MultipartBody$Builder setType(okhttp3.MediaType) -> setType
okhttp3.MultipartBody$Companion -> okhttp3.MultipartBody$Companion:
# {"id":"sourceFile","fileName":"MultipartBody.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    277:277:void <init>() -> <init>
    332:341:void appendQuotedString$okhttp(java.lang.StringBuilder,java.lang.String) -> appendQuotedString$okhttp
okhttp3.MultipartBody$Part -> okhttp3.MultipartBody$Part:
# {"id":"sourceFile","fileName":"MultipartBody.kt"}
    193:193:okhttp3.RequestBody -deprecated_body() -> -deprecated_body
    186:186:okhttp3.Headers -deprecated_headers() -> -deprecated_headers
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(okhttp3.Headers,okhttp3.RequestBody,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    176:178:void <init>(okhttp3.Headers,okhttp3.RequestBody) -> <init>
    178:178:okhttp3.RequestBody body() -> body
    0:0:okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody) -> create
    0:0:okhttp3.MultipartBody$Part create(okhttp3.RequestBody) -> create
    0:0:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String) -> createFormData
    0:0:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody) -> createFormData
    177:177:okhttp3.Headers headers() -> headers
okhttp3.MultipartBody$Part$Companion -> okhttp3.MultipartBody$Part$Companion:
# {"id":"sourceFile","fileName":"MultipartBody.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    195:195:void <init>() -> <init>
    197:197:okhttp3.MultipartBody$Part create(okhttp3.RequestBody) -> create
    201:203:okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody) -> create
    208:208:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String) -> createFormData
    212:226:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody) -> createFormData
okhttp3.MultipartReader -> okhttp3.MultipartReader:
# {"id":"sourceFile","fileName":"MultipartReader.kt"}
    202:206:void <clinit>() -> <clinit>
    57:74:void <init>(okio.BufferedSource,java.lang.String) -> <init>
    84:87:void <init>(okhttp3.ResponseBody) -> <init>
    57:57:long access$currentPartBytesRemaining(okhttp3.MultipartReader,long) -> access$currentPartBytesRemaining
    57:57:okio.Options access$getAfterBoundaryOptions$cp() -> access$getAfterBoundaryOptions$cp
    57:57:okhttp3.MultipartReader$PartSource access$getCurrentPart$p(okhttp3.MultipartReader) -> access$getCurrentPart$p
    57:57:okio.BufferedSource access$getSource$p(okhttp3.MultipartReader) -> access$getSource$p
    57:57:void access$setCurrentPart$p(okhttp3.MultipartReader,okhttp3.MultipartReader$PartSource) -> access$setCurrentPart$p
    59:59:java.lang.String boundary() -> boundary
    188:191:void close() -> close
    178:182:long currentPartBytesRemaining(long) -> currentPartBytesRemaining
    92:142:okhttp3.MultipartReader$Part nextPart() -> nextPart
okhttp3.MultipartReader$Companion -> okhttp3.MultipartReader$Companion:
# {"id":"sourceFile","fileName":"MultipartReader.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    200:200:void <init>() -> <init>
    202:202:okio.Options getAfterBoundaryOptions() -> getAfterBoundaryOptions
okhttp3.MultipartReader$Part -> okhttp3.MultipartReader$Part:
# {"id":"sourceFile","fileName":"MultipartReader.kt"}
    195:197:void <init>(okhttp3.Headers,okio.BufferedSource) -> <init>
    197:197:okio.BufferedSource body() -> body
    0:0:void close() -> close
    196:196:okhttp3.Headers headers() -> headers
okhttp3.MultipartReader$PartSource -> okhttp3.MultipartReader$PartSource:
# {"id":"sourceFile","fileName":"MultipartReader.kt"}
    146:147:void <init>(okhttp3.MultipartReader) -> <init>
    150:151:void close() -> close
    156:237:long read(okio.Buffer,long) -> read
    169:169:okio.Timeout timeout() -> timeout
okhttp3.OkHttp -> okhttp3.OkHttp:
# {"id":"sourceFile","fileName":"OkHttp.kt"}
    0:0:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
okhttp3.OkHttpClient -> okhttp3.OkHttpClient:
# {"id":"sourceFile","fileName":"OkHttpClient.kt"}
    334:334:okhttp3.Authenticator -deprecated_authenticator() -> -deprecated_authenticator
    362:362:okhttp3.Cache -deprecated_cache() -> -deprecated_cache
    439:439:int -deprecated_callTimeoutMillis() -> -deprecated_callTimeoutMillis
    432:432:okhttp3.CertificatePinner -deprecated_certificatePinner() -> -deprecated_certificatePinner
    446:446:int -deprecated_connectTimeoutMillis() -> -deprecated_connectTimeoutMillis
    299:299:okhttp3.ConnectionPool -deprecated_connectionPool() -> -deprecated_connectionPool
    411:411:java.util.List -deprecated_connectionSpecs() -> -deprecated_connectionSpecs
    355:355:okhttp3.CookieJar -deprecated_cookieJar() -> -deprecated_cookieJar
    292:292:okhttp3.Dispatcher -deprecated_dispatcher() -> -deprecated_dispatcher
    369:369:okhttp3.Dns -deprecated_dns() -> -deprecated_dns
    320:320:okhttp3.EventListener$Factory -deprecated_eventListenerFactory() -> -deprecated_eventListenerFactory
    341:341:boolean -deprecated_followRedirects() -> -deprecated_followRedirects
    348:348:boolean -deprecated_followSslRedirects() -> -deprecated_followSslRedirects
    425:425:javax.net.ssl.HostnameVerifier -deprecated_hostnameVerifier() -> -deprecated_hostnameVerifier
    306:306:java.util.List -deprecated_interceptors() -> -deprecated_interceptors
    313:313:java.util.List -deprecated_networkInterceptors() -> -deprecated_networkInterceptors
    467:467:int -deprecated_pingIntervalMillis() -> -deprecated_pingIntervalMillis
    418:418:java.util.List -deprecated_protocols() -> -deprecated_protocols
    376:376:java.net.Proxy -deprecated_proxy() -> -deprecated_proxy
    390:390:okhttp3.Authenticator -deprecated_proxyAuthenticator() -> -deprecated_proxyAuthenticator
    383:383:java.net.ProxySelector -deprecated_proxySelector() -> -deprecated_proxySelector
    453:453:int -deprecated_readTimeoutMillis() -> -deprecated_readTimeoutMillis
    327:327:boolean -deprecated_retryOnConnectionFailure() -> -deprecated_retryOnConnectionFailure
    397:397:javax.net.SocketFactory -deprecated_socketFactory() -> -deprecated_socketFactory
    404:404:javax.net.ssl.SSLSocketFactory -deprecated_sslSocketFactory() -> -deprecated_sslSocketFactory
    460:460:int -deprecated_writeTimeoutMillis() -> -deprecated_writeTimeoutMillis
    1073:1076:void <clinit>() -> <clinit>
    121:1081:void <init>(okhttp3.OkHttpClient$Builder) -> <init>
    222:222:void <init>() -> <init>
    121:121:java.util.List access$getDEFAULT_CONNECTION_SPECS$cp() -> access$getDEFAULT_CONNECTION_SPECS$cp
    121:121:java.util.List access$getDEFAULT_PROTOCOLS$cp() -> access$getDEFAULT_PROTOCOLS$cp
    121:121:javax.net.ssl.SSLSocketFactory access$getSslSocketFactoryOrNull$p(okhttp3.OkHttpClient) -> access$getSslSocketFactoryOrNull$p
    151:151:okhttp3.Authenticator authenticator() -> authenticator
    159:159:okhttp3.Cache cache() -> cache
    199:199:int callTimeoutMillis() -> callTimeoutMillis
    193:193:okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner() -> certificateChainCleaner
    191:191:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    121:121:java.lang.Object clone() -> clone
    202:202:int connectTimeoutMillis() -> connectTimeoutMillis
    127:127:okhttp3.ConnectionPool connectionPool() -> connectionPool
    184:184:java.util.List connectionSpecs() -> connectionSpecs
    157:157:okhttp3.CookieJar cookieJar() -> cookieJar
    125:125:okhttp3.Dispatcher dispatcher() -> dispatcher
    161:161:okhttp3.Dns dns() -> dns
    145:145:okhttp3.EventListener$Factory eventListenerFactory() -> eventListenerFactory
    153:153:boolean followRedirects() -> followRedirects
    155:155:boolean followSslRedirects() -> followSslRedirects
    220:220:okhttp3.internal.connection.RouteDatabase getRouteDatabase() -> getRouteDatabase
    189:189:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    134:134:java.util.List interceptors() -> interceptors
    218:218:long minWebSocketMessageToCompress() -> minWebSocketMessageToCompress
    142:142:java.util.List networkInterceptors() -> networkInterceptors
    285:285:okhttp3.OkHttpClient$Builder newBuilder() -> newBuilder
    268:268:okhttp3.Call newCall(okhttp3.Request) -> newCall
    272:281:okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener) -> newWebSocket
    211:211:int pingIntervalMillis() -> pingIntervalMillis
    187:187:java.util.List protocols() -> protocols
    163:163:java.net.Proxy proxy() -> proxy
    172:172:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    165:165:java.net.ProxySelector proxySelector() -> proxySelector
    205:205:int readTimeoutMillis() -> readTimeoutMillis
    148:148:boolean retryOnConnectionFailure() -> retryOnConnectionFailure
    175:175:javax.net.SocketFactory socketFactory() -> socketFactory
    180:180:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    248:1084:void verifyClientState() -> verifyClientState
    208:208:int writeTimeoutMillis() -> writeTimeoutMillis
    182:182:javax.net.ssl.X509TrustManager x509TrustManager() -> x509TrustManager
okhttp3.OkHttpClient$Builder -> okhttp3.OkHttpClient$Builder:
# {"id":"sourceFile","fileName":"OkHttpClient.kt"}
    563:563:okhttp3.OkHttpClient$Builder -addInterceptor(kotlin.jvm.functions.Function1) -> -addInterceptor
    578:578:okhttp3.OkHttpClient$Builder -addNetworkInterceptor(kotlin.jvm.functions.Function1) -> -addNetworkInterceptor
    469:498:void <init>() -> <init>
    501:531:void <init>(okhttp3.OkHttpClient) -> <init>
    558:558:okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor) -> addInterceptor
    573:573:okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor) -> addNetworkInterceptor
    629:629:okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator) -> authenticator
    1069:1069:okhttp3.OkHttpClient build() -> build
    659:659:okhttp3.OkHttpClient$Builder cache(okhttp3.Cache) -> cache
    922:922:okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit) -> callTimeout
    937:937:okhttp3.OkHttpClient$Builder callTimeout(java.time.Duration) -> callTimeout
    904:908:okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner) -> certificatePinner
    948:948:okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit) -> connectTimeout
    960:960:okhttp3.OkHttpClient$Builder connectTimeout(java.time.Duration) -> connectTimeout
    547:547:okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool) -> connectionPool
    816:820:okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List) -> connectionSpecs
    654:654:okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar) -> cookieJar
    538:538:okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher) -> dispatcher
    668:671:okhttp3.OkHttpClient$Builder dns(okhttp3.Dns) -> dns
    587:587:okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener) -> eventListener
    597:597:okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory) -> eventListenerFactory
    634:634:okhttp3.OkHttpClient$Builder followRedirects(boolean) -> followRedirects
    644:644:okhttp3.OkHttpClient$Builder followSslRedirects(boolean) -> followSslRedirects
    476:476:okhttp3.Authenticator getAuthenticator$okhttp() -> getAuthenticator$okhttp
    480:480:okhttp3.Cache getCache$okhttp() -> getCache$okhttp
    493:493:int getCallTimeout$okhttp() -> getCallTimeout$okhttp
    492:492:okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp() -> getCertificateChainCleaner$okhttp
    491:491:okhttp3.CertificatePinner getCertificatePinner$okhttp() -> getCertificatePinner$okhttp
    494:494:int getConnectTimeout$okhttp() -> getConnectTimeout$okhttp
    471:471:okhttp3.ConnectionPool getConnectionPool$okhttp() -> getConnectionPool$okhttp
    488:488:java.util.List getConnectionSpecs$okhttp() -> getConnectionSpecs$okhttp
    479:479:okhttp3.CookieJar getCookieJar$okhttp() -> getCookieJar$okhttp
    470:470:okhttp3.Dispatcher getDispatcher$okhttp() -> getDispatcher$okhttp
    481:481:okhttp3.Dns getDns$okhttp() -> getDns$okhttp
    474:474:okhttp3.EventListener$Factory getEventListenerFactory$okhttp() -> getEventListenerFactory$okhttp
    477:477:boolean getFollowRedirects$okhttp() -> getFollowRedirects$okhttp
    478:478:boolean getFollowSslRedirects$okhttp() -> getFollowSslRedirects$okhttp
    490:490:javax.net.ssl.HostnameVerifier getHostnameVerifier$okhttp() -> getHostnameVerifier$okhttp
    472:472:java.util.List getInterceptors$okhttp() -> getInterceptors$okhttp
    498:498:long getMinWebSocketMessageToCompress$okhttp() -> getMinWebSocketMessageToCompress$okhttp
    473:473:java.util.List getNetworkInterceptors$okhttp() -> getNetworkInterceptors$okhttp
    497:497:int getPingInterval$okhttp() -> getPingInterval$okhttp
    489:489:java.util.List getProtocols$okhttp() -> getProtocols$okhttp
    482:482:java.net.Proxy getProxy$okhttp() -> getProxy$okhttp
    484:484:okhttp3.Authenticator getProxyAuthenticator$okhttp() -> getProxyAuthenticator$okhttp
    483:483:java.net.ProxySelector getProxySelector$okhttp() -> getProxySelector$okhttp
    495:495:int getReadTimeout$okhttp() -> getReadTimeout$okhttp
    475:475:boolean getRetryOnConnectionFailure$okhttp() -> getRetryOnConnectionFailure$okhttp
    499:499:okhttp3.internal.connection.RouteDatabase getRouteDatabase$okhttp() -> getRouteDatabase$okhttp
    485:485:javax.net.SocketFactory getSocketFactory$okhttp() -> getSocketFactory$okhttp
    486:486:javax.net.ssl.SSLSocketFactory getSslSocketFactoryOrNull$okhttp() -> getSslSocketFactoryOrNull$okhttp
    496:496:int getWriteTimeout$okhttp() -> getWriteTimeout$okhttp
    487:487:javax.net.ssl.X509TrustManager getX509TrustManagerOrNull$okhttp() -> getX509TrustManagerOrNull$okhttp
    891:895:okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier) -> hostnameVerifier
    555:555:java.util.List interceptors() -> interceptors
    1062:1066:okhttp3.OkHttpClient$Builder minWebSocketMessageToCompress(long) -> minWebSocketMessageToCompress
    570:570:java.util.List networkInterceptors() -> networkInterceptors
    1033:1033:okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit) -> pingInterval
    1051:1051:okhttp3.OkHttpClient$Builder pingInterval(java.time.Duration) -> pingInterval
    856:881:okhttp3.OkHttpClient$Builder protocols(java.util.List) -> protocols
    680:683:okhttp3.OkHttpClient$Builder proxy(java.net.Proxy) -> proxy
    708:712:okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator) -> proxyAuthenticator
    694:698:okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector) -> proxySelector
    974:974:okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit) -> readTimeout
    989:989:okhttp3.OkHttpClient$Builder readTimeout(java.time.Duration) -> readTimeout
    619:619:okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean) -> retryOnConnectionFailure
    476:476:void setAuthenticator$okhttp(okhttp3.Authenticator) -> setAuthenticator$okhttp
    480:480:void setCache$okhttp(okhttp3.Cache) -> setCache$okhttp
    493:493:void setCallTimeout$okhttp(int) -> setCallTimeout$okhttp
    492:492:void setCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner) -> setCertificateChainCleaner$okhttp
    491:491:void setCertificatePinner$okhttp(okhttp3.CertificatePinner) -> setCertificatePinner$okhttp
    494:494:void setConnectTimeout$okhttp(int) -> setConnectTimeout$okhttp
    471:471:void setConnectionPool$okhttp(okhttp3.ConnectionPool) -> setConnectionPool$okhttp
    488:488:void setConnectionSpecs$okhttp(java.util.List) -> setConnectionSpecs$okhttp
    479:479:void setCookieJar$okhttp(okhttp3.CookieJar) -> setCookieJar$okhttp
    470:470:void setDispatcher$okhttp(okhttp3.Dispatcher) -> setDispatcher$okhttp
    481:481:void setDns$okhttp(okhttp3.Dns) -> setDns$okhttp
    474:474:void setEventListenerFactory$okhttp(okhttp3.EventListener$Factory) -> setEventListenerFactory$okhttp
    477:477:void setFollowRedirects$okhttp(boolean) -> setFollowRedirects$okhttp
    478:478:void setFollowSslRedirects$okhttp(boolean) -> setFollowSslRedirects$okhttp
    490:490:void setHostnameVerifier$okhttp(javax.net.ssl.HostnameVerifier) -> setHostnameVerifier$okhttp
    498:498:void setMinWebSocketMessageToCompress$okhttp(long) -> setMinWebSocketMessageToCompress$okhttp
    497:497:void setPingInterval$okhttp(int) -> setPingInterval$okhttp
    489:489:void setProtocols$okhttp(java.util.List) -> setProtocols$okhttp
    482:482:void setProxy$okhttp(java.net.Proxy) -> setProxy$okhttp
    484:484:void setProxyAuthenticator$okhttp(okhttp3.Authenticator) -> setProxyAuthenticator$okhttp
    483:483:void setProxySelector$okhttp(java.net.ProxySelector) -> setProxySelector$okhttp
    495:495:void setReadTimeout$okhttp(int) -> setReadTimeout$okhttp
    475:475:void setRetryOnConnectionFailure$okhttp(boolean) -> setRetryOnConnectionFailure$okhttp
    499:499:void setRouteDatabase$okhttp(okhttp3.internal.connection.RouteDatabase) -> setRouteDatabase$okhttp
    485:485:void setSocketFactory$okhttp(javax.net.SocketFactory) -> setSocketFactory$okhttp
    486:486:void setSslSocketFactoryOrNull$okhttp(javax.net.ssl.SSLSocketFactory) -> setSslSocketFactoryOrNull$okhttp
    496:496:void setWriteTimeout$okhttp(int) -> setWriteTimeout$okhttp
    487:487:void setX509TrustManagerOrNull$okhttp(javax.net.ssl.X509TrustManager) -> setX509TrustManagerOrNull$okhttp
    723:729:okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory) -> socketFactory
    746:754:okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory) -> sslSocketFactory
    806:812:okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager) -> sslSocketFactory
    1002:1002:okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit) -> writeTimeout
    1016:1016:okhttp3.OkHttpClient$Builder writeTimeout(java.time.Duration) -> writeTimeout
okhttp3.OkHttpClient$Builder$$ExternalSyntheticApiModelOutline0 -> okhttp3.OkHttpClient$Builder$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:long okhttp3.OkHttpClient$Builder$$InternalSyntheticApiModelOutline$1$0d762a004f9cd2f4fa2eb58bffdd1e9921bdbe26a7870b6ccdf47f4a098480fb$0.m(java.time.Duration) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.OkHttpClient$Builder$addInterceptor$2 -> okhttp3.OkHttpClient$Builder$addInterceptor$2:
# {"id":"sourceFile","fileName":"OkHttpClient.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function1) -> <init>
    563:563:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2 -> okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2:
# {"id":"sourceFile","fileName":"OkHttpClient.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function1) -> <init>
    578:578:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.OkHttpClient$Companion -> okhttp3.OkHttpClient$Companion:
# {"id":"sourceFile","fileName":"OkHttpClient.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    1072:1072:void <init>() -> <init>
    1075:1075:java.util.List getDEFAULT_CONNECTION_SPECS$okhttp() -> getDEFAULT_CONNECTION_SPECS$okhttp
    1073:1073:java.util.List getDEFAULT_PROTOCOLS$okhttp() -> getDEFAULT_PROTOCOLS$okhttp
okhttp3.Protocol -> okhttp3.Protocol:
# {"id":"sourceFile","fileName":"Protocol.kt"}
    0:0:okhttp3.Protocol[] $values() -> $values
    35:84:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int,java.lang.String) -> <init>
    31:31:java.lang.String access$getProtocol$p(okhttp3.Protocol) -> access$getProtocol$p
    0:0:okhttp3.Protocol get(java.lang.String) -> get
    94:94:java.lang.String toString() -> toString
    0:0:okhttp3.Protocol valueOf(java.lang.String) -> valueOf
    0:0:okhttp3.Protocol[] values() -> values
okhttp3.Protocol$Companion -> okhttp3.Protocol$Companion:
# {"id":"sourceFile","fileName":"Protocol.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    96:96:void <init>() -> <init>
    108:114:okhttp3.Protocol get(java.lang.String) -> get
okhttp3.Request -> okhttp3.Request:
# {"id":"sourceFile","fileName":"Request.kt"}
    103:103:okhttp3.RequestBody -deprecated_body() -> -deprecated_body
    110:110:okhttp3.CacheControl -deprecated_cacheControl() -> -deprecated_cacheControl
    96:96:okhttp3.Headers -deprecated_headers() -> -deprecated_headers
    89:89:java.lang.String -deprecated_method() -> -deprecated_method
    82:82:okhttp3.HttpUrl -deprecated_url() -> -deprecated_url
    28:33:void <init>(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map) -> <init>
    32:32:okhttp3.RequestBody body() -> body
    69:72:okhttp3.CacheControl cacheControl() -> cacheControl
    33:33:java.util.Map getTags$okhttp() -> getTags$okhttp
    41:41:java.lang.String header(java.lang.String) -> header
    31:31:okhttp3.Headers headers() -> headers
    43:43:java.util.List headers(java.lang.String) -> headers
    39:39:boolean isHttps() -> isHttps
    30:30:java.lang.String method() -> method
    61:61:okhttp3.Request$Builder newBuilder() -> newBuilder
    53:53:java.lang.Object tag() -> tag
    59:59:java.lang.Object tag(java.lang.Class) -> tag
    112:300:java.lang.String toString() -> toString
    29:29:okhttp3.HttpUrl url() -> url
okhttp3.Request$Builder -> okhttp3.Request$Builder:
# {"id":"sourceFile","fileName":"Request.kt"}
    143:147:void <init>() -> <init>
    143:159:void <init>(okhttp3.Request) -> <init>
    210:210:okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    288:293:okhttp3.Request build() -> build
    229:232:okhttp3.Request$Builder cacheControl(okhttp3.CacheControl) -> cacheControl
    0:0:okhttp3.Request$Builder delete() -> delete
    243:243:okhttp3.Request$Builder delete(okhttp3.RequestBody) -> delete
    243:243:okhttp3.Request$Builder delete$default(okhttp3.Request$Builder,okhttp3.RequestBody,int,java.lang.Object) -> delete$default
    236:236:okhttp3.Request$Builder get() -> get
    140:140:okhttp3.RequestBody getBody$okhttp() -> getBody$okhttp
    139:139:okhttp3.Headers$Builder getHeaders$okhttp() -> getHeaders$okhttp
    138:138:java.lang.String getMethod$okhttp() -> getMethod$okhttp
    143:143:java.util.Map getTags$okhttp() -> getTags$okhttp
    137:137:okhttp3.HttpUrl getUrl$okhttp() -> getUrl$okhttp
    238:238:okhttp3.Request$Builder head() -> head
    199:199:okhttp3.Request$Builder header(java.lang.String,java.lang.String) -> header
    220:220:okhttp3.Request$Builder headers(okhttp3.Headers) -> headers
    250:263:okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody) -> method
    247:247:okhttp3.Request$Builder patch(okhttp3.RequestBody) -> patch
    240:240:okhttp3.Request$Builder post(okhttp3.RequestBody) -> post
    245:245:okhttp3.Request$Builder put(okhttp3.RequestBody) -> put
    215:215:okhttp3.Request$Builder removeHeader(java.lang.String) -> removeHeader
    140:140:void setBody$okhttp(okhttp3.RequestBody) -> setBody$okhttp
    139:139:void setHeaders$okhttp(okhttp3.Headers$Builder) -> setHeaders$okhttp
    138:138:void setMethod$okhttp(java.lang.String) -> setMethod$okhttp
    143:143:void setTags$okhttp(java.util.Map) -> setTags$okhttp
    137:137:void setUrl$okhttp(okhttp3.HttpUrl) -> setUrl$okhttp
    267:267:okhttp3.Request$Builder tag(java.lang.Object) -> tag
    278:283:okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object) -> tag
    163:163:okhttp3.Request$Builder url(okhttp3.HttpUrl) -> url
    175:184:okhttp3.Request$Builder url(java.lang.String) -> url
    192:192:okhttp3.Request$Builder url(java.net.URL) -> url
okhttp3.RequestBody -> okhttp3.RequestBody:
# {"id":"sourceFile","fileName":"RequestBody.kt"}
    0:0:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    0:0:long contentLength() -> contentLength
    0:0:okhttp3.RequestBody create(java.io.File,okhttp3.MediaType) -> create
    0:0:okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType) -> create
    0:0:okhttp3.RequestBody create(okhttp3.MediaType,java.io.File) -> create
    0:0:okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String) -> create
    0:0:okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString) -> create
    0:0:okhttp3.RequestBody create(okhttp3.MediaType,byte[]) -> create
    0:0:okhttp3.RequestBody create(okhttp3.MediaType,byte[],int) -> create
    0:0:okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int) -> create
    0:0:okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType) -> create
    0:0:okhttp3.RequestBody create(byte[]) -> create
    0:0:okhttp3.RequestBody create(byte[],okhttp3.MediaType) -> create
    0:0:okhttp3.RequestBody create(byte[],okhttp3.MediaType,int) -> create
    0:0:okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int) -> create
    0:0:boolean isDuplex() -> isDuplex
    0:0:boolean isOneShot() -> isOneShot
okhttp3.RequestBody$Companion -> okhttp3.RequestBody$Companion:
# {"id":"sourceFile","fileName":"RequestBody.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    97:97:void <init>() -> <init>
    0:0:okhttp3.RequestBody create(okhttp3.MediaType,byte[]) -> create
    0:0:okhttp3.RequestBody create(okhttp3.MediaType,byte[],int) -> create
    0:0:okhttp3.RequestBody create(byte[]) -> create
    0:0:okhttp3.RequestBody create(byte[],okhttp3.MediaType) -> create
    0:0:okhttp3.RequestBody create(byte[],okhttp3.MediaType,int) -> create
    106:118:okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType) -> create
    125:125:okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType) -> create
    145:146:okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int) -> create
    161:161:okhttp3.RequestBody create(java.io.File,okhttp3.MediaType) -> create
    180:180:okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String) -> create
    193:193:okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString) -> create
    209:209:okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int) -> create
    219:219:okhttp3.RequestBody create(okhttp3.MediaType,java.io.File) -> create
    105:105:okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,java.lang.String,okhttp3.MediaType,int,java.lang.Object) -> create$default
    124:124:okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,okio.ByteString,okhttp3.MediaType,int,java.lang.Object) -> create$default
    140:143:okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,byte[],okhttp3.MediaType,int,int,int,java.lang.Object) -> create$default
    160:160:okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,java.io.File,okhttp3.MediaType,int,java.lang.Object) -> create$default
    204:208:okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,okhttp3.MediaType,byte[],int,int,int,java.lang.Object) -> create$default
okhttp3.RequestBody$Companion$asRequestBody$1 -> okhttp3.RequestBody$Companion$asRequestBody$1:
# {"id":"sourceFile","fileName":"RequestBody.kt"}
    161:161:void <init>(okhttp3.MediaType,java.io.File) -> <init>
    164:164:long contentLength() -> contentLength
    162:162:okhttp3.MediaType contentType() -> contentType
    167:167:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.RequestBody$Companion$toRequestBody$1 -> okhttp3.RequestBody$Companion$toRequestBody$1:
# {"id":"sourceFile","fileName":"RequestBody.kt"}
    125:125:void <init>(okhttp3.MediaType,okio.ByteString) -> <init>
    128:128:long contentLength() -> contentLength
    126:126:okhttp3.MediaType contentType() -> contentType
    131:131:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.RequestBody$Companion$toRequestBody$2 -> okhttp3.RequestBody$Companion$toRequestBody$2:
# {"id":"sourceFile","fileName":"RequestBody.kt"}
    146:146:void <init>(okhttp3.MediaType,int,byte[],int) -> <init>
    149:149:long contentLength() -> contentLength
    147:147:okhttp3.MediaType contentType() -> contentType
    152:152:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.Response -> okhttp3.Response:
# {"id":"sourceFile","fileName":"Response.kt"}
    207:207:okhttp3.ResponseBody -deprecated_body() -> -deprecated_body
    279:279:okhttp3.CacheControl -deprecated_cacheControl() -> -deprecated_cacheControl
    230:230:okhttp3.Response -deprecated_cacheResponse() -> -deprecated_cacheResponse
    140:140:int -deprecated_code() -> -deprecated_code
    161:161:okhttp3.Handshake -deprecated_handshake() -> -deprecated_handshake
    173:173:okhttp3.Headers -deprecated_headers() -> -deprecated_headers
    154:154:java.lang.String -deprecated_message() -> -deprecated_message
    223:223:okhttp3.Response -deprecated_networkResponse() -> -deprecated_networkResponse
    237:237:okhttp3.Response -deprecated_priorResponse() -> -deprecated_priorResponse
    133:133:okhttp3.Protocol -deprecated_protocol() -> -deprecated_protocol
    293:293:long -deprecated_receivedResponseAtMillis() -> -deprecated_receivedResponseAtMillis
    126:126:okhttp3.Request -deprecated_request() -> -deprecated_request
    286:286:long -deprecated_sentRequestAtMillis() -> -deprecated_sentRequestAtMillis
    40:116:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange) -> <init>
    78:78:okhttp3.ResponseBody body() -> body
    266:269:okhttp3.CacheControl cacheControl() -> cacheControl
    92:92:okhttp3.Response cacheResponse() -> cacheResponse
    251:255:java.util.List challenges() -> challenges
    302:302:void close() -> close
    59:59:int code() -> code
    116:116:okhttp3.internal.connection.Exchange exchange() -> exchange
    65:65:okhttp3.Handshake handshake() -> handshake
    0:0:java.lang.String header(java.lang.String) -> header
    166:166:java.lang.String header(java.lang.String,java.lang.String) -> header
    166:166:java.lang.String header$default(okhttp3.Response,java.lang.String,java.lang.String,int,java.lang.Object) -> header$default
    68:68:okhttp3.Headers headers() -> headers
    163:163:java.util.List headers(java.lang.String) -> headers
    213:213:boolean isRedirect() -> isRedirect
    147:147:boolean isSuccessful() -> isSuccessful
    56:56:java.lang.String message() -> message
    85:85:okhttp3.Response networkResponse() -> networkResponse
    209:209:okhttp3.Response$Builder newBuilder() -> newBuilder
    195:199:okhttp3.ResponseBody peekBody(long) -> peekBody
    100:100:okhttp3.Response priorResponse() -> priorResponse
    53:53:okhttp3.Protocol protocol() -> protocol
    114:114:long receivedResponseAtMillis() -> receivedResponseAtMillis
    50:50:okhttp3.Request request() -> request
    107:107:long sentRequestAtMillis() -> sentRequestAtMillis
    306:306:java.lang.String toString() -> toString
    180:180:okhttp3.Headers trailers() -> trailers
okhttp3.Response$Builder -> okhttp3.Response$Builder:
# {"id":"sourceFile","fileName":"Response.kt"}
    311:324:void <init>() -> <init>
    311:340:void <init>(okhttp3.Response) -> <init>
    376:376:okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    390:390:okhttp3.Response$Builder body(okhttp3.ResponseBody) -> body
    436:450:okhttp3.Response build() -> build
    399:400:okhttp3.Response$Builder cacheResponse(okhttp3.Response) -> cacheResponse
    419:419:void checkPriorResponse(okhttp3.Response) -> checkPriorResponse
    405:408:void checkSupportResponse(java.lang.String,okhttp3.Response) -> checkSupportResponse
    352:352:okhttp3.Response$Builder code(int) -> code
    315:315:okhttp3.ResponseBody getBody$okhttp() -> getBody$okhttp
    317:317:okhttp3.Response getCacheResponse$okhttp() -> getCacheResponse$okhttp
    311:311:int getCode$okhttp() -> getCode$okhttp
    321:321:okhttp3.internal.connection.Exchange getExchange$okhttp() -> getExchange$okhttp
    313:313:okhttp3.Handshake getHandshake$okhttp() -> getHandshake$okhttp
    314:314:okhttp3.Headers$Builder getHeaders$okhttp() -> getHeaders$okhttp
    312:312:java.lang.String getMessage$okhttp() -> getMessage$okhttp
    316:316:okhttp3.Response getNetworkResponse$okhttp() -> getNetworkResponse$okhttp
    318:318:okhttp3.Response getPriorResponse$okhttp() -> getPriorResponse$okhttp
    310:310:okhttp3.Protocol getProtocol$okhttp() -> getProtocol$okhttp
    320:320:long getReceivedResponseAtMillis$okhttp() -> getReceivedResponseAtMillis$okhttp
    309:309:okhttp3.Request getRequest$okhttp() -> getRequest$okhttp
    319:319:long getSentRequestAtMillis$okhttp() -> getSentRequestAtMillis$okhttp
    360:360:okhttp3.Response$Builder handshake(okhttp3.Handshake) -> handshake
    368:368:okhttp3.Response$Builder header(java.lang.String,java.lang.String) -> header
    386:386:okhttp3.Response$Builder headers(okhttp3.Headers) -> headers
    432:432:void initExchange$okhttp(okhttp3.internal.connection.Exchange) -> initExchange$okhttp
    356:356:okhttp3.Response$Builder message(java.lang.String) -> message
    394:395:okhttp3.Response$Builder networkResponse(okhttp3.Response) -> networkResponse
    413:414:okhttp3.Response$Builder priorResponse(okhttp3.Response) -> priorResponse
    348:348:okhttp3.Response$Builder protocol(okhttp3.Protocol) -> protocol
    428:428:okhttp3.Response$Builder receivedResponseAtMillis(long) -> receivedResponseAtMillis
    381:381:okhttp3.Response$Builder removeHeader(java.lang.String) -> removeHeader
    344:344:okhttp3.Response$Builder request(okhttp3.Request) -> request
    424:424:okhttp3.Response$Builder sentRequestAtMillis(long) -> sentRequestAtMillis
    315:315:void setBody$okhttp(okhttp3.ResponseBody) -> setBody$okhttp
    317:317:void setCacheResponse$okhttp(okhttp3.Response) -> setCacheResponse$okhttp
    311:311:void setCode$okhttp(int) -> setCode$okhttp
    321:321:void setExchange$okhttp(okhttp3.internal.connection.Exchange) -> setExchange$okhttp
    313:313:void setHandshake$okhttp(okhttp3.Handshake) -> setHandshake$okhttp
    314:314:void setHeaders$okhttp(okhttp3.Headers$Builder) -> setHeaders$okhttp
    312:312:void setMessage$okhttp(java.lang.String) -> setMessage$okhttp
    316:316:void setNetworkResponse$okhttp(okhttp3.Response) -> setNetworkResponse$okhttp
    318:318:void setPriorResponse$okhttp(okhttp3.Response) -> setPriorResponse$okhttp
    310:310:void setProtocol$okhttp(okhttp3.Protocol) -> setProtocol$okhttp
    320:320:void setReceivedResponseAtMillis$okhttp(long) -> setReceivedResponseAtMillis$okhttp
    309:309:void setRequest$okhttp(okhttp3.Request) -> setRequest$okhttp
    319:319:void setSentRequestAtMillis$okhttp(long) -> setSentRequestAtMillis$okhttp
okhttp3.ResponseBody -> okhttp3.ResponseBody:
# {"id":"sourceFile","fileName":"ResponseBody.kt"}
    0:0:void <clinit>() -> <clinit>
    100:100:void <init>() -> <init>
    112:112:java.io.InputStream byteStream() -> byteStream
    134:341:okio.ByteString byteString() -> byteString
    124:330:byte[] bytes() -> bytes
    165:166:java.io.Reader charStream() -> charStream
    190:190:java.nio.charset.Charset charset() -> charset
    192:192:void close() -> close
    140:148:java.lang.Object consumeSource(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> consumeSource
    0:0:okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType) -> create
    0:0:okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource) -> create
    0:0:okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String) -> create
    0:0:okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString) -> create
    0:0:okhttp3.ResponseBody create(okhttp3.MediaType,byte[]) -> create
    0:0:okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long) -> create
    0:0:okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType) -> create
    0:0:okhttp3.ResponseBody create(byte[],okhttp3.MediaType) -> create
    186:187:java.lang.String string() -> string
okhttp3.ResponseBody$BomAwareReader -> okhttp3.ResponseBody$BomAwareReader:
# {"id":"sourceFile","fileName":"ResponseBody.kt"}
    195:197:void <init>(okio.BufferedSource,java.nio.charset.Charset) -> <init>
    216:217:void close() -> close
    204:211:int read(char[],int,int) -> read
okhttp3.ResponseBody$Companion -> okhttp3.ResponseBody$Companion:
# {"id":"sourceFile","fileName":"ResponseBody.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    221:221:void <init>() -> <init>
    229:241:okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType) -> create
    248:250:okhttp3.ResponseBody create(byte[],okhttp3.MediaType) -> create
    257:259:okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType) -> create
    268:268:okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long) -> create
    284:284:okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String) -> create
    294:294:okhttp3.ResponseBody create(okhttp3.MediaType,byte[]) -> create
    304:304:okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString) -> create
    318:318:okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource) -> create
    228:228:okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,java.lang.String,okhttp3.MediaType,int,java.lang.Object) -> create$default
    247:247:okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,byte[],okhttp3.MediaType,int,java.lang.Object) -> create$default
    256:256:okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,okio.ByteString,okhttp3.MediaType,int,java.lang.Object) -> create$default
    265:265:okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,okio.BufferedSource,okhttp3.MediaType,long,int,java.lang.Object) -> create$default
okhttp3.ResponseBody$Companion$asResponseBody$1 -> okhttp3.ResponseBody$Companion$asResponseBody$1:
# {"id":"sourceFile","fileName":"ResponseBody.kt"}
    268:268:void <init>(okhttp3.MediaType,long,okio.BufferedSource) -> <init>
    271:271:long contentLength() -> contentLength
    269:269:okhttp3.MediaType contentType() -> contentType
    273:273:okio.BufferedSource source() -> source
okhttp3.Route -> okhttp3.Route:
# {"id":"sourceFile","fileName":"Route.kt"}
    51:51:okhttp3.Address -deprecated_address() -> -deprecated_address
    58:58:java.net.Proxy -deprecated_proxy() -> -deprecated_proxy
    65:65:java.net.InetSocketAddress -deprecated_socketAddress() -> -deprecated_socketAddress
    34:43:void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress) -> <init>
    35:35:okhttp3.Address address() -> address
    76:79:boolean equals(java.lang.Object) -> equals
    84:86:int hashCode() -> hashCode
    42:42:java.net.Proxy proxy() -> proxy
    73:73:boolean requiresTunnel() -> requiresTunnel
    43:43:java.net.InetSocketAddress socketAddress() -> socketAddress
    90:90:java.lang.String toString() -> toString
okhttp3.TlsVersion -> okhttp3.TlsVersion:
# {"id":"sourceFile","fileName":"TlsVersion.kt"}
    0:0:okhttp3.TlsVersion[] $values() -> $values
    36:36:java.lang.String -deprecated_javaName() -> -deprecated_javaName
    25:29:void <clinit>() -> <clinit>
    22:23:void <init>(java.lang.String,int,java.lang.String) -> <init>
    0:0:okhttp3.TlsVersion forJavaName(java.lang.String) -> forJavaName
    23:23:java.lang.String javaName() -> javaName
    0:0:okhttp3.TlsVersion valueOf(java.lang.String) -> valueOf
    0:0:okhttp3.TlsVersion[] values() -> values
okhttp3.TlsVersion$Companion -> okhttp3.TlsVersion$Companion:
# {"id":"sourceFile","fileName":"TlsVersion.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    38:38:void <init>() -> <init>
    41:47:okhttp3.TlsVersion forJavaName(java.lang.String) -> forJavaName
okhttp3.WebSocket -> okhttp3.WebSocket:
# {"id":"sourceFile","fileName":"WebSocket.kt"}
okhttp3.WebSocket$Factory -> okhttp3.WebSocket$Factory:
# {"id":"sourceFile","fileName":"WebSocket.kt"}
okhttp3.WebSocketListener -> okhttp3.WebSocketListener:
# {"id":"sourceFile","fileName":"WebSocketListener.kt"}
    20:20:void <init>() -> <init>
    0:0:void onClosed(okhttp3.WebSocket,int,java.lang.String) -> onClosed
    0:0:void onClosing(okhttp3.WebSocket,int,java.lang.String) -> onClosing
    0:0:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response) -> onFailure
    0:0:void onMessage(okhttp3.WebSocket,java.lang.String) -> onMessage
    0:0:void onMessage(okhttp3.WebSocket,okio.ByteString) -> onMessage
    0:0:void onOpen(okhttp3.WebSocket,okhttp3.Response) -> onOpen
okhttp3.internal.HostnamesKt -> okhttp3.internal.HostnamesKt:
# {"id":"sourceFile","fileName":"hostnames.kt"}
    65:76:boolean containsInvalidHostnameAsciiCodes(java.lang.String) -> containsInvalidHostnameAsciiCodes
    163:186:boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int) -> decodeIpv4Suffix
    95:148:java.net.InetAddress decodeIpv6(java.lang.String,int,int) -> decodeIpv6
    202:231:java.lang.String inet6AddressToAscii(byte[]) -> inet6AddressToAscii
    36:54:java.lang.String toCanonicalHost(java.lang.String) -> toCanonicalHost
okhttp3.internal.Internal -> okhttp3.internal.Internal:
# {"id":"sourceFile","fileName":"internal.kt"}
    37:37:okhttp3.Headers$Builder addHeaderLenient(okhttp3.Headers$Builder,java.lang.String) -> addHeaderLenient
    40:40:okhttp3.Headers$Builder addHeaderLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String) -> addHeaderLenient
    45:45:void applyConnectionSpec(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean) -> applyConnectionSpec
    42:42:okhttp3.Response cacheGet(okhttp3.Cache,okhttp3.Request) -> cacheGet
    34:34:java.lang.String cookieToString(okhttp3.Cookie,boolean) -> cookieToString
    31:31:okhttp3.Cookie parseCookie(long,okhttp3.HttpUrl,java.lang.String) -> parseCookie
okhttp3.internal.SuppressSignatureCheck -> okhttp3.internal.SuppressSignatureCheck:
# {"id":"sourceFile","fileName":"SuppressSignatureCheck.kt"}
okhttp3.internal.Util -> okhttp3.internal.Util:
# {"id":"sourceFile","fileName":"Util.kt"}
    0:0:okhttp3.EventListener $r8$lambda$YfFHw3-zq5uvNqMxtLF5qa4jeaI(okhttp3.EventListener,okhttp3.Call) -> $r8$lambda$YfFHw3-zq5uvNqMxtLF5qa4jeaI
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Thread $r8$lambda$ywBZuT_FY8oWRguZV-vYe3ynxsk(java.lang.String,boolean,java.lang.Runnable) -> $r8$lambda$ywBZuT_FY8oWRguZV-vYe3ynxsk
      # {"id":"com.android.tools.r8.synthesized"}
    60:604:void <clinit>() -> <clinit>
    590:590:void addIfAbsent(java.util.List,java.lang.Object) -> addIfAbsent
    0:0:int and(byte,int) -> and
    0:0:int and(short,int) -> and
    0:0:long and(int,long) -> and
    309:309:okhttp3.EventListener$Factory asFactory(okhttp3.EventListener) -> asFactory
    0:0:okhttp3.EventListener asFactory$lambda$8(okhttp3.EventListener,okhttp3.Call) -> asFactory$lambda$8
    615:616:void assertThreadDoesntHoldLock(java.lang.Object) -> assertThreadDoesntHoldLock
    608:609:void assertThreadHoldsLock(java.lang.Object) -> assertThreadHoldsLock
    247:247:boolean canParseAsIpAddress(java.lang.String) -> canParseAsIpAddress
    305:307:boolean canReuseConnectionFor(okhttp3.HttpUrl,okhttp3.HttpUrl) -> canReuseConnectionFor
    277:281:int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit) -> checkDuration
    97:97:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    495:497:void closeQuietly(java.io.Closeable) -> closeQuietly
    505:514:void closeQuietly(java.net.Socket) -> closeQuietly
    522:524:void closeQuietly(java.net.ServerSocket) -> closeQuietly
    171:172:java.lang.String[] concat(java.lang.String[],java.lang.String) -> concat
    215:215:int delimiterOffset(java.lang.String,java.lang.String,int,int) -> delimiterOffset
    226:226:int delimiterOffset(java.lang.String,char,int,int) -> delimiterOffset
    213:213:int delimiterOffset$default(java.lang.String,java.lang.String,int,int,int,java.lang.Object) -> delimiterOffset$default
    224:224:int delimiterOffset$default(java.lang.String,char,int,int,int,java.lang.Object) -> delimiterOffset$default
    365:365:boolean discard(okio.Source,int,java.util.concurrent.TimeUnit) -> discard
    625:629:java.util.List filterList(java.lang.Iterable,kotlin.jvm.functions.Function1) -> filterList
    260:260:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    140:145:boolean hasIntersection(java.lang.String[],java.lang.String[],java.util.Comparator) -> hasIntersection
    444:444:long headersContentLength(okhttp3.Response) -> headersContentLength
    403:403:void ignoreIoExceptions(kotlin.jvm.functions.Function0) -> ignoreIoExceptions
    480:480:java.util.List immutableListOf(java.lang.Object[]) -> immutableListOf
    167:640:int indexOf(java.lang.String[],java.lang.String,java.util.Comparator) -> indexOf
    236:238:int indexOfControlOrNonAscii(java.lang.String) -> indexOfControlOrNonAscii
    181:181:int indexOfFirstNonAsciiWhitespace(java.lang.String,int,int) -> indexOfFirstNonAsciiWhitespace
    179:179:int indexOfFirstNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object) -> indexOfFirstNonAsciiWhitespace$default
    194:194:int indexOfLastNonAsciiWhitespace(java.lang.String,int,int) -> indexOfLastNonAsciiWhitespace
    192:192:int indexOfLastNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object) -> indexOfLastNonAsciiWhitespace$default
    433:439:int indexOfNonWhitespace(java.lang.String,int) -> indexOfNonWhitespace
    432:432:int indexOfNonWhitespace$default(java.lang.String,int,int,java.lang.Object) -> indexOfNonWhitespace$default
    118:638:java.lang.String[] intersect(java.lang.String[],java.lang.String[],java.util.Comparator) -> intersect
    541:548:boolean isCivilized(okhttp3.internal.io.FileSystem,java.io.File) -> isCivilized
    386:391:boolean isHealthy(java.net.Socket,okio.BufferedSource) -> isHealthy
    252:255:boolean isSensitiveHeader(java.lang.String) -> isSensitiveHeader
    560:560:void notify(java.lang.Object) -> notify
    563:563:void notifyAll(java.lang.Object) -> notifyAll
    0:0:int parseHexDigit(char) -> parseHexDigit
    371:372:java.lang.String peerName(java.net.Socket) -> peerName
    265:272:java.nio.charset.Charset readBomAsCharset(okio.BufferedSource,java.nio.charset.Charset) -> readBomAsCharset
    566:583:java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String) -> readFieldOrNull
    324:326:int readMedium(okio.BufferedSource) -> readMedium
    335:354:boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit) -> skipAll
    421:423:int skipAll(okio.Buffer,byte) -> skipAll
    104:104:java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean) -> threadFactory
    105:106:java.lang.Thread threadFactory$lambda$1(java.lang.String,boolean,java.lang.Runnable) -> threadFactory$lambda$1
    409:415:void threadName(java.lang.String,kotlin.jvm.functions.Function0) -> threadName
    300:648:java.util.List toHeaderList(okhttp3.Headers) -> toHeaderList
    293:297:okhttp3.Headers toHeaders(java.util.List) -> toHeaders
    552:552:java.lang.String toHexString(long) -> toHexString
    554:554:java.lang.String toHexString(int) -> toHexString
    154:160:java.lang.String toHostHeader(okhttp3.HttpUrl,boolean) -> toHostHeader
    153:153:java.lang.String toHostHeader$default(okhttp3.HttpUrl,boolean,int,java.lang.Object) -> toHostHeader$default
    474:474:java.util.List toImmutableList(java.util.List) -> toImmutableList
    485:488:java.util.Map toImmutableMap(java.util.Map) -> toImmutableMap
    449:449:long toLongOrDefault(java.lang.String,long) -> toLongOrDefault
    461:461:int toNonNegativeInt(java.lang.String,int) -> toNonNegativeInt
    204:206:java.lang.String trimSubstring(java.lang.String,int,int) -> trimSubstring
    203:203:java.lang.String trimSubstring$default(java.lang.String,int,int,int,java.lang.Object) -> trimSubstring$default
    557:557:void wait(java.lang.Object) -> wait
    621:621:java.lang.Throwable withSuppressed(java.lang.Exception,java.util.List) -> withSuppressed
    317:319:void writeMedium(okio.BufferedSink,int) -> writeMedium
okhttp3.internal.Util$$ExternalSyntheticLambda0 -> okhttp3.internal.Util$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String okhttp3.internal.Util$$InternalSyntheticLambda$1$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.f$0 -> f$0
    boolean okhttp3.internal.Util$$InternalSyntheticLambda$1$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.f$1 -> f$1
    0:0:void okhttp3.internal.Util$$InternalSyntheticLambda$1$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.<init>(java.lang.String,boolean) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Thread okhttp3.internal.Util$$InternalSyntheticLambda$1$211b5dc74c913220f256108e03a27b2026995048f2732ff5419fc945848e0c54$0.newThread(java.lang.Runnable) -> newThread
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.Util$$ExternalSyntheticLambda1 -> okhttp3.internal.Util$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    okhttp3.EventListener okhttp3.internal.Util$$InternalSyntheticLambda$1$2772f077014f473d42590b605bf5e0b5f44c0d6c5a0b5ed86fd77510defe4253$0.f$0 -> f$0
    0:0:void okhttp3.internal.Util$$InternalSyntheticLambda$1$2772f077014f473d42590b605bf5e0b5f44c0d6c5a0b5ed86fd77510defe4253$0.<init>(okhttp3.EventListener) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:okhttp3.EventListener okhttp3.internal.Util$$InternalSyntheticLambda$1$2772f077014f473d42590b605bf5e0b5f44c0d6c5a0b5ed86fd77510defe4253$0.create(okhttp3.Call) -> create
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.authenticator.JavaNetAuthenticator -> okhttp3.internal.authenticator.JavaNetAuthenticator:
# {"id":"sourceFile","fileName":"JavaNetAuthenticator.kt"}
    0:0:void <init>() -> <init>
    34:34:void <init>(okhttp3.Dns) -> <init>
    34:34:void <init>(okhttp3.Dns,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    37:80:okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response) -> authenticate
    89:91:java.net.InetAddress connectToInetAddress(java.net.Proxy,okhttp3.HttpUrl,okhttp3.Dns) -> connectToInetAddress
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings -> okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings:
# {"id":"sourceFile","fileName":"JavaNetAuthenticator.kt"}
    0:0:void <clinit>() -> <clinit>
okhttp3.internal.cache.CacheInterceptor -> okhttp3.internal.cache.CacheInterceptor:
# {"id":"sourceFile","fileName":"CacheInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
    42:42:void <init>(okhttp3.Cache) -> <init>
    166:217:okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response) -> cacheWritingResponse
    42:42:okhttp3.Cache getCache$okhttp() -> getCache$okhttp
    46:147:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.cache.CacheInterceptor$Companion -> okhttp3.internal.cache.CacheInterceptor$Companion:
# {"id":"sourceFile","fileName":"CacheInterceptor.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    220:220:void <init>() -> <init>
    220:220:okhttp3.Headers access$combine(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Headers,okhttp3.Headers) -> access$combine
    220:220:okhttp3.Response access$stripBody(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Response) -> access$stripBody
    232:255:okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers) -> combine
    278:280:boolean isContentSpecificHeader(java.lang.String) -> isContentSpecificHeader
    263:270:boolean isEndToEnd(java.lang.String) -> isEndToEnd
    223:224:okhttp3.Response stripBody(okhttp3.Response) -> stripBody
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1 -> okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1:
# {"id":"sourceFile","fileName":"CacheInterceptor.kt"}
    171:171:void <init>(okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink) -> <init>
    204:209:void close() -> close
    178:196:long read(okio.Buffer,long) -> read
    200:200:okio.Timeout timeout() -> timeout
okhttp3.internal.cache.CacheRequest -> okhttp3.internal.cache.CacheRequest:
# {"id":"sourceFile","fileName":"CacheRequest.kt"}
okhttp3.internal.cache.CacheStrategy -> okhttp3.internal.cache.CacheStrategy:
# {"id":"sourceFile","fileName":"CacheStrategy.kt"}
    0:0:void <clinit>() -> <clinit>
    45:49:void <init>(okhttp3.Request,okhttp3.Response) -> <init>
    49:49:okhttp3.Response getCacheResponse() -> getCacheResponse
    47:47:okhttp3.Request getNetworkRequest() -> getNetworkRequest
okhttp3.internal.cache.CacheStrategy$Companion -> okhttp3.internal.cache.CacheStrategy$Companion:
# {"id":"sourceFile","fileName":"CacheStrategy.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    288:288:void <init>() -> <init>
    293:328:boolean isCacheable(okhttp3.Response,okhttp3.Request) -> isCacheable
okhttp3.internal.cache.CacheStrategy$Factory -> okhttp3.internal.cache.CacheStrategy$Factory:
# {"id":"sourceFile","fileName":"CacheStrategy.kt"}
    52:121:void <init>(long,okhttp3.Request,okhttp3.Response) -> <init>
    261:275:long cacheResponseAge() -> cacheResponseAge
    130:134:okhttp3.internal.cache.CacheStrategy compute() -> compute
    143:224:okhttp3.internal.cache.CacheStrategy computeCandidate() -> computeCandidate
    232:250:long computeFreshnessLifetime() -> computeFreshnessLifetime
    54:54:okhttp3.Request getRequest$okhttp() -> getRequest$okhttp
    285:285:boolean hasConditions(okhttp3.Request) -> hasConditions
    94:94:boolean isFreshnessLifetimeHeuristic() -> isFreshnessLifetimeHeuristic
okhttp3.internal.cache.DiskLruCache -> okhttp3.internal.cache.DiskLruCache:
# {"id":"sourceFile","fileName":"DiskLruCache.kt"}
    1052:1062:void <clinit>() -> <clinit>
    87:210:void <init>(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,okhttp3.internal.concurrent.TaskRunner) -> <init>
    87:87:boolean access$getCivilizedFileSystem$p(okhttp3.internal.cache.DiskLruCache) -> access$getCivilizedFileSystem$p
    87:87:boolean access$getInitialized$p(okhttp3.internal.cache.DiskLruCache) -> access$getInitialized$p
    87:87:boolean access$journalRebuildRequired(okhttp3.internal.cache.DiskLruCache) -> access$journalRebuildRequired
    87:87:void access$setHasJournalErrors$p(okhttp3.internal.cache.DiskLruCache,boolean) -> access$setHasJournalErrors$p
    87:87:void access$setJournalWriter$p(okhttp3.internal.cache.DiskLruCache,okio.BufferedSink) -> access$setJournalWriter$p
    87:87:void access$setMostRecentRebuildFailed$p(okhttp3.internal.cache.DiskLruCache,boolean) -> access$setMostRecentRebuildFailed$p
    87:87:void access$setMostRecentTrimFailed$p(okhttp3.internal.cache.DiskLruCache,boolean) -> access$setMostRecentTrimFailed$p
    87:87:void access$setRedundantOpCount$p(okhttp3.internal.cache.DiskLruCache,int) -> access$setRedundantOpCount$p
    648:649:void checkNotClosed() -> checkNotClosed
    666:1072:void close() -> close
    510:572:void completeEdit$okhttp(okhttp3.internal.cache.DiskLruCache$Editor,boolean) -> completeEdit$okhttp
    709:710:void delete() -> delete
    0:0:okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String) -> edit
    449:495:okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    448:448:okhttp3.internal.cache.DiskLruCache$Editor edit$default(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,int,java.lang.Object) -> edit$default
    719:1074:void evictAll() -> evictAll
    654:659:void flush() -> flush
    426:442:okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String) -> get
    164:164:boolean getClosed$okhttp() -> getClosed$okhttp
    91:91:java.io.File getDirectory() -> getDirectory
    88:88:okhttp3.internal.io.FileSystem getFileSystem$okhttp() -> getFileSystem$okhttp
    157:157:java.util.LinkedHashMap getLruEntries$okhttp() -> getLruEntries$okhttp
    104:104:long getMaxSize() -> getMaxSize
    95:95:int getValueCount$okhttp() -> getValueCount$okhttp
    217:1068:void initialize() -> initialize
    661:661:boolean isClosed() -> isClosed
    580:581:boolean journalRebuildRequired() -> journalRebuildRequired
    302:307:okio.BufferedSink newJournalWriter() -> newJournalWriter
    361:375:void processJournal() -> processJournal
    263:297:void readJournal() -> readJournal
    312:351:void readJournalLine(java.lang.String) -> readJournalLine
    386:418:void rebuildJournal$okhttp() -> rebuildJournal$okhttp
    592:599:boolean remove(java.lang.String) -> remove
    606:641:boolean removeEntry$okhttp(okhttp3.internal.cache.DiskLruCache$Entry) -> removeEntry$okhttp
    694:696:boolean removeOldestEntry() -> removeOldestEntry
    164:164:void setClosed$okhttp(boolean) -> setClosed$okhttp
    106:110:void setMaxSize(long) -> setMaxSize
    504:505:long size() -> size
    746:747:java.util.Iterator snapshots() -> snapshots
    686:689:void trimToSize() -> trimToSize
    728:728:void validateKey(java.lang.String) -> validateKey
okhttp3.internal.cache.DiskLruCache$Companion -> okhttp3.internal.cache.DiskLruCache$Companion:
# {"id":"sourceFile","fileName":"DiskLruCache.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    1051:1051:void <init>() -> <init>
okhttp3.internal.cache.DiskLruCache$Editor -> okhttp3.internal.cache.DiskLruCache$Editor:
# {"id":"sourceFile","fileName":"DiskLruCache.kt"}
    825:826:void <init>(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry) -> <init>
    913:919:void abort() -> abort
    898:904:void commit() -> commit
    836:840:void detach$okhttp() -> detach$okhttp
    825:825:okhttp3.internal.cache.DiskLruCache$Entry getEntry$okhttp() -> getEntry$okhttp
    826:826:boolean[] getWritten$okhttp() -> getWritten$okhttp
    869:884:okio.Sink newSink(int) -> newSink
    850:856:okio.Source newSource(int) -> newSource
okhttp3.internal.cache.DiskLruCache$Editor$newSink$1$1 -> okhttp3.internal.cache.DiskLruCache$Editor$newSink$1$1:
# {"id":"sourceFile","fileName":"DiskLruCache.kt"}
    0:0:void <init>(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Editor) -> <init>
    884:884:java.lang.Object invoke(java.lang.Object) -> invoke
    885:887:void invoke(java.io.IOException) -> invoke
okhttp3.internal.cache.DiskLruCache$Entry -> okhttp3.internal.cache.DiskLruCache$Entry:
# {"id":"sourceFile","fileName":"DiskLruCache.kt"}
    923:962:void <init>(okhttp3.internal.cache.DiskLruCache,java.lang.String) -> <init>
    929:929:java.util.List getCleanFiles$okhttp() -> getCleanFiles$okhttp
    942:942:okhttp3.internal.cache.DiskLruCache$Editor getCurrentEditor$okhttp() -> getCurrentEditor$okhttp
    930:930:java.util.List getDirtyFiles$okhttp() -> getDirtyFiles$okhttp
    924:924:java.lang.String getKey$okhttp() -> getKey$okhttp
    928:928:long[] getLengths$okhttp() -> getLengths$okhttp
    948:948:int getLockingSourceCount$okhttp() -> getLockingSourceCount$okhttp
    933:933:boolean getReadable$okhttp() -> getReadable$okhttp
    951:951:long getSequenceNumber$okhttp() -> getSequenceNumber$okhttp
    936:936:boolean getZombie$okhttp() -> getZombie$okhttp
    992:992:java.lang.Void invalidLengths(java.util.List) -> invalidLengths
    1029:1033:okio.Source newSource(int) -> newSource
    942:942:void setCurrentEditor$okhttp(okhttp3.internal.cache.DiskLruCache$Editor) -> setCurrentEditor$okhttp
    969:978:void setLengths$okhttp(java.util.List) -> setLengths$okhttp
    948:948:void setLockingSourceCount$okhttp(int) -> setLockingSourceCount$okhttp
    933:933:void setReadable$okhttp(boolean) -> setReadable$okhttp
    951:951:void setSequenceNumber$okhttp(long) -> setSequenceNumber$okhttp
    936:936:void setZombie$okhttp(boolean) -> setZombie$okhttp
    1001:1067:okhttp3.internal.cache.DiskLruCache$Snapshot snapshot$okhttp() -> snapshot$okhttp
    985:986:void writeLengths$okhttp(okio.BufferedSink) -> writeLengths$okhttp
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1 -> okhttp3.internal.cache.DiskLruCache$Entry$newSource$1:
# {"id":"sourceFile","fileName":"DiskLruCache.kt"}
    1033:1033:void <init>(okio.Source,okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry) -> <init>
    1036:1044:void close() -> close
okhttp3.internal.cache.DiskLruCache$Snapshot -> okhttp3.internal.cache.DiskLruCache$Snapshot:
# {"id":"sourceFile","fileName":"DiskLruCache.kt"}
    796:800:void <init>(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,java.util.List,long[]) -> <init>
    818:819:void close() -> close
    809:809:okhttp3.internal.cache.DiskLruCache$Editor edit() -> edit
    815:815:long getLength(int) -> getLength
    812:812:okio.Source getSource(int) -> getSource
    802:802:java.lang.String key() -> key
okhttp3.internal.cache.DiskLruCache$cleanupTask$1 -> okhttp3.internal.cache.DiskLruCache$cleanupTask$1:
# {"id":"sourceFile","fileName":"DiskLruCache.kt"}
    176:176:void <init>(okhttp3.internal.cache.DiskLruCache,java.lang.String) -> <init>
    178:199:long runOnce() -> runOnce
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1 -> okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1:
# {"id":"sourceFile","fileName":"DiskLruCache.kt"}
    0:0:void <init>(okhttp3.internal.cache.DiskLruCache) -> <init>
    303:303:java.lang.Object invoke(java.lang.Object) -> invoke
    304:1067:void invoke(java.io.IOException) -> invoke
okhttp3.internal.cache.DiskLruCache$snapshots$1 -> okhttp3.internal.cache.DiskLruCache$snapshots$1:
# {"id":"sourceFile","fileName":"DiskLruCache.kt"}
    747:749:void <init>(okhttp3.internal.cache.DiskLruCache) -> <init>
    758:768:boolean hasNext() -> hasNext
    747:747:java.lang.Object next() -> next
    774:777:okhttp3.internal.cache.DiskLruCache$Snapshot next() -> next
    781:789:void remove() -> remove
okhttp3.internal.cache.FaultHidingSink -> okhttp3.internal.cache.FaultHidingSink:
# {"id":"sourceFile","fileName":"FaultHidingSink.kt"}
    26:27:void <init>(okio.Sink,kotlin.jvm.functions.Function1) -> <init>
    56:63:void close() -> close
    44:51:void flush() -> flush
    26:26:kotlin.jvm.functions.Function1 getOnException() -> getOnException
    31:39:void write(okio.Buffer,long) -> write
okhttp3.internal.cache2.FileOperator -> okhttp3.internal.cache2.FileOperator:
# {"id":"sourceFile","fileName":"FileOperator.kt"}
    32:33:void <init>(java.nio.channels.FileChannel) -> <init>
    59:65:void read(long,okio.Buffer,long) -> read
    39:46:void write(long,okio.Buffer,long) -> write
okhttp3.internal.cache2.Relay -> okhttp3.internal.cache2.Relay:
# {"id":"sourceFile","fileName":"Relay.kt"}
    299:300:void <clinit>() -> <clinit>
    0:0:void <init>(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    40:84:void <init>(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long) -> <init>
    40:40:void access$writeHeader(okhttp3.internal.cache2.Relay,okio.ByteString,long,long) -> access$writeHeader
    124:137:void commit(long) -> commit
    84:84:okio.Buffer getBuffer() -> getBuffer
    69:69:long getBufferMaxSize() -> getBufferMaxSize
    81:81:boolean getComplete() -> getComplete
    54:54:java.io.RandomAccessFile getFile() -> getFile
    90:90:int getSourceCount() -> getSourceCount
    60:60:okio.Source getUpstream() -> getUpstream
    78:78:okio.Buffer getUpstreamBuffer() -> getUpstreamBuffer
    63:63:long getUpstreamPos() -> getUpstreamPos
    72:72:java.lang.Thread getUpstreamReader() -> getUpstreamReader
    93:93:boolean isClosed() -> isClosed
    140:140:okio.ByteString metadata() -> metadata
    148:153:okio.Source newSource() -> newSource
    81:81:void setComplete(boolean) -> setComplete
    54:54:void setFile(java.io.RandomAccessFile) -> setFile
    90:90:void setSourceCount(int) -> setSourceCount
    60:60:void setUpstream(okio.Source) -> setUpstream
    63:63:void setUpstreamPos(long) -> setUpstreamPos
    72:72:void setUpstreamReader(java.lang.Thread) -> setUpstreamReader
    101:109:void writeHeader(okio.ByteString,long,long) -> writeHeader
    114:118:void writeMetadata(long) -> writeMetadata
okhttp3.internal.cache2.Relay$Companion -> okhttp3.internal.cache2.Relay$Companion:
# {"id":"sourceFile","fileName":"Relay.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    292:292:void <init>() -> <init>
    317:322:okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long) -> edit
    335:352:okhttp3.internal.cache2.Relay read(java.io.File) -> read
okhttp3.internal.cache2.Relay$RelaySource -> okhttp3.internal.cache2.Relay$RelaySource:
# {"id":"sourceFile","fileName":"Relay.kt"}
    156:160:void <init>(okhttp3.internal.cache2.Relay) -> <init>
    276:288:void close() -> close
    188:357:long read(okio.Buffer,long) -> read
    272:272:okio.Timeout timeout() -> timeout
okhttp3.internal.concurrent.Task -> okhttp3.internal.concurrent.Task:
# {"id":"sourceFile","fileName":"Task.kt"}
    49:57:void <init>(java.lang.String,boolean) -> <init>
    49:49:void <init>(java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    51:51:boolean getCancelable() -> getCancelable
    50:50:java.lang.String getName() -> getName
    57:57:long getNextExecuteNanoTime$okhttp() -> getNextExecuteNanoTime$okhttp
    54:54:okhttp3.internal.concurrent.TaskQueue getQueue$okhttp() -> getQueue$okhttp
    63:66:void initQueue$okhttp(okhttp3.internal.concurrent.TaskQueue) -> initQueue$okhttp
    57:57:void setNextExecuteNanoTime$okhttp(long) -> setNextExecuteNanoTime$okhttp
    54:54:void setQueue$okhttp(okhttp3.internal.concurrent.TaskQueue) -> setQueue$okhttp
    69:69:java.lang.String toString() -> toString
okhttp3.internal.concurrent.TaskLoggerKt -> okhttp3.internal.concurrent.TaskLoggerKt:
# {"id":"sourceFile","fileName":"TaskLogger.kt"}
    1:1:void access$log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String) -> access$log
    73:80:java.lang.String formatDuration(long) -> formatDuration
    60:60:void log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String) -> log
    36:53:java.lang.Object logElapsed(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> logElapsed
    25:26:void taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> taskLog
okhttp3.internal.concurrent.TaskQueue -> okhttp3.internal.concurrent.TaskQueue:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    29:39:void <init>(okhttp3.internal.concurrent.TaskRunner,java.lang.String) -> <init>
    181:244:void cancelAll() -> cancelAll
    201:252:boolean cancelAllAndDecide$okhttp() -> cancelAllAndDecide$okhttp
    96:96:void execute(java.lang.String,long,boolean,kotlin.jvm.functions.Function0) -> execute
    90:96:void execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> execute$default
    36:36:okhttp3.internal.concurrent.Task getActiveTask$okhttp() -> getActiveTask$okhttp
    42:42:boolean getCancelActiveTask$okhttp() -> getCancelActiveTask$okhttp
    39:39:java.util.List getFutureTasks$okhttp() -> getFutureTasks$okhttp
    31:31:java.lang.String getName$okhttp() -> getName$okhttp
    49:49:java.util.List getScheduledTasks() -> getScheduledTasks
    33:33:boolean getShutdown$okhttp() -> getShutdown$okhttp
    30:30:okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp() -> getTaskRunner$okhttp
    106:129:java.util.concurrent.CountDownLatch idleLatch() -> idleLatch
    62:225:void schedule(okhttp3.internal.concurrent.Task,long) -> schedule
    84:84:void schedule(java.lang.String,long,kotlin.jvm.functions.Function0) -> schedule
    61:61:void schedule$default(okhttp3.internal.concurrent.TaskQueue,okhttp3.internal.concurrent.Task,long,int,java.lang.Object) -> schedule$default
    79:84:void schedule$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,kotlin.jvm.functions.Function0,int,java.lang.Object) -> schedule$default
    144:238:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean) -> scheduleAndDecide$okhttp
    36:36:void setActiveTask$okhttp(okhttp3.internal.concurrent.Task) -> setActiveTask$okhttp
    42:42:void setCancelActiveTask$okhttp(boolean) -> setCancelActiveTask$okhttp
    33:33:void setShutdown$okhttp(boolean) -> setShutdown$okhttp
    191:248:void shutdown() -> shutdown
    216:216:java.lang.String toString() -> toString
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask -> okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    133:134:void <init>() -> <init>
    134:134:java.util.concurrent.CountDownLatch getLatch() -> getLatch
    137:137:long runOnce() -> runOnce
okhttp3.internal.concurrent.TaskQueue$execute$1 -> okhttp3.internal.concurrent.TaskQueue$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,kotlin.jvm.functions.Function0) -> <init>
    98:98:long runOnce() -> runOnce
okhttp3.internal.concurrent.TaskQueue$schedule$2 -> okhttp3.internal.concurrent.TaskQueue$schedule$2:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    84:84:void <init>(java.lang.String,kotlin.jvm.functions.Function0) -> <init>
    85:85:long runOnce() -> runOnce
okhttp3.internal.concurrent.TaskRunner -> okhttp3.internal.concurrent.TaskRunner:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    309:311:void <clinit>() -> <clinit>
    42:55:void <init>(okhttp3.internal.concurrent.TaskRunner$Backend) -> <init>
    42:42:java.util.logging.Logger access$getLogger$cp() -> access$getLogger$cp
    42:42:void access$runTask(okhttp3.internal.concurrent.TaskRunner,okhttp3.internal.concurrent.Task) -> access$runTask
    240:241:java.util.List activeQueues() -> activeQueues
    128:328:void afterRun(okhttp3.internal.concurrent.Task,long) -> afterRun
    155:332:okhttp3.internal.concurrent.Task awaitTaskToRun() -> awaitTaskToRun
    99:320:void beforeRun(okhttp3.internal.concurrent.Task) -> beforeRun
    246:253:void cancelAll() -> cancelAll
    43:43:okhttp3.internal.concurrent.TaskRunner$Backend getBackend() -> getBackend
    81:316:void kickCoordinator$okhttp(okhttp3.internal.concurrent.TaskQueue) -> kickCoordinator$okhttp
    231:232:okhttp3.internal.concurrent.TaskQueue newQueue() -> newQueue
    110:324:void runTask(okhttp3.internal.concurrent.Task) -> runTask
okhttp3.internal.concurrent.TaskRunner$Backend -> okhttp3.internal.concurrent.TaskRunner$Backend:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
okhttp3.internal.concurrent.TaskRunner$Companion -> okhttp3.internal.concurrent.TaskRunner$Companion:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    307:307:void <init>() -> <init>
    311:311:java.util.logging.Logger getLogger() -> getLogger
okhttp3.internal.concurrent.TaskRunner$RealBackend -> okhttp3.internal.concurrent.TaskRunner$RealBackend:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    266:271:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    0:0:void beforeTask(okhttp3.internal.concurrent.TaskRunner) -> beforeTask
    315:315:void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner) -> coordinatorNotify
    291:294:void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long) -> coordinatorWait
    299:299:void execute(java.lang.Runnable) -> execute
    278:278:long nanoTime() -> nanoTime
    303:303:void shutdown() -> shutdown
okhttp3.internal.concurrent.TaskRunner$runnable$1 -> okhttp3.internal.concurrent.TaskRunner$runnable$1:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    55:55:void <init>(okhttp3.internal.concurrent.TaskRunner) -> <init>
    58:333:void run() -> run
okhttp3.internal.connection.ConnectInterceptor -> okhttp3.internal.connection.ConnectInterceptor:
# {"id":"sourceFile","fileName":"ConnectInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    31:34:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.connection.ConnectionSpecSelector -> okhttp3.internal.connection.ConnectionSpecSelector:
# {"id":"sourceFile","fileName":"ConnectionSpecSelector.kt"}
    34:35:void <init>(java.util.List) -> <init>
    50:70:okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket) -> configureSecureSocket
    83:103:boolean connectionFailed(java.io.IOException) -> connectionFailed
    115:116:boolean isFallbackPossible(javax.net.ssl.SSLSocket) -> isFallbackPossible
okhttp3.internal.connection.Exchange -> okhttp3.internal.connection.Exchange:
# {"id":"sourceFile","fileName":"Exchange.kt"}
    40:54:void <init>(okhttp3.internal.connection.RealCall,okhttp3.EventListener,okhttp3.internal.connection.ExchangeFinder,okhttp3.internal.http.ExchangeCodec) -> <init>
    182:198:java.io.IOException bodyComplete(long,boolean,boolean,java.io.IOException) -> bodyComplete
    157:157:void cancel() -> cancel
    74:78:okio.Sink createRequestBody(okhttp3.Request,boolean) -> createRequestBody
    165:166:void detachWithViolence() -> detachWithViolence
    95:99:void finishRequest() -> finishRequest
    84:88:void flushRequest() -> flushRequest
    41:41:okhttp3.internal.connection.RealCall getCall$okhttp() -> getCall$okhttp
    54:54:okhttp3.internal.connection.RealConnection getConnection$okhttp() -> getConnection$okhttp
    42:42:okhttp3.EventListener getEventListener$okhttp() -> getEventListener$okhttp
    43:43:okhttp3.internal.connection.ExchangeFinder getFinder$okhttp() -> getFinder$okhttp
    51:51:boolean getHasFailure$okhttp() -> getHasFailure$okhttp
    57:57:boolean isCoalescedConnection$okhttp() -> isCoalescedConnection$okhttp
    47:47:boolean isDuplex$okhttp() -> isDuplex$okhttp
    144:145:okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams() -> newWebSocketStreams
    153:153:void noNewExchangesOnConnection() -> noNewExchangesOnConnection
    202:202:void noRequestBody() -> noRequestBody
    127:135:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    110:116:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    121:121:void responseHeadersEnd(okhttp3.Response) -> responseHeadersEnd
    104:104:void responseHeadersStart() -> responseHeadersStart
    170:172:void trackFailure(java.io.IOException) -> trackFailure
    140:140:okhttp3.Headers trailers() -> trailers
    149:149:void webSocketUpgradeFailed() -> webSocketUpgradeFailed
    62:68:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.connection.Exchange$RequestBodySink -> okhttp3.internal.connection.Exchange$RequestBodySink:
# {"id":"sourceFile","fileName":"Exchange.kt"}
    206:210:void <init>(okhttp3.internal.connection.Exchange,okio.Sink,long) -> <init>
    241:250:void close() -> close
    255:257:java.io.IOException complete(java.io.IOException) -> complete
    233:235:void flush() -> flush
    217:226:void write(okio.Buffer,long) -> write
okhttp3.internal.connection.Exchange$ResponseBodySource -> okhttp3.internal.connection.Exchange$ResponseBodySource:
# {"id":"sourceFile","fileName":"Exchange.kt"}
    262:273:void <init>(okhttp3.internal.connection.Exchange,okio.Source,long) -> <init>
    311:317:void close() -> close
    322:329:java.io.IOException complete(java.io.IOException) -> complete
    279:305:long read(okio.Buffer,long) -> read
okhttp3.internal.connection.ExchangeFinder -> okhttp3.internal.connection.ExchangeFinder:
# {"id":"sourceFile","fileName":"ExchangeFinder.kt"}
    56:60:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Address,okhttp3.internal.connection.RealCall,okhttp3.EventListener) -> <init>
    74:88:okhttp3.internal.http.ExchangeCodec find(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain) -> find
    150:255:okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean) -> findConnection
    106:132:okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean) -> findHealthyConnection
    58:58:okhttp3.Address getAddress$okhttp() -> getAddress$okhttp
    275:297:boolean retryAfterFailure() -> retryAfterFailure
    306:315:okhttp3.Route retryRoute() -> retryRoute
    325:326:boolean sameHostAndPort(okhttp3.HttpUrl) -> sameHostAndPort
    260:266:void trackFailure(java.io.IOException) -> trackFailure
okhttp3.internal.connection.RealCall -> okhttp3.internal.connection.RealCall:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    60:110:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> <init>
    60:60:okhttp3.internal.connection.RealCall$timeout$1 access$getTimeout$p(okhttp3.internal.connection.RealCall) -> access$getTimeout$p
    60:60:java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall) -> access$toLoggableString
    271:554:void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection) -> acquireConnectionNoEvents
    346:562:java.io.IOException callDone(java.io.IOException) -> callDone
    170:171:void callStart() -> callStart
    136:142:void cancel() -> cancel
    60:60:java.lang.Object clone() -> clone
    60:60:okhttp3.Call clone() -> clone
    122:122:okhttp3.internal.connection.RealCall clone() -> clone
    434:452:okhttp3.Address createAddress(okhttp3.HttpUrl) -> createAddress
    161:164:void enqueue(okhttp3.Callback) -> enqueue
    226:241:void enterNetworkInterceptorExchange(okhttp3.Request,boolean) -> enterNetworkInterceptorExchange
    148:156:okhttp3.Response execute() -> execute
    419:427:void exitNetworkInterceptorExchange$okhttp(boolean) -> exitNetworkInterceptorExchange$okhttp
    61:61:okhttp3.OkHttpClient getClient() -> getClient
    88:88:okhttp3.internal.connection.RealConnection getConnection() -> getConnection
    117:117:okhttp3.internal.connection.RealConnection getConnectionToCancel() -> getConnectionToCancel
    68:68:okhttp3.EventListener getEventListener$okhttp() -> getEventListener$okhttp
    64:64:boolean getForWebSocket() -> getForWebSocket
    97:97:okhttp3.internal.connection.Exchange getInterceptorScopedExchange$okhttp() -> getInterceptorScopedExchange$okhttp
    63:63:okhttp3.Request getOriginalRequest() -> getOriginalRequest
    177:212:okhttp3.Response getResponseWithInterceptorChain$okhttp() -> getResponseWithInterceptorChain$okhttp
    248:264:okhttp3.internal.connection.Exchange initExchange$okhttp(okhttp3.internal.http.RealInterceptorChain) -> initExchange$okhttp
    145:145:boolean isCanceled() -> isCanceled
    167:167:boolean isExecuted() -> isExecuted
    290:309:java.io.IOException messageDone$okhttp(okhttp3.internal.connection.Exchange,boolean,boolean,java.io.IOException) -> messageDone$okhttp
    317:325:java.io.IOException noMoreExchanges$okhttp(java.io.IOException) -> noMoreExchanges$okhttp
    468:468:java.lang.String redactedUrl$okhttp() -> redactedUrl$okhttp
    374:571:java.net.Socket releaseConnectionNoEvents$okhttp() -> releaseConnectionNoEvents$okhttp
    124:124:okhttp3.Request request() -> request
    456:456:boolean retryAfterFailure() -> retryAfterFailure
    117:117:void setConnectionToCancel(okhttp3.internal.connection.RealConnection) -> setConnectionToCancel
    60:60:okio.Timeout timeout() -> timeout
    119:119:okio.AsyncTimeout timeout() -> timeout
    409:411:void timeoutEarlyExit() -> timeoutEarlyExit
    395:399:java.io.IOException timeoutExit(java.io.IOException) -> timeoutExit
    463:465:java.lang.String toLoggableString() -> toLoggableString
okhttp3.internal.connection.RealCall$AsyncCall -> okhttp3.internal.connection.RealCall$AsyncCall:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    470:473:void <init>(okhttp3.internal.connection.RealCall,okhttp3.Callback) -> <init>
    494:553:void executeOn(java.util.concurrent.ExecutorService) -> executeOn
    487:487:okhttp3.internal.connection.RealCall getCall() -> getCall
    473:473:java.util.concurrent.atomic.AtomicInteger getCallsPerHost() -> getCallsPerHost
    481:481:java.lang.String getHost() -> getHost
    484:484:okhttp3.Request getRequest() -> getRequest
    477:477:void reuseCallsPerHostFrom(okhttp3.internal.connection.RealCall$AsyncCall) -> reuseCallsPerHostFrom
    513:562:void run() -> run
okhttp3.internal.connection.RealCall$CallReference -> okhttp3.internal.connection.RealCall$CallReference:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    548:549:void <init>(okhttp3.internal.connection.RealCall,java.lang.Object) -> <init>
    548:548:java.lang.Object getCallStackTrace() -> getCallStackTrace
okhttp3.internal.connection.RealCall$timeout$1 -> okhttp3.internal.connection.RealCall$timeout$1:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    70:70:void <init>(okhttp3.internal.connection.RealCall) -> <init>
    72:72:void timedOut() -> timedOut
okhttp3.internal.connection.RealConnection -> okhttp3.internal.connection.RealConnection:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    0:0:void <clinit>() -> <clinit>
    86:143:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route) -> <init>
    85:85:okhttp3.Handshake access$getHandshake$p(okhttp3.internal.connection.RealConnection) -> access$getHandshake$p
    85:85:void access$setSocket$p(okhttp3.internal.connection.RealConnection,java.net.Socket) -> access$setSocket$p
    641:641:void cancel() -> cancel
    599:602:boolean certificateSupportHost(okhttp3.HttpUrl,okhttp3.Handshake) -> certificateSupportHost
    175:243:void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener) -> connect
    689:695:void connectFailed$okhttp(okhttp3.OkHttpClient,okhttp3.Route,java.io.IOException) -> connectFailed$okhttp
    283:311:void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener) -> connectSocket
    363:430:void connectTls(okhttp3.internal.connection.ConnectionSpecSelector) -> connectTls
    258:271:void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener) -> connectTunnel
    448:483:okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl) -> createTunnel
    499:519:okhttp3.Request createTunnelRequest() -> createTunnelRequest
    323:341:void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener) -> establishProtocol
    140:140:java.util.List getCalls() -> getCalls
    86:86:okhttp3.internal.connection.RealConnectionPool getConnectionPool() -> getConnectionPool
    143:143:long getIdleAtNs$okhttp() -> getIdleAtNs$okhttp
    116:116:boolean getNoNewExchanges() -> getNoNewExchanges
    128:128:int getRouteFailureCount$okhttp() -> getRouteFailureCount$okhttp
    684:684:okhttp3.Handshake handshake() -> handshake
    163:164:void incrementSuccessCount$okhttp() -> incrementSuccessCount$okhttp
    532:768:boolean isEligible$okhttp(okhttp3.Address,java.util.List) -> isEligible$okhttp
    650:779:boolean isHealthy(boolean) -> isHealthy
    150:150:boolean isMultiplexed$okhttp() -> isMultiplexed$okhttp
    607:618:okhttp3.internal.http.ExchangeCodec newCodec$okhttp(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain) -> newCodec$okhttp
    624:630:okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams$okhttp(okhttp3.internal.connection.Exchange) -> newWebSocketStreams$okhttp
    159:160:void noCoalescedConnections$okhttp() -> noCoalescedConnections$okhttp
    154:155:void noNewExchanges$okhttp() -> noNewExchanges$okhttp
    681:682:void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings) -> onSettings
    676:676:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
    737:737:okhttp3.Protocol protocol() -> protocol
    637:637:okhttp3.Route route() -> route
    575:772:boolean routeMatchesAny(java.util.List) -> routeMatchesAny
    143:143:void setIdleAtNs$okhttp(long) -> setIdleAtNs$okhttp
    116:116:void setNoNewExchanges(boolean) -> setNoNewExchanges
    128:128:void setRouteFailureCount$okhttp(int) -> setRouteFailureCount$okhttp
    644:644:java.net.Socket socket() -> socket
    347:358:void startHttp2(int) -> startHttp2
    584:775:boolean supportsUrl(okhttp3.HttpUrl) -> supportsUrl
    740:744:java.lang.String toString() -> toString
    703:735:void trackFailure$okhttp(okhttp3.internal.connection.RealCall,java.io.IOException) -> trackFailure$okhttp
okhttp3.internal.connection.RealConnection$Companion -> okhttp3.internal.connection.RealConnection$Companion:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    747:747:void <init>() -> <init>
    758:760:okhttp3.internal.connection.RealConnection newTestConnection(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route,java.net.Socket,long) -> newTestConnection
okhttp3.internal.connection.RealConnection$WhenMappings -> okhttp3.internal.connection.RealConnection$WhenMappings:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    0:0:void <clinit>() -> <clinit>
okhttp3.internal.connection.RealConnection$connectTls$1 -> okhttp3.internal.connection.RealConnection$connectTls$1:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    0:0:void <init>(okhttp3.CertificatePinner,okhttp3.Handshake,okhttp3.Address) -> <init>
    403:403:java.lang.Object invoke() -> invoke
    405:406:java.util.List invoke() -> invoke
okhttp3.internal.connection.RealConnection$connectTls$2 -> okhttp3.internal.connection.RealConnection$connectTls$2:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    0:0:void <init>(okhttp3.internal.connection.RealConnection) -> <init>
    410:410:java.lang.Object invoke() -> invoke
    411:768:java.util.List invoke() -> invoke
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1 -> okhttp3.internal.connection.RealConnection$newWebSocketStreams$1:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    630:630:void <init>(okio.BufferedSource,okio.BufferedSink,okhttp3.internal.connection.Exchange) -> <init>
    632:632:void close() -> close
okhttp3.internal.connection.RealConnectionPool -> okhttp3.internal.connection.RealConnectionPool:
# {"id":"sourceFile","fileName":"RealConnectionPool.kt"}
    0:0:void <clinit>() -> <clinit>
    33:56:void <init>(okhttp3.internal.concurrent.TaskRunner,int,long,java.util.concurrent.TimeUnit) -> <init>
    83:88:boolean callAcquirePooledConnection(okhttp3.Address,okhttp3.internal.connection.RealCall,java.util.List,boolean) -> callAcquirePooledConnection
    152:185:long cleanup(long) -> cleanup
    108:261:boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection) -> connectionBecameIdle
    66:66:int connectionCount() -> connectionCount
    120:135:void evictAll() -> evictAll
    60:254:int idleConnectionCount() -> idleConnectionCount
    217:265:int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long) -> pruneAndGetAllocationCount
    97:257:void put(okhttp3.internal.connection.RealConnection) -> put
okhttp3.internal.connection.RealConnectionPool$Companion -> okhttp3.internal.connection.RealConnectionPool$Companion:
# {"id":"sourceFile","fileName":"RealConnectionPool.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    246:246:void <init>() -> <init>
    247:247:okhttp3.internal.connection.RealConnectionPool get(okhttp3.ConnectionPool) -> get
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1 -> okhttp3.internal.connection.RealConnectionPool$cleanupTask$1:
# {"id":"sourceFile","fileName":"RealConnectionPool.kt"}
    43:43:void <init>(okhttp3.internal.connection.RealConnectionPool,java.lang.String) -> <init>
    44:44:long runOnce() -> runOnce
okhttp3.internal.connection.RouteDatabase -> okhttp3.internal.connection.RouteDatabase:
# {"id":"sourceFile","fileName":"RouteDatabase.kt"}
    26:27:void <init>() -> <init>
    36:37:void connected(okhttp3.Route) -> connected
    31:32:void failed(okhttp3.Route) -> failed
    40:40:boolean shouldPostpone(okhttp3.Route) -> shouldPostpone
okhttp3.internal.connection.RouteException -> okhttp3.internal.connection.RouteException:
# {"id":"sourceFile","fileName":"RouteException.kt"}
    24:26:void <init>(java.io.IOException) -> <init>
    30:31:void addConnectException(java.io.IOException) -> addConnectException
    24:24:java.io.IOException getFirstConnectException() -> getFirstConnectException
    26:26:java.io.IOException getLastConnectException() -> getLastConnectException
okhttp3.internal.connection.RouteSelector -> okhttp3.internal.connection.RouteSelector:
# {"id":"sourceFile","fileName":"RouteSelector.kt"}
    0:0:void <clinit>() -> <clinit>
    38:55:void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener) -> <init>
    61:61:boolean hasNext() -> hasNext
    121:121:boolean hasNextProxy() -> hasNextProxy
    65:94:okhttp3.internal.connection.RouteSelector$Selection next() -> next
    126:131:java.net.Proxy nextProxy() -> nextProxy
    139:179:void resetNextInetSocketAddress(java.net.Proxy) -> resetNextInetSocketAddress
    114:117:void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy) -> resetNextProxy
    101:111:java.util.List resetNextProxy$selectProxies(java.net.Proxy,okhttp3.HttpUrl,okhttp3.internal.connection.RouteSelector) -> resetNextProxy$selectProxies
okhttp3.internal.connection.RouteSelector$Companion -> okhttp3.internal.connection.RouteSelector$Companion:
# {"id":"sourceFile","fileName":"RouteSelector.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    196:196:void <init>() -> <init>
    202:206:java.lang.String getSocketHost(java.net.InetSocketAddress) -> getSocketHost
okhttp3.internal.connection.RouteSelector$Selection -> okhttp3.internal.connection.RouteSelector$Selection:
# {"id":"sourceFile","fileName":"RouteSelector.kt"}
    185:185:void <init>(java.util.List) -> <init>
    185:185:java.util.List getRoutes() -> getRoutes
    188:188:boolean hasNext() -> hasNext
    191:192:okhttp3.Route next() -> next
okhttp3.internal.http.BridgeInterceptor -> okhttp3.internal.http.BridgeInterceptor:
# {"id":"sourceFile","fileName":"BridgeInterceptor.kt"}
    34:34:void <init>(okhttp3.CookieJar) -> <init>
    110:119:java.lang.String cookieHeader(java.util.List) -> cookieHeader
    38:106:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.CallServerInterceptor -> okhttp3.internal.http.CallServerInterceptor:
# {"id":"sourceFile","fileName":"CallServerInterceptor.kt"}
    27:27:void <init>(boolean) -> <init>
    31:147:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    0:0:boolean shouldIgnoreAndWaitForRealResponse(int) -> shouldIgnoreAndWaitForRealResponse
okhttp3.internal.http.DatesKt -> okhttp3.internal.http.DatesKt:
# {"id":"sourceFile","fileName":"dates.kt"}
    32:66:void <clinit>() -> <clinit>
    70:101:java.util.Date toHttpDateOrNull(java.lang.String) -> toHttpDateOrNull
    106:106:java.lang.String toHttpDateString(java.util.Date) -> toHttpDateString
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1 -> okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1:
# {"id":"sourceFile","fileName":"dates.kt"}
    32:32:void <init>() -> <init>
    32:32:java.lang.Object initialValue() -> initialValue
    35:37:java.text.DateFormat initialValue() -> initialValue
okhttp3.internal.http.ExchangeCodec -> okhttp3.internal.http.ExchangeCodec:
# {"id":"sourceFile","fileName":"ExchangeCodec.kt"}
    0:0:void <clinit>() -> <clinit>
okhttp3.internal.http.ExchangeCodec$Companion -> okhttp3.internal.http.ExchangeCodec$Companion:
# {"id":"sourceFile","fileName":"ExchangeCodec.kt"}
    0:0:void <clinit>() -> <clinit>
    72:72:void <init>() -> <init>
okhttp3.internal.http.HttpHeaders -> okhttp3.internal.http.HttpHeaders:
# {"id":"sourceFile","fileName":"HttpHeaders.kt"}
    37:38:void <clinit>() -> <clinit>
    242:242:boolean hasBody(okhttp3.Response) -> hasBody
    60:67:java.util.List parseChallenges(okhttp3.Headers,java.lang.String) -> parseChallenges
    216:230:boolean promisesBody(okhttp3.Response) -> promisesBody
    81:131:void readChallengeHeader(okio.Buffer,java.util.List) -> readChallengeHeader
    166:183:java.lang.String readQuotedString(okio.Buffer) -> readQuotedString
    192:196:java.lang.String readToken(okio.Buffer) -> readToken
    202:207:void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers) -> receiveHeaders
    138:147:boolean skipCommasAndWhitespace(okio.Buffer) -> skipCommasAndWhitespace
    157:157:boolean startsWith(okio.Buffer,byte) -> startsWith
okhttp3.internal.http.HttpMethod -> okhttp3.internal.http.HttpMethod:
# {"id":"sourceFile","fileName":"HttpMethod.kt"}
    0:0:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    19:23:boolean invalidatesCache(java.lang.String) -> invalidatesCache
    33:33:boolean permitsRequestBody(java.lang.String) -> permitsRequestBody
    41:41:boolean redirectsToGet(java.lang.String) -> redirectsToGet
    37:37:boolean redirectsWithBody(java.lang.String) -> redirectsWithBody
    26:30:boolean requiresRequestBody(java.lang.String) -> requiresRequestBody
okhttp3.internal.http.RealInterceptorChain -> okhttp3.internal.http.RealInterceptorChain:
# {"id":"sourceFile","fileName":"RealInterceptorChain.kt"}
    36:44:void <init>(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int) -> <init>
    85:85:okhttp3.Call call() -> call
    61:61:int connectTimeoutMillis() -> connectTimeoutMillis
    59:59:okhttp3.Connection connection() -> connection
    56:56:okhttp3.internal.http.RealInterceptorChain copy$okhttp(int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int) -> copy$okhttp
    49:55:okhttp3.internal.http.RealInterceptorChain copy$okhttp$default(okhttp3.internal.http.RealInterceptorChain,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int,int,java.lang.Object) -> copy$okhttp$default
    37:37:okhttp3.internal.connection.RealCall getCall$okhttp() -> getCall$okhttp
    42:42:int getConnectTimeoutMillis$okhttp() -> getConnectTimeoutMillis$okhttp
    40:40:okhttp3.internal.connection.Exchange getExchange$okhttp() -> getExchange$okhttp
    43:43:int getReadTimeoutMillis$okhttp() -> getReadTimeoutMillis$okhttp
    41:41:okhttp3.Request getRequest$okhttp() -> getRequest$okhttp
    44:44:int getWriteTimeoutMillis$okhttp() -> getWriteTimeoutMillis$okhttp
    91:118:okhttp3.Response proceed(okhttp3.Request) -> proceed
    69:69:int readTimeoutMillis() -> readTimeoutMillis
    87:87:okhttp3.Request request() -> request
    64:66:okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit) -> withConnectTimeout
    72:74:okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit) -> withReadTimeout
    80:82:okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit) -> withWriteTimeout
    77:77:int writeTimeoutMillis() -> writeTimeoutMillis
okhttp3.internal.http.RealResponseBody -> okhttp3.internal.http.RealResponseBody:
# {"id":"sourceFile","fileName":"RealResponseBody.kt"}
    28:31:void <init>(java.lang.String,long,okio.BufferedSource) -> <init>
    33:33:long contentLength() -> contentLength
    35:35:okhttp3.MediaType contentType() -> contentType
    37:37:okio.BufferedSource source() -> source
okhttp3.internal.http.RequestLine -> okhttp3.internal.http.RequestLine:
# {"id":"sourceFile","fileName":"RequestLine.kt"}
    0:0:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    30:38:java.lang.String get(okhttp3.Request,java.net.Proxy$Type) -> get
    46:46:boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type) -> includeAuthorityInRequestLine
    54:56:java.lang.String requestPath(okhttp3.HttpUrl) -> requestPath
okhttp3.internal.http.RetryAndFollowUpInterceptor -> okhttp3.internal.http.RetryAndFollowUpInterceptor:
# {"id":"sourceFile","fileName":"RetryAndFollowUpInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
    54:54:void <init>(okhttp3.OkHttpClient) -> <init>
    293:330:okhttp3.Request buildRedirectRequest(okhttp3.Response,java.lang.String) -> buildRedirectRequest
    210:284:okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.internal.connection.Exchange) -> followUpRequest
    58:133:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    174:193:boolean isRecoverable(java.io.IOException,boolean) -> isRecoverable
    151:160:boolean recover(java.io.IOException,okhttp3.internal.connection.RealCall,okhttp3.Request,boolean) -> recover
    167:169:boolean requestIsOneShot(java.io.IOException,okhttp3.Request) -> requestIsOneShot
    334:339:int retryAfter(okhttp3.Response,int) -> retryAfter
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion -> okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion:
# {"id":"sourceFile","fileName":"RetryAndFollowUpInterceptor.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    344:344:void <init>() -> <init>
okhttp3.internal.http.StatusLine -> okhttp3.internal.http.StatusLine:
# {"id":"sourceFile","fileName":"StatusLine.kt"}
    0:0:void <clinit>() -> <clinit>
    24:27:void <init>(okhttp3.Protocol,int,java.lang.String) -> <init>
    31:38:java.lang.String toString() -> toString
okhttp3.internal.http.StatusLine$Companion -> okhttp3.internal.http.StatusLine$Companion:
# {"id":"sourceFile","fileName":"StatusLine.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    42:42:void <init>() -> <init>
    51:51:okhttp3.internal.http.StatusLine get(okhttp3.Response) -> get
    62:103:okhttp3.internal.http.StatusLine parse(java.lang.String) -> parse
okhttp3.internal.http1.HeadersReader -> okhttp3.internal.http1.HeadersReader:
# {"id":"sourceFile","fileName":"HeadersReader.kt"}
    0:0:void <clinit>() -> <clinit>
    24:25:void <init>(okio.BufferedSource) -> <init>
    24:24:okio.BufferedSource getSource() -> getSource
    36:42:okhttp3.Headers readHeaders() -> readHeaders
    29:30:java.lang.String readLine() -> readLine
okhttp3.internal.http1.HeadersReader$Companion -> okhttp3.internal.http1.HeadersReader$Companion:
# {"id":"sourceFile","fileName":"HeadersReader.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    45:45:void <init>() -> <init>
okhttp3.internal.http1.Http1ExchangeCodec -> okhttp3.internal.http1.Http1ExchangeCodec:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    0:0:void <clinit>() -> <clinit>
    64:73:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink) -> <init>
    64:64:void access$detachTimeout(okhttp3.internal.http1.Http1ExchangeCodec,okio.ForwardingTimeout) -> access$detachTimeout
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getClient$p
    64:64:okhttp3.internal.http1.HeadersReader access$getHeadersReader$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getHeadersReader$p
    64:64:okio.BufferedSink access$getSink$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getSink$p
    64:64:okio.BufferedSource access$getSource$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getSource$p
    64:64:int access$getState$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getState$p
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getTrailers$p
    64:64:void access$setState$p(okhttp3.internal.http1.Http1ExchangeCodec,int) -> access$setState$p
    64:64:void access$setTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.Headers) -> access$setTrailers$p
    104:104:void cancel() -> cancel
    93:98:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    251:254:void detachTimeout(okio.ForwardingTimeout) -> detachTimeout
    155:155:void finishRequest() -> finishRequest
    151:151:void flushRequest() -> flushRequest
    68:68:okhttp3.internal.connection.RealConnection getConnection() -> getConnection
    76:76:boolean isChunked(okhttp3.Response) -> isChunked
    79:79:boolean isChunked(okhttp3.Request) -> isChunked
    89:89:boolean isClosed() -> isClosed
    215:217:okio.Sink newChunkedSink() -> newChunkedSink
    233:235:okio.Source newChunkedSource(okhttp3.HttpUrl) -> newChunkedSource
    227:229:okio.Source newFixedLengthSource(long) -> newFixedLengthSource
    221:223:okio.Sink newKnownLengthSink() -> newKnownLengthSink
    239:242:okio.Source newUnknownLengthSource() -> newUnknownLengthSource
    132:139:okio.Source openResponseBodySource(okhttp3.Response) -> openResponseBodySource
    173:210:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    124:126:long reportedContentLength(okhttp3.Response) -> reportedContentLength
    262:266:void skipConnectBody(okhttp3.Response) -> skipConnectBody
    146:147:okhttp3.Headers trailers() -> trailers
    160:169:void writeRequest(okhttp3.Headers,java.lang.String) -> writeRequest
    118:119:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource -> okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    331:332:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    333:333:boolean getClosed() -> getClosed
    332:332:okio.ForwardingTimeout getTimeout() -> getTimeout
    339:343:long read(okio.Buffer,long) -> read
    352:357:void responseBodyComplete() -> responseBodyComplete
    333:333:void setClosed(boolean) -> setClosed
    335:335:okio.Timeout timeout() -> timeout
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink -> okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    299:300:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    323:328:void close() -> close
    317:319:void flush() -> flush
    303:303:okio.Timeout timeout() -> timeout
    306:312:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource -> okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    405:408:void <init>(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.HttpUrl) -> <init>
    456:462:void close() -> close
    411:427:long read(okio.Buffer,long) -> read
    433:451:void readChunkSize() -> readChunkSize
okhttp3.internal.http1.Http1ExchangeCodec$Companion -> okhttp3.internal.http1.Http1ExchangeCodec$Companion:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    493:493:void <init>() -> <init>
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource -> okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    362:367:void <init>(okhttp3.internal.http1.Http1ExchangeCodec,long) -> <init>
    392:400:void close() -> close
    372:386:long read(okio.Buffer,long) -> read
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink -> okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    270:271:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    288:291:void close() -> close
    283:284:void flush() -> flush
    274:274:okio.Timeout timeout() -> timeout
    277:279:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource -> okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    467:467:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    485:489:void close() -> close
    471:478:long read(okio.Buffer,long) -> read
okhttp3.internal.http2.ConnectionShutdownException -> okhttp3.internal.http2.ConnectionShutdownException:
# {"id":"sourceFile","fileName":"ConnectionShutdownException.kt"}
    24:24:void <init>() -> <init>
okhttp3.internal.http2.ErrorCode -> okhttp3.internal.http2.ErrorCode:
# {"id":"sourceFile","fileName":"ErrorCode.kt"}
    0:0:okhttp3.internal.http2.ErrorCode[] $values() -> $values
    21:47:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int,int) -> <init>
    19:19:int getHttpCode() -> getHttpCode
    0:0:okhttp3.internal.http2.ErrorCode valueOf(java.lang.String) -> valueOf
    0:0:okhttp3.internal.http2.ErrorCode[] values() -> values
okhttp3.internal.http2.ErrorCode$Companion -> okhttp3.internal.http2.ErrorCode$Companion:
# {"id":"sourceFile","fileName":"ErrorCode.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    49:49:void <init>() -> <init>
    50:50:okhttp3.internal.http2.ErrorCode fromHttp2(int) -> fromHttp2
okhttp3.internal.http2.Header -> okhttp3.internal.http2.Header:
# {"id":"sourceFile","fileName":"Header.kt"}
    39:51:void <clinit>() -> <clinit>
    22:28:void <init>(okio.ByteString,okio.ByteString) -> <init>
    31:31:void <init>(java.lang.String,java.lang.String) -> <init>
    33:33:void <init>(okio.ByteString,java.lang.String) -> <init>
    0:0:okio.ByteString component1() -> component1
    0:0:okio.ByteString component2() -> component2
    0:0:okhttp3.internal.http2.Header copy(okio.ByteString,okio.ByteString) -> copy
    0:0:okhttp3.internal.http2.Header copy$default(okhttp3.internal.http2.Header,okio.ByteString,okio.ByteString,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:int hashCode() -> hashCode
    35:35:java.lang.String toString() -> toString
okhttp3.internal.http2.Header$Companion -> okhttp3.internal.http2.Header$Companion:
# {"id":"sourceFile","fileName":"Header.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    37:37:void <init>() -> <init>
okhttp3.internal.http2.Hpack -> okhttp3.internal.http2.Hpack:
# {"id":"sourceFile","fileName":"Hpack.kt"}
    58:122:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
    612:614:okio.ByteString checkLowercase(okio.ByteString) -> checkLowercase
    122:122:java.util.Map getNAME_TO_FIRST_INDEX() -> getNAME_TO_FIRST_INDEX
    58:58:okhttp3.internal.http2.Header[] getSTATIC_HEADER_TABLE() -> getSTATIC_HEADER_TABLE
    383:389:java.util.Map nameToFirstIndex() -> nameToFirstIndex
okhttp3.internal.http2.Hpack$Reader -> okhttp3.internal.http2.Hpack$Reader:
# {"id":"sourceFile","fileName":"Hpack.kt"}
    0:0:void <init>(okio.Source,int) -> <init>
    125:136:void <init>(okio.Source,int,int) -> <init>
    125:125:void <init>(okio.Source,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    149:153:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    159:162:void clearDynamicTable() -> clearDynamicTable
    251:251:int dynamicTableIndex(int) -> dynamicTableIndex
    171:182:int evictToRecoverBytes(int) -> evictToRecoverBytes
    141:142:java.util.List getAndResetHeaderList() -> getAndResetHeaderList
    284:292:okio.ByteString getName(int) -> getName
    303:334:void insertIntoDynamicTable(int,okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    297:297:boolean isStaticHeader(int) -> isStaticHeader
    146:146:int maxDynamicTableByteCount() -> maxDynamicTableByteCount
    339:339:int readByte() -> readByte
    368:377:okio.ByteString readByteString() -> readByteString
    193:229:void readHeaders() -> readHeaders
    237:245:void readIndexedHeader(int) -> readIndexedHeader
    353:353:int readInt(int,int) -> readInt
    270:272:void readLiteralHeaderWithIncrementalIndexingIndexedName(int) -> readLiteralHeaderWithIncrementalIndexingIndexedName
    277:279:void readLiteralHeaderWithIncrementalIndexingNewName() -> readLiteralHeaderWithIncrementalIndexingNewName
    256:258:void readLiteralHeaderWithoutIndexingIndexedName(int) -> readLiteralHeaderWithoutIndexingIndexedName
    263:265:void readLiteralHeaderWithoutIndexingNewName() -> readLiteralHeaderWithoutIndexingNewName
okhttp3.internal.http2.Hpack$Writer -> okhttp3.internal.http2.Hpack$Writer:
# {"id":"sourceFile","fileName":"Hpack.kt"}
    0:0:void <init>(int,okio.Buffer) -> <init>
    0:0:void <init>(okio.Buffer) -> <init>
    392:408:void <init>(int,boolean,okio.Buffer) -> <init>
    392:392:void <init>(int,boolean,okio.Buffer,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    596:600:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    413:416:void clearDynamicTable() -> clearDynamicTable
    425:436:int evictToRecoverBytes(int) -> evictToRecoverBytes
    442:463:void insertIntoDynamicTable(okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    581:592:void resizeHeaderTable(int) -> resizeHeaderTable
    568:576:void writeByteString(okio.ByteString) -> writeByteString
    470:538:void writeHeaders(java.util.List) -> writeHeaders
    549:563:void writeInt(int,int,int) -> writeInt
okhttp3.internal.http2.Http2 -> okhttp3.internal.http2.Http2:
# {"id":"sourceFile","fileName":"Http2.kt"}
    23:88:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    134:144:java.lang.String formatFlags(int,int) -> formatFlags
    123:123:java.lang.String formattedType$okhttp(int) -> formattedType$okhttp
    115:119:java.lang.String frameLog(boolean,int,int,int,int) -> frameLog
okhttp3.internal.http2.Http2Connection -> okhttp3.internal.http2.Http2Connection:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    995:997:void <clinit>() -> <clinit>
    54:1007:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> <init>
    54:54:void access$failConnection(okhttp3.internal.http2.Http2Connection,java.io.IOException) -> access$failConnection
    54:54:long access$getAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection) -> access$getAwaitPongsReceived$p
    54:54:java.util.Set access$getCurrentPushRequests$p(okhttp3.internal.http2.Http2Connection) -> access$getCurrentPushRequests$p
    54:54:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$getDEFAULT_SETTINGS$cp
    54:54:long access$getDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection) -> access$getDegradedPongsReceived$p
    54:54:long access$getIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection) -> access$getIntervalPingsSent$p
    54:54:long access$getIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection) -> access$getIntervalPongsReceived$p
    54:54:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection) -> access$getPushObserver$p
    54:54:okhttp3.internal.concurrent.TaskQueue access$getSettingsListenerQueue$p(okhttp3.internal.http2.Http2Connection) -> access$getSettingsListenerQueue$p
    54:54:okhttp3.internal.concurrent.TaskRunner access$getTaskRunner$p(okhttp3.internal.http2.Http2Connection) -> access$getTaskRunner$p
    54:54:okhttp3.internal.concurrent.TaskQueue access$getWriterQueue$p(okhttp3.internal.http2.Http2Connection) -> access$getWriterQueue$p
    54:54:boolean access$isShutdown$p(okhttp3.internal.http2.Http2Connection) -> access$isShutdown$p
    54:54:void access$setAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection,long) -> access$setAwaitPongsReceived$p
    54:54:void access$setDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection,long) -> access$setDegradedPongsReceived$p
    54:54:void access$setIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection,long) -> access$setIntervalPingsSent$p
    54:54:void access$setIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection,long) -> access$setIntervalPongsReceived$p
    54:54:void access$setShutdown$p(okhttp3.internal.http2.Http2Connection,boolean) -> access$setShutdown$p
    54:54:void access$setWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection,long) -> access$setWriteBytesMaximum$p
    401:1040:void awaitPong() -> awaitPong
    438:438:void close() -> close
    449:1052:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close$okhttp
    483:483:void failConnection(java.io.IOException) -> failConnection
    408:408:void flush() -> flush
    69:69:boolean getClient$okhttp() -> getClient$okhttp
    74:74:java.lang.String getConnectionName$okhttp() -> getConnectionName$okhttp
    75:75:int getLastGoodStreamId$okhttp() -> getLastGoodStreamId$okhttp
    72:72:okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp() -> getListener$okhttp
    78:78:int getNextStreamId$okhttp() -> getNextStreamId$okhttp
    109:109:okhttp3.internal.http2.Settings getOkHttpSettings() -> getOkHttpSettings
    122:122:okhttp3.internal.http2.Settings getPeerSettings() -> getPeerSettings
    129:129:long getReadBytesAcknowledged() -> getReadBytesAcknowledged
    125:125:long getReadBytesTotal() -> getReadBytesTotal
    144:144:okhttp3.internal.http2.Http2Connection$ReaderRunnable getReaderRunnable() -> getReaderRunnable
    140:140:java.net.Socket getSocket$okhttp() -> getSocket$okhttp
    177:177:okhttp3.internal.http2.Http2Stream getStream(int) -> getStream
    73:73:java.util.Map getStreams$okhttp() -> getStreams$okhttp
    137:137:long getWriteBytesMaximum() -> getWriteBytesMaximum
    133:133:long getWriteBytesTotal() -> getWriteBytesTotal
    141:141:okhttp3.internal.http2.Http2Writer getWriter() -> getWriter
    525:530:boolean isHealthy(long) -> isHealthy
    225:225:okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean) -> newStream
    240:268:okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean) -> newStream
    175:175:int openStreamCount() -> openStreamCount
    935:1127:void pushDataLater$okhttp(int,okio.BufferedSource,int,boolean) -> pushDataLater$okhttp
    911:1114:void pushHeadersLater$okhttp(int,java.util.List,boolean) -> pushHeadersLater$okhttp
    886:1101:void pushRequestLater$okhttp(int,java.util.List) -> pushRequestLater$okhttp
    952:1140:void pushResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode) -> pushResetLater$okhttp
    210:211:okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean) -> pushStream
    0:0:boolean pushedStream$okhttp(int) -> pushedStream$okhttp
    180:1011:okhttp3.internal.http2.Http2Stream removeStream$okhttp(int) -> removeStream$okhttp
    549:1088:void sendDegradedPingLater$okhttp() -> sendDegradedPingLater$okhttp
    75:75:void setLastGoodStreamId$okhttp(int) -> setLastGoodStreamId$okhttp
    78:78:void setNextStreamId$okhttp(int) -> setNextStreamId$okhttp
    122:122:void setPeerSettings(okhttp3.internal.http2.Settings) -> setPeerSettings
    512:519:void setSettings(okhttp3.internal.http2.Settings) -> setSettings
    418:429:void shutdown(okhttp3.internal.http2.ErrorCode) -> shutdown
    0:0:void start() -> start
    0:0:void start(boolean) -> start
    497:1075:void start(boolean,okhttp3.internal.concurrent.TaskRunner) -> start
    495:495:void start$default(okhttp3.internal.http2.Http2Connection,boolean,okhttp3.internal.concurrent.TaskRunner,int,java.lang.Object) -> start$default
    189:195:void updateConnectionFlowControl$okhttp(long) -> updateConnectionFlowControl$okhttp
    304:1013:void writeData(int,boolean,okio.Buffer,long) -> writeData
    280:280:void writeHeaders$okhttp(int,boolean,java.util.List) -> writeHeaders$okhttp
    376:378:void writePing(boolean,int,int) -> writePing
    392:395:void writePing() -> writePing
    385:386:void writePingAndAwaitPong() -> writePingAndAwaitPong
    354:354:void writeSynReset$okhttp(int,okhttp3.internal.http2.ErrorCode) -> writeSynReset$okhttp
    340:1020:void writeSynResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode) -> writeSynResetLater$okhttp
    361:1033:void writeWindowUpdateLater$okhttp(int,long) -> writeWindowUpdateLater$okhttp
okhttp3.internal.http2.Http2Connection$Builder -> okhttp3.internal.http2.Http2Connection$Builder:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    559:569:void <init>(boolean,okhttp3.internal.concurrent.TaskRunner) -> <init>
    601:601:okhttp3.internal.http2.Http2Connection build() -> build
    561:561:boolean getClient$okhttp() -> getClient$okhttp
    565:565:java.lang.String getConnectionName$okhttp() -> getConnectionName$okhttp
    568:568:okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp() -> getListener$okhttp
    570:570:int getPingIntervalMillis$okhttp() -> getPingIntervalMillis$okhttp
    569:569:okhttp3.internal.http2.PushObserver getPushObserver$okhttp() -> getPushObserver$okhttp
    567:567:okio.BufferedSink getSink$okhttp() -> getSink$okhttp
    564:564:java.net.Socket getSocket$okhttp() -> getSocket$okhttp
    566:566:okio.BufferedSource getSource$okhttp() -> getSource$okhttp
    562:562:okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp() -> getTaskRunner$okhttp
    589:589:okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener) -> listener
    597:597:okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int) -> pingIntervalMillis
    593:593:okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver) -> pushObserver
    561:561:void setClient$okhttp(boolean) -> setClient$okhttp
    565:565:void setConnectionName$okhttp(java.lang.String) -> setConnectionName$okhttp
    568:568:void setListener$okhttp(okhttp3.internal.http2.Http2Connection$Listener) -> setListener$okhttp
    570:570:void setPingIntervalMillis$okhttp(int) -> setPingIntervalMillis$okhttp
    569:569:void setPushObserver$okhttp(okhttp3.internal.http2.PushObserver) -> setPushObserver$okhttp
    567:567:void setSink$okhttp(okio.BufferedSink) -> setSink$okhttp
    564:564:void setSocket$okhttp(java.net.Socket) -> setSocket$okhttp
    566:566:void setSource$okhttp(okio.BufferedSource) -> setSource$okhttp
    0:0:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket) -> socket
    0:0:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String) -> socket
    0:0:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource) -> socket
    579:585:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink) -> socket
    573:577:okhttp3.internal.http2.Http2Connection$Builder socket$default(okhttp3.internal.http2.Http2Connection$Builder,java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink,int,java.lang.Object) -> socket$default
okhttp3.internal.http2.Http2Connection$Companion -> okhttp3.internal.http2.Http2Connection$Companion:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    992:992:void <init>() -> <init>
    995:995:okhttp3.internal.http2.Settings getDEFAULT_SETTINGS() -> getDEFAULT_SETTINGS
okhttp3.internal.http2.Http2Connection$Listener -> okhttp3.internal.http2.Http2Connection$Listener:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    983:983:void <clinit>() -> <clinit>
    961:961:void <init>() -> <init>
    0:0:void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings) -> onSettings
okhttp3.internal.http2.Http2Connection$Listener$Companion -> okhttp3.internal.http2.Http2Connection$Listener$Companion:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    981:981:void <init>() -> <init>
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1 -> okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    983:983:void <init>() -> <init>
    986:986:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
okhttp3.internal.http2.Http2Connection$ReaderRunnable -> okhttp3.internal.http2.Http2Connection$ReaderRunnable:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    609:610:void <init>(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader) -> <init>
    0:0:void ackSettings() -> ackSettings
    0:0:void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long) -> alternateService
    736:1041:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings) -> applyAndAckSettings
    639:652:void data(boolean,int,okio.BufferedSource,int) -> data
    610:610:okhttp3.internal.http2.Http2Reader getReader$okhttp() -> getReader$okhttp
    817:1063:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> goAway
    662:1013:void headers(boolean,int,int,java.util.List) -> headers
    609:609:java.lang.Object invoke() -> invoke
    613:628:void invoke() -> invoke
    787:1055:void ping(boolean,int,int) -> ping
    0:0:void priority(int,int,int,boolean) -> priority
    867:867:void pushPromise(int,int,java.util.List) -> pushPromise
    706:711:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    715:1026:void settings(boolean,okhttp3.internal.http2.Settings) -> settings
    839:1064:void windowUpdate(int,long) -> windowUpdate
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$lambda$7$lambda$6$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$lambda$7$lambda$6$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,kotlin.jvm.internal.Ref$ObjectRef) -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$lambda$2$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$lambda$2$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Stream) -> <init>
    220:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,int) -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,boolean,okhttp3.internal.http2.Settings) -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okio.Buffer,int,boolean) -> <init>
    222:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List,boolean) -> <init>
    219:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List) -> <init>
    219:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode) -> <init>
    219:222:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection) -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$special$$inlined$schedule$1 -> okhttp3.internal.http2.Http2Connection$special$$inlined$schedule$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    84:84:void <init>(java.lang.String,okhttp3.internal.http2.Http2Connection,long) -> <init>
    219:232:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode) -> <init>
    220:222:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$default$1 -> okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,long) -> <init>
    220:222:long runOnce() -> runOnce
okhttp3.internal.http2.Http2ExchangeCodec -> okhttp3.internal.http2.Http2ExchangeCodec:
# {"id":"sourceFile","fileName":"Http2ExchangeCodec.kt"}
    137:158:void <clinit>() -> <clinit>
    50:61:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okhttp3.internal.http.RealInterceptorChain,okhttp3.internal.http2.Http2Connection) -> <init>
    50:50:java.util.List access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp() -> access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp
    50:50:java.util.List access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp() -> access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp
    122:123:void cancel() -> cancel
    68:68:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    92:92:void finishRequest() -> finishRequest
    88:88:void flushRequest() -> flushRequest
    52:52:okhttp3.internal.connection.RealConnection getConnection() -> getConnection
    114:114:okio.Source openResponseBodySource(okhttp3.Response) -> openResponseBodySource
    96:99:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    108:109:long reportedContentLength(okhttp3.Response) -> reportedContentLength
    118:118:okhttp3.Headers trailers() -> trailers
    72:84:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http2.Http2ExchangeCodec$Companion -> okhttp3.internal.http2.Http2ExchangeCodec$Companion:
# {"id":"sourceFile","fileName":"Http2ExchangeCodec.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    126:126:void <init>() -> <init>
    161:176:java.util.List http2HeadersList(okhttp3.Request) -> http2HeadersList
    185:201:okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol) -> readHttp2HeadersList
okhttp3.internal.http2.Http2Reader -> okhttp3.internal.http2.Http2Reader:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
    496:496:void <clinit>() -> <clinit>
    58:64:void <init>(okio.BufferedSource,boolean) -> <init>
    58:58:java.util.logging.Logger access$getLogger$cp() -> access$getLogger$cp
    316:316:void close() -> close
    89:128:boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler) -> nextFrame
    71:81:void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler) -> readConnectionPreface
    168:181:void readData(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readData
    292:303:void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readGoAway
    154:163:java.util.List readHeaderBlock(int,int,int,int) -> readHeaderBlock
    136:149:void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readHeaders
    282:287:void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readPing
    186:188:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readPriority
    193:197:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int) -> readPriority
    271:277:void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readPushPromise
    202:207:void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readRstStream
    212:265:void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readSettings
    308:311:void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readWindowUpdate
okhttp3.internal.http2.Http2Reader$Companion -> okhttp3.internal.http2.Http2Reader$Companion:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    495:495:void <init>() -> <init>
    496:496:java.util.logging.Logger getLogger() -> getLogger
    503:503:int lengthWithoutPadding(int,int,int) -> lengthWithoutPadding
okhttp3.internal.http2.Http2Reader$ContinuationSource -> okhttp3.internal.http2.Http2Reader$ContinuationSource:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
    323:324:void <init>(okio.BufferedSource) -> <init>
    0:0:void close() -> close
    328:328:int getFlags() -> getFlags
    331:331:int getLeft() -> getLeft
    327:327:int getLength() -> getLength
    332:332:int getPadding() -> getPadding
    329:329:int getStreamId() -> getStreamId
    336:346:long read(okio.Buffer,long) -> read
    358:367:void readContinuationHeader() -> readContinuationHeader
    328:328:void setFlags(int) -> setFlags
    331:331:void setLeft(int) -> setLeft
    327:327:void setLength(int) -> setLength
    332:332:void setPadding(int) -> setPadding
    329:329:void setStreamId(int) -> setStreamId
    350:350:okio.Timeout timeout() -> timeout
okhttp3.internal.http2.Http2Reader$Handler -> okhttp3.internal.http2.Http2Reader$Handler:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
okhttp3.internal.http2.Http2Stream -> okhttp3.internal.http2.Http2Stream:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    0:0:void <clinit>() -> <clinit>
    37:97:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> <init>
    635:713:void addBytesToWriteWindow(long) -> addBytesToWriteWindow
    495:710:void cancelStreamIfNecessary$okhttp() -> cancelStreamIfNecessary$okhttp
    644:646:void checkOutNotClosed$okhttp() -> checkOutNotClosed$okhttp
    237:240:void close(okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close
    257:698:boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException) -> closeInternal
    247:250:void closeLater(okhttp3.internal.http2.ErrorCode) -> closeLater
    202:206:void enqueueTrailers(okhttp3.Headers) -> enqueueTrailers
    40:40:okhttp3.internal.http2.Http2Connection getConnection() -> getConnection
    87:87:okhttp3.internal.http2.ErrorCode getErrorCode$okhttp() -> getErrorCode$okhttp
    90:90:java.io.IOException getErrorException$okhttp() -> getErrorException$okhttp
    39:39:int getId() -> getId
    53:53:long getReadBytesAcknowledged() -> getReadBytesAcknowledged
    49:49:long getReadBytesTotal() -> getReadBytesTotal
    77:77:okhttp3.internal.http2.Http2Stream$StreamTimeout getReadTimeout$okhttp() -> getReadTimeout$okhttp
    223:228:okio.Sink getSink() -> getSink
    74:74:okhttp3.internal.http2.Http2Stream$FramingSink getSink$okhttp() -> getSink$okhttp
    214:214:okio.Source getSource() -> getSource
    70:70:okhttp3.internal.http2.Http2Stream$FramingSource getSource$okhttp() -> getSource$okhttp
    61:61:long getWriteBytesMaximum() -> getWriteBytesMaximum
    57:57:long getWriteBytesTotal() -> getWriteBytesTotal
    78:78:okhttp3.internal.http2.Http2Stream$StreamTimeout getWriteTimeout$okhttp() -> getWriteTimeout$okhttp
    126:127:boolean isLocallyInitiated() -> isLocallyInitiated
    112:120:boolean isOpen() -> isOpen
    209:209:okio.Timeout readTimeout() -> readTimeout
    276:700:void receiveData(okio.BufferedSource,int) -> receiveData
    284:707:void receiveHeaders(okhttp3.Headers,boolean) -> receiveHeaders
    303:708:void receiveRstStream(okhttp3.internal.http2.ErrorCode) -> receiveRstStream
    87:87:void setErrorCode$okhttp(okhttp3.internal.http2.ErrorCode) -> setErrorCode$okhttp
    90:90:void setErrorException$okhttp(java.io.IOException) -> setErrorException$okhttp
    54:54:void setReadBytesAcknowledged$okhttp(long) -> setReadBytesAcknowledged$okhttp
    50:50:void setReadBytesTotal$okhttp(long) -> setReadBytesTotal$okhttp
    62:62:void setWriteBytesMaximum$okhttp(long) -> setWriteBytesMaximum$okhttp
    58:58:void setWriteBytesTotal$okhttp(long) -> setWriteBytesTotal$okhttp
    137:148:okhttp3.Headers takeHeaders() -> takeHeaders
    157:163:okhttp3.Headers trailers() -> trailers
    659:714:void waitForIo$okhttp() -> waitForIo$okhttp
    179:691:void writeHeaders(java.util.List,boolean,boolean) -> writeHeaders
    211:211:okio.Timeout writeTimeout() -> writeTimeout
okhttp3.internal.http2.Http2Stream$Companion -> okhttp3.internal.http2.Http2Stream$Companion:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    629:629:void <init>() -> <init>
okhttp3.internal.http2.Http2Stream$FramingSink -> okhttp3.internal.http2.Http2Stream$FramingSink:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    510:519:void <init>(okhttp3.internal.http2.Http2Stream,boolean) -> <init>
    510:510:void <init>(okhttp3.internal.http2.Http2Stream,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    589:698:void close() -> close
    544:567:void emitFrame(boolean) -> emitFrame
    573:694:void flush() -> flush
    524:524:boolean getClosed() -> getClosed
    512:512:boolean getFinished() -> getFinished
    522:522:okhttp3.Headers getTrailers() -> getTrailers
    524:524:void setClosed(boolean) -> setClosed
    512:512:void setFinished(boolean) -> setFinished
    522:522:void setTrailers(okhttp3.Headers) -> setTrailers
    585:585:okio.Timeout timeout() -> timeout
    528:690:void write(okio.Buffer,long) -> write
okhttp3.internal.http2.Http2Stream$FramingSource -> okhttp3.internal.http2.Http2Stream$FramingSource:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    314:328:void <init>(okhttp3.internal.http2.Http2Stream,long,boolean) -> <init>
    476:699:void close() -> close
    337:337:boolean getClosed$okhttp() -> getClosed$okhttp
    322:322:boolean getFinished$okhttp() -> getFinished$okhttp
    328:328:okio.Buffer getReadBuffer() -> getReadBuffer
    325:325:okio.Buffer getReceiveBuffer() -> getReceiveBuffer
    334:334:okhttp3.Headers getTrailers() -> getTrailers
    341:399:long read(okio.Buffer,long) -> read
    418:698:void receive$okhttp(okio.BufferedSource,long) -> receive$okhttp
    337:337:void setClosed$okhttp(boolean) -> setClosed$okhttp
    322:322:void setFinished$okhttp(boolean) -> setFinished$okhttp
    334:334:void setTrailers(okhttp3.Headers) -> setTrailers
    471:471:okio.Timeout timeout() -> timeout
    407:691:void updateConnectionFlowControl(long) -> updateConnectionFlowControl
okhttp3.internal.http2.Http2Stream$StreamTimeout -> okhttp3.internal.http2.Http2Stream$StreamTimeout:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    668:668:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    684:684:void exitAndThrowIfTimedOut() -> exitAndThrowIfTimedOut
    675:677:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    670:671:void timedOut() -> timedOut
okhttp3.internal.http2.Http2Writer -> okhttp3.internal.http2.Http2Writer:
# {"id":"sourceFile","fileName":"Http2Writer.kt"}
    314:314:void <clinit>() -> <clinit>
    44:52:void <init>(okio.BufferedSink,boolean) -> <init>
    68:80:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> applyAndAckSettings
    269:271:void close() -> close
    56:63:void connectionPreface() -> connectionPreface
    150:154:void data(boolean,int,okio.Buffer,int) -> data
    158:165:void dataFrame(int,int,okio.Buffer,int) -> dataFrame
    119:121:void flush() -> flush
    258:264:void frameHeader(int,int,int,int) -> frameHeader
    52:52:okhttp3.internal.http2.Hpack$Writer getHpackWriter() -> getHpackWriter
    220:234:void goAway(int,okhttp3.internal.http2.ErrorCode,byte[]) -> goAway
    295:311:void headers(boolean,int,java.util.List) -> headers
    139:139:int maxDataLength() -> maxDataLength
    198:208:void ping(boolean,int,int) -> ping
    100:115:void pushPromise(int,int,java.util.List) -> pushPromise
    125:136:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    172:190:void settings(okhttp3.internal.http2.Settings) -> settings
    242:254:void windowUpdate(int,long) -> windowUpdate
    277:285:void writeContinuationFrames(int,long) -> writeContinuationFrames
okhttp3.internal.http2.Http2Writer$Companion -> okhttp3.internal.http2.Http2Writer$Companion:
# {"id":"sourceFile","fileName":"Http2Writer.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    313:313:void <init>() -> <init>
okhttp3.internal.http2.Huffman -> okhttp3.internal.http2.Huffman:
# {"id":"sourceFile","fileName":"Huffman.kt"}
    38:82:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    159:178:void addCode(int,int,int) -> addCode
    124:154:void decode(okio.BufferedSource,long,okio.BufferedSink) -> decode
    91:108:void encode(okio.ByteString,okio.BufferedSink) -> encode
    115:117:int encodedLength(okio.ByteString) -> encodedLength
okhttp3.internal.http2.Huffman$Node -> okhttp3.internal.http2.Huffman$Node:
# {"id":"sourceFile","fileName":"Huffman.kt"}
    192:195:void <init>() -> <init>
    199:203:void <init>(int,int) -> <init>
    183:183:okhttp3.internal.http2.Huffman$Node[] getChildren() -> getChildren
    186:186:int getSymbol() -> getSymbol
    189:189:int getTerminalBitCount() -> getTerminalBitCount
okhttp3.internal.http2.PushObserver -> okhttp3.internal.http2.PushObserver:
# {"id":"sourceFile","fileName":"PushObserver.kt"}
    75:75:void <clinit>() -> <clinit>
okhttp3.internal.http2.PushObserver$Companion -> okhttp3.internal.http2.PushObserver$Companion:
# {"id":"sourceFile","fileName":"PushObserver.kt"}
    0:0:void <clinit>() -> <clinit>
    74:74:void <init>() -> <init>
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel -> okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel:
# {"id":"sourceFile","fileName":"PushObserver.kt"}
    76:76:void <init>() -> <init>
    88:88:boolean onData(int,okio.BufferedSource,int,boolean) -> onData
    0:0:boolean onHeaders(int,java.util.List,boolean) -> onHeaders
    0:0:boolean onRequest(int,java.util.List) -> onRequest
    0:0:void onReset(int,okhttp3.internal.http2.ErrorCode) -> onReset
okhttp3.internal.http2.Settings -> okhttp3.internal.http2.Settings:
# {"id":"sourceFile","fileName":"Settings.kt"}
    0:0:void <clinit>() -> <clinit>
    22:28:void <init>() -> <init>
    44:45:void clear() -> clear
    66:66:int get(int) -> get
    74:74:boolean getEnablePush(boolean) -> getEnablePush
    34:34:int getHeaderTableSize() -> getHeaderTableSize
    40:40:int getInitialWindowSize() -> getInitialWindowSize
    79:79:int getMaxConcurrentStreams() -> getMaxConcurrentStreams
    84:84:int getMaxFrameSize(int) -> getMaxFrameSize
    89:89:int getMaxHeaderListSize(int) -> getMaxHeaderListSize
    62:62:boolean isSet(int) -> isSet
    98:99:void merge(okhttp3.internal.http2.Settings) -> merge
    49:55:okhttp3.internal.http2.Settings set(int,int) -> set
    69:69:int size() -> size
okhttp3.internal.http2.Settings$Companion -> okhttp3.internal.http2.Settings$Companion:
# {"id":"sourceFile","fileName":"Settings.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    103:103:void <init>() -> <init>
okhttp3.internal.http2.StreamResetException -> okhttp3.internal.http2.StreamResetException:
# {"id":"sourceFile","fileName":"StreamResetException.kt"}
    21:21:void <init>(okhttp3.internal.http2.ErrorCode) -> <init>
okhttp3.internal.io.FileSystem -> okhttp3.internal.io.FileSystem:
# {"id":"sourceFile","fileName":"FileSystem.kt"}
    47:47:void <clinit>() -> <clinit>
okhttp3.internal.io.FileSystem$Companion -> okhttp3.internal.io.FileSystem$Companion:
# {"id":"sourceFile","fileName":"FileSystem.kt"}
    0:0:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem -> okhttp3.internal.io.FileSystem$Companion$SystemFileSystem:
# {"id":"sourceFile","fileName":"FileSystem.kt"}
    48:48:void <init>() -> <init>
    66:70:okio.Sink appendingSink(java.io.File) -> appendingSink
    77:78:void delete(java.io.File) -> delete
    96:102:void deleteContents(java.io.File) -> deleteContents
    82:82:boolean exists(java.io.File) -> exists
    88:90:void rename(java.io.File,java.io.File) -> rename
    55:59:okio.Sink sink(java.io.File) -> sink
    84:84:long size(java.io.File) -> size
    50:50:okio.Source source(java.io.File) -> source
    0:0:java.lang.String toString() -> toString
okhttp3.internal.platform.Android10Platform -> okhttp3.internal.platform.Android10Platform:
# {"id":"sourceFile","fileName":"Android10Platform.kt"}
    67:67:void <clinit>() -> <clinit>
    36:74:void <init>() -> <init>
    35:35:boolean access$isSupported$cp() -> access$isSupported$cp
    64:64:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    51:52:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    57:57:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    61:61:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    46:47:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.Android10Platform$$ExternalSyntheticApiModelOutline0 -> okhttp3.internal.platform.Android10Platform$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:android.security.NetworkSecurityPolicy okhttp3.internal.platform.Android10Platform$$InternalSyntheticApiModelOutline$1$7baf887dad7cf71cdc82a9a5a15608b26be932d9b1aa35805cf145e894699446$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.Android10Platform$$ExternalSyntheticApiModelOutline1 -> okhttp3.internal.platform.Android10Platform$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean okhttp3.internal.platform.Android10Platform$$InternalSyntheticApiModelOutline$1$7baf887dad7cf71cdc82a9a5a15608b26be932d9b1aa35805cf145e894699446$1.m(android.security.NetworkSecurityPolicy,java.lang.String) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.Android10Platform$Companion -> okhttp3.internal.platform.Android10Platform$Companion:
# {"id":"sourceFile","fileName":"Android10Platform.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    66:66:void <init>() -> <init>
    69:69:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    67:67:boolean isSupported() -> isSupported
okhttp3.internal.platform.AndroidPlatform -> okhttp3.internal.platform.AndroidPlatform:
# {"id":"sourceFile","fileName":"AndroidPlatform.kt"}
    148:150:void <clinit>() -> <clinit>
    45:165:void <init>() -> <init>
    44:44:boolean access$isSupported$cp() -> access$isSupported$cp
    110:110:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    115:120:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    85:86:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    63:70:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    91:91:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    93:93:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    104:105:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    96:99:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    76:77:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.AndroidPlatform$$ExternalSyntheticApiModelOutline0 -> okhttp3.internal.platform.AndroidPlatform$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean okhttp3.internal.platform.AndroidPlatform$$InternalSyntheticApiModelOutline$1$2d80ff980185d9c0b6ba27ae920019f601e932434300a563366166f410e63cd4$3.m(android.security.NetworkSecurityPolicy) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.AndroidPlatform$Companion -> okhttp3.internal.platform.AndroidPlatform$Companion:
# {"id":"sourceFile","fileName":"AndroidPlatform.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    147:147:void <init>() -> <init>
    160:160:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    148:148:boolean isSupported() -> isSupported
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex -> okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex:
# {"id":"sourceFile","fileName":"AndroidPlatform.kt"}
    130:132:void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method) -> <init>
    0:0:javax.net.ssl.X509TrustManager component1() -> component1
    0:0:java.lang.reflect.Method component2() -> component2
    0:0:okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex copy(javax.net.ssl.X509TrustManager,java.lang.reflect.Method) -> copy
    0:0:okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex copy$default(okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex,javax.net.ssl.X509TrustManager,java.lang.reflect.Method,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    136:140:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    0:0:int hashCode() -> hashCode
    0:0:java.lang.String toString() -> toString
okhttp3.internal.platform.BouncyCastlePlatform -> okhttp3.internal.platform.BouncyCastlePlatform:
# {"id":"sourceFile","fileName":"BouncyCastlePlatform.kt"}
    85:87:void <clinit>() -> <clinit>
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    34:35:void <init>() -> <init>
    34:34:boolean access$isSupported$cp() -> access$isSupported$cp
    60:99:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    74:81:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    38:38:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    41:48:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
    52:52:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.BouncyCastlePlatform$Companion -> okhttp3.internal.platform.BouncyCastlePlatform$Companion:
# {"id":"sourceFile","fileName":"BouncyCastlePlatform.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    84:84:void <init>() -> <init>
    94:94:okhttp3.internal.platform.BouncyCastlePlatform buildIfSupported() -> buildIfSupported
    85:85:boolean isSupported() -> isSupported
okhttp3.internal.platform.ConscryptPlatform -> okhttp3.internal.platform.ConscryptPlatform:
# {"id":"sourceFile","fileName":"ConscryptPlatform.kt"}
    109:115:void <clinit>() -> <clinit>
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    37:38:void <init>() -> <init>
    37:37:boolean access$isSupported$cp() -> access$isSupported$cp
    83:143:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    96:99:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    44:44:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    103:105:javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager) -> newSslSocketFactory
    47:55:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
    0:0:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.ConscryptPlatform$Companion -> okhttp3.internal.platform.ConscryptPlatform$Companion:
# {"id":"sourceFile","fileName":"ConscryptPlatform.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    108:108:void <init>() -> <init>
    127:137:boolean atLeastVersion(int,int,int) -> atLeastVersion
    126:126:boolean atLeastVersion$default(okhttp3.internal.platform.ConscryptPlatform$Companion,int,int,int,int,java.lang.Object) -> atLeastVersion$default
    124:124:okhttp3.internal.platform.ConscryptPlatform buildIfSupported() -> buildIfSupported
    109:109:boolean isSupported() -> isSupported
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier -> okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier:
# {"id":"sourceFile","fileName":"ConscryptPlatform.kt"}
    0:0:void <clinit>() -> <clinit>
    59:59:void <init>() -> <init>
    0:0:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    0:0:boolean verify(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLSession) -> verify
okhttp3.internal.platform.Jdk8WithJettyBootPlatform -> okhttp3.internal.platform.Jdk8WithJettyBootPlatform:
# {"id":"sourceFile","fileName":"Jdk8WithJettyBootPlatform.kt"}
    0:0:void <clinit>() -> <clinit>
    27:32:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class) -> <init>
    53:57:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    38:47:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    63:72:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider -> okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider:
# {"id":"sourceFile","fileName":"Jdk8WithJettyBootPlatform.kt"}
    80:82:void <init>(java.util.List) -> <init>
    87:87:java.lang.String getSelected() -> getSelected
    85:85:boolean getUnsupported() -> getUnsupported
    92:118:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    87:87:void setSelected(java.lang.String) -> setSelected
    85:85:void setUnsupported(boolean) -> setUnsupported
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion -> okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion:
# {"id":"sourceFile","fileName":"Jdk8WithJettyBootPlatform.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    123:123:void <init>() -> <init>
    125:145:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
okhttp3.internal.platform.Jdk9Platform -> okhttp3.internal.platform.Jdk9Platform:
# {"id":"sourceFile","fileName":"Jdk9Platform.kt"}
    69:78:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    25:25:boolean access$isAvailable$cp() -> access$isAvailable$cp
    32:91:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    46:47:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    61:61:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.Jdk9Platform$$ExternalSyntheticApiModelOutline0 -> okhttp3.internal.platform.Jdk9Platform$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void okhttp3.internal.platform.Jdk9Platform$$InternalSyntheticApiModelOutline$1$0a35e2cb143a9f9745f9222061a0f219bad5b3f723b4be5221a9cca5d30db1ad$0.m(javax.net.ssl.SSLParameters,java.lang.String[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.Jdk9Platform$$ExternalSyntheticApiModelOutline1 -> okhttp3.internal.platform.Jdk9Platform$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String okhttp3.internal.platform.Jdk9Platform$$InternalSyntheticApiModelOutline$1$391cdc0259219c244eb17559b779a42d85d5b049bc100054ba973e0c0441d83f$0.m(javax.net.ssl.SSLSocket) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.Jdk9Platform$Companion -> okhttp3.internal.platform.Jdk9Platform$Companion:
# {"id":"sourceFile","fileName":"Jdk9Platform.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    65:65:void <init>() -> <init>
    86:86:okhttp3.internal.platform.Jdk9Platform buildIfSupported() -> buildIfSupported
    66:66:boolean isAvailable() -> isAvailable
okhttp3.internal.platform.OpenJSSEPlatform -> okhttp3.internal.platform.OpenJSSEPlatform:
# {"id":"sourceFile","fileName":"OpenJSSEPlatform.kt"}
    89:91:void <clinit>() -> <clinit>
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    33:34:void <init>() -> <init>
    33:33:boolean access$isSupported$cp() -> access$isSupported$cp
    62:103:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    78:85:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    40:40:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    43:50:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
    54:54:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.OpenJSSEPlatform$Companion -> okhttp3.internal.platform.OpenJSSEPlatform$Companion:
# {"id":"sourceFile","fileName":"OpenJSSEPlatform.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    88:88:void <init>() -> <init>
    98:98:okhttp3.internal.platform.OpenJSSEPlatform buildIfSupported() -> buildIfSupported
    89:89:boolean isSupported() -> isSupported
okhttp3.internal.platform.Platform -> okhttp3.internal.platform.Platform:
# {"id":"sourceFile","fileName":"Platform.kt"}
    178:183:void <clinit>() -> <clinit>
    70:70:void <init>() -> <init>
    70:70:okhttp3.internal.platform.Platform access$getPlatform$cp() -> access$getPlatform$cp
    70:70:void access$setPlatform$cp(okhttp3.internal.platform.Platform) -> access$setPlatform$cp
    0:0:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    160:160:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    163:163:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    0:0:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    128:128:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    0:0:okhttp3.internal.platform.Platform get() -> get
    0:0:java.lang.String getPrefix() -> getPrefix
    0:0:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    145:145:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    0:0:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    132:133:void log(java.lang.String,int,java.lang.Throwable) -> log
    131:131:void log$default(okhttp3.internal.platform.Platform,java.lang.String,int,java.lang.Throwable,int,java.lang.Object) -> log$default
    153:156:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    75:75:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    167:171:javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager) -> newSslSocketFactory
    78:85:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
    175:175:java.lang.String toString() -> toString
    93:102:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.Platform$Companion -> okhttp3.internal.platform.Platform$Companion:
# {"id":"sourceFile","fileName":"Platform.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    177:177:void <init>() -> <init>
    177:177:okhttp3.internal.platform.Platform access$findPlatform(okhttp3.internal.platform.Platform$Companion) -> access$findPlatform
    193:292:java.util.List alpnProtocolNames(java.util.List) -> alpnProtocolNames
    277:282:byte[] concatLengthPrefixed(java.util.List) -> concatLengthPrefixed
    226:227:okhttp3.internal.platform.Platform findAndroidPlatform() -> findAndroidPlatform
    231:269:okhttp3.internal.platform.Platform findJvmPlatform() -> findJvmPlatform
    219:222:okhttp3.internal.platform.Platform findPlatform() -> findPlatform
    186:186:okhttp3.internal.platform.Platform get() -> get
    198:198:boolean isAndroid() -> isAndroid
    214:215:boolean isBouncyCastlePreferred() -> isBouncyCastlePreferred
    202:203:boolean isConscryptPreferred() -> isConscryptPreferred
    208:209:boolean isOpenJSSEPreferred() -> isOpenJSSEPreferred
    189:189:void resetForTests(okhttp3.internal.platform.Platform) -> resetForTests
    188:188:void resetForTests$default(okhttp3.internal.platform.Platform$Companion,okhttp3.internal.platform.Platform,int,java.lang.Object) -> resetForTests$default
okhttp3.internal.platform.android.Android10SocketAdapter -> okhttp3.internal.platform.android.Android10SocketAdapter:
# {"id":"sourceFile","fileName":"Android10SocketAdapter.kt"}
    0:0:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    55:79:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    43:44:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    39:39:boolean isSupported() -> isSupported
    37:37:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
    34:34:boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory) -> matchesSocketFactory
    34:34:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.android.Android10SocketAdapter$$ExternalSyntheticApiModelOutline0 -> okhttp3.internal.platform.android.Android10SocketAdapter$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void okhttp3.internal.platform.android.Android10SocketAdapter$$InternalSyntheticApiModelOutline$1$16686ce0b22d01e5061bc0aa4aa6674ff40da52daaa80d83afd762996e01f3e8$0.m(javax.net.ssl.SSLSocket,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.android.Android10SocketAdapter$$ExternalSyntheticApiModelOutline1 -> okhttp3.internal.platform.android.Android10SocketAdapter$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean okhttp3.internal.platform.android.Android10SocketAdapter$$InternalSyntheticApiModelOutline$1$4e10918a22587d23f2536561e40fefb77762a0956ee2c7bcbb844713982d5712$0.m(javax.net.ssl.SSLSocket) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.android.Android10SocketAdapter$Companion -> okhttp3.internal.platform.android.Android10SocketAdapter$Companion:
# {"id":"sourceFile","fileName":"Android10SocketAdapter.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    69:69:void <init>() -> <init>
    72:72:okhttp3.internal.platform.android.SocketAdapter buildIfSupported() -> buildIfSupported
    74:74:boolean isSupported() -> isSupported
okhttp3.internal.platform.android.AndroidCertificateChainCleaner -> okhttp3.internal.platform.android.AndroidCertificateChainCleaner:
# {"id":"sourceFile","fileName":"AndroidCertificateChainCleaner.kt"}
    0:0:void <clinit>() -> <clinit>
    35:37:void <init>(javax.net.ssl.X509TrustManager,android.net.http.X509TrustManagerExtensions) -> <init>
    43:76:java.util.List clean(java.util.List,java.lang.String) -> clean
    52:53:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion -> okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion:
# {"id":"sourceFile","fileName":"AndroidCertificateChainCleaner.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    57:57:void <init>() -> <init>
    61:68:okhttp3.internal.platform.android.AndroidCertificateChainCleaner buildIfSupported(javax.net.ssl.X509TrustManager) -> buildIfSupported
okhttp3.internal.platform.android.AndroidLog -> okhttp3.internal.platform.android.AndroidLog:
# {"id":"sourceFile","fileName":"AndroidLog.kt"}
    54:67:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    70:84:void androidLog$okhttp(java.lang.String,int,java.lang.String,java.lang.Throwable) -> androidLog$okhttp
    99:100:void enable() -> enable
    105:114:void enableLogging(java.lang.String,java.lang.String) -> enableLogging
    95:95:java.lang.String loggerTag(java.lang.String) -> loggerTag
okhttp3.internal.platform.android.AndroidLogHandler -> okhttp3.internal.platform.android.AndroidLogHandler:
# {"id":"sourceFile","fileName":"AndroidLog.kt"}
    0:0:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    0:0:void close() -> close
    0:0:void flush() -> flush
    39:39:void publish(java.util.logging.LogRecord) -> publish
okhttp3.internal.platform.android.AndroidLogKt -> okhttp3.internal.platform.android.AndroidLogKt:
# {"id":"sourceFile","fileName":"AndroidLog.kt"}
    1:1:int access$getAndroidLevel(java.util.logging.LogRecord) -> access$getAndroidLevel
    32:33:int getAndroidLevel(java.util.logging.LogRecord) -> getAndroidLevel
okhttp3.internal.platform.android.AndroidSocketAdapter -> okhttp3.internal.platform.android.AndroidSocketAdapter:
# {"id":"sourceFile","fileName":"AndroidSocketAdapter.kt"}
    96:96:void <clinit>() -> <clinit>
    32:38:void <init>(java.lang.Class) -> <init>
    32:32:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getPlayProviderFactory$cp() -> access$getPlayProviderFactory$cp
    50:68:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    75:89:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    40:40:boolean isSupported() -> isSupported
    42:42:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
    32:32:boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory) -> matchesSocketFactory
    32:32:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion -> okhttp3.internal.platform.android.AndroidSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"AndroidSocketAdapter.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    94:94:void <init>() -> <init>
    94:94:okhttp3.internal.platform.android.AndroidSocketAdapter access$build(okhttp3.internal.platform.android.AndroidSocketAdapter$Companion,java.lang.Class) -> access$build
    106:116:okhttp3.internal.platform.android.AndroidSocketAdapter build(java.lang.Class) -> build
    120:120:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory(java.lang.String) -> factory
    95:95:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getPlayProviderFactory() -> getPlayProviderFactory
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1 -> okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1:
# {"id":"sourceFile","fileName":"AndroidSocketAdapter.kt"}
    120:120:void <init>(java.lang.String) -> <init>
    125:125:okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket) -> create
    122:122:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.BouncyCastleSocketAdapter -> okhttp3.internal.platform.android.BouncyCastleSocketAdapter:
# {"id":"sourceFile","fileName":"BouncyCastleSocketAdapter.kt"}
    60:60:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    27:27:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp() -> access$getFactory$cp
    47:70:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    33:36:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    30:30:boolean isSupported() -> isSupported
    28:28:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
    27:27:boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory) -> matchesSocketFactory
    27:27:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion -> okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"BouncyCastleSocketAdapter.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    59:59:void <init>() -> <init>
    60:60:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory() -> getFactory
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1 -> okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1:
# {"id":"sourceFile","fileName":"BouncyCastleSocketAdapter.kt"}
    60:60:void <init>() -> <init>
    64:64:okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket) -> create
    62:62:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.CloseGuard -> okhttp3.internal.platform.android.CloseGuard:
# {"id":"sourceFile","fileName":"CloseGuard.kt"}
    0:0:void <clinit>() -> <clinit>
    25:28:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    32:35:java.lang.Object createAndOpen(java.lang.String) -> createAndOpen
    47:47:boolean warnIfOpen(java.lang.Object) -> warnIfOpen
okhttp3.internal.platform.android.CloseGuard$Companion -> okhttp3.internal.platform.android.CloseGuard$Companion:
# {"id":"sourceFile","fileName":"CloseGuard.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    55:55:void <init>() -> <init>
    62:72:okhttp3.internal.platform.android.CloseGuard get() -> get
okhttp3.internal.platform.android.ConscryptSocketAdapter -> okhttp3.internal.platform.android.ConscryptSocketAdapter:
# {"id":"sourceFile","fileName":"ConscryptSocketAdapter.kt"}
    56:56:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    28:28:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp() -> access$getFactory$cp
    45:66:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    35:35:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    31:31:boolean isSupported() -> isSupported
    29:29:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
    28:28:boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory) -> matchesSocketFactory
    28:28:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion -> okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"ConscryptSocketAdapter.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    55:55:void <init>() -> <init>
    56:56:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory() -> getFactory
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1 -> okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1:
# {"id":"sourceFile","fileName":"ConscryptSocketAdapter.kt"}
    56:56:void <init>() -> <init>
    60:60:okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket) -> create
    58:58:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.DeferredSocketAdapter -> okhttp3.internal.platform.android.DeferredSocketAdapter:
# {"id":"sourceFile","fileName":"DeferredSocketAdapter.kt"}
    29:29:void <init>(okhttp3.internal.platform.android.DeferredSocketAdapter$Factory) -> <init>
    44:44:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    52:56:okhttp3.internal.platform.android.SocketAdapter getDelegate(javax.net.ssl.SSLSocket) -> getDelegate
    48:48:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    0:0:boolean isSupported() -> isSupported
    37:37:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
    29:29:boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory) -> matchesSocketFactory
    29:29:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory -> okhttp3.internal.platform.android.DeferredSocketAdapter$Factory:
# {"id":"sourceFile","fileName":"DeferredSocketAdapter.kt"}
okhttp3.internal.platform.android.SocketAdapter -> okhttp3.internal.platform.android.SocketAdapter:
# {"id":"sourceFile","fileName":"SocketAdapter.kt"}
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls -> okhttp3.internal.platform.android.SocketAdapter$DefaultImpls:
# {"id":"sourceFile","fileName":"SocketAdapter.kt"}
    0:0:boolean matchesSocketFactory(okhttp3.internal.platform.android.SocketAdapter,javax.net.ssl.SSLSocketFactory) -> matchesSocketFactory
    0:0:javax.net.ssl.X509TrustManager trustManager(okhttp3.internal.platform.android.SocketAdapter,javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.android.StandardAndroidSocketAdapter -> okhttp3.internal.platform.android.StandardAndroidSocketAdapter:
# {"id":"sourceFile","fileName":"StandardAndroidSocketAdapter.kt"}
    0:0:void <clinit>() -> <clinit>
    32:34:void <init>(java.lang.Class,java.lang.Class,java.lang.Class) -> <init>
    37:37:boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory) -> matchesSocketFactory
    41:45:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion -> okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"StandardAndroidSocketAdapter.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    50:50:void <init>() -> <init>
    54:61:okhttp3.internal.platform.android.SocketAdapter buildIfSupported(java.lang.String) -> buildIfSupported
    52:52:okhttp3.internal.platform.android.SocketAdapter buildIfSupported$default(okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion,java.lang.String,int,java.lang.Object) -> buildIfSupported$default
okhttp3.internal.proxy.NullProxySelector -> okhttp3.internal.proxy.NullProxySelector:
# {"id":"sourceFile","fileName":"NullProxySelector.kt"}
    0:0:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    0:0:void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException) -> connectFailed
    29:30:java.util.List select(java.net.URI) -> select
okhttp3.internal.publicsuffix.PublicSuffixDatabase -> okhttp3.internal.publicsuffix.PublicSuffixDatabase:
# {"id":"sourceFile","fileName":"PublicSuffixDatabase.kt"}
    244:249:void <clinit>() -> <clinit>
    35:41:void <init>() -> <init>
    35:35:okhttp3.internal.publicsuffix.PublicSuffixDatabase access$getInstance$cp() -> access$getInstance$cp
    100:170:java.util.List findMatchingRule(java.util.List) -> findMatchingRule
    69:85:java.lang.String getEffectiveTldPlusOne(java.lang.String) -> getEffectiveTldPlusOne
    207:226:void readTheList() -> readTheList
    187:199:void readTheListUninterruptibly() -> readTheListUninterruptibly
    235:238:void setListBytes(byte[],byte[]) -> setListBytes
    89:93:java.util.List splitDomain(java.lang.String) -> splitDomain
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion -> okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion:
# {"id":"sourceFile","fileName":"PublicSuffixDatabase.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    241:241:void <init>() -> <init>
    241:241:java.lang.String access$binarySearch(okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion,byte[],byte[][],int) -> access$binarySearch
    260:335:java.lang.String binarySearch(byte[],byte[][],int) -> binarySearch
    252:252:okhttp3.internal.publicsuffix.PublicSuffixDatabase get() -> get
okhttp3.internal.tls.BasicCertificateChainCleaner -> okhttp3.internal.tls.BasicCertificateChainCleaner:
# {"id":"sourceFile","fileName":"BasicCertificateChainCleaner.kt"}
    0:0:void <clinit>() -> <clinit>
    37:38:void <init>(okhttp3.internal.tls.TrustRootIndex) -> <init>
    49:95:java.util.List clean(java.util.List,java.lang.String) -> clean
    119:119:boolean equals(java.lang.Object) -> equals
    112:112:int hashCode() -> hashCode
    100:104:boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> verifySignature
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion -> okhttp3.internal.tls.BasicCertificateChainCleaner$Companion:
# {"id":"sourceFile","fileName":"BasicCertificateChainCleaner.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    123:123:void <init>() -> <init>
okhttp3.internal.tls.BasicTrustRootIndex -> okhttp3.internal.tls.BasicTrustRootIndex:
# {"id":"sourceFile","fileName":"BasicTrustRootIndex.kt"}
    22:60:void <init>(java.security.cert.X509Certificate[]) -> <init>
    49:49:boolean equals(java.lang.Object) -> equals
    34:65:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    53:53:int hashCode() -> hashCode
okhttp3.internal.tls.CertificateChainCleaner -> okhttp3.internal.tls.CertificateChainCleaner:
# {"id":"sourceFile","fileName":"CertificateChainCleaner.kt"}
    0:0:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
okhttp3.internal.tls.CertificateChainCleaner$Companion -> okhttp3.internal.tls.CertificateChainCleaner$Companion:
# {"id":"sourceFile","fileName":"CertificateChainCleaner.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    40:40:void <init>() -> <init>
    42:42:okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager) -> get
    46:46:okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[]) -> get
okhttp3.internal.tls.OkHostnameVerifier -> okhttp3.internal.tls.OkHostnameVerifier:
# {"id":"sourceFile","fileName":"OkHostnameVerifier.kt"}
    0:0:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    187:189:java.util.List allSubjectAltNames(java.security.cert.X509Certificate) -> allSubjectAltNames
    83:83:java.lang.String asciiToLowercase(java.lang.String) -> asciiToLowercase
    194:204:java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int) -> getSubjectAltNames
    89:89:boolean isAscii(java.lang.String) -> isAscii
    40:44:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    54:55:boolean verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    70:213:boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate) -> verifyHostname
    102:178:boolean verifyHostname(java.lang.String,java.lang.String) -> verifyHostname
    61:210:boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate) -> verifyIpAddress
okhttp3.internal.tls.TrustRootIndex -> okhttp3.internal.tls.TrustRootIndex:
# {"id":"sourceFile","fileName":"TrustRootIndex.kt"}
okhttp3.internal.ws.MessageDeflater -> okhttp3.internal.ws.MessageDeflater:
# {"id":"sourceFile","fileName":"MessageDeflater.kt"}
    29:34:void <init>(boolean) -> <init>
    62:62:void close() -> close
    39:58:void deflate(okio.Buffer) -> deflate
    64:64:boolean endsWith(okio.Buffer,okio.ByteString) -> endsWith
okhttp3.internal.ws.MessageDeflaterKt -> okhttp3.internal.ws.MessageDeflaterKt:
# {"id":"sourceFile","fileName":"MessageDeflater.kt"}
    26:26:void <clinit>() -> <clinit>
    1:1:okio.ByteString access$getEMPTY_DEFLATE_BLOCK$p() -> access$getEMPTY_DEFLATE_BLOCK$p
okhttp3.internal.ws.MessageInflater -> okhttp3.internal.ws.MessageInflater:
# {"id":"sourceFile","fileName":"MessageInflater.kt"}
    26:31:void <init>(boolean) -> <init>
    55:55:void close() -> close
    36:51:void inflate(okio.Buffer) -> inflate
okhttp3.internal.ws.MessageInflaterKt -> okhttp3.internal.ws.MessageInflaterKt:
# {"id":"sourceFile","fileName":"MessageInflater.kt"}
okhttp3.internal.ws.RealWebSocket -> okhttp3.internal.ws.RealWebSocket:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    629:629:void <clinit>() -> <clinit>
    53:135:void <init>(okhttp3.internal.concurrent.TaskRunner,okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long,okhttp3.internal.ws.WebSocketExtensions,long) -> <init>
    53:53:java.util.ArrayDeque access$getMessageAndCloseQueue$p(okhttp3.internal.ws.RealWebSocket) -> access$getMessageAndCloseQueue$p
    53:53:java.lang.String access$getName$p(okhttp3.internal.ws.RealWebSocket) -> access$getName$p
    53:53:boolean access$isValid(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions) -> access$isValid
    53:53:void access$setExtensions$p(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions) -> access$setExtensions$p
    315:315:void awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    143:143:void cancel() -> cancel
    223:248:void checkUpgradeSuccess$okhttp(okhttp3.Response,okhttp3.internal.connection.Exchange) -> checkUpgradeSuccess$okhttp
    427:427:boolean close(int,java.lang.String) -> close
    435:453:boolean close(int,java.lang.String,long) -> close
    147:165:void connect(okhttp3.OkHttpClient) -> connect
    579:596:void failWebSocket(java.lang.Exception,okhttp3.Response) -> failWebSocket
    57:57:okhttp3.WebSocketListener getListener$okhttp() -> getListener$okhttp
    254:656:void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams) -> initReaderAndWriter
    209:215:boolean isValid(okhttp3.internal.ws.WebSocketExtensions) -> isValid
    291:293:void loopReader() -> loopReader
    357:386:void onReadClose(int,java.lang.String) -> onReadClose
    333:333:void onReadMessage(java.lang.String) -> onReadMessage
    338:338:void onReadMessage(okio.ByteString) -> onReadMessage
    343:348:void onReadPing(okio.ByteString) -> onReadPing
    352:354:void onReadPong(okio.ByteString) -> onReadPong
    419:423:boolean pong(okio.ByteString) -> pong
    304:307:boolean processNextFrame() -> processNextFrame
    140:140:long queueSize() -> queueSize
    327:327:int receivedPingCount() -> receivedPingCount
    329:329:int receivedPongCount() -> receivedPongCount
    138:138:okhttp3.Request request() -> request
    459:661:void runWriter() -> runWriter
    393:393:boolean send(java.lang.String) -> send
    397:397:boolean send(okio.ByteString) -> send
    402:414:boolean send(okio.ByteString,int) -> send
    325:325:int sentPingCount() -> sentPingCount
    321:322:void tearDown() -> tearDown
    489:670:boolean writeOneFrame$okhttp() -> writeOneFrame$okhttp
    554:571:void writePingFrame$okhttp() -> writePingFrame$okhttp
okhttp3.internal.ws.RealWebSocket$Close -> okhttp3.internal.ws.RealWebSocket$Close:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    605:608:void <init>(int,okio.ByteString,long) -> <init>
    608:608:long getCancelAfterCloseMillis() -> getCancelAfterCloseMillis
    606:606:int getCode() -> getCode
    607:607:okio.ByteString getReason() -> getReason
okhttp3.internal.ws.RealWebSocket$Companion -> okhttp3.internal.ws.RealWebSocket$Companion:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    628:628:void <init>() -> <init>
okhttp3.internal.ws.RealWebSocket$Message -> okhttp3.internal.ws.RealWebSocket$Message:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    600:602:void <init>(int,okio.ByteString) -> <init>
    602:602:okio.ByteString getData() -> getData
    601:601:int getFormatOpcode() -> getFormatOpcode
okhttp3.internal.ws.RealWebSocket$Streams -> okhttp3.internal.ws.RealWebSocket$Streams:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    611:614:void <init>(boolean,okio.BufferedSource,okio.BufferedSink) -> <init>
    612:612:boolean getClient() -> getClient
    614:614:okio.BufferedSink getSink() -> getSink
    613:613:okio.BufferedSource getSource() -> getSource
okhttp3.internal.ws.RealWebSocket$WriterTask -> okhttp3.internal.ws.RealWebSocket$WriterTask:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    617:617:void <init>(okhttp3.internal.ws.RealWebSocket) -> <init>
    620:622:long runOnce() -> runOnce
okhttp3.internal.ws.RealWebSocket$connect$1 -> okhttp3.internal.ws.RealWebSocket$connect$1:
# {"id":"sourceFile","fileName":"RealWebSocket.kt"}
    165:165:void <init>(okhttp3.internal.ws.RealWebSocket,okhttp3.Request) -> <init>
    202:202:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    167:197:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$lambda$3$$inlined$schedule$1 -> okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$lambda$3$$inlined$schedule$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    84:84:void <init>(java.lang.String,okhttp3.internal.ws.RealWebSocket,long) -> <init>
    219:220:long runOnce() -> runOnce
okhttp3.internal.ws.RealWebSocket$writeOneFrame$lambda$8$$inlined$execute$default$1 -> okhttp3.internal.ws.RealWebSocket$writeOneFrame$lambda$8$$inlined$execute$default$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(java.lang.String,boolean,okhttp3.internal.ws.RealWebSocket) -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.ws.WebSocketExtensions -> okhttp3.internal.ws.WebSocketExtensions:
# {"id":"sourceFile","fileName":"WebSocketExtensions.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    59:79:void <init>(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean) -> <init>
    59:59:void <init>(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    0:0:boolean component1() -> component1
    0:0:java.lang.Integer component2() -> component2
    0:0:boolean component3() -> component3
    0:0:java.lang.Integer component4() -> component4
    0:0:boolean component5() -> component5
    0:0:boolean component6() -> component6
    0:0:okhttp3.internal.ws.WebSocketExtensions copy(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean) -> copy
    0:0:okhttp3.internal.ws.WebSocketExtensions copy$default(okhttp3.internal.ws.WebSocketExtensions,boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:int hashCode() -> hashCode
    84:86:boolean noContextTakeover(boolean) -> noContextTakeover
    0:0:java.lang.String toString() -> toString
okhttp3.internal.ws.WebSocketExtensions$Companion -> okhttp3.internal.ws.WebSocketExtensions$Companion:
# {"id":"sourceFile","fileName":"WebSocketExtensions.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    90:90:void <init>() -> <init>
    106:171:okhttp3.internal.ws.WebSocketExtensions parse(okhttp3.Headers) -> parse
okhttp3.internal.ws.WebSocketProtocol -> okhttp3.internal.ws.WebSocketProtocol:
# {"id":"sourceFile","fileName":"WebSocketProtocol.kt"}
    0:0:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    138:138:java.lang.String acceptHeader(java.lang.String) -> acceptHeader
    124:126:java.lang.String closeCodeExceptionMessage(int) -> closeCodeExceptionMessage
    100:119:void toggleMask(okio.Buffer$UnsafeCursor,byte[]) -> toggleMask
    133:134:void validateCloseCode(int) -> validateCloseCode
okhttp3.internal.ws.WebSocketReader -> okhttp3.internal.ws.WebSocketReader:
# {"id":"sourceFile","fileName":"WebSocketReader.kt"}
    54:78:void <init>(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback,boolean,boolean) -> <init>
    295:295:void close() -> close
    56:56:okio.BufferedSource getSource() -> getSource
    102:106:void processNextFrame() -> processNextFrame
    190:224:void readControlFrame() -> readControlFrame
    112:184:void readHeader() -> readHeader
    271:288:void readMessage() -> readMessage
    231:247:void readMessageFrame() -> readMessageFrame
    254:259:void readUntilNonControlFrame() -> readUntilNonControlFrame
okhttp3.internal.ws.WebSocketReader$FrameCallback -> okhttp3.internal.ws.WebSocketReader$FrameCallback:
# {"id":"sourceFile","fileName":"WebSocketReader.kt"}
okhttp3.internal.ws.WebSocketWriter -> okhttp3.internal.ws.WebSocketWriter:
# {"id":"sourceFile","fileName":"WebSocketWriter.kt"}
    44:64:void <init>(boolean,okio.BufferedSink,java.util.Random,boolean,boolean,long) -> <init>
    199:199:void close() -> close
    47:47:java.util.Random getRandom() -> getRandom
    46:46:okio.BufferedSink getSink() -> getSink
    87:104:void writeClose(int,okio.ByteString) -> writeClose
    110:142:void writeControlFrame(int,okio.ByteString) -> writeControlFrame
    147:195:void writeMessageFrame(int,okio.ByteString) -> writeMessageFrame
    69:69:void writePing(okio.ByteString) -> writePing
    75:75:void writePong(okio.ByteString) -> writePong
okhttp3.logging.HttpLoggingInterceptor -> okhttp3.logging.HttpLoggingInterceptor:
# {"id":"sourceFile","fileName":"HttpLoggingInterceptor.kt"}
    146:146:okhttp3.logging.HttpLoggingInterceptor$Level -deprecated_level() -> -deprecated_level
    0:0:void <init>() -> <init>
    39:46:void <init>(okhttp3.logging.HttpLoggingInterceptor$Logger) -> <init>
    39:40:void <init>(okhttp3.logging.HttpLoggingInterceptor$Logger,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    290:292:boolean bodyHasUnknownEncoding(okhttp3.Headers) -> bodyHasUnknownEncoding
    46:46:okhttp3.logging.HttpLoggingInterceptor$Level getLevel() -> getLevel
    150:276:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    46:46:void level(okhttp3.logging.HttpLoggingInterceptor$Level) -> level
    285:286:void logHeader(okhttp3.Headers,int) -> logHeader
    123:126:void redactHeader(java.lang.String) -> redactHeader
    137:137:okhttp3.logging.HttpLoggingInterceptor setLevel(okhttp3.logging.HttpLoggingInterceptor$Level) -> setLevel
okhttp3.logging.HttpLoggingInterceptor$Level -> okhttp3.logging.HttpLoggingInterceptor$Level:
# {"id":"sourceFile","fileName":"HttpLoggingInterceptor.kt"}
    0:0:okhttp3.logging.HttpLoggingInterceptor$Level[] $values() -> $values
    50:104:void <clinit>() -> <clinit>
    48:48:void <init>(java.lang.String,int) -> <init>
    0:0:okhttp3.logging.HttpLoggingInterceptor$Level valueOf(java.lang.String) -> valueOf
    0:0:okhttp3.logging.HttpLoggingInterceptor$Level[] values() -> values
okhttp3.logging.HttpLoggingInterceptor$Logger -> okhttp3.logging.HttpLoggingInterceptor$Logger:
# {"id":"sourceFile","fileName":"HttpLoggingInterceptor.kt"}
    113:113:void <clinit>() -> <clinit>
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion -> okhttp3.logging.HttpLoggingInterceptor$Logger$Companion:
# {"id":"sourceFile","fileName":"HttpLoggingInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
    110:110:void <init>() -> <init>
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$DefaultLogger -> okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$DefaultLogger:
# {"id":"sourceFile","fileName":"HttpLoggingInterceptor.kt"}
    114:114:void <init>() -> <init>
    116:116:void log(java.lang.String) -> log
okhttp3.logging.LoggingEventListener -> okhttp3.logging.LoggingEventListener:
# {"id":"sourceFile","fileName":"LoggingEventListener.kt"}
    0:0:void <init>(okhttp3.logging.HttpLoggingInterceptor$Logger,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    41:42:void <init>(okhttp3.logging.HttpLoggingInterceptor$Logger) -> <init>
    171:171:void cacheConditionalHit(okhttp3.Call,okhttp3.Response) -> cacheConditionalHit
    163:163:void cacheHit(okhttp3.Call,okhttp3.Response) -> cacheHit
    167:167:void cacheMiss(okhttp3.Call) -> cacheMiss
    147:147:void callEnd(okhttp3.Call) -> callEnd
    151:151:void callFailed(okhttp3.Call,java.io.IOException) -> callFailed
    46:48:void callStart(okhttp3.Call) -> callStart
    155:155:void canceled(okhttp3.Call) -> canceled
    85:85:void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol) -> connectEnd
    95:95:void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException) -> connectFailed
    68:68:void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy) -> connectStart
    99:99:void connectionAcquired(okhttp3.Call,okhttp3.Connection) -> connectionAcquired
    103:103:void connectionReleased(okhttp3.Call,okhttp3.Connection) -> connectionReleased
    64:64:void dnsEnd(okhttp3.Call,java.lang.String,java.util.List) -> dnsEnd
    60:60:void dnsStart(okhttp3.Call,java.lang.String) -> dnsStart
    175:176:void logWithTime(java.lang.String) -> logWithTime
    56:56:void proxySelectEnd(okhttp3.Call,okhttp3.HttpUrl,java.util.List) -> proxySelectEnd
    52:52:void proxySelectStart(okhttp3.Call,okhttp3.HttpUrl) -> proxySelectStart
    119:119:void requestBodyEnd(okhttp3.Call,long) -> requestBodyEnd
    115:115:void requestBodyStart(okhttp3.Call) -> requestBodyStart
    123:123:void requestFailed(okhttp3.Call,java.io.IOException) -> requestFailed
    111:111:void requestHeadersEnd(okhttp3.Call,okhttp3.Request) -> requestHeadersEnd
    107:107:void requestHeadersStart(okhttp3.Call) -> requestHeadersStart
    139:139:void responseBodyEnd(okhttp3.Call,long) -> responseBodyEnd
    135:135:void responseBodyStart(okhttp3.Call) -> responseBodyStart
    143:143:void responseFailed(okhttp3.Call,java.io.IOException) -> responseFailed
    131:131:void responseHeadersEnd(okhttp3.Call,okhttp3.Response) -> responseHeadersEnd
    127:127:void responseHeadersStart(okhttp3.Call) -> responseHeadersStart
    159:159:void satisfactionFailure(okhttp3.Call,okhttp3.Response) -> satisfactionFailure
    76:76:void secureConnectEnd(okhttp3.Call,okhttp3.Handshake) -> secureConnectEnd
    72:72:void secureConnectStart(okhttp3.Call) -> secureConnectStart
okhttp3.logging.LoggingEventListener$Factory -> okhttp3.logging.LoggingEventListener$Factory:
# {"id":"sourceFile","fileName":"LoggingEventListener.kt"}
    0:0:void <init>() -> <init>
    179:180:void <init>(okhttp3.logging.HttpLoggingInterceptor$Logger) -> <init>
    179:180:void <init>(okhttp3.logging.HttpLoggingInterceptor$Logger,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    182:182:okhttp3.EventListener create(okhttp3.Call) -> create
okhttp3.logging.Utf8Kt -> okhttp3.logging.Utf8Kt:
# {"id":"sourceFile","fileName":"utf8.kt"}
    28:36:boolean isProbablyUtf8(okio.Buffer) -> isProbablyUtf8
okio.-Base64 -> okio.-Base64:
# {"id":"sourceFile","fileName":"Base64.kt"}
    29:33:void <clinit>() -> <clinit>
    37:116:byte[] decodeBase64ToArray(java.lang.String) -> decodeBase64ToArray
    120:151:java.lang.String encodeBase64(byte[],byte[]) -> encodeBase64
    119:119:java.lang.String encodeBase64$default(byte[],byte[],int,java.lang.Object) -> encodeBase64$default
    28:28:byte[] getBASE64() -> getBASE64
    0:0:void getBASE64$annotations() -> getBASE64$annotations
    32:32:byte[] getBASE64_URL_SAFE() -> getBASE64_URL_SAFE
    0:0:void getBASE64_URL_SAFE$annotations() -> getBASE64_URL_SAFE$annotations
okio.-DeflaterSinkExtensions -> okio.-DeflaterSinkExtensions:
# {"id":"sourceFile","fileName":"DeflaterSink.kt"}
    162:162:okio.DeflaterSink deflate(okio.Sink,java.util.zip.Deflater) -> deflate
    161:162:okio.DeflaterSink deflate$default(okio.Sink,java.util.zip.Deflater,int,java.lang.Object) -> deflate$default
okio.-DeprecatedOkio -> okio.-DeprecatedOkio:
# {"id":"sourceFile","fileName":"-DeprecatedOkio.kt"}
    0:0:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    36:36:okio.Sink appendingSink(java.io.File) -> appendingSink
    146:146:okio.Sink blackhole() -> blackhole
    46:46:okio.BufferedSink buffer(okio.Sink) -> buffer
    56:56:okio.BufferedSource buffer(okio.Source) -> buffer
    66:66:okio.Sink sink(java.io.File) -> sink
    76:76:okio.Sink sink(java.io.OutputStream) -> sink
    86:86:okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[]) -> sink
    96:96:okio.Sink sink(java.net.Socket) -> sink
    106:106:okio.Source source(java.io.File) -> source
    116:116:okio.Source source(java.io.InputStream) -> source
    126:126:okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[]) -> source
    136:136:okio.Source source(java.net.Socket) -> source
okio.-DeprecatedUpgrade -> okio.-DeprecatedUpgrade:
# {"id":"sourceFile","fileName":"DeprecatedUpgrade.kt"}
    20:21:void <clinit>() -> <clinit>
    20:20:okio.-DeprecatedOkio getOkio() -> getOkio
    21:21:okio.-DeprecatedUtf8 getUtf8() -> getUtf8
okio.-DeprecatedUtf8 -> okio.-DeprecatedUtf8:
# {"id":"sourceFile","fileName":"-DeprecatedUtf8.kt"}
    0:0:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    29:29:long size(java.lang.String) -> size
    39:39:long size(java.lang.String,int,int) -> size
okio.-GzipSinkExtensions -> okio.-GzipSinkExtensions:
# {"id":"sourceFile","fileName":"GzipSink.kt"}
    152:152:okio.GzipSink gzip(okio.Sink) -> gzip
okio.-GzipSourceExtensions -> okio.-GzipSourceExtensions:
# {"id":"sourceFile","fileName":"GzipSource.kt"}
    0:0:boolean getBit(int,int) -> getBit
    219:219:okio.GzipSource gzip(okio.Source) -> gzip
okio.-InflaterSourceExtensions -> okio.-InflaterSourceExtensions:
# {"id":"sourceFile","fileName":"InflaterSource.kt"}
    146:146:okio.InflaterSource inflate(okio.Source,java.util.zip.Inflater) -> inflate
    145:146:okio.InflaterSource inflate$default(okio.Source,java.util.zip.Inflater,int,java.lang.Object) -> inflate$default
okio.-SegmentedByteString -> okio.-SegmentedByteString:
# {"id":"sourceFile","fileName":"Util.kt"}
    171:177:void <clinit>() -> <clinit>
    0:0:int and(byte,int) -> and
    0:0:long and(byte,long) -> and
    0:0:long and(int,long) -> and
    99:99:boolean arrayRangeEquals(byte[],int,byte[],int,int) -> arrayRangeEquals
    26:26:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    177:177:int getDEFAULT__ByteString_size() -> getDEFAULT__ByteString_size
    171:171:okio.Buffer$UnsafeCursor getDEFAULT__new_UnsafeCursor() -> getDEFAULT__new_UnsafeCursor
    0:0:void getDEFAULT__new_UnsafeCursor$annotations() -> getDEFAULT__new_UnsafeCursor$annotations
    0:0:int leftRotate(int,int) -> leftRotate
    86:86:long minOf(long,int) -> minOf
    89:89:long minOf(int,long) -> minOf
    173:173:okio.Buffer$UnsafeCursor resolveDefaultParameter(okio.Buffer$UnsafeCursor) -> resolveDefaultParameter
    179:179:int resolveDefaultParameter(okio.ByteString,int) -> resolveDefaultParameter
    184:184:int resolveDefaultParameter(byte[],int) -> resolveDefaultParameter
    0:0:int reverseBytes(int) -> reverseBytes
    0:0:long reverseBytes(long) -> reverseBytes
    0:0:short reverseBytes(short) -> reverseBytes
    0:0:long rightRotate(long,int) -> rightRotate
    0:0:int shl(byte,int) -> shl
    0:0:int shr(byte,int) -> shr
    106:189:java.lang.String toHexString(byte) -> toHexString
    115:131:java.lang.String toHexString(int) -> toHexString
    138:162:java.lang.String toHexString(long) -> toHexString
    0:0:byte xor(byte,byte) -> xor
okio.AsyncTimeout -> okio.AsyncTimeout:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    205:217:void <clinit>() -> <clinit>
    41:41:void <init>() -> <init>
    41:41:java.util.concurrent.locks.Condition access$getCondition$cp() -> access$getCondition$cp
    41:41:okio.AsyncTimeout access$getHead$cp() -> access$getHead$cp
    41:41:long access$getIDLE_TIMEOUT_MILLIS$cp() -> access$getIDLE_TIMEOUT_MILLIS$cp
    41:41:long access$getIDLE_TIMEOUT_NANOS$cp() -> access$getIDLE_TIMEOUT_NANOS$cp
    41:41:boolean access$getInQueue$p(okio.AsyncTimeout) -> access$getInQueue$p
    41:41:java.util.concurrent.locks.ReentrantLock access$getLock$cp() -> access$getLock$cp
    41:41:okio.AsyncTimeout access$getNext$p(okio.AsyncTimeout) -> access$getNext$p
    161:161:java.io.IOException access$newTimeoutException(java.io.IOException) -> access$newTimeoutException
    41:41:long access$remainingNanos(okio.AsyncTimeout,long) -> access$remainingNanos
    41:41:void access$setHead$cp(okio.AsyncTimeout) -> access$setHead$cp
    41:41:void access$setInQueue$p(okio.AsyncTimeout,boolean) -> access$setInQueue$p
    41:41:void access$setNext$p(okio.AsyncTimeout,okio.AsyncTimeout) -> access$setNext$p
    41:41:void access$setTimeoutAt$p(okio.AsyncTimeout,long) -> access$setTimeoutAt$p
    52:57:void enter() -> enter
    62:62:boolean exit() -> exit
    169:171:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    69:69:long remainingNanos(long) -> remainingNanos
    82:82:okio.Sink sink(okio.Sink) -> sink
    126:126:okio.Source source(okio.Source) -> source
    0:0:void timedOut() -> timedOut
    147:156:java.lang.Object withTimeout(kotlin.jvm.functions.Function0) -> withTimeout
okio.AsyncTimeout$Companion -> okio.AsyncTimeout$Companion:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    204:204:void <init>() -> <init>
    204:204:boolean access$cancelScheduledTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout) -> access$cancelScheduledTimeout
    204:204:void access$scheduleTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout,long,boolean) -> access$scheduleTimeout
    303:326:okio.AsyncTimeout awaitTimeout$okio() -> awaitTimeout$okio
    273:289:boolean cancelScheduledTimeout(okio.AsyncTimeout) -> cancelScheduledTimeout
    206:206:java.util.concurrent.locks.Condition getCondition() -> getCondition
    205:205:java.util.concurrent.locks.ReentrantLock getLock() -> getLock
    230:268:void scheduleTimeout(okio.AsyncTimeout,long,boolean) -> scheduleTimeout
okio.AsyncTimeout$Watchdog -> okio.AsyncTimeout$Watchdog:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    176:178:void <init>() -> <init>
    185:197:void run() -> run
okio.AsyncTimeout$sink$1 -> okio.AsyncTimeout$sink$1:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    82:82:void <init>(okio.AsyncTimeout,okio.Sink) -> <init>
    112:364:void close() -> close
    108:353:void flush() -> flush
    82:82:okio.Timeout timeout() -> timeout
    115:115:okio.AsyncTimeout timeout() -> timeout
    117:117:java.lang.String toString() -> toString
    84:342:void write(okio.Buffer,long) -> write
okio.AsyncTimeout$source$1 -> okio.AsyncTimeout$source$1:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    126:126:void <init>(okio.AsyncTimeout,okio.Source) -> <init>
    132:353:void close() -> close
    128:342:long read(okio.Buffer,long) -> read
    126:126:okio.Timeout timeout() -> timeout
    135:135:okio.AsyncTimeout timeout() -> timeout
    137:137:java.lang.String toString() -> toString
okio.BlackholeSink -> okio.BlackholeSink:
# {"id":"sourceFile","fileName":"Okio.kt"}
    43:43:void <init>() -> <init>
    0:0:void close() -> close
    0:0:void flush() -> flush
    46:46:okio.Timeout timeout() -> timeout
    44:44:void write(okio.Buffer,long) -> write
okio.Buffer -> okio.Buffer:
# {"id":"sourceFile","fileName":"Buffer.kt"}
    603:603:byte -deprecated_getByte(long) -> -deprecated_getByte
    611:611:long -deprecated_size() -> -deprecated_size
    76:76:void <init>() -> <init>
    1080:1080:byte[] readByteArray() -> A
    76:76:okio.BufferedSink writeIntLe(int) -> B
    109:109:boolean exhausted() -> C
    76:76:okio.BufferedSink writeByte(int) -> D
    979:981:long readAll(okio.Sink) -> E
    475:475:long indexOf(byte,long) -> F
    1548:1591:long indexOf(byte,long,long) -> G
    984:988:java.lang.String readUtf8Line() -> H
    76:76:okio.BufferedSink emitCompleteSegments() -> I
    841:897:long readDecimalLong() -> J
    990:1008:java.lang.String readUtf8LineStrict(long) -> K
    1723:1729:boolean rangeEquals(long,okio.ByteString,int,int) -> L
    480:480:long indexOf(okio.ByteString) -> M
    76:76:okio.BufferedSink writeShortLe(int) -> N
    76:76:okio.BufferedSink writeUtf8(java.lang.String) -> O
    302:302:java.lang.String readString(java.nio.charset.Charset) -> P
    76:76:okio.BufferedSink write(byte[],int,int) -> Q
    1009:1067:int readUtf8CodePoint() -> R
    76:76:okio.BufferedSink write(okio.ByteString) -> S
    76:76:okio.BufferedSink writeUtf8(java.lang.String,int,int) -> T
    76:76:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> U
    76:76:okio.BufferedSink write(okio.Source,long) -> V
    957:957:okio.ByteString readByteString() -> W
    76:76:okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> X
    116:116:boolean request(long) -> Y
    76:76:okio.BufferedSink write(okio.ByteString,int,int) -> Z
    1648:1716:long indexOfElement(okio.ByteString,long) -> a0
    300:300:java.lang.String readUtf8(long) -> b
    332:332:java.lang.String readUtf8LineStrict() -> b0
    958:965:okio.ByteString readByteString(long) -> c
    273:273:int readIntLe() -> c0
    1116:1116:void clear() -> clear
    76:76:java.lang.Object clone() -> clone
    584:584:okio.Buffer clone() -> clone
    0:0:void close() -> close
    678:684:long completeSegmentByteCount() -> completeSegmentByteCount
    1778:1794:okio.Buffer copy() -> copy
    0:0:okio.Buffer copyTo(java.io.OutputStream) -> copyTo
    0:0:okio.Buffer copyTo(java.io.OutputStream,long) -> copyTo
    154:642:okio.Buffer copyTo(java.io.OutputStream,long,long) -> copyTo
    186:186:okio.Buffer copyTo(okio.Buffer,long) -> copyTo
    645:671:okio.Buffer copyTo(okio.Buffer,long,long) -> copyTo
    147:150:okio.Buffer copyTo$default(okio.Buffer,java.io.OutputStream,long,long,int,java.lang.Object) -> copyTo$default
    177:177:okio.Buffer copyTo$default(okio.Buffer,okio.Buffer,long,long,int,java.lang.Object) -> copyTo$default
    183:183:okio.Buffer copyTo$default(okio.Buffer,okio.Buffer,long,int,java.lang.Object) -> copyTo$default
    973:977:void readFully(okio.Buffer,long) -> d
    1081:1086:byte[] readByteArray(long) -> d0
    529:538:okio.ByteString digest(java.lang.String) -> digest
    297:297:java.lang.String readUtf8() -> e0
    0:0:okio.Buffer emit() -> emit
    0:0:okio.Buffer emitCompleteSegments() -> emitCompleteSegments
    1735:1760:boolean equals(java.lang.Object) -> equals
    76:76:okio.BufferedSink write(byte[]) -> f0
    0:0:void flush() -> flush
    306:322:java.lang.String readString(long,java.nio.charset.Charset) -> g0
    706:724:byte getByte(long) -> getByte
    1303:1303:long writeAll(okio.Source) -> h0
    1766:1776:int hashCode() -> hashCode
    552:564:okio.ByteString hmac(java.lang.String,okio.ByteString) -> hmac
    542:542:okio.ByteString hmacSha1(okio.ByteString) -> hmacSha1
    545:545:okio.ByteString hmacSha256(okio.ByteString) -> hmacSha256
    548:548:okio.ByteString hmacSha512(okio.ByteString) -> hmacSha512
    270:270:short readShortLe() -> i0
    0:0:boolean isOpen() -> isOpen
    966:971:int select(okio.Options) -> j0
    276:276:long readLongLe() -> k0
    1596:1643:long indexOf(okio.ByteString,long) -> l0
    491:491:boolean rangeEquals(long,okio.ByteString) -> m0
    513:513:okio.ByteString md5() -> md5
    76:76:okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset) -> n0
    76:76:okio.BufferedSink writeLong(long) -> o0
    113:113:void require(long) -> p0
    119:119:okio.BufferedSource peek() -> peek
    76:76:okio.BufferedSink writeDecimalLong(long) -> q0
    88:88:java.io.OutputStream outputStream() -> r0
    355:365:int read(java.nio.ByteBuffer) -> read
    1088:1088:int read(byte[]) -> read
    1096:1112:int read(byte[],int,int) -> read
    1540:1544:long read(okio.Buffer,long) -> read
    0:0:okio.Buffer$UnsafeCursor readAndWriteUnsafe() -> readAndWriteUnsafe
    595:595:okio.Buffer$UnsafeCursor readAndWriteUnsafe(okio.Buffer$UnsafeCursor) -> readAndWriteUnsafe
    149:594:okio.Buffer$UnsafeCursor readAndWriteUnsafe$default(okio.Buffer,okio.Buffer$UnsafeCursor,int,java.lang.Object) -> readAndWriteUnsafe$default
    688:702:byte readByte() -> readByte
    218:218:okio.Buffer readFrom(java.io.InputStream) -> readFrom
    225:226:okio.Buffer readFrom(java.io.InputStream,long) -> readFrom
    234:677:void readFrom(java.io.InputStream,long,boolean) -> readFrom
    1090:1092:void readFully(byte[]) -> readFully
    753:788:int readInt() -> readInt
    792:837:long readLong() -> readLong
    728:749:short readShort() -> readShort
    0:0:okio.Buffer$UnsafeCursor readUnsafe() -> readUnsafe
    591:591:okio.Buffer$UnsafeCursor readUnsafe(okio.Buffer$UnsafeCursor) -> readUnsafe
    144:591:okio.Buffer$UnsafeCursor readUnsafe$default(okio.Buffer,okio.Buffer$UnsafeCursor,int,java.lang.Object) -> readUnsafe$default
    469:469:long indexOf(byte) -> s0
    81:81:void setSize$okio(long) -> setSize$okio
    520:520:okio.ByteString sha1() -> sha1
    523:523:okio.ByteString sha256() -> sha256
    526:526:okio.ByteString sha512() -> sha512
    80:80:long size() -> size
    1119:1129:void skip(long) -> skip
    1796:1798:okio.ByteString snapshot() -> snapshot
    1799:1832:okio.ByteString snapshot(int) -> snapshot
    0:0:okio.Buffer buffer() -> t
    901:955:long readHexadecimalUnsignedLong() -> t0
    506:506:okio.Timeout timeout() -> timeout
    576:576:java.lang.String toString() -> toString
    0:0:okio.Buffer getBuffer() -> u
    485:485:long indexOfElement(okio.ByteString) -> u0
    76:76:okio.BufferedSink emit() -> v
    123:123:java.io.InputStream inputStream() -> v0
    76:76:okio.BufferedSink writeShort(int) -> w
    1482:1494:okio.Segment writableSegment$okio(int) -> writableSegment$okio
    420:432:int write(java.nio.ByteBuffer) -> write
    1136:1138:okio.Buffer write(okio.ByteString) -> write
    1140:1140:okio.Buffer write(okio.ByteString,int,int) -> write
    1279:1279:okio.Buffer write(byte[]) -> write
    1281:1299:okio.Buffer write(byte[],int,int) -> write
    1310:1311:okio.Buffer write(okio.Source,long) -> write
    1498:1535:void write(okio.Buffer,long) -> write
    1315:1317:okio.Buffer writeByte(int) -> writeByte
    1354:1440:okio.Buffer writeDecimalLong(long) -> writeDecimalLong
    1445:1480:okio.Buffer writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    1327:1335:okio.Buffer writeInt(int) -> writeInt
    451:451:okio.Buffer writeIntLe(int) -> writeIntLe
    1337:1349:okio.Buffer writeLong(long) -> writeLong
    455:455:okio.Buffer writeLongLe(long) -> writeLongLe
    1319:1325:okio.Buffer writeShort(int) -> writeShort
    447:447:okio.Buffer writeShortLe(int) -> writeShortLe
    389:392:okio.Buffer writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    402:407:okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    0:0:okio.Buffer writeTo(java.io.OutputStream) -> writeTo
    193:675:okio.Buffer writeTo(java.io.OutputStream,long) -> writeTo
    191:191:okio.Buffer writeTo$default(okio.Buffer,java.io.OutputStream,long,int,java.lang.Object) -> writeTo$default
    381:381:okio.Buffer writeUtf8(java.lang.String) -> writeUtf8
    1142:1223:okio.Buffer writeUtf8(java.lang.String,int,int) -> writeUtf8
    1234:1274:okio.Buffer writeUtf8CodePoint(int) -> writeUtf8CodePoint
    76:76:okio.BufferedSink writeUtf8CodePoint(int) -> x
    76:76:okio.BufferedSink writeInt(int) -> y
    76:76:okio.BufferedSink writeLongLe(long) -> z
okio.Buffer$UnsafeCursor -> okio.Buffer$UnsafeCursor:
# {"id":"sourceFile","fileName":"Buffer.kt"}
    613:626:void <init>() -> <init>
    788:795:void close() -> close
    768:785:long expandBuffer(int) -> expandBuffer
    618:618:okio.Segment getSegment$okio() -> getSegment$okio
    642:644:int next() -> next
    715:765:long resizeBuffer(long) -> resizeBuffer
    645:713:int seek(long) -> seek
    618:618:void setSegment$okio(okio.Segment) -> setSegment$okio
okio.Buffer$inputStream$1 -> okio.Buffer$inputStream$1:
# {"id":"sourceFile","fileName":"Buffer.kt"}
    123:123:void <init>(okio.Buffer) -> <init>
    136:643:int available() -> available
    0:0:void close() -> close
    125:126:int read() -> read
    133:133:int read(byte[],int,int) -> read
    140:140:java.lang.String toString() -> toString
okio.Buffer$outputStream$1 -> okio.Buffer$outputStream$1:
# {"id":"sourceFile","fileName":"Buffer.kt"}
    88:88:void <init>(okio.Buffer) -> <init>
    0:0:void close() -> close
    0:0:void flush() -> flush
    101:101:java.lang.String toString() -> toString
    90:90:void write(int) -> write
    94:94:void write(byte[],int,int) -> write
okio.BufferedSink -> okio.BufferedSink:
# {"id":"sourceFile","fileName":"BufferedSink.kt"}
okio.BufferedSource -> okio.BufferedSource:
# {"id":"sourceFile","fileName":"BufferedSource.kt"}
okio.ByteString -> okio.ByteString:
# {"id":"sourceFile","fileName":"ByteString.kt"}
    217:217:byte -deprecated_getByte(int) -> -deprecated_getByte
    225:225:int -deprecated_size() -> -deprecated_size
    231:231:void <clinit>() -> <clinit>
    59:61:void <init>(byte[]) -> <init>
    136:136:java.nio.ByteBuffer asByteBuffer() -> asByteBuffer
    372:372:java.lang.String base64() -> base64
    373:373:java.lang.String base64Url() -> base64Url
    59:59:int compareTo(java.lang.Object) -> compareTo
    480:487:int compareTo(okio.ByteString) -> compareTo
    449:449:void copyInto(int,byte[],int,int) -> copyInto
    161:161:void copyInto$default(okio.ByteString,int,byte[],int,int,int,java.lang.Object) -> copyInto$default
    0:0:okio.ByteString decodeBase64(java.lang.String) -> decodeBase64
    0:0:okio.ByteString decodeHex(java.lang.String) -> decodeHex
    82:86:okio.ByteString digest$okio(java.lang.String) -> digest$okio
    0:0:okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset) -> encodeString
    0:0:okio.ByteString encodeUtf8(java.lang.String) -> encodeUtf8
    453:453:boolean endsWith(okio.ByteString) -> endsWith
    454:454:boolean endsWith(byte[]) -> endsWith
    473:473:boolean equals(java.lang.Object) -> equals
    123:123:byte getByte(int) -> getByte
    61:61:byte[] getData$okio() -> getData$okio
    63:63:int getHashCode$okio() -> getHashCode$okio
    441:441:int getSize$okio() -> getSize$okio
    64:64:java.lang.String getUtf8$okio() -> getUtf8$okio
    475:478:int hashCode() -> hashCode
    374:381:java.lang.String hex() -> hex
    100:104:okio.ByteString hmac$okio(java.lang.String,okio.ByteString) -> hmac$okio
    90:90:okio.ByteString hmacSha1(okio.ByteString) -> hmacSha1
    93:93:okio.ByteString hmacSha256(okio.ByteString) -> hmacSha256
    96:96:okio.ByteString hmacSha512(okio.ByteString) -> hmacSha512
    0:0:int indexOf(okio.ByteString) -> indexOf
    0:0:int indexOf(byte[]) -> indexOf
    177:177:int indexOf(okio.ByteString,int) -> indexOf
    455:457:int indexOf(byte[],int) -> indexOf
    177:177:int indexOf$default(okio.ByteString,okio.ByteString,int,int,java.lang.Object) -> indexOf$default
    180:180:int indexOf$default(okio.ByteString,byte[],int,int,java.lang.Object) -> indexOf$default
    443:443:byte[] internalArray$okio() -> internalArray$okio
    440:440:byte internalGet$okio(int) -> internalGet$okio
    0:0:int lastIndexOf(okio.ByteString) -> lastIndexOf
    0:0:int lastIndexOf(byte[]) -> lastIndexOf
    462:462:int lastIndexOf(okio.ByteString,int) -> lastIndexOf
    463:466:int lastIndexOf(byte[],int) -> lastIndexOf
    183:186:int lastIndexOf$default(okio.ByteString,okio.ByteString,int,int,java.lang.Object) -> lastIndexOf$default
    186:186:int lastIndexOf$default(okio.ByteString,byte[],int,int,java.lang.Object) -> lastIndexOf$default
    73:73:okio.ByteString md5() -> md5
    0:0:okio.ByteString of(java.nio.ByteBuffer) -> of
    0:0:okio.ByteString of(byte[]) -> of
    0:0:okio.ByteString of(byte[],int,int) -> of
    444:444:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    445:447:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    0:0:okio.ByteString read(java.io.InputStream,int) -> read
    198:202:void readObject(java.io.ObjectInputStream) -> readObject
    63:63:void setHashCode$okio(int) -> setHashCode$okio
    64:64:void setUtf8$okio(java.lang.String) -> setUtf8$okio
    75:75:okio.ByteString sha1() -> sha1
    77:77:okio.ByteString sha256() -> sha256
    79:79:okio.ByteString sha512() -> sha512
    127:127:int size() -> size
    451:451:boolean startsWith(okio.ByteString) -> startsWith
    452:452:boolean startsWith(byte[]) -> startsWith
    69:69:java.lang.String string(java.nio.charset.Charset) -> string
    0:0:okio.ByteString substring() -> substring
    0:0:okio.ByteString substring(int) -> substring
    428:439:okio.ByteString substring(int,int) -> substring
    108:117:okio.ByteString substring$default(okio.ByteString,int,int,int,java.lang.Object) -> substring$default
    383:402:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    406:425:okio.ByteString toAsciiUppercase() -> toAsciiUppercase
    442:442:byte[] toByteArray() -> toByteArray
    496:524:java.lang.String toString() -> toString
    365:369:java.lang.String utf8() -> utf8
    141:141:void write(java.io.OutputStream) -> write
    145:145:void write$okio(okio.Buffer,int,int) -> write$okio
    207:208:void writeObject(java.io.ObjectOutputStream) -> writeObject
okio.ByteString$Companion -> okio.ByteString$Companion:
# {"id":"sourceFile","fileName":"ByteString.kt"}
    295:295:okio.ByteString -deprecated_decodeBase64(java.lang.String) -> -deprecated_decodeBase64
    306:306:okio.ByteString -deprecated_decodeHex(java.lang.String) -> -deprecated_decodeHex
    317:317:okio.ByteString -deprecated_encodeString(java.lang.String,java.nio.charset.Charset) -> -deprecated_encodeString
    328:328:okio.ByteString -deprecated_encodeUtf8(java.lang.String) -> -deprecated_encodeUtf8
    339:339:okio.ByteString -deprecated_of(java.nio.ByteBuffer) -> -deprecated_of
    350:350:okio.ByteString -deprecated_of(byte[],int,int) -> -deprecated_of
    361:361:okio.ByteString -deprecated_read(java.io.InputStream,int) -> -deprecated_read
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    227:227:void <init>() -> <init>
    372:373:okio.ByteString decodeBase64(java.lang.String) -> decodeBase64
    374:382:okio.ByteString decodeHex(java.lang.String) -> decodeHex
    256:256:okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset) -> encodeString
    256:256:okio.ByteString encodeString$default(okio.ByteString$Companion,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> encodeString$default
    369:370:okio.ByteString encodeUtf8(java.lang.String) -> encodeUtf8
    245:247:okio.ByteString of(java.nio.ByteBuffer) -> of
    365:365:okio.ByteString of(byte[]) -> of
    366:368:okio.ByteString of(byte[],int,int) -> of
    214:238:okio.ByteString of$default(okio.ByteString$Companion,byte[],int,int,int,java.lang.Object) -> of$default
    273:283:okio.ByteString read(java.io.InputStream,int) -> read
okio.CipherSink -> okio.CipherSink:
# {"id":"sourceFile","fileName":"CipherSink.kt"}
    21:30:void <init>(okio.BufferedSink,javax.crypto.Cipher) -> <init>
    95:106:void close() -> close
    110:142:java.lang.Throwable doFinal() -> doFinal
    89:89:void flush() -> flush
    23:23:javax.crypto.Cipher getCipher() -> getCipher
    91:91:okio.Timeout timeout() -> timeout
    46:150:int update(okio.Buffer,long) -> update
    35:40:void write(okio.Buffer,long) -> write
okio.CipherSource -> okio.CipherSource:
# {"id":"sourceFile","fileName":"CipherSource.kt"}
    21:32:void <init>(okio.BufferedSource,javax.crypto.Cipher) -> <init>
    116:117:void close() -> close
    94:108:void doFinal() -> doFinal
    23:23:javax.crypto.Cipher getCipher() -> getCipher
    37:43:long read(okio.Buffer,long) -> read
    47:53:void refill() -> refill
    112:112:okio.Timeout timeout() -> timeout
    59:89:void update() -> update
okio.DeflaterSink -> okio.DeflaterSink:
# {"id":"sourceFile","fileName":"DeflaterSink.kt"}
    39:45:void <init>(okio.BufferedSink,java.util.zip.Deflater) -> <init>
    46:46:void <init>(okio.Sink,java.util.zip.Deflater) -> <init>
    123:148:void close() -> close
    77:103:void deflate(boolean) -> deflate
    117:118:void finishDeflate$okio() -> finishDeflate$okio
    112:113:void flush() -> flush
    151:151:okio.Timeout timeout() -> timeout
    153:153:java.lang.String toString() -> toString
    52:164:void write(okio.Buffer,long) -> write
okio.ExperimentalFileSystem -> okio.ExperimentalFileSystem:
# {"id":"sourceFile","fileName":"ExperimentalFileSystem.kt"}
okio.FileHandle -> okio.FileHandle:
# {"id":"sourceFile","fileName":"FileHandle.kt"}
    35:55:void <init>(boolean) -> <init>
    35:35:boolean access$getClosed$p(okio.FileHandle) -> access$getClosed$p
    35:35:int access$getOpenStreamCount$p(okio.FileHandle) -> access$getOpenStreamCount$p
    35:35:long access$readNoCloseCheck(okio.FileHandle,long,okio.Buffer,long) -> access$readNoCloseCheck
    35:35:void access$setOpenStreamCount$p(okio.FileHandle,int) -> access$setOpenStreamCount$p
    35:35:void access$writeNoCloseCheck(okio.FileHandle,long,okio.Buffer,long) -> access$writeNoCloseCheck
    234:234:okio.Sink appendingSink() -> appendingSink
    287:459:void close() -> close
    138:452:void flush() -> flush
    55:55:java.util.concurrent.locks.ReentrantLock getLock() -> getLock
    41:41:boolean getReadWrite() -> getReadWrite
    168:454:long position(okio.Source) -> position
    247:458:long position(okio.Sink) -> position
    69:445:int read(long,byte[],int,int) -> read
    81:447:long read(long,okio.Buffer,long) -> read
    334:460:long readNoCloseCheck(long,okio.Buffer,long) -> readNoCloseCheck
    188:456:void reposition(okio.Source,long) -> reposition
    267:281:void reposition(okio.Sink,long) -> reposition
    104:449:void resize(long) -> resize
    220:457:okio.Sink sink(long) -> sink
    219:219:okio.Sink sink$default(okio.FileHandle,long,int,java.lang.Object) -> sink$default
    92:448:long size() -> size
    151:453:okio.Source source(long) -> source
    150:150:okio.Source source$default(okio.FileHandle,long,int,java.lang.Object) -> source$default
    118:450:void write(long,byte[],int,int) -> write
    128:451:void write(long,okio.Buffer,long) -> write
    367:461:void writeNoCloseCheck(long,okio.Buffer,long) -> writeNoCloseCheck
okio.FileHandle$FileHandleSink -> okio.FileHandle$FileHandleSink:
# {"id":"sourceFile","fileName":"FileHandle.kt"}
    388:390:void <init>(okio.FileHandle,long) -> <init>
    408:446:void close() -> close
    401:402:void flush() -> flush
    392:392:boolean getClosed() -> getClosed
    389:389:okio.FileHandle getFileHandle() -> getFileHandle
    390:390:long getPosition() -> getPosition
    392:392:void setClosed(boolean) -> setClosed
    390:390:void setPosition(long) -> setPosition
    405:405:okio.Timeout timeout() -> timeout
    395:397:void write(okio.Buffer,long) -> write
okio.FileHandle$FileHandleSource -> okio.FileHandle$FileHandleSource:
# {"id":"sourceFile","fileName":"FileHandle.kt"}
    418:420:void <init>(okio.FileHandle,long) -> <init>
    434:446:void close() -> close
    422:422:boolean getClosed() -> getClosed
    419:419:okio.FileHandle getFileHandle() -> getFileHandle
    420:420:long getPosition() -> getPosition
    425:427:long read(okio.Buffer,long) -> read
    422:422:void setClosed(boolean) -> setClosed
    420:420:void setPosition(long) -> setPosition
    431:431:okio.Timeout timeout() -> timeout
okio.FileMetadata -> okio.FileMetadata:
# {"id":"sourceFile","fileName":"FileMetadata.kt"}
    0:0:void <init>() -> <init>
    55:115:void <init>(boolean,boolean,okio.Path,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.util.Map) -> <init>
    55:106:void <init>(boolean,boolean,okio.Path,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    133:133:okio.FileMetadata copy(boolean,boolean,okio.Path,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.util.Map) -> copy
    123:131:okio.FileMetadata copy$default(okio.FileMetadata,boolean,boolean,okio.Path,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.util.Map,int,java.lang.Object) -> copy$default
    119:120:java.lang.Object extra(kotlin.reflect.KClass) -> extra
    86:86:java.lang.Long getCreatedAtMillis() -> getCreatedAtMillis
    115:115:java.util.Map getExtras() -> getExtras
    104:104:java.lang.Long getLastAccessedAtMillis() -> getLastAccessedAtMillis
    95:95:java.lang.Long getLastModifiedAtMillis() -> getLastModifiedAtMillis
    79:79:java.lang.Long getSize() -> getSize
    72:72:okio.Path getSymlinkTarget() -> getSymlinkTarget
    66:66:boolean isDirectory() -> isDirectory
    57:57:boolean isRegularFile() -> isRegularFile
    146:154:java.lang.String toString() -> toString
okio.FileSystem -> okio.FileSystem:
# {"id":"sourceFile","fileName":"FileSystem.kt"}
    67:186:java.lang.Object -read(okio.Path,kotlin.jvm.functions.Function1) -> -read
    81:207:java.lang.Object -write(okio.Path,boolean,kotlin.jvm.functions.Function1) -> -write
    80:207:java.lang.Object -write$default(okio.FileSystem,okio.Path,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> -write$default
    134:156:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    90:90:okio.Sink appendingSink(okio.Path) -> appendingSink
    87:87:okio.Sink appendingSink$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object) -> appendingSink$default
    109:109:void copy(okio.Path,okio.Path) -> copy
    100:100:void createDirectories(okio.Path,boolean) -> createDirectories
    103:103:void createDirectories(okio.Path) -> createDirectories
    99:99:void createDirectories$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object) -> createDirectories$default
    96:96:void createDirectory(okio.Path) -> createDirectory
    93:93:void createDirectory$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object) -> createDirectory$default
    115:115:void delete(okio.Path) -> delete
    112:112:void delete$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object) -> delete$default
    119:119:void deleteRecursively(okio.Path,boolean) -> deleteRecursively
    123:123:void deleteRecursively(okio.Path) -> deleteRecursively
    118:118:void deleteRecursively$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object) -> deleteRecursively$default
    39:39:boolean exists(okio.Path) -> exists
    0:0:okio.FileSystem get(java.nio.file.FileSystem) -> get
    47:47:kotlin.sequences.Sequence listRecursively(okio.Path,boolean) -> listRecursively
    49:49:kotlin.sequences.Sequence listRecursively(okio.Path) -> listRecursively
    46:46:kotlin.sequences.Sequence listRecursively$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object) -> listRecursively$default
    33:33:okio.FileMetadata metadata(okio.Path) -> metadata
    59:59:okio.FileHandle openReadWrite(okio.Path) -> openReadWrite
    55:55:okio.FileHandle openReadWrite$default(okio.FileSystem,okio.Path,boolean,boolean,int,java.lang.Object) -> openReadWrite$default
    76:76:okio.Sink sink(okio.Path) -> sink
    73:73:okio.Sink sink$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object) -> sink$default
okio.FileSystem$Companion -> okio.FileSystem$Companion:
# {"id":"sourceFile","fileName":"FileSystem.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    128:128:void <init>() -> <init>
    162:162:okio.FileSystem get(java.nio.file.FileSystem) -> get
okio.ForwardingFileSystem -> okio.ForwardingFileSystem:
# {"id":"sourceFile","fileName":"ForwardingFileSystem.kt"}
    106:108:void <init>(okio.FileSystem) -> <init>
    211:212:okio.Sink appendingSink(okio.Path,boolean) -> appendingSink
    223:225:void atomicMove(okio.Path,okio.Path) -> atomicMove
    147:149:okio.Path canonicalize(okio.Path) -> canonicalize
    217:218:void createDirectory(okio.Path,boolean) -> createDirectory
    236:238:void createSymlink(okio.Path,okio.Path) -> createSymlink
    107:107:okio.FileSystem delegate() -> delegate
    230:231:void delete(okio.Path,boolean) -> delete
    164:245:java.util.List list(okio.Path) -> list
    172:248:java.util.List listOrNull(okio.Path) -> listOrNull
    180:182:kotlin.sequences.Sequence listRecursively(okio.Path,boolean) -> listRecursively
    154:159:okio.FileMetadata metadataOrNull(okio.Path) -> metadataOrNull
    0:0:okio.Path onPathParameter(okio.Path,java.lang.String,java.lang.String) -> onPathParameter
    0:0:okio.Path onPathResult(okio.Path,java.lang.String) -> onPathResult
    187:188:okio.FileHandle openReadOnly(okio.Path) -> openReadOnly
    193:194:okio.FileHandle openReadWrite(okio.Path,boolean,boolean) -> openReadWrite
    205:206:okio.Sink sink(okio.Path,boolean) -> sink
    199:200:okio.Source source(okio.Path) -> source
    241:241:java.lang.String toString() -> toString
okio.ForwardingFileSystem$listRecursively$1 -> okio.ForwardingFileSystem$listRecursively$1:
# {"id":"sourceFile","fileName":"ForwardingFileSystem.kt"}
    0:0:void <init>(okio.ForwardingFileSystem) -> <init>
    182:182:java.lang.Object invoke(java.lang.Object) -> invoke
    182:182:okio.Path invoke(okio.Path) -> invoke
okio.ForwardingSink -> okio.ForwardingSink:
# {"id":"sourceFile","fileName":"ForwardingSink.kt"}
    47:47:okio.Sink -deprecated_delegate() -> -deprecated_delegate
    21:23:void <init>(okio.Sink) -> <init>
    37:37:void close() -> close
    24:24:okio.Sink delegate() -> delegate
    32:32:void flush() -> flush
    34:34:okio.Timeout timeout() -> timeout
    39:39:java.lang.String toString() -> toString
    29:29:void write(okio.Buffer,long) -> write
okio.ForwardingSource -> okio.ForwardingSource:
# {"id":"sourceFile","fileName":"ForwardingSource.kt"}
    42:42:okio.Source -deprecated_delegate() -> -deprecated_delegate
    20:21:void <init>(okio.Source) -> <init>
    32:32:void close() -> close
    22:22:okio.Source delegate() -> delegate
    27:27:long read(okio.Buffer,long) -> read
    29:29:okio.Timeout timeout() -> timeout
    34:34:java.lang.String toString() -> toString
okio.ForwardingTimeout -> okio.ForwardingTimeout:
# {"id":"sourceFile","fileName":"ForwardingTimeout.kt"}
    23:26:void <init>(okio.Timeout) -> <init>
    48:48:okio.Timeout clearDeadline() -> clearDeadline
    46:46:okio.Timeout clearTimeout() -> clearTimeout
    40:40:long deadlineNanoTime() -> deadlineNanoTime
    42:42:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    25:25:okio.Timeout delegate() -> delegate
    38:38:boolean hasDeadline() -> hasDeadline
    25:25:void setDelegate(okio.Timeout) -> setDelegate
    30:30:okio.ForwardingTimeout setDelegate(okio.Timeout) -> setDelegate
    51:51:void throwIfReached() -> throwIfReached
    34:34:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    36:36:long timeoutNanos() -> timeoutNanos
okio.GzipSink -> okio.GzipSink:
# {"id":"sourceFile","fileName":"GzipSink.kt"}
    144:144:java.util.zip.Deflater -deprecated_deflater() -> -deprecated_deflater
    42:154:void <init>(okio.Sink) -> <init>
    89:118:void close() -> close
    48:48:java.util.zip.Deflater deflater() -> deflater
    83:83:void flush() -> flush
    85:85:okio.Timeout timeout() -> timeout
    128:156:void updateCrc(okio.Buffer,long) -> updateCrc
    75:79:void write(okio.Buffer,long) -> write
    122:123:void writeFooter() -> writeFooter
okio.GzipSource -> okio.GzipSource:
# {"id":"sourceFile","fileName":"GzipSource.kt"}
    31:53:void <init>(okio.Source) -> <init>
    197:197:void checkEqual(java.lang.String,int,int) -> checkEqual
    171:171:void close() -> close
    104:232:void consumeHeader() -> consumeHeader
    164:165:void consumeTrailer() -> consumeTrailer
    57:89:long read(okio.Buffer,long) -> read
    168:168:okio.Timeout timeout() -> timeout
    178:233:void updateCrc(okio.Buffer,long,long) -> updateCrc
okio.HashingSink -> okio.HashingSink:
# {"id":"sourceFile","fileName":"HashingSink.kt"}
    108:108:okio.ByteString -deprecated_hash() -> -deprecated_hash
    0:0:void <clinit>() -> <clinit>
    44:46:void <init>(okio.Sink,java.security.MessageDigest) -> <init>
    49:49:void <init>(okio.Sink,java.lang.String) -> <init>
    51:53:void <init>(okio.Sink,javax.crypto.Mac) -> <init>
    56:63:void <init>(okio.Sink,okio.ByteString,java.lang.String) -> <init>
    98:99:okio.ByteString hash() -> hash
    0:0:okio.HashingSink hmacSha1(okio.Sink,okio.ByteString) -> hmacSha1
    0:0:okio.HashingSink hmacSha256(okio.Sink,okio.ByteString) -> hmacSha256
    0:0:okio.HashingSink hmacSha512(okio.Sink,okio.ByteString) -> hmacSha512
    0:0:okio.HashingSink md5(okio.Sink) -> md5
    0:0:okio.HashingSink sha1(okio.Sink) -> sha1
    0:0:okio.HashingSink sha256(okio.Sink) -> sha256
    0:0:okio.HashingSink sha512(okio.Sink) -> sha512
    69:149:void write(okio.Buffer,long) -> write
okio.HashingSink$Companion -> okio.HashingSink$Companion:
# {"id":"sourceFile","fileName":"HashingSink.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    110:110:void <init>() -> <init>
    137:137:okio.HashingSink hmacSha1(okio.Sink,okio.ByteString) -> hmacSha1
    141:141:okio.HashingSink hmacSha256(okio.Sink,okio.ByteString) -> hmacSha256
    145:145:okio.HashingSink hmacSha512(okio.Sink,okio.ByteString) -> hmacSha512
    117:117:okio.HashingSink md5(okio.Sink) -> md5
    125:125:okio.HashingSink sha1(okio.Sink) -> sha1
    129:129:okio.HashingSink sha256(okio.Sink) -> sha256
    133:133:okio.HashingSink sha512(okio.Sink) -> sha512
okio.HashingSource -> okio.HashingSource:
# {"id":"sourceFile","fileName":"HashingSource.kt"}
    119:119:okio.ByteString -deprecated_hash() -> -deprecated_hash
    0:0:void <clinit>() -> <clinit>
    45:47:void <init>(okio.Source,java.security.MessageDigest) -> <init>
    50:50:void <init>(okio.Source,java.lang.String) -> <init>
    52:54:void <init>(okio.Source,javax.crypto.Mac) -> <init>
    57:64:void <init>(okio.Source,okio.ByteString,java.lang.String) -> <init>
    109:110:okio.ByteString hash() -> hash
    0:0:okio.HashingSource hmacSha1(okio.Source,okio.ByteString) -> hmacSha1
    0:0:okio.HashingSource hmacSha256(okio.Source,okio.ByteString) -> hmacSha256
    0:0:okio.HashingSource hmacSha512(okio.Source,okio.ByteString) -> hmacSha512
    0:0:okio.HashingSource md5(okio.Source) -> md5
    70:93:long read(okio.Buffer,long) -> read
    0:0:okio.HashingSource sha1(okio.Source) -> sha1
    0:0:okio.HashingSource sha256(okio.Source) -> sha256
    0:0:okio.HashingSource sha512(okio.Source) -> sha512
okio.HashingSource$Companion -> okio.HashingSource$Companion:
# {"id":"sourceFile","fileName":"HashingSource.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    121:121:void <init>() -> <init>
    148:148:okio.HashingSource hmacSha1(okio.Source,okio.ByteString) -> hmacSha1
    152:152:okio.HashingSource hmacSha256(okio.Source,okio.ByteString) -> hmacSha256
    156:156:okio.HashingSource hmacSha512(okio.Source,okio.ByteString) -> hmacSha512
    128:128:okio.HashingSource md5(okio.Source) -> md5
    136:136:okio.HashingSource sha1(okio.Source) -> sha1
    140:140:okio.HashingSource sha256(okio.Source) -> sha256
    144:144:okio.HashingSource sha512(okio.Source) -> sha512
okio.InflaterSource -> okio.InflaterSource:
# {"id":"sourceFile","fileName":"InflaterSource.kt"}
    30:35:void <init>(okio.BufferedSource,java.util.zip.Inflater) -> <init>
    44:44:void <init>(okio.Source,java.util.zip.Inflater) -> <init>
    133:136:void close() -> close
    49:52:long read(okio.Buffer,long) -> read
    66:149:long readOrInflate(okio.Buffer,long) -> readOrInflate
    109:117:boolean refill() -> refill
    123:126:void releaseBytesAfterInflate() -> releaseBytesAfterInflate
    129:129:okio.Timeout timeout() -> timeout
okio.InputStreamSource -> okio.InputStreamSource:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    81:83:void <init>(java.io.InputStream,okio.Timeout) -> <init>
    111:111:void close() -> close
    88:241:long read(okio.Buffer,long) -> read
    113:113:okio.Timeout timeout() -> timeout
    115:115:java.lang.String toString() -> toString
okio.JvmFileHandle -> okio.JvmFileHandle:
# {"id":"sourceFile","fileName":"JvmFileHandle.kt"}
    22:23:void <init>(boolean,java.io.RandomAccessFile) -> <init>
    79:80:void protectedClose() -> protectedClose
    74:75:void protectedFlush() -> protectedFlush
    48:58:int protectedRead(long,byte[],int,int) -> protectedRead
    27:34:void protectedResize(long) -> protectedResize
    38:38:long protectedSize() -> protectedSize
    68:70:void protectedWrite(long,byte[],int,int) -> protectedWrite
okio.JvmSystemFileSystem -> okio.JvmSystemFileSystem:
# {"id":"sourceFile","fileName":"JvmSystemFileSystem.kt"}
    28:28:void <init>() -> <init>
    105:106:okio.Sink appendingSink(okio.Path,boolean) -> appendingSink
    125:126:void atomicMove(okio.Path,okio.Path) -> atomicMove
    30:32:okio.Path canonicalize(okio.Path) -> canonicalize
    110:119:void createDirectory(okio.Path,boolean) -> createDirectory
    143:143:void createSymlink(okio.Path,okio.Path) -> createSymlink
    130:138:void delete(okio.Path,boolean) -> delete
    62:62:java.util.List list(okio.Path) -> list
    67:160:java.util.List list(okio.Path,boolean) -> list
    64:64:java.util.List listOrNull(okio.Path) -> listOrNull
    36:57:okio.FileMetadata metadataOrNull(okio.Path) -> metadataOrNull
    83:83:okio.FileHandle openReadOnly(okio.Path) -> openReadOnly
    87:92:okio.FileHandle openReadWrite(okio.Path,boolean,boolean) -> openReadWrite
    155:155:void requireCreate(okio.Path) -> requireCreate
    151:151:void requireExist(okio.Path) -> requireExist
    100:101:okio.Sink sink(okio.Path,boolean) -> sink
    96:96:okio.Source source(okio.Path) -> source
    0:0:java.lang.String toString() -> toString
okio.NioFileSystemFileHandle -> okio.NioFileSystemFileHandle:
# {"id":"sourceFile","fileName":"NioFileSystemFileHandle.kt"}
    23:24:void <init>(boolean,java.nio.channels.FileChannel) -> <init>
    77:78:void protectedFlush() -> A0
    49:60:int protectedRead(long,byte[],int,int) -> B0
    28:35:void protectedResize(long) -> C0
    39:39:long protectedSize() -> D0
    70:73:void protectedWrite(long,byte[],int,int) -> E0
    82:83:void protectedClose() -> z0
okio.NioFileSystemWrappingFileSystem -> okio.NioFileSystemWrappingFileSystem:
# {"id":"sourceFile","fileName":"NioFileSystemWrappingFileSystem.kt"}
    39:39:void <init>(java.nio.file.FileSystem) -> <init>
    58:58:okio.FileMetadata metadataOrNull(okio.Path) -> D
    84:88:okio.FileHandle openReadOnly(okio.Path) -> E
    92:198:okio.FileHandle openReadWrite(okio.Path,boolean,boolean) -> G
    120:200:okio.Sink sink(okio.Path,boolean) -> J
    113:115:okio.Source source(okio.Path) -> L
    133:202:okio.Sink appendingSink(okio.Path,boolean) -> e
    159:167:void atomicMove(okio.Path,okio.Path) -> g
    51:53:okio.Path canonicalize(okio.Path) -> h
    66:194:java.util.List list(okio.Path,boolean) -> list
    143:152:void createDirectory(okio.Path,boolean) -> n
    187:187:void createSymlink(okio.Path,okio.Path) -> p
    172:182:void delete(okio.Path,boolean) -> r
    46:46:java.nio.file.Path resolve(okio.Path) -> resolve
    190:190:java.lang.String toString() -> toString
    61:61:java.util.List list(okio.Path) -> x
    63:63:java.util.List listOrNull(okio.Path) -> y
okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline0 -> okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.StandardOpenOption okio.NioFileSystemWrappingFileSystem$$InternalSyntheticApiModelOutline$1$1491324a92cd4e10f0f909652ca352e0a57abdca4b8790ff59c9728ae594bc7d$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline1 -> okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.StandardOpenOption okio.NioFileSystemWrappingFileSystem$$InternalSyntheticApiModelOutline$1$3551555d958aca1a818251dd7866f350540fbd00ba17eac17134cfc9708a4afe$1.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline2 -> okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.StandardOpenOption okio.NioFileSystemWrappingFileSystem$$InternalSyntheticApiModelOutline$1$4e9b72c5f567bc40faf1963e70c5b866cf3096814d7e0f1e04019457c9defc5c$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline3 -> okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.channels.FileChannel okio.NioFileSystemWrappingFileSystem$$InternalSyntheticApiModelOutline$1$4e9b72c5f567bc40faf1963e70c5b866cf3096814d7e0f1e04019457c9defc5c$1.m(java.nio.file.Path,java.nio.file.OpenOption[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline4 -> okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.StandardCopyOption okio.NioFileSystemWrappingFileSystem$$InternalSyntheticApiModelOutline$1$e15e0c27d2cd3ac2af38d10fb9a1cc8a3989b20a22c2176d9eb0be3afcc2171e$0.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline5 -> okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String okio.NioFileSystemWrappingFileSystem$$InternalSyntheticApiModelOutline$1$e15e0c27d2cd3ac2af38d10fb9a1cc8a3989b20a22c2176d9eb0be3afcc2171e$3.m(java.nio.file.NoSuchFileException) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline6 -> okio.NioFileSystemWrappingFileSystem$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.StandardOpenOption okio.NioFileSystemWrappingFileSystem$$InternalSyntheticApiModelOutline$1$f62493af01a87227855bc83a98e710b1fbbba5249bb2df0630aa95a4c76b8724$1.m() -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioSystemFileSystem -> okio.NioSystemFileSystem:
# {"id":"sourceFile","fileName":"NioSystemFileSystem.kt"}
    33:33:void <init>() -> <init>
    78:82:void atomicMove(okio.Path,okio.Path) -> atomicMove
    87:87:void createSymlink(okio.Path,okio.Path) -> createSymlink
    35:35:okio.FileMetadata metadataOrNull(okio.Path) -> metadataOrNull
    40:64:okio.FileMetadata metadataOrNull(java.nio.file.Path) -> metadataOrNull
    0:0:java.lang.String toString() -> toString
    73:73:java.lang.Long zeroToNull(java.nio.file.attribute.FileTime) -> zeroToNull
okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline0 -> okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:long okio.NioSystemFileSystem$$InternalSyntheticApiModelOutline$1$2a2e6b9a2a8d05d07aa2e217fdf3f20390eaf8f20f53de300a6cf23ef85d32bb$0.m(java.nio.file.attribute.FileTime) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline1 -> okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean okio.NioSystemFileSystem$$InternalSyntheticApiModelOutline$1$72d8a5b8fcad7e7dfabef075e92b1b1264fd4bbe8c9fbf55627f760c8db16817$2.m(java.nio.file.attribute.BasicFileAttributes) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline2 -> okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean okio.NioSystemFileSystem$$InternalSyntheticApiModelOutline$1$72d8a5b8fcad7e7dfabef075e92b1b1264fd4bbe8c9fbf55627f760c8db16817$4.m(java.nio.file.attribute.BasicFileAttributes) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline3 -> okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:long okio.NioSystemFileSystem$$InternalSyntheticApiModelOutline$1$72d8a5b8fcad7e7dfabef075e92b1b1264fd4bbe8c9fbf55627f760c8db16817$6.m(java.nio.file.attribute.BasicFileAttributes) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline4 -> okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.attribute.FileTime okio.NioSystemFileSystem$$InternalSyntheticApiModelOutline$1$72d8a5b8fcad7e7dfabef075e92b1b1264fd4bbe8c9fbf55627f760c8db16817$7.m(java.nio.file.attribute.BasicFileAttributes) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline5 -> okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.attribute.FileTime okio.NioSystemFileSystem$$InternalSyntheticApiModelOutline$1$72d8a5b8fcad7e7dfabef075e92b1b1264fd4bbe8c9fbf55627f760c8db16817$8.m(java.nio.file.attribute.BasicFileAttributes) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline6 -> okio.NioSystemFileSystem$$ExternalSyntheticApiModelOutline6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.nio.file.attribute.FileTime okio.NioSystemFileSystem$$InternalSyntheticApiModelOutline$1$72d8a5b8fcad7e7dfabef075e92b1b1264fd4bbe8c9fbf55627f760c8db16817$9.m(java.nio.file.attribute.BasicFileAttributes) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.Okio -> okio.Okio:
    1:1:okio.Sink appendingSink(java.io.File) -> appendingSink
    1:1:okio.FileSystem asResourceFileSystem(java.lang.ClassLoader) -> asResourceFileSystem
    1:1:okio.Sink blackhole() -> blackhole
    1:1:okio.BufferedSink buffer(okio.Sink) -> buffer
    1:1:okio.BufferedSource buffer(okio.Source) -> buffer
    1:1:okio.CipherSink cipherSink(okio.Sink,javax.crypto.Cipher) -> cipherSink
    1:1:okio.CipherSource cipherSource(okio.Source,javax.crypto.Cipher) -> cipherSource
    1:1:okio.HashingSink hashingSink(okio.Sink,java.security.MessageDigest) -> hashingSink
    1:1:okio.HashingSink hashingSink(okio.Sink,javax.crypto.Mac) -> hashingSink
    1:1:okio.HashingSource hashingSource(okio.Source,java.security.MessageDigest) -> hashingSource
    1:1:okio.HashingSource hashingSource(okio.Source,javax.crypto.Mac) -> hashingSource
    1:1:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    1:1:okio.FileSystem openZip(okio.FileSystem,okio.Path) -> openZip
    1:1:okio.Sink sink(java.io.File) -> sink
    1:1:okio.Sink sink(java.io.File,boolean) -> sink
    1:1:okio.Sink sink(java.io.OutputStream) -> sink
    1:1:okio.Sink sink(java.net.Socket) -> sink
    1:1:okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[]) -> sink
    1:1:okio.Sink sink$default(java.io.File,boolean,int,java.lang.Object) -> sink$default
    1:1:okio.Source source(java.io.File) -> source
    1:1:okio.Source source(java.io.InputStream) -> source
    1:1:okio.Source source(java.net.Socket) -> source
    1:1:okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[]) -> source
    1:1:java.lang.Object use(java.io.Closeable,kotlin.jvm.functions.Function1) -> use
okio.Okio__JvmOkioKt -> okio.Okio__JvmOkioKt:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    142:142:void <clinit>() -> <clinit>
    1:1:java.util.logging.Logger access$getLogger$p() -> access$getLogger$p
    177:177:okio.Sink appendingSink(java.io.File) -> appendingSink
    230:230:okio.FileSystem asResourceFileSystem(java.lang.ClassLoader) -> asResourceFileSystem
    198:198:okio.CipherSink cipherSink(okio.Sink,javax.crypto.Cipher) -> cipherSink
    205:205:okio.CipherSource cipherSource(okio.Source,javax.crypto.Cipher) -> cipherSource
    210:210:okio.HashingSink hashingSink(okio.Sink,javax.crypto.Mac) -> hashingSink
    220:220:okio.HashingSink hashingSink(okio.Sink,java.security.MessageDigest) -> hashingSink
    215:215:okio.HashingSource hashingSource(okio.Source,javax.crypto.Mac) -> hashingSource
    225:225:okio.HashingSource hashingSource(okio.Source,java.security.MessageDigest) -> hashingSource
    237:237:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    228:228:okio.FileSystem openZip(okio.FileSystem,okio.Path) -> openZip
    0:0:okio.Sink sink(java.io.File) -> sink
    42:42:okio.Sink sink(java.io.OutputStream) -> sink
    125:127:okio.Sink sink(java.net.Socket) -> sink
    173:173:okio.Sink sink(java.io.File,boolean) -> sink
    186:186:okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[]) -> sink
    173:173:okio.Sink sink$default(java.io.File,boolean,int,java.lang.Object) -> sink$default
    79:79:okio.Source source(java.io.InputStream) -> source
    137:139:okio.Source source(java.net.Socket) -> source
    181:181:okio.Source source(java.io.File) -> source
    191:191:okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[]) -> source
okio.Okio__OkioKt -> okio.Okio__OkioKt:
# {"id":"sourceFile","fileName":"Okio.kt"}
    41:41:okio.Sink blackhole() -> blackhole
    31:31:okio.BufferedSource buffer(okio.Source) -> buffer
    37:37:okio.BufferedSink buffer(okio.Sink) -> buffer
    56:72:java.lang.Object use(java.io.Closeable,kotlin.jvm.functions.Function1) -> use
okio.Options -> okio.Options:
# {"id":"sourceFile","fileName":"Options.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(okio.ByteString[],int[],kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    22:24:void <init>(okio.ByteString[],int[]) -> <init>
    21:21:boolean contains(java.lang.Object) -> contains
    21:21:boolean contains(okio.ByteString) -> contains
    21:21:java.lang.Object get(int) -> get
    29:29:okio.ByteString get(int) -> get
    22:22:okio.ByteString[] getByteStrings$okio() -> getByteStrings$okio
    27:27:int getSize() -> getSize
    23:23:int[] getTrie$okio() -> getTrie$okio
    21:21:int indexOf(java.lang.Object) -> indexOf
    21:21:int indexOf(okio.ByteString) -> indexOf
    21:21:int lastIndexOf(java.lang.Object) -> lastIndexOf
    21:21:int lastIndexOf(okio.ByteString) -> lastIndexOf
    0:0:okio.Options of(okio.ByteString[]) -> of
okio.Options$Companion -> okio.Options$Companion:
# {"id":"sourceFile","fileName":"Options.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    31:31:void <init>() -> <init>
    116:228:void buildTrieRecursive(long,okio.Buffer,int,java.util.List,int,int,java.util.List) -> buildTrieRecursive
    107:113:void buildTrieRecursive$default(okio.Options$Companion,long,okio.Buffer,int,java.util.List,int,int,java.util.List,int,java.lang.Object) -> buildTrieRecursive$default
    233:233:long getIntCount(okio.Buffer) -> getIntCount
    34:244:okio.Options of(okio.ByteString[]) -> of
okio.OutputStreamSink -> okio.OutputStreamSink:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    44:46:void <init>(java.io.OutputStream,okio.Timeout) -> <init>
    71:71:void close() -> close
    69:69:void flush() -> flush
    73:73:okio.Timeout timeout() -> timeout
    75:75:java.lang.String toString() -> toString
    50:240:void write(okio.Buffer,long) -> write
okio.Path -> okio.Path:
# {"id":"sourceFile","fileName":"Path.kt"}
    114:114:void <clinit>() -> <clinit>
    40:41:void <init>(okio.ByteString) -> <init>
    40:40:int compareTo(java.lang.Object) -> compareTo
    301:301:int compareTo(okio.Path) -> compareTo
    302:302:boolean equals(java.lang.Object) -> equals
    0:0:okio.Path get(java.io.File) -> get
    0:0:okio.Path get(java.io.File,boolean) -> get
    0:0:okio.Path get(java.lang.String) -> get
    0:0:okio.Path get(java.lang.String,boolean) -> get
    0:0:okio.Path get(java.nio.file.Path) -> get
    0:0:okio.Path get(java.nio.file.Path,boolean) -> get
    41:41:okio.ByteString getBytes$okio() -> getBytes$okio
    133:135:okio.Path getRoot() -> getRoot
    136:166:java.util.List getSegments() -> getSegments
    168:186:java.util.List getSegmentsBytes() -> getSegmentsBytes
    303:303:int hashCode() -> hashCode
    190:190:boolean isAbsolute() -> isAbsolute
    191:191:boolean isRelative() -> isRelative
    229:229:boolean isRoot() -> isRoot
    203:203:java.lang.String name() -> name
    198:202:okio.ByteString nameBytes() -> nameBytes
    300:300:okio.Path normalized() -> normalized
    204:228:okio.Path parent() -> parent
    264:299:okio.Path relativeTo(okio.Path) -> relativeTo
    84:84:okio.Path resolve(okio.Path) -> resolve
    93:93:okio.Path resolve(okio.Path,boolean) -> resolve
    230:240:okio.Path resolve(java.lang.String) -> resolve
    241:246:okio.Path resolve(okio.ByteString) -> resolve
    247:257:okio.Path resolve(java.lang.String,boolean) -> resolve
    258:263:okio.Path resolve(okio.ByteString,boolean) -> resolve
    86:86:okio.Path resolve$default(okio.Path,java.lang.String,boolean,int,java.lang.Object) -> resolve$default
    89:89:okio.Path resolve$default(okio.Path,okio.ByteString,boolean,int,java.lang.Object) -> resolve$default
    92:92:okio.Path resolve$default(okio.Path,okio.Path,boolean,int,java.lang.Object) -> resolve$default
    99:99:java.io.File toFile() -> toFile
    102:102:java.nio.file.Path toNioPath() -> toNioPath
    304:304:java.lang.String toString() -> toString
    192:197:java.lang.Character volumeLetter() -> volumeLetter
okio.Path$Companion -> okio.Path$Companion:
# {"id":"sourceFile","fileName":"Path.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    112:112:void <init>() -> <init>
    0:0:okio.Path get(java.io.File) -> get
    0:0:okio.Path get(java.lang.String) -> get
    0:0:okio.Path get(java.nio.file.Path) -> get
    119:119:okio.Path get(java.lang.String,boolean) -> get
    124:124:okio.Path get(java.io.File,boolean) -> get
    129:129:okio.Path get(java.nio.file.Path,boolean) -> get
    119:119:okio.Path get$default(okio.Path$Companion,java.lang.String,boolean,int,java.lang.Object) -> get$default
    124:124:okio.Path get$default(okio.Path$Companion,java.io.File,boolean,int,java.lang.Object) -> get$default
    129:129:okio.Path get$default(okio.Path$Companion,java.nio.file.Path,boolean,int,java.lang.Object) -> get$default
okio.PeekSource -> okio.PeekSource:
# {"id":"sourceFile","fileName":"PeekSource.kt"}
    28:33:void <init>(okio.BufferedSource) -> <init>
    71:71:void close() -> close
    39:62:long read(okio.Buffer,long) -> read
    67:67:okio.Timeout timeout() -> timeout
okio.Pipe -> okio.Pipe:
# {"id":"sourceFile","fileName":"Pipe.kt"}
    226:226:okio.Sink -deprecated_sink() -> -deprecated_sink
    234:234:okio.Source -deprecated_source() -> -deprecated_source
    40:131:void <init>(long) -> <init>
    250:254:void cancel() -> cancel
    176:210:void fold(okio.Sink) -> fold
    217:284:void forward(okio.Sink,kotlin.jvm.functions.Function1) -> forward
    41:41:okio.Buffer getBuffer$okio() -> getBuffer$okio
    42:42:boolean getCanceled$okio() -> getCanceled$okio
    48:48:java.util.concurrent.locks.Condition getCondition() -> getCondition
    45:45:okio.Sink getFoldedSink$okio() -> getFoldedSink$okio
    47:47:java.util.concurrent.locks.ReentrantLock getLock() -> getLock
    40:40:long getMaxBufferSize$okio() -> getMaxBufferSize$okio
    43:43:boolean getSinkClosed$okio() -> getSinkClosed$okio
    44:44:boolean getSourceClosed$okio() -> getSourceClosed$okio
    42:42:void setCanceled$okio(boolean) -> setCanceled$okio
    45:45:void setFoldedSink$okio(okio.Sink) -> setFoldedSink$okio
    43:43:void setSinkClosed$okio(boolean) -> setSinkClosed$okio
    44:44:void setSourceClosed$okio(boolean) -> setSourceClosed$okio
    55:55:okio.Sink sink() -> sink
    131:131:okio.Source source() -> source
okio.Pipe$sink$1 -> okio.Pipe$sink$1:
# {"id":"sourceFile","fileName":"Pipe.kt"}
    55:56:void <init>(okio.Pipe) -> <init>
    111:341:void close() -> close
    92:313:void flush() -> flush
    127:127:okio.Timeout timeout() -> timeout
    61:285:void write(okio.Buffer,long) -> write
okio.Pipe$source$1 -> okio.Pipe$source$1:
# {"id":"sourceFile","fileName":"Pipe.kt"}
    131:132:void <init>(okio.Pipe) -> <init>
    152:155:void close() -> close
    135:147:long read(okio.Buffer,long) -> read
    158:158:okio.Timeout timeout() -> timeout
okio.RealBufferedSink -> okio.RealBufferedSink:
# {"id":"sourceFile","fileName":"RealBufferedSink.kt"}
    42:45:void <init>(okio.Sink) -> <init>
    227:231:okio.BufferedSink writeIntLe(int) -> B
    207:211:okio.BufferedSink writeByte(int) -> D
    252:256:okio.BufferedSink emitCompleteSegments() -> I
    217:221:okio.BufferedSink writeShortLe(int) -> N
    159:163:okio.BufferedSink writeUtf8(java.lang.String) -> O
    182:186:okio.BufferedSink write(byte[],int,int) -> Q
    149:153:okio.BufferedSink write(okio.ByteString) -> S
    164:168:okio.BufferedSink writeUtf8(java.lang.String,int,int) -> T
    247:251:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> U
    200:204:okio.BufferedSink write(okio.Source,long) -> V
    66:175:okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> X
    154:158:okio.BufferedSink write(okio.ByteString,int,int) -> Z
    272:294:void close() -> close
    177:181:okio.BufferedSink write(byte[]) -> f0
    264:270:void flush() -> flush
    0:0:void getBuffer$annotations() -> getBuffer$annotations
    191:195:long writeAll(okio.Source) -> h0
    136:136:boolean isOpen() -> isOpen
    77:176:okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset) -> n0
    232:236:okio.BufferedSink writeLong(long) -> o0
    242:246:okio.BufferedSink writeDecimalLong(long) -> q0
    108:108:java.io.OutputStream outputStream() -> r0
    53:53:okio.Buffer buffer() -> t
    296:296:okio.Timeout timeout() -> timeout
    297:297:java.lang.String toString() -> toString
    51:51:okio.Buffer getBuffer() -> u
    258:262:okio.BufferedSink emit() -> v
    212:216:okio.BufferedSink writeShort(int) -> w
    87:188:int write(java.nio.ByteBuffer) -> write
    143:147:void write(okio.Buffer,long) -> write
    169:173:okio.BufferedSink writeUtf8CodePoint(int) -> x
    222:226:okio.BufferedSink writeInt(int) -> y
    237:241:okio.BufferedSink writeLongLe(long) -> z
okio.RealBufferedSink$outputStream$1 -> okio.RealBufferedSink$outputStream$1:
# {"id":"sourceFile","fileName":"RealBufferedSink.kt"}
    108:108:void <init>(okio.RealBufferedSink) -> <init>
    128:128:void close() -> close
    123:124:void flush() -> flush
    130:130:java.lang.String toString() -> toString
    110:143:void write(int) -> write
    116:144:void write(byte[],int,int) -> write
okio.RealBufferedSource -> okio.RealBufferedSource:
# {"id":"sourceFile","fileName":"RealBufferedSource.kt"}
    53:56:void <init>(okio.Source) -> <init>
    239:241:byte[] readByteArray() -> A
    198:201:boolean exhausted() -> C
    287:297:long readAll(okio.Sink) -> E
    119:119:long indexOf(byte,long) -> F
    418:433:long indexOf(byte,long,long) -> G
    309:319:java.lang.String readUtf8Line() -> H
    367:383:long readDecimalLong() -> J
    320:337:java.lang.String readUtf8LineStrict(long) -> K
    462:475:boolean rangeEquals(long,okio.ByteString,int,int) -> L
    123:123:long indexOf(okio.ByteString) -> M
    96:307:java.lang.String readString(java.nio.charset.Charset) -> P
    338:348:int readUtf8CodePoint() -> R
    215:217:okio.ByteString readByteString() -> W
    204:209:boolean request(long) -> Y
    450:461:long indexOfElement(okio.ByteString,long) -> a0
    303:305:java.lang.String readUtf8(long) -> b
    106:106:java.lang.String readUtf8LineStrict() -> b0
    218:220:okio.ByteString readByteString(long) -> c
    358:360:int readIntLe() -> c0
    478:482:void close() -> close
    276:284:void readFully(okio.Buffer,long) -> d
    242:244:byte[] readByteArray(long) -> d0
    300:302:java.lang.String readUtf8() -> e0
    101:308:java.lang.String readString(long,java.nio.charset.Charset) -> g0
    0:0:void getBuffer$annotations() -> getBuffer$annotations
    352:354:short readShortLe() -> i0
    179:179:boolean isOpen() -> isOpen
    221:237:int select(okio.Options) -> j0
    364:366:long readLongLe() -> k0
    437:448:long indexOf(okio.ByteString,long) -> l0
    129:133:boolean rangeEquals(long,okio.ByteString) -> m0
    202:202:void require(long) -> p0
    477:477:okio.BufferedSource peek() -> peek
    76:76:int read(byte[]) -> read
    186:197:long read(okio.Buffer,long) -> read
    261:271:int read(byte[],int,int) -> read
    82:274:int read(java.nio.ByteBuffer) -> read
    212:214:byte readByte() -> readByte
    246:259:void readFully(byte[]) -> readFully
    355:357:int readInt() -> readInt
    361:363:long readLong() -> readLong
    349:351:short readShort() -> readShort
    118:118:long indexOf(byte) -> s0
    405:413:void skip(long) -> skip
    64:64:okio.Buffer buffer() -> t
    384:403:long readHexadecimalUnsignedLong() -> t0
    484:484:okio.Timeout timeout() -> timeout
    485:485:java.lang.String toString() -> toString
    62:62:okio.Buffer getBuffer() -> u
    125:125:long indexOfElement(okio.ByteString) -> u0
    146:146:java.io.InputStream inputStream() -> v0
okio.RealBufferedSource$inputStream$1 -> okio.RealBufferedSource$inputStream$1:
# {"id":"sourceFile","fileName":"RealBufferedSource.kt"}
    146:146:void <init>(okio.RealBufferedSource) -> <init>
    169:194:int available() -> available
    173:173:void close() -> close
    148:188:int read() -> read
    157:192:int read(byte[],int,int) -> read
    175:175:java.lang.String toString() -> toString
okio.Segment -> okio.Segment:
# {"id":"sourceFile","fileName":"Segment.kt"}
    0:0:void <clinit>() -> <clinit>
    61:64:void <init>() -> <init>
    67:72:void <init>(byte[],int,int,boolean,boolean) -> <init>
    147:154:void compact() -> compact
    93:97:okio.Segment pop() -> pop
    105:108:okio.Segment push(okio.Segment) -> push
    81:82:okio.Segment sharedCopy() -> sharedCopy
    121:138:okio.Segment split(int) -> split
    86:86:okio.Segment unsharedCopy() -> unsharedCopy
    159:176:void writeTo(okio.Segment,int) -> writeTo
okio.Segment$Companion -> okio.Segment$Companion:
# {"id":"sourceFile","fileName":"Segment.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    179:179:void <init>() -> <init>
okio.SegmentPool -> okio.SegmentPool:
# {"id":"sourceFile","fileName":"SegmentPool.kt"}
    47:68:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    126:127:java.util.concurrent.atomic.AtomicReference firstRef() -> firstRef
    73:74:int getByteCount() -> getByteCount
    47:47:int getMAX_SIZE() -> getMAX_SIZE
    104:121:void recycle(okio.Segment) -> recycle
    79:96:okio.Segment take() -> take
okio.SegmentedByteString -> okio.SegmentedByteString:
# {"id":"sourceFile","fileName":"SegmentedByteString.kt"}
    38:40:void <init>(byte[][],int[]) -> <init>
    86:86:java.nio.ByteBuffer asByteBuffer() -> asByteBuffer
    44:44:java.lang.String base64() -> base64
    75:75:java.lang.String base64Url() -> base64Url
    310:325:void copyInto(int,byte[],int,int) -> copyInto
    53:148:okio.ByteString digest$okio(java.lang.String) -> digest$okio
    335:335:boolean equals(java.lang.Object) -> equals
    39:39:int[] getDirectory$okio() -> getDirectory$okio
    38:38:byte[][] getSegments$okio() -> getSegments$okio
    199:199:int getSize$okio() -> getSize$okio
    337:362:int hashCode() -> hashCode
    46:46:java.lang.String hex() -> hex
    64:160:okio.ByteString hmac$okio(java.lang.String,okio.ByteString) -> hmac$okio
    119:119:int indexOf(byte[],int) -> indexOf
    129:129:byte[] internalArray$okio() -> internalArray$okio
    194:198:byte internalGet$okio(int) -> internalGet$okio
    121:121:int lastIndexOf(byte[],int) -> lastIndexOf
    262:276:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    284:302:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    42:42:java.lang.String string(java.nio.charset.Charset) -> string
    165:193:okio.ByteString substring(int,int) -> substring
    48:48:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    50:50:okio.ByteString toAsciiUppercase() -> toAsciiUppercase
    200:211:byte[] toByteArray() -> toByteArray
    127:127:okio.ByteString toByteString() -> toByteString
    135:135:java.lang.String toString() -> toString
    91:231:void write(java.io.OutputStream) -> write
    237:260:void write$okio(okio.Buffer,int,int) -> write$okio
    138:138:java.lang.Object writeReplace() -> writeReplace
okio.Sink -> okio.Sink:
# {"id":"sourceFile","fileName":"Sink.kt"}
okio.SocketAsyncTimeout -> okio.SocketAsyncTimeout:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    144:144:void <init>(java.net.Socket) -> <init>
    146:148:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    155:164:void timedOut() -> timedOut
okio.Source -> okio.Source:
# {"id":"sourceFile","fileName":"Source.kt"}
okio.Throttler -> okio.Throttler:
# {"id":"sourceFile","fileName":"Throttler.kt"}
    41:53:void <init>(long) -> <init>
    55:55:void <init>() -> <init>
    99:122:long byteCountOrWaitNanos$okio(long,long) -> byteCountOrWaitNanos$okio
    0:0:void bytesPerSecond(long) -> bytesPerSecond
    0:0:void bytesPerSecond(long,long) -> bytesPerSecond
    64:73:void bytesPerSecond(long,long,long) -> bytesPerSecond
    59:62:void bytesPerSecond$default(okio.Throttler,long,long,long,int,java.lang.Object) -> bytesPerSecond$default
    131:131:long bytesToNanos(long) -> bytesToNanos
    53:53:java.util.concurrent.locks.Condition getCondition() -> getCondition
    52:52:java.util.concurrent.locks.ReentrantLock getLock() -> getLock
    129:129:long nanosToBytes(long) -> nanosToBytes
    150:150:okio.Sink sink(okio.Sink) -> sink
    135:135:okio.Source source(okio.Source) -> source
    81:88:long take$okio(long) -> take$okio
okio.Throttler$sink$1 -> okio.Throttler$sink$1:
# {"id":"sourceFile","fileName":"Throttler.kt"}
    150:150:void <init>(okio.Sink,okio.Throttler) -> <init>
    156:162:void write(okio.Buffer,long) -> write
okio.Throttler$source$1 -> okio.Throttler$source$1:
# {"id":"sourceFile","fileName":"Throttler.kt"}
    135:135:void <init>(okio.Source,okio.Throttler) -> <init>
    138:142:long read(okio.Buffer,long) -> read
okio.Timeout -> okio.Timeout:
# {"id":"sourceFile","fileName":"Timeout.kt"}
    300:300:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    152:184:void awaitSignal(java.util.concurrent.locks.Condition) -> awaitSignal
    86:86:okio.Timeout clearDeadline() -> clearDeadline
    80:80:okio.Timeout clearTimeout() -> clearTimeout
    74:75:okio.Timeout deadline(long,java.util.concurrent.TimeUnit) -> deadline
    57:58:long deadlineNanoTime() -> deadlineNanoTime
    67:68:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    49:49:boolean hasDeadline() -> hasDeadline
    268:293:java.lang.Object intersectWith(okio.Timeout,kotlin.jvm.functions.Function0) -> intersectWith
    97:103:void throwIfReached() -> throwIfReached
    40:41:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    46:46:long timeoutNanos() -> timeoutNanos
    226:259:void waitUntilNotified(java.lang.Object) -> waitUntilNotified
okio.Timeout$Companion -> okio.Timeout$Companion:
# {"id":"sourceFile","fileName":"Timeout.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    299:299:void <init>() -> <init>
    0:0:long minTimeout(long,long) -> minTimeout
okio.Timeout$Companion$NONE$1 -> okio.Timeout$Companion$NONE$1:
# {"id":"sourceFile","fileName":"Timeout.kt"}
    300:300:void <init>() -> <init>
    0:0:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    0:0:void throwIfReached() -> throwIfReached
    0:0:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
okio.Utf8 -> okio.Utf8:
# {"id":"sourceFile","fileName":"Utf8.kt"}
    0:0:boolean isIsoControl(int) -> isIsoControl
    0:0:boolean isUtf8Continuation(byte) -> isUtf8Continuation
    398:422:int process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> process2Utf8Bytes
    442:481:int process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> process3Utf8Bytes
    502:554:int process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> process4Utf8Bytes
    262:813:void processUtf16Chars(byte[],int,int,kotlin.jvm.functions.Function1) -> processUtf16Chars
    140:197:void processUtf8Bytes(java.lang.String,int,int,kotlin.jvm.functions.Function1) -> processUtf8Bytes
    214:672:void processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> processUtf8CodePoints
    0:0:long size(java.lang.String) -> size
    0:0:long size(java.lang.String,int) -> size
    78:100:long size(java.lang.String,int,int) -> size
    77:77:long size$default(java.lang.String,int,int,int,java.lang.Object) -> size$default
okio.ZipFileSystem -> okio.ZipFileSystem:
# {"id":"sourceFile","fileName":"ZipFileSystem.kt"}
    172:172:void <clinit>() -> <clinit>
    66:70:void <init>(okio.Path,okio.FileSystem,java.util.Map,java.lang.String) -> <init>
    65:65:okio.Path access$getROOT$cp() -> access$getROOT$cp
    156:156:okio.Sink appendingSink(okio.Path,boolean) -> appendingSink
    163:163:void atomicMove(okio.Path,okio.Path) -> atomicMove
    72:74:okio.Path canonicalize(okio.Path) -> canonicalize
    81:81:okio.Path canonicalizeInternal(okio.Path) -> canonicalizeInternal
    160:160:void createDirectory(okio.Path,boolean) -> createDirectory
    169:169:void createSymlink(okio.Path,okio.Path) -> createSymlink
    166:166:void delete(okio.Path,boolean) -> delete
    117:117:java.util.List list(okio.Path) -> list
    122:125:java.util.List list(okio.Path,boolean) -> list
    119:119:java.util.List listOrNull(okio.Path) -> listOrNull
    85:215:okio.FileMetadata metadataOrNull(okio.Path) -> metadataOrNull
    110:110:okio.FileHandle openReadOnly(okio.Path) -> openReadOnly
    114:114:okio.FileHandle openReadWrite(okio.Path,boolean,boolean) -> openReadWrite
    152:152:okio.Sink sink(okio.Path,boolean) -> sink
    130:236:okio.Source source(okio.Path) -> source
okio.ZipFileSystem$Companion -> okio.ZipFileSystem$Companion:
# {"id":"sourceFile","fileName":"ZipFileSystem.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    171:171:void <init>() -> <init>
    172:172:okio.Path getROOT() -> getROOT
okio._JvmPlatformKt -> okio._JvmPlatformKt:
# {"id":"sourceFile","fileName":"-JvmPlatform.kt"}
    24:24:byte[] asUtf8ToByteArray(java.lang.String) -> asUtf8ToByteArray
    31:31:java.util.concurrent.locks.ReentrantLock newLock() -> newLock
    22:22:java.lang.String toUtf8String(byte[]) -> toUtf8String
    33:33:java.lang.Object withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0) -> withLock
okio.internal.-Buffer -> okio.internal.-Buffer:
# {"id":"sourceFile","fileName":"Buffer.kt"}
    45:45:void <clinit>() -> <clinit>
    420:420:void commonClear(okio.Buffer) -> commonClear
    1721:1728:void commonClose(okio.Buffer$UnsafeCursor) -> commonClose
    279:285:long commonCompleteSegmentByteCount(okio.Buffer) -> commonCompleteSegmentByteCount
    1484:1500:okio.Buffer commonCopy(okio.Buffer) -> commonCopy
    246:272:okio.Buffer commonCopyTo(okio.Buffer,okio.Buffer,long,long) -> commonCopyTo
    1435:1460:boolean commonEquals(okio.Buffer,java.lang.Object) -> commonEquals
    1698:1714:long commonExpandBuffer(okio.Buffer$UnsafeCursor,int) -> commonExpandBuffer
    414:1769:byte commonGet(okio.Buffer,long) -> commonGet
    1469:1479:int commonHashCode(okio.Buffer) -> commonHashCode
    1287:1802:long commonIndexOf(okio.Buffer,byte,long,long) -> commonIndexOf
    1320:1822:long commonIndexOf(okio.Buffer,okio.ByteString,long) -> commonIndexOf
    1355:1842:long commonIndexOfElement(okio.Buffer,okio.ByteString,long) -> commonIndexOfElement
    1567:1568:int commonNext(okio.Buffer$UnsafeCursor) -> commonNext
    1420:1426:boolean commonRangeEquals(okio.Buffer,long,okio.ByteString,int,int) -> commonRangeEquals
    644:644:int commonRead(okio.Buffer,byte[]) -> commonRead
    656:672:int commonRead(okio.Buffer,byte[],int,int) -> commonRead
    1277:1280:long commonRead(okio.Buffer,okio.Buffer,long) -> commonRead
    835:837:long commonReadAll(okio.Buffer,okio.Sink) -> commonReadAll
    1558:1562:okio.Buffer$UnsafeCursor commonReadAndWriteUnsafe(okio.Buffer,okio.Buffer$UnsafeCursor) -> commonReadAndWriteUnsafe
    292:306:byte commonReadByte(okio.Buffer) -> commonReadByte
    633:633:byte[] commonReadByteArray(okio.Buffer) -> commonReadByteArray
    636:640:byte[] commonReadByteArray(okio.Buffer,long) -> commonReadByteArray
    803:803:okio.ByteString commonReadByteString(okio.Buffer) -> commonReadByteString
    806:812:okio.ByteString commonReadByteString(okio.Buffer,long) -> commonReadByteString
    682:738:long commonReadDecimalLong(okio.Buffer) -> commonReadDecimalLong
    648:650:void commonReadFully(okio.Buffer,byte[]) -> commonReadFully
    827:831:void commonReadFully(okio.Buffer,okio.Buffer,long) -> commonReadFully
    745:799:long commonReadHexadecimalUnsignedLong(okio.Buffer) -> commonReadHexadecimalUnsignedLong
    340:369:int commonReadInt(okio.Buffer) -> commonReadInt
    376:407:long commonReadLong(okio.Buffer) -> commonReadLong
    313:333:short commonReadShort(okio.Buffer) -> commonReadShort
    1549:1553:okio.Buffer$UnsafeCursor commonReadUnsafe(okio.Buffer,okio.Buffer$UnsafeCursor) -> commonReadUnsafe
    843:860:java.lang.String commonReadUtf8(okio.Buffer,long) -> commonReadUtf8
    898:956:int commonReadUtf8CodePoint(okio.Buffer) -> commonReadUtf8CodePoint
    867:871:java.lang.String commonReadUtf8Line(okio.Buffer) -> commonReadUtf8Line
    877:1775:java.lang.String commonReadUtf8LineStrict(okio.Buffer,long) -> commonReadUtf8LineStrict
    1644:1846:long commonResizeBuffer(okio.Buffer$UnsafeCursor,long) -> commonResizeBuffer
    1572:1639:int commonSeek(okio.Buffer$UnsafeCursor,long) -> commonSeek
    817:822:int commonSelect(okio.Buffer,okio.Options) -> commonSelect
    425:1773:void commonSkip(okio.Buffer,long) -> commonSkip
    1506:1507:okio.ByteString commonSnapshot(okio.Buffer) -> commonSnapshot
    1512:1545:okio.ByteString commonSnapshot(okio.Buffer,int) -> commonSnapshot
    586:598:okio.Segment commonWritableSegment(okio.Buffer,int) -> commonWritableSegment
    444:444:okio.Buffer commonWrite(okio.Buffer,okio.ByteString,int,int) -> commonWrite
    603:603:okio.Buffer commonWrite(okio.Buffer,byte[]) -> commonWrite
    611:629:okio.Buffer commonWrite(okio.Buffer,byte[],int,int) -> commonWrite
    1127:1128:okio.Buffer commonWrite(okio.Buffer,okio.Source,long) -> commonWrite
    1234:1270:void commonWrite(okio.Buffer,okio.Buffer,long) -> commonWrite
    439:444:okio.Buffer commonWrite$default(okio.Buffer,okio.ByteString,int,int,int,java.lang.Object) -> commonWrite$default
    1117:1117:long commonWriteAll(okio.Buffer,okio.Source) -> commonWriteAll
    1135:1137:okio.Buffer commonWriteByte(okio.Buffer,int) -> commonWriteByte
    452:538:okio.Buffer commonWriteDecimalLong(okio.Buffer,long) -> commonWriteDecimalLong
    546:581:okio.Buffer commonWriteHexadecimalUnsignedLong(okio.Buffer,long) -> commonWriteHexadecimalUnsignedLong
    1153:1161:okio.Buffer commonWriteInt(okio.Buffer,int) -> commonWriteInt
    1166:1178:okio.Buffer commonWriteLong(okio.Buffer,long) -> commonWriteLong
    1142:1148:okio.Buffer commonWriteShort(okio.Buffer,int) -> commonWriteShort
    973:1053:okio.Buffer commonWriteUtf8(okio.Buffer,java.lang.String,int,int) -> commonWriteUtf8
    1067:1107:okio.Buffer commonWriteUtf8CodePoint(okio.Buffer,int) -> commonWriteUtf8CodePoint
    45:45:byte[] getHEX_DIGIT_BYTES() -> getHEX_DIGIT_BYTES
    0:0:void getHEX_DIGIT_BYTES$annotations() -> getHEX_DIGIT_BYTES$annotations
    64:76:boolean rangeEquals(okio.Segment,int,byte[],int,int) -> rangeEquals
    89:98:java.lang.String readUtf8Line(okio.Buffer,long) -> readUtf8Line
    112:131:java.lang.Object seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> seek
    148:220:int selectPrefix(okio.Buffer,okio.Options,boolean) -> selectPrefix
    147:147:int selectPrefix$default(okio.Buffer,okio.Options,boolean,int,java.lang.Object) -> selectPrefix$default
okio.internal.-ByteString -> okio.internal.-ByteString:
# {"id":"sourceFile","fileName":"ByteString.kt"}
    60:60:void <clinit>() -> <clinit>
    1:1:int access$codePointIndexToCharIndex(byte[],int) -> access$codePointIndexToCharIndex
    1:1:int access$decodeHexDigit(char) -> access$decodeHexDigit
    348:512:int codePointIndexToCharIndex(byte[],int) -> codePointIndexToCharIndex
    53:53:java.lang.String commonBase64(okio.ByteString) -> commonBase64
    56:56:java.lang.String commonBase64Url(okio.ByteString) -> commonBase64Url
    253:259:int commonCompareTo(okio.ByteString,okio.ByteString) -> commonCompareTo
    185:185:void commonCopyInto(okio.ByteString,int,byte[],int,int) -> commonCopyInto
    289:290:okio.ByteString commonDecodeBase64(java.lang.String) -> commonDecodeBase64
    295:303:okio.ByteString commonDecodeHex(java.lang.String) -> commonDecodeHex
    282:283:okio.ByteString commonEncodeUtf8(java.lang.String) -> commonEncodeUtf8
    198:198:boolean commonEndsWith(okio.ByteString,okio.ByteString) -> commonEndsWith
    202:202:boolean commonEndsWith(okio.ByteString,byte[]) -> commonEndsWith
    237:237:boolean commonEquals(okio.ByteString,java.lang.Object) -> commonEquals
    145:145:byte commonGetByte(okio.ByteString,int) -> commonGetByte
    148:148:int commonGetSize(okio.ByteString) -> commonGetSize
    244:247:int commonHashCode(okio.ByteString) -> commonHashCode
    64:365:java.lang.String commonHex(okio.ByteString) -> commonHex
    206:208:int commonIndexOf(okio.ByteString,byte[],int) -> commonIndexOf
    154:154:byte[] commonInternalArray(okio.ByteString) -> commonInternalArray
    219:219:int commonLastIndexOf(okio.ByteString,okio.ByteString,int) -> commonLastIndexOf
    223:226:int commonLastIndexOf(okio.ByteString,byte[],int) -> commonLastIndexOf
    271:271:okio.ByteString commonOf(byte[]) -> commonOf
    162:162:boolean commonRangeEquals(okio.ByteString,int,okio.ByteString,int,int) -> commonRangeEquals
    172:174:boolean commonRangeEquals(okio.ByteString,int,byte[],int,int) -> commonRangeEquals
    190:190:boolean commonStartsWith(okio.ByteString,okio.ByteString) -> commonStartsWith
    194:194:boolean commonStartsWith(okio.ByteString,byte[]) -> commonStartsWith
    131:141:okio.ByteString commonSubstring(okio.ByteString,int,int) -> commonSubstring
    77:96:okio.ByteString commonToAsciiLowercase(okio.ByteString) -> commonToAsciiLowercase
    105:124:okio.ByteString commonToAsciiUppercase(okio.ByteString) -> commonToAsciiUppercase
    151:151:byte[] commonToByteArray(okio.ByteString) -> commonToByteArray
    275:277:okio.ByteString commonToByteString(byte[],int,int) -> commonToByteString
    322:380:java.lang.String commonToString(okio.ByteString) -> commonToString
    43:47:java.lang.String commonUtf8(okio.ByteString) -> commonUtf8
    308:308:void commonWrite(okio.ByteString,okio.Buffer,int,int) -> commonWrite
    316:316:int decodeHexDigit(char) -> decodeHexDigit
    59:59:char[] getHEX_DIGIT_CHARS() -> getHEX_DIGIT_CHARS
    0:0:void getHEX_DIGIT_CHARS$annotations() -> getHEX_DIGIT_CHARS$annotations
okio.internal.-FileSystem -> okio.internal.-FileSystem:
# {"id":"sourceFile","fileName":"FileSystem.kt"}
    107:147:java.lang.Object collectRecursively(kotlin.sequences.SequenceScope,okio.FileSystem,kotlin.collections.ArrayDeque,okio.Path,boolean,boolean,kotlin.coroutines.Continuation) -> collectRecursively
    65:195:void commonCopy(okio.FileSystem,okio.Path,okio.Path) -> commonCopy
    47:59:void commonCreateDirectories(okio.FileSystem,okio.Path,boolean) -> commonCreateDirectories
    74:86:void commonDeleteRecursively(okio.FileSystem,okio.Path,boolean) -> commonDeleteRecursively
    41:41:boolean commonExists(okio.FileSystem,okio.Path) -> commonExists
    92:92:kotlin.sequences.Sequence commonListRecursively(okio.FileSystem,okio.Path,boolean) -> commonListRecursively
    36:36:okio.FileMetadata commonMetadata(okio.FileSystem,okio.Path) -> commonMetadata
    152:153:okio.Path symlinkTarget(okio.FileSystem,okio.Path) -> symlinkTarget
okio.internal.-FileSystem$collectRecursively$1 -> okio.internal.-FileSystem$collectRecursively$1:
# {"id":"sourceFile","fileName":"FileSystem.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
okio.internal.-FileSystem$commonDeleteRecursively$sequence$1 -> okio.internal.-FileSystem$commonDeleteRecursively$sequence$1:
# {"id":"sourceFile","fileName":"FileSystem.kt"}
    0:0:void <init>(okio.FileSystem,okio.Path,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    74:82:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
okio.internal.-FileSystem$commonListRecursively$1 -> okio.internal.-FileSystem$commonListRecursively$1:
# {"id":"sourceFile","fileName":"FileSystem.kt"}
    0:0:void <init>(okio.Path,okio.FileSystem,boolean,kotlin.coroutines.Continuation) -> <init>
    0:0:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    0:0:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    0:0:java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation) -> invoke
    92:104:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
okio.internal.-Path -> okio.internal.-Path:
# {"id":"sourceFile","fileName":"Path.kt"}
    29:41:void <clinit>() -> <clinit>
    1:1:okio.ByteString access$getBACKSLASH$p() -> access$getBACKSLASH$p
    1:1:okio.ByteString access$getDOT$p() -> access$getDOT$p
    1:1:okio.ByteString access$getDOT_DOT$p() -> access$getDOT_DOT$p
    1:1:int access$getIndexOfLastSlash(okio.Path) -> access$getIndexOfLastSlash
    1:1:okio.ByteString access$getSLASH$p() -> access$getSLASH$p
    1:1:okio.ByteString access$getSlash(okio.Path) -> access$getSlash
    1:1:boolean access$lastSegmentIsDotDot(okio.Path) -> access$lastSegmentIsDotDot
    1:1:int access$rootLength(okio.Path) -> access$rootLength
    1:1:okio.ByteString access$toSlash(java.lang.String) -> access$toSlash
    282:282:int commonCompareTo(okio.Path,okio.Path) -> commonCompareTo
    287:287:boolean commonEquals(okio.Path,java.lang.Object) -> commonEquals
    292:292:int commonHashCode(okio.Path) -> commonHashCode
    112:112:boolean commonIsAbsolute(okio.Path) -> commonIsAbsolute
    117:117:boolean commonIsRelative(okio.Path) -> commonIsRelative
    194:194:boolean commonIsRoot(okio.Path) -> commonIsRoot
    149:149:java.lang.String commonName(okio.Path) -> commonName
    139:143:okio.ByteString commonNameBytes(okio.Path) -> commonNameBytes
    268:268:okio.Path commonNormalized(okio.Path) -> commonNormalized
    154:178:okio.Path commonParent(okio.Path) -> commonParent
    228:263:okio.Path commonRelativeTo(okio.Path,okio.Path) -> commonRelativeTo
    199:433:okio.Path commonResolve(okio.Path,java.lang.String,boolean) -> commonResolve
    204:434:okio.Path commonResolve(okio.Path,okio.ByteString,boolean) -> commonResolve
    209:209:okio.Path commonResolve(okio.Path,okio.Buffer,boolean) -> commonResolve
    213:223:okio.Path commonResolve(okio.Path,okio.Path,boolean) -> commonResolve
    45:47:okio.Path commonRoot(okio.Path) -> commonRoot
    53:431:java.util.List commonSegments(okio.Path) -> commonSegments
    59:77:java.util.List commonSegmentsBytes(okio.Path) -> commonSegmentsBytes
    301:301:okio.Path commonToPath(java.lang.String,boolean) -> commonToPath
    297:297:java.lang.String commonToString(okio.Path) -> commonToString
    122:127:java.lang.Character commonVolumeLetter(okio.Path) -> commonVolumeLetter
    0:0:void getANY_SLASH$annotations() -> getANY_SLASH$annotations
    0:0:void getBACKSLASH$annotations() -> getBACKSLASH$annotations
    0:0:void getDOT$annotations() -> getDOT$annotations
    0:0:void getDOT_DOT$annotations() -> getDOT_DOT$annotations
    132:134:int getIndexOfLastSlash(okio.Path) -> getIndexOfLastSlash
    0:0:void getSLASH$annotations() -> getSLASH$annotations
    274:275:okio.ByteString getSlash(okio.Path) -> getSlash
    184:187:boolean lastSegmentIsDotDot(okio.Path) -> lastSegmentIsDotDot
    85:102:int rootLength(okio.Path) -> rootLength
    400:403:boolean startsWithVolumeLetterAndColon(okio.Buffer,okio.ByteString) -> startsWithVolumeLetterAndColon
    307:380:okio.Path toPath(okio.Buffer,boolean) -> toPath
    385:387:okio.ByteString toSlash(java.lang.String) -> toSlash
    393:395:okio.ByteString toSlash(byte) -> toSlash
okio.internal.-RealBufferedSink -> okio.internal.-RealBufferedSink:
# {"id":"sourceFile","fileName":"RealBufferedSink.kt"}
    192:247:void commonClose(okio.RealBufferedSink) -> commonClose
    177:243:okio.BufferedSink commonEmit(okio.RealBufferedSink) -> commonEmit
    170:241:okio.BufferedSink commonEmitCompleteSegments(okio.RealBufferedSink) -> commonEmitCompleteSegments
    184:245:void commonFlush(okio.RealBufferedSink) -> commonFlush
    216:216:okio.Timeout commonTimeout(okio.RealBufferedSink) -> commonTimeout
    218:218:java.lang.String commonToString(okio.RealBufferedSink) -> commonToString
    34:221:void commonWrite(okio.RealBufferedSink,okio.Buffer,long) -> commonWrite
    40:222:okio.BufferedSink commonWrite(okio.RealBufferedSink,okio.ByteString) -> commonWrite
    50:223:okio.BufferedSink commonWrite(okio.RealBufferedSink,okio.ByteString,int,int) -> commonWrite
    78:227:okio.BufferedSink commonWrite(okio.RealBufferedSink,byte[]) -> commonWrite
    88:228:okio.BufferedSink commonWrite(okio.RealBufferedSink,byte[],int,int) -> commonWrite
    107:230:okio.BufferedSink commonWrite(okio.RealBufferedSink,okio.Source,long) -> commonWrite
    96:229:long commonWriteAll(okio.RealBufferedSink,okio.Source) -> commonWriteAll
    116:231:okio.BufferedSink commonWriteByte(okio.RealBufferedSink,int) -> commonWriteByte
    158:238:okio.BufferedSink commonWriteDecimalLong(okio.RealBufferedSink,long) -> commonWriteDecimalLong
    164:239:okio.BufferedSink commonWriteHexadecimalUnsignedLong(okio.RealBufferedSink,long) -> commonWriteHexadecimalUnsignedLong
    134:234:okio.BufferedSink commonWriteInt(okio.RealBufferedSink,int) -> commonWriteInt
    140:235:okio.BufferedSink commonWriteIntLe(okio.RealBufferedSink,int) -> commonWriteIntLe
    146:236:okio.BufferedSink commonWriteLong(okio.RealBufferedSink,long) -> commonWriteLong
    152:237:okio.BufferedSink commonWriteLongLe(okio.RealBufferedSink,long) -> commonWriteLongLe
    122:232:okio.BufferedSink commonWriteShort(okio.RealBufferedSink,int) -> commonWriteShort
    128:233:okio.BufferedSink commonWriteShortLe(okio.RealBufferedSink,int) -> commonWriteShortLe
    56:224:okio.BufferedSink commonWriteUtf8(okio.RealBufferedSink,java.lang.String) -> commonWriteUtf8
    66:225:okio.BufferedSink commonWriteUtf8(okio.RealBufferedSink,java.lang.String,int,int) -> commonWriteUtf8
    72:226:okio.BufferedSink commonWriteUtf8CodePoint(okio.RealBufferedSink,int) -> commonWriteUtf8CodePoint
okio.internal.-RealBufferedSource -> okio.internal.-RealBufferedSource:
# {"id":"sourceFile","fileName":"RealBufferedSource.kt"}
    393:475:void commonClose(okio.RealBufferedSource) -> commonClose
    51:408:boolean commonExhausted(okio.RealBufferedSource) -> commonExhausted
    315:467:long commonIndexOf(okio.RealBufferedSource,byte,long,long) -> commonIndexOf
    335:470:long commonIndexOf(okio.RealBufferedSource,okio.ByteString,long) -> commonIndexOf
    351:473:long commonIndexOfElement(okio.RealBufferedSource,okio.ByteString,long) -> commonIndexOfElement
    389:389:okio.BufferedSource commonPeek(okio.RealBufferedSource) -> commonPeek
    371:474:boolean commonRangeEquals(okio.RealBufferedSource,long,okio.ByteString,int,int) -> commonRangeEquals
    38:407:long commonRead(okio.RealBufferedSource,okio.Buffer,long) -> commonRead
    134:428:int commonRead(okio.RealBufferedSource,byte[],int,int) -> commonRead
    159:436:long commonReadAll(okio.RealBufferedSource,okio.Sink) -> commonReadAll
    69:411:byte commonReadByte(okio.RealBufferedSource) -> commonReadByte
    112:420:byte[] commonReadByteArray(okio.RealBufferedSource,long) -> commonReadByteArray
    107:419:byte[] commonReadByteArray(okio.RealBufferedSource) -> commonReadByteArray
    79:414:okio.ByteString commonReadByteString(okio.RealBufferedSource,long) -> commonReadByteString
    74:413:okio.ByteString commonReadByteString(okio.RealBufferedSource) -> commonReadByteString
    260:459:long commonReadDecimalLong(okio.RealBufferedSource) -> commonReadDecimalLong
    118:423:void commonReadFully(okio.RealBufferedSource,byte[]) -> commonReadFully
    147:430:void commonReadFully(okio.RealBufferedSource,okio.Buffer,long) -> commonReadFully
    279:461:long commonReadHexadecimalUnsignedLong(okio.RealBufferedSource) -> commonReadHexadecimalUnsignedLong
    240:454:int commonReadInt(okio.RealBufferedSource) -> commonReadInt
    245:455:int commonReadIntLe(okio.RealBufferedSource) -> commonReadIntLe
    250:456:long commonReadLong(okio.RealBufferedSource) -> commonReadLong
    255:457:long commonReadLongLe(okio.RealBufferedSource) -> commonReadLongLe
    230:452:short commonReadShort(okio.RealBufferedSource) -> commonReadShort
    235:453:short commonReadShortLe(okio.RealBufferedSource) -> commonReadShortLe
    179:439:java.lang.String commonReadUtf8(okio.RealBufferedSource,long) -> commonReadUtf8
    174:438:java.lang.String commonReadUtf8(okio.RealBufferedSource) -> commonReadUtf8
    217:451:int commonReadUtf8CodePoint(okio.RealBufferedSource) -> commonReadUtf8CodePoint
    184:442:java.lang.String commonReadUtf8Line(okio.RealBufferedSource) -> commonReadUtf8Line
    198:449:java.lang.String commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> commonReadUtf8LineStrict
    60:410:boolean commonRequest(okio.RealBufferedSource,long) -> commonRequest
    56:56:void commonRequire(okio.RealBufferedSource,long) -> commonRequire
    84:417:int commonSelect(okio.RealBufferedSource,okio.Options) -> commonSelect
    302:464:void commonSkip(okio.RealBufferedSource,long) -> commonSkip
    399:399:okio.Timeout commonTimeout(okio.RealBufferedSource) -> commonTimeout
    401:401:java.lang.String commonToString(okio.RealBufferedSource) -> commonToString
okio.internal.-SegmentedByteString -> okio.internal.-SegmentedByteString:
# {"id":"sourceFile","fileName":"SegmentedByteString.kt"}
    39:39:int binarySearch(int[],int,int,int) -> binarySearch
    215:315:void commonCopyInto(okio.SegmentedByteString,int,byte[],int,int) -> commonCopyInto
    228:228:boolean commonEquals(okio.SegmentedByteString,java.lang.Object) -> commonEquals
    142:142:int commonGetSize(okio.SegmentedByteString) -> commonGetSize
    234:327:int commonHashCode(okio.SegmentedByteString) -> commonHashCode
    135:139:byte commonInternalGet(okio.SegmentedByteString,int) -> commonInternalGet
    179:287:boolean commonRangeEquals(okio.SegmentedByteString,int,okio.ByteString,int,int) -> commonRangeEquals
    195:301:boolean commonRangeEquals(okio.SegmentedByteString,int,byte[],int,int) -> commonRangeEquals
    104:131:okio.ByteString commonSubstring(okio.SegmentedByteString,int,int) -> commonSubstring
    145:259:byte[] commonToByteArray(okio.SegmentedByteString) -> commonToByteArray
    161:273:void commonWrite(okio.SegmentedByteString,okio.Buffer,int,int) -> commonWrite
    63:70:void forEachSegment(okio.SegmentedByteString,kotlin.jvm.functions.Function3) -> forEachSegment
    85:94:void forEachSegment(okio.SegmentedByteString,int,int,kotlin.jvm.functions.Function3) -> forEachSegment
    55:55:int segment(okio.SegmentedByteString,int) -> segment
okio.internal.EocdRecord -> okio.internal.EocdRecord:
# {"id":"sourceFile","fileName":"ZipFiles.kt"}
    451:454:void <init>(long,long,int) -> <init>
    453:453:long getCentralDirectoryOffset() -> getCentralDirectoryOffset
    454:454:int getCommentByteCount() -> getCommentByteCount
    452:452:long getEntryCount() -> getEntryCount
okio.internal.FixedLengthSource -> okio.internal.FixedLengthSource:
# {"id":"sourceFile","fileName":"FixedLengthSource.kt"}
    33:35:void <init>(okio.Source,long,boolean) -> <init>
    46:65:long read(okio.Buffer,long) -> read
    72:75:void truncateToSize(okio.Buffer,long) -> truncateToSize
okio.internal.ResourceFileSystem -> okio.internal.ResourceFileSystem:
# {"id":"sourceFile","fileName":"ResourceFileSystem.kt"}
    200:200:void <clinit>() -> <clinit>
    44:47:void <init>(java.lang.ClassLoader,boolean,okio.FileSystem,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    45:53:void <init>(java.lang.ClassLoader,boolean,okio.FileSystem) -> <init>
    44:44:java.lang.ClassLoader access$getClassLoader$p(okio.internal.ResourceFileSystem) -> access$getClassLoader$p
    44:44:okio.internal.ResourceFileSystem$Companion access$getCompanion$p() -> access$getCompanion$p
    44:44:okio.Path access$getROOT$cp() -> access$getROOT$cp
    44:44:java.util.List access$toClasspathRoots(okio.internal.ResourceFileSystem,java.lang.ClassLoader) -> access$toClasspathRoots
    138:138:okio.Sink appendingSink(okio.Path,boolean) -> appendingSink
    145:145:void atomicMove(okio.Path,okio.Path) -> atomicMove
    59:59:okio.Path canonicalize(okio.Path) -> canonicalize
    64:64:okio.Path canonicalizeInternal(okio.Path) -> canonicalizeInternal
    142:142:void createDirectory(okio.Path,boolean) -> createDirectory
    151:151:void createSymlink(okio.Path,okio.Path) -> createSymlink
    148:148:void delete(okio.Path,boolean) -> delete
    49:49:java.util.List getRoots() -> getRoots
    68:216:java.util.List list(okio.Path) -> list
    85:223:java.util.List listOrNull(okio.Path) -> listOrNull
    117:120:okio.FileMetadata metadataOrNull(okio.Path) -> metadataOrNull
    101:109:okio.FileHandle openReadOnly(okio.Path) -> openReadOnly
    113:113:okio.FileHandle openReadWrite(okio.Path,boolean,boolean) -> openReadWrite
    134:134:okio.Sink sink(okio.Path,boolean) -> sink
    126:130:okio.Source source(okio.Path) -> source
    173:247:java.util.List toClasspathRoots(java.lang.ClassLoader) -> toClasspathRoots
    178:179:kotlin.Pair toFileRoot(java.net.URL) -> toFileRoot
    183:196:kotlin.Pair toJarRoot(java.net.URL) -> toJarRoot
    154:155:java.lang.String toRelativePath(okio.Path) -> toRelativePath
okio.internal.ResourceFileSystem$Companion -> okio.internal.ResourceFileSystem$Companion:
# {"id":"sourceFile","fileName":"ResourceFileSystem.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    199:199:void <init>() -> <init>
    199:199:boolean access$keepPath(okio.internal.ResourceFileSystem$Companion,okio.Path) -> access$keepPath
    200:200:okio.Path getROOT() -> getROOT
    207:207:boolean keepPath(okio.Path) -> keepPath
    203:204:okio.Path removeBase(okio.Path,okio.Path) -> removeBase
okio.internal.ResourceFileSystem$roots$2 -> okio.internal.ResourceFileSystem$roots$2:
# {"id":"sourceFile","fileName":"ResourceFileSystem.kt"}
    0:0:void <init>(okio.internal.ResourceFileSystem) -> <init>
    49:49:java.lang.Object invoke() -> invoke
    49:49:java.util.List invoke() -> invoke
okio.internal.ResourceFileSystem$toJarRoot$zip$1 -> okio.internal.ResourceFileSystem$toJarRoot$zip$1:
# {"id":"sourceFile","fileName":"ResourceFileSystem.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    191:191:java.lang.Object invoke(java.lang.Object) -> invoke
    194:194:java.lang.Boolean invoke(okio.internal.ZipEntry) -> invoke
okio.internal.ZipEntry -> okio.internal.ZipEntry:
# {"id":"sourceFile","fileName":"ZipEntry.kt"}
    21:50:void <init>(okio.Path,boolean,java.lang.String,long,long,long,int,java.lang.Long,long) -> <init>
    21:21:void <init>(okio.Path,boolean,java.lang.String,long,long,long,int,java.lang.Long,long,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    26:26:okio.Path getCanonicalPath() -> getCanonicalPath
    50:50:java.util.List getChildren() -> getChildren
    32:32:java.lang.String getComment() -> getComment
    38:38:long getCompressedSize() -> getCompressedSize
    44:44:int getCompressionMethod() -> getCompressionMethod
    35:35:long getCrc() -> getCrc
    46:46:java.lang.Long getLastModifiedAtMillis() -> getLastModifiedAtMillis
    48:48:long getOffset() -> getOffset
    41:41:long getSize() -> getSize
    29:29:boolean isDirectory() -> isDirectory
okio.internal.ZipFilesKt -> okio.internal.ZipFilesKt:
# {"id":"sourceFile","fileName":"ZipFiles.kt"}
    150:460:java.util.Map buildIndex(java.util.List) -> buildIndex
    439:448:java.lang.Long dosDateTimeToEpochMillis(int,int) -> dosDateTimeToEpochMillis
    458:458:java.lang.String getHex(int) -> getHex
    67:141:okio.ZipFileSystem openZip(okio.Path,okio.FileSystem,kotlin.jvm.functions.Function1) -> openZip
    62:65:okio.ZipFileSystem openZip$default(okio.Path,okio.FileSystem,kotlin.jvm.functions.Function1,int,java.lang.Object) -> openZip$default
    191:269:okio.internal.ZipEntry readEntry(okio.BufferedSource) -> readEntry
    275:286:okio.internal.EocdRecord readEocdRecord(okio.BufferedSource) -> readEocdRecord
    327:344:void readExtra(okio.BufferedSource,int,kotlin.jvm.functions.Function2) -> readExtra
    356:356:okio.FileMetadata readLocalHeader(okio.BufferedSource,okio.FileMetadata) -> readLocalHeader
    364:425:okio.FileMetadata readOrSkipLocalHeader(okio.BufferedSource,okio.FileMetadata) -> readOrSkipLocalHeader
    295:309:okio.internal.EocdRecord readZip64EocdRecord(okio.BufferedSource,okio.internal.EocdRecord) -> readZip64EocdRecord
    352:352:void skipLocalHeader(okio.BufferedSource) -> skipLocalHeader
okio.internal.ZipFilesKt$buildIndex$$inlined$sortedBy$1 -> okio.internal.ZipFilesKt$buildIndex$$inlined$sortedBy$1:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <init>() -> <init>
    102:329:int compare(java.lang.Object,java.lang.Object) -> compare
okio.internal.ZipFilesKt$openZip$1 -> okio.internal.ZipFilesKt$openZip$1:
# {"id":"sourceFile","fileName":"ZipFiles.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    65:65:java.lang.Boolean invoke(okio.internal.ZipEntry) -> invoke
    65:65:java.lang.Object invoke(java.lang.Object) -> invoke
okio.internal.ZipFilesKt$readEntry$1 -> okio.internal.ZipFilesKt$readEntry$1:
# {"id":"sourceFile","fileName":"ZipFiles.kt"}
    0:0:void <init>(kotlin.jvm.internal.Ref$BooleanRef,long,kotlin.jvm.internal.Ref$LongRef,okio.BufferedSource,kotlin.jvm.internal.Ref$LongRef,kotlin.jvm.internal.Ref$LongRef) -> <init>
    232:232:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    235:247:void invoke(int,long) -> invoke
okio.internal.ZipFilesKt$readOrSkipLocalHeader$1 -> okio.internal.ZipFilesKt$readOrSkipLocalHeader$1:
# {"id":"sourceFile","fileName":"ZipFiles.kt"}
    0:0:void <init>(okio.BufferedSource,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef) -> <init>
    389:389:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    393:413:void invoke(int,long) -> invoke
okio.internal._Utf8Kt -> okio.internal._Utf8Kt:
# {"id":"sourceFile","fileName":"-Utf8.kt"}
    42:289:byte[] commonAsUtf8ToByteArray(java.lang.String) -> commonAsUtf8ToByteArray
    28:202:java.lang.String commonToUtf8String(byte[],int,int) -> commonToUtf8String
    27:27:java.lang.String commonToUtf8String$default(byte[],int,int,int,java.lang.Object) -> commonToUtf8String$default
org.intellij.lang.annotations.JdkConstants -> org.intellij.lang.annotations.JdkConstants:
    27:27:void <init>() -> <init>
org.intellij.lang.annotations.PrintFormatPattern -> org.intellij.lang.annotations.PrintFormatPattern:
# {"id":"sourceFile","fileName":"PrintFormat.java"}
    23:23:void <init>() -> <init>
org.locationtech.jts.JTSVersion -> org.locationtech.jts.JTSVersion:
    29:29:void <clinit>() -> <clinit>
    61:61:void <init>() -> <init>
    0:0:int getMajor() -> getMajor
    0:0:int getMinor() -> getMinor
    0:0:int getPatch() -> getPatch
    58:58:void main(java.lang.String[]) -> main
    94:94:java.lang.String toString() -> toString
org.locationtech.jts.algorithm.Angle -> org.locationtech.jts.algorithm.Angle:
    44:44:void <init>() -> <init>
    76:78:double angle(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> angle
    90:90:double angle(org.locationtech.jts.geom.Coordinate) -> angle
    149:152:double angleBetween(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> angleBetween
    172:173:double angleBetweenOriented(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> angleBetweenOriented
    0:0:double diff(double,double) -> diff
    214:214:int getTurn(double,double) -> getTurn
    199:201:double interiorAngle(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> interiorAngle
    108:111:boolean isAcute(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isAcute
    130:133:boolean isObtuse(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isObtuse
    0:0:double normalize(double) -> normalize
    0:0:double normalizePositive(double) -> normalizePositive
    0:0:double toDegrees(double) -> toDegrees
    0:0:double toRadians(double) -> toRadians
org.locationtech.jts.algorithm.Area -> org.locationtech.jts.algorithm.Area:
    23:23:void <init>() -> <init>
    33:33:double ofRing(org.locationtech.jts.geom.Coordinate[]) -> ofRing
    44:44:double ofRing(org.locationtech.jts.geom.CoordinateSequence) -> ofRing
    58:69:double ofRingSigned(org.locationtech.jts.geom.Coordinate[]) -> ofRingSigned
    89:110:double ofRingSigned(org.locationtech.jts.geom.CoordinateSequence) -> ofRingSigned
org.locationtech.jts.algorithm.BoundaryNodeRule -> org.locationtech.jts.algorithm.BoundaryNodeRule:
    75:100:void <clinit>() -> <clinit>
org.locationtech.jts.algorithm.BoundaryNodeRule$EndPointBoundaryNodeRule -> org.locationtech.jts.algorithm.BoundaryNodeRule$EndPointBoundaryNodeRule:
    148:148:void <init>() -> <init>
    0:0:boolean isInBoundary(int) -> isInBoundary
org.locationtech.jts.algorithm.BoundaryNodeRule$Mod2BoundaryNodeRule -> org.locationtech.jts.algorithm.BoundaryNodeRule$Mod2BoundaryNodeRule:
    116:116:void <init>() -> <init>
    122:122:boolean isInBoundary(int) -> isInBoundary
org.locationtech.jts.algorithm.BoundaryNodeRule$MonoValentEndPointBoundaryNodeRule -> org.locationtech.jts.algorithm.BoundaryNodeRule$MonoValentEndPointBoundaryNodeRule:
    185:185:void <init>() -> <init>
    0:0:boolean isInBoundary(int) -> isInBoundary
org.locationtech.jts.algorithm.BoundaryNodeRule$MultiValentEndPointBoundaryNodeRule -> org.locationtech.jts.algorithm.BoundaryNodeRule$MultiValentEndPointBoundaryNodeRule:
    167:167:void <init>() -> <init>
    0:0:boolean isInBoundary(int) -> isInBoundary
org.locationtech.jts.algorithm.CGAlgorithms -> org.locationtech.jts.algorithm.CGAlgorithms:
    106:106:void <init>() -> <init>
    272:272:int computeOrientation(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> computeOrientation
    406:465:double distanceLineLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> distanceLineLine
    292:330:double distancePointLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> distancePointLine
    374:380:double distancePointLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> distancePointLine
    356:360:double distancePointLinePerpendicular(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> distancePointLinePerpendicular
    191:248:boolean isCCW(org.locationtech.jts.geom.Coordinate[]) -> isCCW
    159:164:boolean isOnLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> isOnLine
    128:128:boolean isPointInRing(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> isPointInRing
    549:567:double length(org.locationtech.jts.geom.CoordinateSequence) -> length
    147:147:int locatePointInRing(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> locatePointInRing
    97:97:int orientationIndex(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> orientationIndex
    482:493:double signedArea(org.locationtech.jts.geom.Coordinate[]) -> signedArea
    513:534:double signedArea(org.locationtech.jts.geom.CoordinateSequence) -> signedArea
org.locationtech.jts.algorithm.CGAlgorithms3D -> org.locationtech.jts.algorithm.CGAlgorithms3D:
    27:27:void <init>() -> <init>
    32:38:double distance(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> distance
    44:80:double distancePointSegment(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> distancePointSegment
    101:159:double distanceSegmentSegment(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> distanceSegmentSegment
org.locationtech.jts.algorithm.CGAlgorithmsDD -> org.locationtech.jts.algorithm.CGAlgorithmsDD:
    25:25:void <init>() -> <init>
    173:204:org.locationtech.jts.geom.Coordinate intersection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersection
    43:53:int orientationIndex(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> orientationIndex
    119:145:int orientationIndexFilter(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> orientationIndexFilter
    66:67:int signOfDet2x2(org.locationtech.jts.math.DD,org.locationtech.jts.math.DD,org.locationtech.jts.math.DD,org.locationtech.jts.math.DD) -> signOfDet2x2
    80:86:int signOfDet2x2(double,double,double,double) -> signOfDet2x2
    0:0:int signum(double) -> signum
org.locationtech.jts.algorithm.Centroid -> org.locationtech.jts.algorithm.Centroid:
    65:83:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    93:108:void add(org.locationtech.jts.geom.Geometry) -> add
    161:163:void add(org.locationtech.jts.geom.Polygon) -> add
    180:184:void addHole(org.locationtech.jts.geom.Coordinate[]) -> addHole
    227:241:void addLineSegments(org.locationtech.jts.geom.Coordinate[]) -> addLineSegments
    250:252:void addPoint(org.locationtech.jts.geom.Coordinate) -> addPoint
    169:175:void addShell(org.locationtech.jts.geom.Coordinate[]) -> addShell
    189:193:void addTriangle(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,boolean) -> addTriangle
    213:213:double area2(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> area2
    202:203:void centroid3(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> centroid3
    61:62:org.locationtech.jts.geom.Coordinate getCentroid(org.locationtech.jts.geom.Geometry) -> getCentroid
    126:146:org.locationtech.jts.geom.Coordinate getCentroid() -> getCentroid
    156:156:void setAreaBasePoint(org.locationtech.jts.geom.Coordinate) -> setAreaBasePoint
org.locationtech.jts.algorithm.ConvexHull -> org.locationtech.jts.algorithm.ConvexHull:
    54:54:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    60:63:void <init>(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.GeometryFactory) -> <init>
    407:425:org.locationtech.jts.geom.Coordinate[] cleanRing(org.locationtech.jts.geom.Coordinate[]) -> cleanRing
    289:313:org.locationtech.jts.geom.Coordinate[] computeOctPts(org.locationtech.jts.geom.Coordinate[]) -> computeOctPts
    273:282:org.locationtech.jts.geom.Coordinate[] computeOctRing(org.locationtech.jts.geom.Coordinate[]) -> computeOctRing
    68:70:org.locationtech.jts.geom.Coordinate[] extractCoordinates(org.locationtech.jts.geom.Geometry) -> extractCoordinates
    87:112:org.locationtech.jts.geom.Geometry getConvexHull() -> getConvexHull
    226:241:java.util.Stack grahamScan(org.locationtech.jts.geom.Coordinate[]) -> grahamScan
    250:262:boolean isBetween(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isBetween
    390:397:org.locationtech.jts.geom.Geometry lineOrPolygon(org.locationtech.jts.geom.Coordinate[]) -> lineOrPolygon
    188:192:org.locationtech.jts.geom.Coordinate[] padArray3(org.locationtech.jts.geom.Coordinate[]) -> padArray3
    203:212:org.locationtech.jts.geom.Coordinate[] preSort(org.locationtech.jts.geom.Coordinate[]) -> preSort
    150:180:org.locationtech.jts.geom.Coordinate[] reduce(org.locationtech.jts.geom.Coordinate[]) -> reduce
    120:123:org.locationtech.jts.geom.Coordinate[] toCoordinateArray(java.util.Stack) -> toCoordinateArray
org.locationtech.jts.algorithm.ConvexHull$RadialComparator -> org.locationtech.jts.algorithm.ConvexHull$RadialComparator:
    442:443:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    447:449:int compare(java.lang.Object,java.lang.Object) -> compare
    472:491:int polarCompare(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> polarCompare
org.locationtech.jts.algorithm.Distance -> org.locationtech.jts.algorithm.Distance:
    24:24:void <init>() -> <init>
    215:219:double pointToLinePerpendicular(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> pointToLinePerpendicular
    151:189:double pointToSegment(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> pointToSegment
    120:126:double pointToSegmentString(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> pointToSegmentString
    44:103:double segmentToSegment(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> segmentToSegment
org.locationtech.jts.algorithm.HCoordinate -> org.locationtech.jts.algorithm.HCoordinate:
    82:85:void <init>() -> <init>
    88:91:void <init>(double,double,double) -> <init>
    94:97:void <init>(double,double) -> <init>
    100:103:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    107:110:void <init>(org.locationtech.jts.algorithm.HCoordinate,org.locationtech.jts.algorithm.HCoordinate) -> <init>
    122:126:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    130:142:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    162:164:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    146:148:double getX() -> getX
    154:156:double getY() -> getY
    43:63:org.locationtech.jts.geom.Coordinate intersection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersection
org.locationtech.jts.algorithm.InteriorPoint -> org.locationtech.jts.algorithm.InteriorPoint:
    27:27:void <init>() -> <init>
    50:50:org.locationtech.jts.geom.Point createPointEmpty(org.locationtech.jts.geom.GeometryFactory) -> createPointEmpty
    54:55:org.locationtech.jts.geom.Point createPointPrecise(org.locationtech.jts.geom.GeometryFactory,org.locationtech.jts.geom.Coordinate) -> createPointPrecise
    30:46:org.locationtech.jts.geom.Point getInteriorPoint(org.locationtech.jts.geom.Geometry) -> getInteriorPoint
org.locationtech.jts.algorithm.InteriorPointArea -> org.locationtech.jts.algorithm.InteriorPointArea:
    92:101:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    73:73:double access$000(double,double) -> access$000
    0:0:double avg(double,double) -> avg
    84:85:org.locationtech.jts.geom.Coordinate getInteriorPoint(org.locationtech.jts.geom.Geometry) -> getInteriorPoint
    111:111:org.locationtech.jts.geom.Coordinate getInteriorPoint() -> getInteriorPoint
    122:130:void process(org.locationtech.jts.geom.Geometry) -> process
    143:148:void processPolygon(org.locationtech.jts.geom.Polygon) -> processPolygon
org.locationtech.jts.algorithm.InteriorPointArea$InteriorPointPolygon -> org.locationtech.jts.algorithm.InteriorPointArea$InteriorPointPolygon:
    163:174:void <init>(org.locationtech.jts.geom.Polygon) -> <init>
    234:241:void addEdgeCrossing(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double,java.util.List) -> addEdgeCrossing
    272:291:void findBestMidpoint(java.util.List) -> findBestMidpoint
    184:184:org.locationtech.jts.geom.Coordinate getInteriorPoint() -> getInteriorPoint
    194:194:double getWidth() -> getWidth
    309:319:double intersection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double) -> intersection
    359:361:boolean intersectsHorizontalLine(org.locationtech.jts.geom.Envelope,double) -> intersectsHorizontalLine
    376:379:boolean intersectsHorizontalLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double) -> intersectsHorizontalLine
    258:265:boolean isEdgeCrossingCounted(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double) -> isEdgeCrossingCounted
    205:216:void process() -> process
    221:228:void scanRing(org.locationtech.jts.geom.LinearRing) -> scanRing
org.locationtech.jts.algorithm.InteriorPointArea$InteriorPointPolygon$$ExternalSyntheticApiModelOutline0 -> org.locationtech.jts.algorithm.InteriorPointArea$InteriorPointPolygon$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void org.locationtech.jts.algorithm.InteriorPointArea$InteriorPointPolygon$$InternalSyntheticApiModelOutline$1$3feb5e26a896507ec87840497d18e0db26ce4468afc5671e13678e6c03d59f61$1.m(java.util.List,java.util.Comparator) -> m
      # {"id":"com.android.tools.r8.synthesized"}
org.locationtech.jts.algorithm.InteriorPointArea$InteriorPointPolygon$$ExternalSyntheticLambda1 -> org.locationtech.jts.algorithm.InteriorPointArea$InteriorPointPolygon$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void org.locationtech.jts.algorithm.InteriorPointArea$InteriorPointPolygon$$InternalSyntheticLambda$1$3feb5e26a896507ec87840497d18e0db26ce4468afc5671e13678e6c03d59f61$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int org.locationtech.jts.algorithm.InteriorPointArea$InteriorPointPolygon$$InternalSyntheticLambda$1$3feb5e26a896507ec87840497d18e0db26ce4468afc5671e13678e6c03d59f61$0.compare(java.lang.Object,java.lang.Object) -> compare
      # {"id":"com.android.tools.r8.synthesized"}
org.locationtech.jts.algorithm.InteriorPointArea$ScanLineYOrdinateFinder -> org.locationtech.jts.algorithm.InteriorPointArea$ScanLineYOrdinateFinder:
    410:419:void <init>(org.locationtech.jts.geom.Polygon) -> <init>
    403:404:double getScanLineY(org.locationtech.jts.geom.Polygon) -> getScanLineY
    423:427:double getScanLineY() -> getScanLineY
    432:435:void process(org.locationtech.jts.geom.LineString) -> process
    440:445:void updateInterval(double) -> updateInterval
org.locationtech.jts.algorithm.InteriorPointLine -> org.locationtech.jts.algorithm.InteriorPointLine:
    48:57:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    115:118:void add(org.locationtech.jts.geom.Coordinate) -> add
    97:103:void addEndpoints(org.locationtech.jts.geom.Geometry) -> addEndpoints
    109:110:void addEndpoints(org.locationtech.jts.geom.Coordinate[]) -> addEndpoints
    73:79:void addInterior(org.locationtech.jts.geom.Geometry) -> addInterior
    85:86:void addInterior(org.locationtech.jts.geom.Coordinate[]) -> addInterior
    43:44:org.locationtech.jts.geom.Coordinate getInteriorPoint(org.locationtech.jts.geom.Geometry) -> getInteriorPoint
    62:62:org.locationtech.jts.geom.Coordinate getInteriorPoint() -> getInteriorPoint
org.locationtech.jts.algorithm.InteriorPointPoint -> org.locationtech.jts.algorithm.InteriorPointPoint:
    43:50:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    60:66:void add(org.locationtech.jts.geom.Geometry) -> add
    72:75:void add(org.locationtech.jts.geom.Coordinate) -> add
    38:39:org.locationtech.jts.geom.Coordinate getInteriorPoint(org.locationtech.jts.geom.Geometry) -> getInteriorPoint
    81:81:org.locationtech.jts.geom.Coordinate getInteriorPoint() -> getInteriorPoint
org.locationtech.jts.algorithm.Length -> org.locationtech.jts.algorithm.Length:
    23:23:void <init>() -> <init>
    34:52:double ofLine(org.locationtech.jts.geom.CoordinateSequence) -> ofLine
org.locationtech.jts.algorithm.LineIntersector -> org.locationtech.jts.algorithm.LineIntersector:
    144:167:void <init>() -> <init>
    96:123:double computeEdgeDistance(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> computeEdgeDistance
    292:295:void computeIntLineIndex() -> computeIntLineIndex
    393:401:void computeIntLineIndex(int) -> computeIntLineIndex
    224:228:void computeIntersection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> computeIntersection
    414:414:double getEdgeDistance(int,int) -> getEdgeDistance
    199:199:org.locationtech.jts.geom.Coordinate getEndpoint(int,int) -> getEndpoint
    388:389:int getIndexAlongSegment(int,int) -> getIndexAlongSegment
    289:289:org.locationtech.jts.geom.Coordinate getIntersection(int) -> getIntersection
    374:375:org.locationtech.jts.geom.Coordinate getIntersectionAlongSegment(int,int) -> getIntersectionAlongSegment
    280:280:int getIntersectionNum() -> getIntersectionNum
    255:259:java.lang.String getTopologySummary() -> getTopologySummary
    272:272:boolean hasIntersection() -> hasIntersection
    213:213:boolean isCollinear() -> isCollinear
    263:263:boolean isEndPoint() -> isEndPoint
    324:325:boolean isInteriorIntersection() -> isInteriorIntersection
    336:338:boolean isInteriorIntersection(int) -> isInteriorIntersection
    309:310:boolean isIntersection(org.locationtech.jts.geom.Coordinate) -> isIntersection
    360:360:boolean isProper() -> isProper
    136:139:double nonRobustComputeEdgeDistance(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> nonRobustComputeEdgeDistance
    177:177:void setMakePrecise(org.locationtech.jts.geom.PrecisionModel) -> setMakePrecise
    187:187:void setPrecisionModel(org.locationtech.jts.geom.PrecisionModel) -> setPrecisionModel
    248:250:java.lang.String toString() -> toString
org.locationtech.jts.algorithm.MinimumBoundingCircle -> org.locationtech.jts.algorithm.MinimumBoundingCircle:
    63:75:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    209:214:void compute() -> compute
    188:202:void computeCentre() -> computeCentre
    220:288:void computeCirclePoints() -> computeCirclePoints
    171:172:org.locationtech.jts.geom.Coordinate getCentre() -> getCentre
    94:100:org.locationtech.jts.geom.Geometry getCircle() -> getCircle
    135:146:org.locationtech.jts.geom.Geometry getDiameter() -> getDiameter
    159:160:org.locationtech.jts.geom.Coordinate[] getExtremalPoints() -> getExtremalPoints
    114:123:org.locationtech.jts.geom.Geometry getFarthestPoints() -> getFarthestPoints
    182:183:double getRadius() -> getRadius
    293:295:org.locationtech.jts.geom.Coordinate lowestPoint(org.locationtech.jts.geom.Coordinate[]) -> lowestPoint
    305:316:org.locationtech.jts.geom.Coordinate pointWitMinAngleWithX(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate) -> pointWitMinAngleWithX
    331:337:org.locationtech.jts.geom.Coordinate pointWithMinAngleWithSegment(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> pointWithMinAngleWithSegment
org.locationtech.jts.algorithm.MinimumDiameter -> org.locationtech.jts.algorithm.MinimumDiameter:
    85:85:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    72:101:void <init>(org.locationtech.jts.geom.Geometry,boolean) -> <init>
    321:321:double computeC(double,double,org.locationtech.jts.geom.Coordinate) -> computeC
    207:215:void computeConvexRingMinDiameter(org.locationtech.jts.geom.Coordinate[]) -> computeConvexRingMinDiameter
    157:164:void computeMinimumDiameter() -> computeMinimumDiameter
    333:341:org.locationtech.jts.geom.LineSegment computeSegmentForLine(double,double,double) -> computeSegmentForLine
    171:195:void computeWidthConvex(org.locationtech.jts.geom.Geometry) -> computeWidthConvex
    221:237:int findMaxPerpDistance(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.LineSegment,int) -> findMaxPerpDistance
    144:151:org.locationtech.jts.geom.LineString getDiameter() -> getDiameter
    111:112:double getLength() -> getLength
    66:66:org.locationtech.jts.geom.Geometry getMinimumDiameter(org.locationtech.jts.geom.Geometry) -> getMinimumDiameter
    57:57:org.locationtech.jts.geom.Geometry getMinimumRectangle(org.locationtech.jts.geom.Geometry) -> getMinimumRectangle
    265:315:org.locationtech.jts.geom.Geometry getMinimumRectangle() -> getMinimumRectangle
    133:134:org.locationtech.jts.geom.LineString getSupportingSegment() -> getSupportingSegment
    122:123:org.locationtech.jts.geom.Coordinate getWidthCoordinate() -> getWidthCoordinate
    247:247:int nextIndex(org.locationtech.jts.geom.Coordinate[],int) -> nextIndex
org.locationtech.jts.algorithm.NotRepresentableException -> org.locationtech.jts.algorithm.NotRepresentableException:
    27:27:void <init>() -> <init>
org.locationtech.jts.algorithm.Orientation -> org.locationtech.jts.algorithm.Orientation:
    31:31:void <init>() -> <init>
    97:97:int index(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> index
    125:182:boolean isCCW(org.locationtech.jts.geom.Coordinate[]) -> isCCW
    211:269:boolean isCCW(org.locationtech.jts.geom.CoordinateSequence) -> isCCW
org.locationtech.jts.algorithm.PointLocation -> org.locationtech.jts.algorithm.PointLocation:
    25:25:void <init>() -> <init>
    95:95:boolean isInRing(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> isInRing
    38:43:boolean isOnLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> isOnLine
    61:69:boolean isOnLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.CoordinateSequence) -> isOnLine
    114:114:int locateInRing(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> locateInRing
org.locationtech.jts.algorithm.PointLocator -> org.locationtech.jts.algorithm.PointLocator:
    47:54:void <init>() -> <init>
    47:61:void <init>(org.locationtech.jts.algorithm.BoundaryNodeRule) -> <init>
    110:138:void computeLocation(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Geometry) -> computeLocation
    73:73:boolean intersects(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Geometry) -> intersects
    88:102:int locate(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Geometry) -> locate
    187:197:int locateInPolygon(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Polygon) -> locateInPolygon
    180:182:int locateInPolygonRing(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.LinearRing) -> locateInPolygonRing
    162:171:int locateOnLineString(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.LineString) -> locateOnLineString
    153:154:int locateOnPoint(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Point) -> locateOnPoint
    145:146:void updateLocationInfo(int) -> updateLocationInfo
org.locationtech.jts.algorithm.RayCrossingCounter -> org.locationtech.jts.algorithm.RayCrossingCounter:
    98:104:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    120:168:void countSegment(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> countSegment
    196:201:int getLocation() -> getLocation
    182:182:boolean isOnSegment() -> isOnSegment
    219:219:boolean isPointInPolygon() -> isPointInPolygon
    61:70:int locatePointInRing(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> locatePointInRing
    83:94:int locatePointInRing(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.CoordinateSequence) -> locatePointInRing
org.locationtech.jts.algorithm.RectangleLineIntersector -> org.locationtech.jts.algorithm.RectangleLineIntersector:
    35:63:void <init>(org.locationtech.jts.geom.Envelope) -> <init>
    82:139:boolean intersects(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersects
org.locationtech.jts.algorithm.RobustDeterminant -> org.locationtech.jts.algorithm.RobustDeterminant:
    48:48:void <init>() -> <init>
    395:399:int orientationIndex(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> orientationIndex
    266:315:int signOfDet2x2(double,double,double,double) -> signOfDet2x2
org.locationtech.jts.algorithm.RobustLineIntersector -> org.locationtech.jts.algorithm.RobustLineIntersector:
    31:31:void <init>() -> <init>
    245:249:void checkDD(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> checkDD
    151:184:int computeCollinearIntersection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> computeCollinearIntersection
    54:144:int computeIntersect(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> computeIntersect
    35:48:void computeIntersection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> computeIntersection
    200:237:org.locationtech.jts.geom.Coordinate intersection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersection
    256:266:org.locationtech.jts.geom.Coordinate intersectionWithNormalization(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersectionWithNormalization
    410:412:boolean isInSegmentEnvelopes(org.locationtech.jts.geom.Coordinate) -> isInSegmentEnvelopes
    438:450:org.locationtech.jts.geom.Coordinate nearestEndpoint(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> nearestEndpoint
    344:378:void normalizeToEnvCentre(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> normalizeToEnvCentre
    318:323:void normalizeToMinimum(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> normalizeToMinimum
    287:293:org.locationtech.jts.geom.Coordinate safeHCoordinateIntersection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> safeHCoordinateIntersection
    384:393:double smallestInAbsValue(double,double,double,double) -> smallestInAbsValue
org.locationtech.jts.algorithm.distance.DiscreteHausdorffDistance -> org.locationtech.jts.algorithm.distance.DiscreteHausdorffDistance:
    74:84:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> <init>
    120:121:void compute(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> compute
    126:133:void computeOrientedDistance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.algorithm.distance.PointPairDistance) -> computeOrientedDistance
    61:62:double distance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> distance
    67:69:double distance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,double) -> distance
    106:107:double distance() -> distance
    116:116:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    112:113:double orientedDistance() -> orientedDistance
    99:101:void setDensifyFraction(double) -> setDensifyFraction
org.locationtech.jts.algorithm.distance.DiscreteHausdorffDistance$MaxDensifiedByFractionDistanceFilter -> org.locationtech.jts.algorithm.distance.DiscreteHausdorffDistance$MaxDensifiedByFractionDistanceFilter:
    164:171:void <init>(org.locationtech.jts.geom.Geometry,double) -> <init>
    182:194:void filter(org.locationtech.jts.geom.CoordinateSequence,int) -> filter
    205:205:org.locationtech.jts.algorithm.distance.PointPairDistance getMaxPointDistance() -> getMaxPointDistance
    0:0:boolean isDone() -> isDone
    0:0:boolean isGeometryChanged() -> isGeometryChanged
org.locationtech.jts.algorithm.distance.DiscreteHausdorffDistance$MaxPointDistanceFilter -> org.locationtech.jts.algorithm.distance.DiscreteHausdorffDistance$MaxPointDistanceFilter:
    141:148:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    153:155:void filter(org.locationtech.jts.geom.Coordinate) -> filter
    158:158:org.locationtech.jts.algorithm.distance.PointPairDistance getMaxPointDistance() -> getMaxPointDistance
org.locationtech.jts.algorithm.distance.DistanceToPoint -> org.locationtech.jts.algorithm.distance.DistanceToPoint:
    28:28:void <init>() -> <init>
    33:47:void computeDistance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.algorithm.distance.PointPairDistance) -> computeDistance
    53:59:void computeDistance(org.locationtech.jts.geom.LineString,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.algorithm.distance.PointPairDistance) -> computeDistance
    65:66:void computeDistance(org.locationtech.jts.geom.LineSegment,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.algorithm.distance.PointPairDistance) -> computeDistance
    71:73:void computeDistance(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.algorithm.distance.PointPairDistance) -> computeDistance
org.locationtech.jts.algorithm.distance.PointPairDistance -> org.locationtech.jts.algorithm.distance.PointPairDistance:
    25:30:void <init>() -> <init>
    61:61:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    59:59:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    57:57:double getDistance() -> getDistance
    33:33:void initialize() -> initialize
    37:40:void initialize(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> initialize
    51:54:void initialize(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double) -> initialize
    65:65:void setMaximum(org.locationtech.jts.algorithm.distance.PointPairDistance) -> setMaximum
    70:76:void setMaximum(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> setMaximum
    81:81:void setMinimum(org.locationtech.jts.algorithm.distance.PointPairDistance) -> setMinimum
    86:92:void setMinimum(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> setMinimum
    97:97:java.lang.String toString() -> toString
org.locationtech.jts.algorithm.locate.IndexedPointInAreaLocator -> org.locationtech.jts.algorithm.locate.IndexedPointInAreaLocator:
    62:65:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    76:87:int locate(org.locationtech.jts.geom.Coordinate) -> locate
org.locationtech.jts.algorithm.locate.IndexedPointInAreaLocator$IntervalIndexedGeometry -> org.locationtech.jts.algorithm.locate.IndexedPointInAreaLocator$IntervalIndexedGeometry:
    109:113:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    128:132:void addLine(org.locationtech.jts.geom.Coordinate[]) -> addLine
    118:122:void init(org.locationtech.jts.geom.Geometry) -> init
    138:140:java.util.List query(double,double) -> query
    145:145:void query(double,double,org.locationtech.jts.index.ItemVisitor) -> query
org.locationtech.jts.algorithm.locate.IndexedPointInAreaLocator$SegmentVisitor -> org.locationtech.jts.algorithm.locate.IndexedPointInAreaLocator$SegmentVisitor:
    96:97:void <init>(org.locationtech.jts.algorithm.RayCrossingCounter) -> <init>
    102:103:void visitItem(java.lang.Object) -> visitItem
org.locationtech.jts.algorithm.locate.SimplePointInAreaLocator -> org.locationtech.jts.algorithm.locate.SimplePointInAreaLocator:
    185:186:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    158:158:boolean containsPointInPolygon(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Polygon) -> containsPointInPolygon
    90:90:boolean isContained(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Geometry) -> isContained
    67:74:int locate(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Geometry) -> locate
    202:202:int locate(org.locationtech.jts.geom.Coordinate) -> locate
    95:104:int locateInGeometry(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Geometry) -> locateInGeometry
    131:139:int locatePointInPolygon(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Polygon) -> locatePointInPolygon
    172:174:int locatePointInRing(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.LinearRing) -> locatePointInRing
org.locationtech.jts.algorithm.match.AreaSimilarityMeasure -> org.locationtech.jts.algorithm.match.AreaSimilarityMeasure:
    43:43:void <init>() -> <init>
    48:49:double measure(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> measure
org.locationtech.jts.algorithm.match.HausdorffSimilarityMeasure -> org.locationtech.jts.algorithm.match.HausdorffSimilarityMeasure:
    45:45:void <init>() -> <init>
    69:73:double diagonalSize(org.locationtech.jts.geom.Envelope) -> diagonalSize
    55:59:double measure(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> measure
org.locationtech.jts.algorithm.match.SimilarityMeasureCombiner -> org.locationtech.jts.algorithm.match.SimilarityMeasureCombiner:
    21:21:void <init>() -> <init>
    25:25:double combine(double,double) -> combine
org.locationtech.jts.awt.FontGlyphReader -> org.locationtech.jts.awt.FontGlyphReader:
    68:68:void <init>() -> <init>
    82:82:org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory) -> read
    96:97:org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,org.locationtech.jts.geom.GeometryFactory) -> read
    111:121:org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,double,org.locationtech.jts.geom.GeometryFactory) -> read
org.locationtech.jts.awt.GeometryCollectionShape -> org.locationtech.jts.awt.GeometryCollectionShape:
    34:36:void <init>() -> <init>
    40:40:void add(java.awt.Shape) -> add
    67:67:boolean contains(double,double) -> contains
    73:73:boolean contains(java.awt.geom.Point2D) -> contains
    91:91:boolean contains(double,double,double,double) -> contains
    97:97:boolean contains(java.awt.geom.Rectangle2D) -> contains
    45:45:java.awt.Rectangle getBounds() -> getBounds
    52:58:java.awt.geom.Rectangle2D getBounds2D() -> getBounds2D
    102:102:java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform) -> getPathIterator
    107:107:java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double) -> getPathIterator
    79:79:boolean intersects(double,double,double,double) -> intersects
    85:85:boolean intersects(java.awt.geom.Rectangle2D) -> intersects
org.locationtech.jts.awt.IdentityPointTransformation -> org.locationtech.jts.awt.IdentityPointTransformation:
    24:24:void <init>() -> <init>
    29:29:void transform(org.locationtech.jts.geom.Coordinate,java.awt.geom.Point2D) -> transform
org.locationtech.jts.awt.PointShapeFactory$BasePointShapeFactory -> org.locationtech.jts.awt.PointShapeFactory$BasePointShapeFactory:
    47:53:void <init>() -> <init>
    62:63:void <init>(double) -> <init>
org.locationtech.jts.awt.PointShapeFactory$Circle -> org.locationtech.jts.awt.PointShapeFactory$Circle:
    240:240:void <init>() -> <init>
    250:250:void <init>(double) -> <init>
    261:268:java.awt.Shape createPoint(java.awt.geom.Point2D) -> createPoint
org.locationtech.jts.awt.PointShapeFactory$Cross -> org.locationtech.jts.awt.PointShapeFactory$Cross:
    280:280:void <init>() -> <init>
    290:290:void <init>(double) -> <init>
    302:325:java.awt.Shape createPoint(java.awt.geom.Point2D) -> createPoint
org.locationtech.jts.awt.PointShapeFactory$Point -> org.locationtech.jts.awt.PointShapeFactory$Point:
    82:82:void <init>() -> <init>
    92:92:void <init>(double) -> <init>
    103:108:java.awt.Shape createPoint(java.awt.geom.Point2D) -> createPoint
org.locationtech.jts.awt.PointShapeFactory$Square -> org.locationtech.jts.awt.PointShapeFactory$Square:
    119:119:void <init>() -> <init>
    129:129:void <init>(double) -> <init>
    140:147:java.awt.Shape createPoint(java.awt.geom.Point2D) -> createPoint
org.locationtech.jts.awt.PointShapeFactory$Star -> org.locationtech.jts.awt.PointShapeFactory$Star:
    159:159:void <init>() -> <init>
    169:169:void <init>(double) -> <init>
    180:191:java.awt.Shape createPoint(java.awt.geom.Point2D) -> createPoint
org.locationtech.jts.awt.PointShapeFactory$Triangle -> org.locationtech.jts.awt.PointShapeFactory$Triangle:
    202:202:void <init>() -> <init>
    212:212:void <init>(double) -> <init>
    224:228:java.awt.Shape createPoint(java.awt.geom.Point2D) -> createPoint
org.locationtech.jts.awt.PointShapeFactory$X -> org.locationtech.jts.awt.PointShapeFactory$X:
    337:337:void <init>() -> <init>
    347:347:void <init>(double) -> <init>
    358:371:java.awt.Shape createPoint(java.awt.geom.Point2D) -> createPoint
org.locationtech.jts.awt.PolygonShape -> org.locationtech.jts.awt.PolygonShape:
    48:53:void <init>(org.locationtech.jts.geom.Coordinate[],java.util.Collection) -> <init>
    58:58:void <init>() -> <init>
    63:68:void addToRing(java.awt.geom.Point2D) -> addToRing
    113:113:boolean contains(double,double) -> contains
    117:117:boolean contains(java.awt.geom.Point2D) -> contains
    129:129:boolean contains(double,double,double,double) -> contains
    133:133:boolean contains(java.awt.geom.Rectangle2D) -> contains
    74:81:void endRing() -> endRing
    105:105:java.awt.Rectangle getBounds() -> getBounds
    109:109:java.awt.geom.Rectangle2D getBounds2D() -> getBounds2D
    137:137:java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform) -> getPathIterator
    141:141:java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double) -> getPathIterator
    121:121:boolean intersects(double,double,double,double) -> intersects
    125:125:boolean intersects(java.awt.geom.Rectangle2D) -> intersects
    93:98:java.awt.geom.GeneralPath toPath(org.locationtech.jts.geom.Coordinate[]) -> toPath
org.locationtech.jts.awt.ShapeCollectionPathIterator -> org.locationtech.jts.awt.ShapeCollectionPathIterator:
    29:63:void <init>(java.util.Collection,java.awt.geom.AffineTransform) -> <init>
    94:94:int currentSegment(float[]) -> currentSegment
    98:98:int currentSegment(double[]) -> currentSegment
    0:0:int getWindingRule() -> getWindingRule
    78:78:boolean isDone() -> isDone
    82:89:void next() -> next
org.locationtech.jts.awt.ShapeCollectionPathIterator$1 -> org.locationtech.jts.awt.ShapeCollectionPathIterator$1:
    29:29:void <init>(org.locationtech.jts.awt.ShapeCollectionPathIterator) -> <init>
    42:42:int currentSegment(float[]) -> currentSegment
    46:46:int currentSegment(double[]) -> currentSegment
    31:31:int getWindingRule() -> getWindingRule
    0:0:boolean isDone() -> isDone
    0:0:void next() -> next
org.locationtech.jts.awt.ShapeReader -> org.locationtech.jts.awt.ShapeReader:
    47:47:void <clinit>() -> <clinit>
    78:79:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    117:117:boolean isHole(org.locationtech.jts.geom.Coordinate[]) -> isHole
    145:174:org.locationtech.jts.geom.Coordinate[] nextCoordinateArray(java.awt.geom.PathIterator) -> nextCoordinateArray
    58:59:org.locationtech.jts.geom.Geometry read(java.awt.geom.PathIterator,org.locationtech.jts.geom.GeometryFactory) -> read
    72:73:org.locationtech.jts.geom.Geometry read(java.awt.Shape,double,org.locationtech.jts.geom.GeometryFactory) -> read
    90:112:org.locationtech.jts.geom.Geometry read(java.awt.geom.PathIterator) -> read
    130:135:java.util.List toCoordinates(java.awt.geom.PathIterator) -> toCoordinates
org.locationtech.jts.awt.ShapeWriter -> org.locationtech.jts.awt.ShapeWriter:
    58:63:void <clinit>() -> <clinit>
    65:94:void <init>(org.locationtech.jts.awt.PointTransformation,org.locationtech.jts.awt.PointShapeFactory) -> <init>
    105:105:void <init>(org.locationtech.jts.awt.PointTransformation) -> <init>
    65:112:void <init>() -> <init>
    195:231:void appendRing(org.locationtech.jts.awt.PolygonShape,org.locationtech.jts.geom.Coordinate[]) -> appendRing
    149:149:void setDecimation(double) -> setDecimation
    127:127:void setRemoveDuplicatePoints(boolean) -> setRemoveDuplicatePoints
    170:178:java.awt.Shape toShape(org.locationtech.jts.geom.Geometry) -> toShape
    183:187:java.awt.Shape toShape(org.locationtech.jts.geom.Polygon) -> toShape
    236:240:java.awt.Shape toShape(org.locationtech.jts.geom.GeometryCollection) -> toShape
    247:251:java.awt.geom.GeneralPath toShape(org.locationtech.jts.geom.MultiLineString) -> toShape
    258:292:java.awt.geom.GeneralPath toShape(org.locationtech.jts.geom.LineString) -> toShape
    300:301:java.awt.Shape toShape(org.locationtech.jts.geom.Point) -> toShape
    305:305:java.awt.geom.Point2D transformPoint(org.locationtech.jts.geom.Coordinate) -> transformPoint
    309:309:java.awt.geom.Point2D transformPoint(org.locationtech.jts.geom.Coordinate,java.awt.geom.Point2D) -> transformPoint
org.locationtech.jts.densify.Densifier -> org.locationtech.jts.densify.Densifier:
    94:95:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    39:39:org.locationtech.jts.geom.Coordinate[] access$000(org.locationtech.jts.geom.Coordinate[],double,org.locationtech.jts.geom.PrecisionModel) -> access$000
    49:51:org.locationtech.jts.geom.Geometry densify(org.locationtech.jts.geom.Geometry,double) -> densify
    63:82:org.locationtech.jts.geom.Coordinate[] densifyPoints(org.locationtech.jts.geom.Coordinate[],double,org.locationtech.jts.geom.PrecisionModel) -> densifyPoints
    119:119:org.locationtech.jts.geom.Geometry getResultGeometry() -> getResultGeometry
    109:110:void setDistanceTolerance(double) -> setDistanceTolerance
org.locationtech.jts.densify.Densifier$DensifyTransformer -> org.locationtech.jts.densify.Densifier$DensifyTransformer:
    125:126:void <init>(double) -> <init>
    168:168:org.locationtech.jts.geom.Geometry createValidArea(org.locationtech.jts.geom.Geometry) -> createValidArea
    131:138:org.locationtech.jts.geom.CoordinateSequence transformCoordinates(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry) -> transformCoordinates
    151:152:org.locationtech.jts.geom.Geometry transformMultiPolygon(org.locationtech.jts.geom.MultiPolygon,org.locationtech.jts.geom.Geometry) -> transformMultiPolygon
    142:147:org.locationtech.jts.geom.Geometry transformPolygon(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.Geometry) -> transformPolygon
org.locationtech.jts.dissolve.DissolveEdgeGraph -> org.locationtech.jts.dissolve.DissolveEdgeGraph:
    26:26:void <init>() -> <init>
    30:30:org.locationtech.jts.edgegraph.HalfEdge createEdge(org.locationtech.jts.geom.Coordinate) -> createEdge
org.locationtech.jts.dissolve.DissolveHalfEdge -> org.locationtech.jts.dissolve.DissolveHalfEdge:
    28:31:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    42:42:boolean isStart() -> isStart
    50:50:void setStart() -> setStart
org.locationtech.jts.dissolve.LineDissolver -> org.locationtech.jts.dissolve.LineDissolver:
    74:156:void <init>() -> <init>
    56:56:void access$000(org.locationtech.jts.dissolve.LineDissolver,org.locationtech.jts.geom.LineString) -> access$000
    90:90:void add(org.locationtech.jts.geom.Geometry) -> add
    107:109:void add(java.util.Collection) -> add
    114:128:void add(org.locationtech.jts.geom.LineString) -> add
    282:282:void addLine(org.locationtech.jts.geom.CoordinateList) -> addLine
    229:255:void buildLine(org.locationtech.jts.edgegraph.HalfEdge) -> buildLine
    174:178:void buildLines() -> buildLines
    259:278:void buildRing(org.locationtech.jts.edgegraph.HalfEdge) -> buildRing
    147:153:void computeResult() -> computeResult
    66:68:org.locationtech.jts.geom.Geometry dissolve(org.locationtech.jts.geom.Geometry) -> dissolve
    141:143:org.locationtech.jts.geom.Geometry getResult() -> getResult
    159:165:void process(org.locationtech.jts.edgegraph.HalfEdge) -> process
    293:295:void stackEdges(org.locationtech.jts.edgegraph.HalfEdge) -> stackEdges
    201:211:void updateRingStartEdge(org.locationtech.jts.dissolve.DissolveHalfEdge) -> updateRingStartEdge
org.locationtech.jts.dissolve.LineDissolver$1 -> org.locationtech.jts.dissolve.LineDissolver$1:
    90:90:void <init>(org.locationtech.jts.dissolve.LineDissolver) -> <init>
    92:93:void filter(org.locationtech.jts.geom.Geometry) -> filter
org.locationtech.jts.edgegraph.EdgeGraph -> org.locationtech.jts.edgegraph.EdgeGraph:
    40:42:void <init>() -> <init>
    78:94:org.locationtech.jts.edgegraph.HalfEdge addEdge(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> addEdge
    59:61:org.locationtech.jts.edgegraph.HalfEdge create(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> create
    54:54:org.locationtech.jts.edgegraph.HalfEdge createEdge(org.locationtech.jts.geom.Coordinate) -> createEdge
    153:155:org.locationtech.jts.edgegraph.HalfEdge findEdge(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> findEdge
    141:141:java.util.Collection getVertexEdges() -> getVertexEdges
    120:134:org.locationtech.jts.edgegraph.HalfEdge insert(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.edgegraph.HalfEdge) -> insert
    106:106:boolean isValidEdge(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isValidEdge
org.locationtech.jts.edgegraph.EdgeGraphBuilder -> org.locationtech.jts.edgegraph.EdgeGraphBuilder:
    38:41:void <init>() -> <init>
    30:30:void access$000(org.locationtech.jts.edgegraph.EdgeGraphBuilder,org.locationtech.jts.geom.LineString) -> access$000
    59:59:void add(org.locationtech.jts.geom.Geometry) -> add
    76:78:void add(java.util.Collection) -> add
    83:85:void add(org.locationtech.jts.geom.LineString) -> add
    33:35:org.locationtech.jts.edgegraph.EdgeGraph build(java.util.Collection) -> build
    47:47:org.locationtech.jts.edgegraph.EdgeGraph getGraph() -> getGraph
org.locationtech.jts.edgegraph.EdgeGraphBuilder$1 -> org.locationtech.jts.edgegraph.EdgeGraphBuilder$1:
    59:59:void <init>(org.locationtech.jts.edgegraph.EdgeGraphBuilder) -> <init>
    61:62:void filter(org.locationtech.jts.geom.Geometry) -> filter
org.locationtech.jts.edgegraph.HalfEdge -> org.locationtech.jts.edgegraph.HalfEdge:
    91:92:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    280:298:int compareAngularDirection(org.locationtech.jts.edgegraph.HalfEdge) -> compareAngularDirection
    250:251:int compareTo(java.lang.Object) -> compareTo
    54:56:org.locationtech.jts.edgegraph.HalfEdge create(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> create
    340:340:int degree() -> degree
    306:306:double deltaX() -> deltaX
    313:313:double deltaY() -> deltaY
    116:116:org.locationtech.jts.geom.Coordinate dest() -> dest
    196:196:boolean equals(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> equals
    181:183:org.locationtech.jts.edgegraph.HalfEdge find(org.locationtech.jts.geom.Coordinate) -> find
    75:78:org.locationtech.jts.edgegraph.HalfEdge init(org.locationtech.jts.edgegraph.HalfEdge,org.locationtech.jts.edgegraph.HalfEdge) -> init
    97:101:void init(org.locationtech.jts.edgegraph.HalfEdge) -> init
    208:226:void insert(org.locationtech.jts.edgegraph.HalfEdge) -> insert
    237:240:void insertAfter(org.locationtech.jts.edgegraph.HalfEdge) -> insertAfter
    146:146:org.locationtech.jts.edgegraph.HalfEdge next() -> next
    165:165:org.locationtech.jts.edgegraph.HalfEdge oNext() -> oNext
    109:109:org.locationtech.jts.geom.Coordinate orig() -> orig
    156:156:org.locationtech.jts.edgegraph.HalfEdge prev() -> prev
    355:356:org.locationtech.jts.edgegraph.HalfEdge prevNode() -> prevNode
    161:161:void setNext(org.locationtech.jts.edgegraph.HalfEdge) -> setNext
    134:134:void setSym(org.locationtech.jts.edgegraph.HalfEdge) -> setSym
    125:125:org.locationtech.jts.edgegraph.HalfEdge sym() -> sym
    322:322:java.lang.String toString() -> toString
org.locationtech.jts.edgegraph.MarkHalfEdge -> org.locationtech.jts.edgegraph.MarkHalfEdge:
    81:89:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    35:35:boolean isMarked(org.locationtech.jts.edgegraph.HalfEdge) -> isMarked
    99:99:boolean isMarked() -> isMarked
    45:45:void mark(org.locationtech.jts.edgegraph.HalfEdge) -> mark
    108:108:void mark() -> mark
    77:78:void markBoth(org.locationtech.jts.edgegraph.HalfEdge) -> markBoth
    56:56:void setMark(org.locationtech.jts.edgegraph.HalfEdge,boolean) -> setMark
    118:118:void setMark(boolean) -> setMark
    67:68:void setMarkBoth(org.locationtech.jts.edgegraph.HalfEdge,boolean) -> setMarkBoth
org.locationtech.jts.geom.Coordinate -> org.locationtech.jts.geom.Coordinate:
    99:102:void <init>(double,double,double) -> <init>
    109:109:void <init>() -> <init>
    119:119:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    129:129:void <init>(double,double) -> <init>
    382:386:java.lang.Object clone() -> clone
    44:44:int compareTo(java.lang.Object) -> compareTo
    364:366:int compareTo(org.locationtech.jts.geom.Coordinate) -> compareTo
    399:399:org.locationtech.jts.geom.Coordinate copy() -> copy
    410:412:double distance(org.locationtech.jts.geom.Coordinate) -> distance
    422:425:double distance3D(org.locationtech.jts.geom.Coordinate) -> distance3D
    324:324:boolean equalInZ(org.locationtech.jts.geom.Coordinate,double) -> equalInZ
    337:340:boolean equals(java.lang.Object) -> equals
    274:277:boolean equals2D(org.locationtech.jts.geom.Coordinate) -> equals2D
    294:297:boolean equals2D(org.locationtech.jts.geom.Coordinate,double) -> equals2D
    311:313:boolean equals3D(org.locationtech.jts.geom.Coordinate) -> equals3D
    0:0:double getM() -> getM
    230:234:double getOrdinate(int) -> getOrdinate
    149:149:double getX() -> getX
    167:167:double getY() -> getY
    186:186:double getZ() -> getZ
    436:437:int hashCode() -> hashCode
    449:449:int hashCode(double) -> hashCode
    138:140:void setCoordinate(org.locationtech.jts.geom.Coordinate) -> setCoordinate
    214:214:void setM(double) -> setM
    252:261:void setOrdinate(int,double) -> setOrdinate
    158:158:void setX(double) -> setX
    176:176:void setY(double) -> setY
    195:195:void setZ(double) -> setZ
    377:377:java.lang.String toString() -> toString
org.locationtech.jts.geom.Coordinate$DimensionalComparator -> org.locationtech.jts.geom.Coordinate$DimensionalComparator:
    490:490:void <init>() -> <init>
    483:503:void <init>(int) -> <init>
    458:458:int compare(java.lang.Object,java.lang.Object) -> compare
    474:479:int compare(double,double) -> compare
    518:526:int compare(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> compare
org.locationtech.jts.geom.CoordinateArrays -> org.locationtech.jts.geom.CoordinateArrays:
    28:28:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    27:27:boolean access$000(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate[]) -> access$000
    297:297:org.locationtech.jts.geom.Coordinate[] atLeastNCoordinatesOrNothing(int,org.locationtech.jts.geom.Coordinate[]) -> atLeastNCoordinatesOrNothing
    108:116:int compare(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate[]) -> compare
    245:247:org.locationtech.jts.geom.Coordinate[] copyDeep(org.locationtech.jts.geom.Coordinate[]) -> copyDeep
    266:266:void copyDeep(org.locationtech.jts.geom.Coordinate[],int,org.locationtech.jts.geom.Coordinate[],int,int) -> copyDeep
    39:44:int dimension(org.locationtech.jts.geom.Coordinate[]) -> dimension
    482:484:org.locationtech.jts.geom.Envelope envelope(org.locationtech.jts.geom.Coordinate[]) -> envelope
    361:363:boolean equals(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate[]) -> equals
    383:385:boolean equals(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate[],java.util.Comparator) -> equals
    457:470:org.locationtech.jts.geom.Coordinate[] extract(org.locationtech.jts.geom.Coordinate[],int,int) -> extract
    284:285:boolean hasRepeatedPoints(org.locationtech.jts.geom.Coordinate[]) -> hasRepeatedPoints
    153:156:int increasingDirection(org.locationtech.jts.geom.Coordinate[]) -> increasingDirection
    434:435:int indexOf(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> indexOf
    497:502:org.locationtech.jts.geom.Coordinate[] intersection(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Envelope) -> intersection
    174:177:boolean isEqualReversed(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate[]) -> isEqualReversed
    75:76:boolean isRing(org.locationtech.jts.geom.Coordinate[]) -> isRing
    55:60:int measures(org.locationtech.jts.geom.Coordinate[]) -> measures
    401:403:org.locationtech.jts.geom.Coordinate minCoordinate(org.locationtech.jts.geom.Coordinate[]) -> minCoordinate
    89:91:org.locationtech.jts.geom.Coordinate ptNotInList(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate[]) -> ptNotInList
    322:331:org.locationtech.jts.geom.Coordinate[] removeNull(org.locationtech.jts.geom.Coordinate[]) -> removeNull
    308:310:org.locationtech.jts.geom.Coordinate[] removeRepeatedPoints(org.locationtech.jts.geom.Coordinate[]) -> removeRepeatedPoints
    341:346:void reverse(org.locationtech.jts.geom.Coordinate[]) -> reverse
    416:421:void scroll(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate) -> scroll
    275:275:org.locationtech.jts.geom.Coordinate[] toCoordinateArray(java.util.Collection) -> toCoordinateArray
org.locationtech.jts.geom.CoordinateArrays$BidirectionalComparator -> org.locationtech.jts.geom.CoordinateArrays$BidirectionalComparator:
    192:192:void <init>() -> <init>
    212:227:int OLDcompare(java.lang.Object,java.lang.Object) -> OLDcompare
    196:205:int compare(java.lang.Object,java.lang.Object) -> compare
org.locationtech.jts.geom.CoordinateArrays$ForwardComparator -> org.locationtech.jts.geom.CoordinateArrays$ForwardComparator:
    126:126:void <init>() -> <init>
    130:133:int compare(java.lang.Object,java.lang.Object) -> compare
org.locationtech.jts.geom.CoordinateList -> org.locationtech.jts.geom.CoordinateList:
    33:33:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    50:52:void <init>(org.locationtech.jts.geom.Coordinate[]) -> <init>
    63:65:void <init>(org.locationtech.jts.geom.Coordinate[],boolean) -> <init>
    27:27:boolean add(java.lang.Object) -> add
    69:69:boolean add(org.locationtech.jts.geom.Coordinate) -> add
    89:89:boolean add(org.locationtech.jts.geom.Coordinate[],boolean,int,int) -> add
    104:110:boolean add(org.locationtech.jts.geom.Coordinate[],boolean,boolean) -> add
    125:125:boolean add(org.locationtech.jts.geom.Coordinate[],boolean) -> add
    137:137:boolean add(java.lang.Object,boolean) -> add
    151:156:void add(org.locationtech.jts.geom.Coordinate,boolean) -> add
    170:182:void add(int,org.locationtech.jts.geom.Coordinate,boolean) -> add
    193:194:boolean addAll(java.util.Collection,boolean) -> addAll
    226:228:java.lang.Object clone() -> clone
    205:207:void closeRing() -> closeRing
    72:72:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    217:217:org.locationtech.jts.geom.Coordinate[] toCoordinateArray() -> toCoordinateArray
org.locationtech.jts.geom.CoordinateSequence$-CC -> org.locationtech.jts.geom.CoordinateSequence$-CC:
# {"id":"com.android.tools.r8.synthesized"}
    128:128:org.locationtech.jts.geom.Coordinate org.locationtech.jts.geom.CoordinateSequence.createCoordinate() -> $default$createCoordinate
    128:128:org.locationtech.jts.geom.Coordinate $default$createCoordinate(org.locationtech.jts.geom.CoordinateSequence):0 -> $default$createCoordinate
      # {"id":"com.android.tools.r8.synthesized"}
    205:207:double org.locationtech.jts.geom.CoordinateSequence.getM(int) -> $default$getM
    205:207:double $default$getM(org.locationtech.jts.geom.CoordinateSequence,int):0 -> $default$getM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int $default$getMeasures(org.locationtech.jts.geom.CoordinateSequence) -> $default$getMeasures
      # {"id":"com.android.tools.r8.synthesized"}
    190:191:double org.locationtech.jts.geom.CoordinateSequence.getZ(int) -> $default$getZ
    190:191:double $default$getZ(org.locationtech.jts.geom.CoordinateSequence,int):0 -> $default$getZ
      # {"id":"com.android.tools.r8.synthesized"}
    116:116:boolean org.locationtech.jts.geom.CoordinateSequence.hasM() -> $default$hasM
    116:116:boolean $default$hasM(org.locationtech.jts.geom.CoordinateSequence):0 -> $default$hasM
      # {"id":"com.android.tools.r8.synthesized"}
    106:106:boolean org.locationtech.jts.geom.CoordinateSequence.hasZ() -> $default$hasZ
    106:106:boolean $default$hasZ(org.locationtech.jts.geom.CoordinateSequence):0 -> $default$hasZ
      # {"id":"com.android.tools.r8.synthesized"}
org.locationtech.jts.geom.CoordinateSequenceComparator -> org.locationtech.jts.geom.CoordinateSequenceComparator:
    62:63:void <init>() -> <init>
    72:73:void <init>(int) -> <init>
    44:49:int compare(double,double) -> compare
    85:112:int compare(java.lang.Object,java.lang.Object) -> compare
    135:137:int compareCoordinate(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.CoordinateSequence,int,int) -> compareCoordinate
org.locationtech.jts.geom.CoordinateSequenceFactory$-CC -> org.locationtech.jts.geom.CoordinateSequenceFactory$-CC:
# {"id":"com.android.tools.r8.synthesized"}
    74:74:org.locationtech.jts.geom.CoordinateSequence org.locationtech.jts.geom.CoordinateSequenceFactory.create(int,int,int) -> $default$create
    74:74:org.locationtech.jts.geom.CoordinateSequence $default$create(org.locationtech.jts.geom.CoordinateSequenceFactory,int,int,int):0 -> $default$create
      # {"id":"com.android.tools.r8.synthesized"}
org.locationtech.jts.geom.CoordinateSequences -> org.locationtech.jts.geom.CoordinateSequences:
    22:22:void <init>() -> <init>
    69:69:void copy(org.locationtech.jts.geom.CoordinateSequence,int,org.locationtech.jts.geom.CoordinateSequence,int,int) -> copy
    85:87:void copyCoord(org.locationtech.jts.geom.CoordinateSequence,int,org.locationtech.jts.geom.CoordinateSequence,int) -> copyCoord
    143:148:org.locationtech.jts.geom.CoordinateSequence createClosedRing(org.locationtech.jts.geom.CoordinateSequenceFactory,org.locationtech.jts.geom.CoordinateSequence,int) -> createClosedRing
    127:138:org.locationtech.jts.geom.CoordinateSequence ensureValidRing(org.locationtech.jts.geom.CoordinateSequenceFactory,org.locationtech.jts.geom.CoordinateSequence) -> ensureValidRing
    154:160:org.locationtech.jts.geom.CoordinateSequence extend(org.locationtech.jts.geom.CoordinateSequenceFactory,org.locationtech.jts.geom.CoordinateSequence,int) -> extend
    350:352:int indexOf(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.CoordinateSequence) -> indexOf
    178:189:boolean isEqual(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.CoordinateSequence) -> isEqual
    103:110:boolean isRing(org.locationtech.jts.geom.CoordinateSequence) -> isRing
    236:238:org.locationtech.jts.geom.Coordinate minCoordinate(org.locationtech.jts.geom.CoordinateSequence) -> minCoordinate
    253:253:int minCoordinateIndex(org.locationtech.jts.geom.CoordinateSequence) -> minCoordinateIndex
    272:273:int minCoordinateIndex(org.locationtech.jts.geom.CoordinateSequence,int,int) -> minCoordinateIndex
    31:34:void reverse(org.locationtech.jts.geom.CoordinateSequence) -> reverse
    289:291:void scroll(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Coordinate) -> scroll
    303:303:void scroll(org.locationtech.jts.geom.CoordinateSequence,int) -> scroll
    321:336:void scroll(org.locationtech.jts.geom.CoordinateSequence,int,boolean) -> scroll
    48:51:void swap(org.locationtech.jts.geom.CoordinateSequence,int,int) -> swap
    209:223:java.lang.String toString(org.locationtech.jts.geom.CoordinateSequence) -> toString
org.locationtech.jts.geom.CoordinateXY -> org.locationtech.jts.geom.CoordinateXY:
    40:40:void <init>() -> <init>
    50:50:void <init>(double,double) -> <init>
    59:59:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    68:68:void <init>(org.locationtech.jts.geom.CoordinateXY) -> <init>
    23:23:org.locationtech.jts.geom.Coordinate copy() -> copy
    77:77:org.locationtech.jts.geom.CoordinateXY copy() -> copy
    103:106:double getOrdinate(int) -> getOrdinate
    0:0:double getZ() -> getZ
    95:97:void setCoordinate(org.locationtech.jts.geom.Coordinate) -> setCoordinate
    113:119:void setOrdinate(int,double) -> setOrdinate
    89:89:void setZ(double) -> setZ
    124:124:java.lang.String toString() -> toString
org.locationtech.jts.geom.CoordinateXYM -> org.locationtech.jts.geom.CoordinateXYM:
    45:46:void <init>() -> <init>
    57:58:void <init>(double,double,double) -> <init>
    67:68:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    77:78:void <init>(org.locationtech.jts.geom.CoordinateXYM) -> <init>
    23:23:org.locationtech.jts.geom.Coordinate copy() -> copy
    87:87:org.locationtech.jts.geom.CoordinateXYM copy() -> copy
    95:95:double getM() -> getM
    126:130:double getOrdinate(int) -> getOrdinate
    0:0:double getZ() -> getZ
    117:120:void setCoordinate(org.locationtech.jts.geom.Coordinate) -> setCoordinate
    99:99:void setM(double) -> setM
    137:146:void setOrdinate(int,double) -> setOrdinate
    111:111:void setZ(double) -> setZ
    151:151:java.lang.String toString() -> toString
org.locationtech.jts.geom.CoordinateXYZM -> org.locationtech.jts.geom.CoordinateXYZM:
    26:27:void <init>() -> <init>
    39:40:void <init>(double,double,double,double) -> <init>
    49:50:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    59:60:void <init>(org.locationtech.jts.geom.CoordinateXYZM) -> <init>
    21:21:org.locationtech.jts.geom.Coordinate copy() -> copy
    69:69:org.locationtech.jts.geom.CoordinateXYZM copy() -> copy
    77:77:double getM() -> getM
    87:92:double getOrdinate(int) -> getOrdinate
    98:101:void setCoordinate(org.locationtech.jts.geom.Coordinate) -> setCoordinate
    81:81:void setM(double) -> setM
    108:120:void setOrdinate(int,double) -> setOrdinate
    125:125:java.lang.String toString() -> toString
org.locationtech.jts.geom.Coordinates -> org.locationtech.jts.geom.Coordinates:
    17:17:void <init>() -> <init>
    26:26:org.locationtech.jts.geom.Coordinate create(int) -> create
    39:47:org.locationtech.jts.geom.Coordinate create(int,int) -> create
    58:64:int dimension(org.locationtech.jts.geom.Coordinate) -> dimension
    78:84:int measures(org.locationtech.jts.geom.Coordinate) -> measures
org.locationtech.jts.geom.DefaultCoordinateSequence -> org.locationtech.jts.geom.DefaultCoordinateSequence:
    38:42:void <init>(org.locationtech.jts.geom.Coordinate[]) -> <init>
    50:53:void <init>(org.locationtech.jts.geom.CoordinateSequence) -> <init>
    63:66:void <init>(int) -> <init>
    147:147:java.lang.Object clone() -> clone
    25:25:org.locationtech.jts.geom.CoordinateSequence copy() -> copy
    155:159:org.locationtech.jts.geom.DefaultCoordinateSequence copy() -> copy
    0:0:org.locationtech.jts.geom.Coordinate createCoordinate() -> createCoordinate
      # {"id":"com.android.tools.r8.synthesized"}
    180:181:org.locationtech.jts.geom.Envelope expandEnvelope(org.locationtech.jts.geom.Envelope) -> expandEnvelope
    83:83:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    99:100:void getCoordinate(int,org.locationtech.jts.geom.Coordinate) -> getCoordinate
    92:92:org.locationtech.jts.geom.Coordinate getCoordinateCopy(int) -> getCoordinateCopy
    0:0:int getDimension() -> getDimension
    0:0:double getM(int) -> getM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getMeasures() -> getMeasures
      # {"id":"com.android.tools.r8.synthesized"}
    123:125:double getOrdinate(int,int) -> getOrdinate
    107:107:double getX(int) -> getX
    114:114:double getY(int) -> getY
    0:0:double getZ(int) -> getZ
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean hasM() -> hasM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean hasZ() -> hasZ
      # {"id":"com.android.tools.r8.synthesized"}
    135:137:void setOrdinate(int,int,double) -> setOrdinate
    167:167:int size() -> size
    175:175:org.locationtech.jts.geom.Coordinate[] toCoordinateArray() -> toCoordinateArray
    192:201:java.lang.String toString() -> toString
org.locationtech.jts.geom.DefaultCoordinateSequenceFactory -> org.locationtech.jts.geom.DefaultCoordinateSequenceFactory:
    28:28:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    0:0:org.locationtech.jts.geom.CoordinateSequence create(int,int,int) -> create
      # {"id":"com.android.tools.r8.synthesized"}
    56:56:org.locationtech.jts.geom.CoordinateSequence create(org.locationtech.jts.geom.Coordinate[]) -> create
    63:63:org.locationtech.jts.geom.CoordinateSequence create(org.locationtech.jts.geom.CoordinateSequence) -> create
    70:70:org.locationtech.jts.geom.CoordinateSequence create(int,int) -> create
    42:42:org.locationtech.jts.geom.DefaultCoordinateSequenceFactory instance() -> instance
    35:35:java.lang.Object readResolve() -> readResolve
org.locationtech.jts.geom.Dimension -> org.locationtech.jts.geom.Dimension:
    24:24:void <init>() -> <init>
    111:111:char toDimensionSymbol(int) -> toDimensionSymbol
    125:139:int toDimensionValue(char) -> toDimensionValue
org.locationtech.jts.geom.Envelope -> org.locationtech.jts.geom.Envelope:
    121:122:void <init>() -> <init>
    134:135:void <init>(double,double,double,double) -> <init>
    145:146:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    155:156:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    165:166:void <init>(org.locationtech.jts.geom.Envelope) -> <init>
    495:498:org.locationtech.jts.geom.Coordinate centre() -> centre
    758:774:int compareTo(java.lang.Object) -> compareTo
    619:619:boolean contains(org.locationtech.jts.geom.Envelope) -> contains
    636:636:boolean contains(org.locationtech.jts.geom.Coordinate) -> contains
    655:655:boolean contains(double,double) -> contains
    669:670:boolean covers(double,double) -> covers
    685:685:boolean covers(org.locationtech.jts.geom.Coordinate) -> covers
    696:700:boolean covers(org.locationtech.jts.geom.Envelope) -> covers
    711:727:double distance(org.locationtech.jts.geom.Envelope) -> distance
    731:741:boolean equals(java.lang.Object) -> equals
    385:385:void expandBy(double) -> expandBy
    397:406:void expandBy(double,double) -> expandBy
    374:374:void expandToInclude(org.locationtech.jts.geom.Coordinate) -> expandToInclude
    418:435:void expandToInclude(double,double) -> expandToInclude
    449:469:void expandToInclude(org.locationtech.jts.geom.Envelope) -> expandToInclude
    334:334:double getArea() -> getArea
    280:283:double getHeight() -> getHeight
    303:303:double getMaxX() -> getMaxX
    323:323:double getMaxY() -> getMaxY
    293:293:double getMinX() -> getMinX
    313:313:double getMinY() -> getMinY
    268:271:double getWidth() -> getWidth
    38:41:int hashCode() -> hashCode
    174:174:void init() -> init
    188:201:void init(double,double,double,double) -> init
    213:213:void init(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> init
    223:223:void init(org.locationtech.jts.geom.Coordinate) -> init
    233:236:void init(org.locationtech.jts.geom.Envelope) -> init
    510:516:org.locationtech.jts.geom.Envelope intersection(org.locationtech.jts.geom.Envelope) -> intersection
    56:56:boolean intersects(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersects
    76:89:boolean intersects(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersects
    528:529:boolean intersects(org.locationtech.jts.geom.Envelope) -> intersects
    543:555:boolean intersects(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersects
    576:576:boolean intersects(org.locationtech.jts.geom.Coordinate) -> intersects
    593:594:boolean intersects(double,double) -> intersects
    259:259:boolean isNull() -> isNull
    358:360:double maxExtent() -> maxExtent
    344:346:double minExtent() -> minExtent
    565:565:boolean overlaps(org.locationtech.jts.geom.Envelope) -> overlaps
    582:582:boolean overlaps(org.locationtech.jts.geom.Coordinate) -> overlaps
    603:603:boolean overlaps(double,double) -> overlaps
    245:248:void setToNull() -> setToNull
    746:746:java.lang.String toString() -> toString
    481:485:void translate(double,double) -> translate
org.locationtech.jts.geom.Geometry -> org.locationtech.jts.geom.Geometry:
    168:168:void <clinit>() -> <clinit>
    193:202:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    1172:1172:org.locationtech.jts.geom.Geometry buffer(double) -> buffer
    1205:1205:org.locationtech.jts.geom.Geometry buffer(double,int) -> buffer
    1243:1243:org.locationtech.jts.geom.Geometry buffer(double,int,int) -> buffer
    1802:1803:void checkNotGeometryCollection(org.locationtech.jts.geom.Geometry) -> checkNotGeometryCollection
    1621:1626:java.lang.Object clone() -> clone
    1870:1883:int compare(java.util.Collection,java.util.Collection) -> compare
    1714:1727:int compareTo(java.lang.Object) -> compareTo
    1761:1774:int compareTo(java.lang.Object,org.locationtech.jts.geom.CoordinateSequenceComparator) -> compareTo
    853:870:boolean contains(org.locationtech.jts.geom.Geometry) -> contains
    1277:1277:org.locationtech.jts.geom.Geometry convexHull() -> convexHull
    1643:1645:org.locationtech.jts.geom.Geometry copy() -> copy
    986:986:boolean coveredBy(org.locationtech.jts.geom.Geometry) -> coveredBy
    937:953:boolean covers(org.locationtech.jts.geom.Geometry) -> covers
    1898:1899:org.locationtech.jts.geom.Point createPointFromInternalCoord(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Geometry) -> createPointFromInternalCoord
    787:789:boolean crosses(org.locationtech.jts.geom.Geometry) -> crosses
    1411:1416:org.locationtech.jts.geom.Geometry difference(org.locationtech.jts.geom.Geometry) -> difference
    660:660:boolean disjoint(org.locationtech.jts.geom.Geometry) -> disjoint
    446:446:double distance(org.locationtech.jts.geom.Geometry) -> distance
    1890:1891:boolean equal(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double) -> equal
    1048:1048:boolean equals(org.locationtech.jts.geom.Geometry) -> equals
    1114:1116:boolean equals(java.lang.Object) -> equals
    1539:1539:boolean equalsExact(org.locationtech.jts.geom.Geometry) -> equalsExact
    1560:1560:boolean equalsNorm(org.locationtech.jts.geom.Geometry) -> equalsNorm
    1078:1080:boolean equalsTopo(org.locationtech.jts.geom.Geometry) -> equalsTopo
    627:627:void geometryChanged() -> geometryChanged
    638:638:void geometryChangedAction() -> geometryChangedAction
    0:0:double getArea() -> getArea
    517:520:org.locationtech.jts.geom.Point getCentroid() -> getCentroid
    595:595:org.locationtech.jts.geom.Geometry getEnvelope() -> getEnvelope
    613:616:org.locationtech.jts.geom.Envelope getEnvelopeInternal() -> getEnvelopeInternal
    283:283:org.locationtech.jts.geom.GeometryFactory getFactory() -> getFactory
    0:0:org.locationtech.jts.geom.Geometry getGeometryN(int) -> getGeometryN
    535:535:org.locationtech.jts.geom.Point getInteriorPoint() -> getInteriorPoint
    0:0:double getLength() -> getLength
    0:0:int getNumGeometries() -> getNumGeometries
    339:339:org.locationtech.jts.geom.PrecisionModel getPrecisionModel() -> getPrecisionModel
    260:260:int getSRID() -> getSRID
    292:292:java.lang.Object getUserData() -> getUserData
    221:222:boolean hasNonEmptyElements(org.locationtech.jts.geom.Geometry[]) -> hasNonEmptyElements
    237:238:boolean hasNullElements(java.lang.Object[]) -> hasNullElements
    1126:1126:int hashCode() -> hashCode
    1315:1335:org.locationtech.jts.geom.Geometry intersection(org.locationtech.jts.geom.Geometry) -> intersection
    721:758:boolean intersects(org.locationtech.jts.geom.Geometry) -> intersects
    1790:1790:boolean isEquivalentClass(org.locationtech.jts.geom.Geometry) -> isEquivalentClass
    1815:1815:boolean isGeometryCollection() -> isGeometryCollection
    0:0:boolean isRectangle() -> isRectangle
    408:409:boolean isSimple() -> isSimple
    424:424:boolean isValid() -> isValid
    459:462:boolean isWithinDistance(org.locationtech.jts.geom.Geometry,double) -> isWithinDistance
    1682:1683:org.locationtech.jts.geom.Geometry norm() -> norm
    896:898:boolean overlaps(org.locationtech.jts.geom.Geometry) -> overlaps
    1013:1013:boolean relate(org.locationtech.jts.geom.Geometry,java.lang.String) -> relate
    1024:1026:org.locationtech.jts.geom.IntersectionMatrix relate(org.locationtech.jts.geom.Geometry) -> relate
    274:274:void setSRID(int) -> setSRID
    328:328:void setUserData(java.lang.Object) -> setUserData
    1440:1452:org.locationtech.jts.geom.Geometry symDifference(org.locationtech.jts.geom.Geometry) -> symDifference
    1130:1130:java.lang.String toString() -> toString
    1141:1142:java.lang.String toText() -> toText
    690:692:boolean touches(org.locationtech.jts.geom.Geometry) -> touches
    1375:1388:org.locationtech.jts.geom.Geometry union(org.locationtech.jts.geom.Geometry) -> union
    1477:1477:org.locationtech.jts.geom.Geometry union() -> union
    821:821:boolean within(org.locationtech.jts.geom.Geometry) -> within
org.locationtech.jts.geom.Geometry$1 -> org.locationtech.jts.geom.Geometry$1:
    168:168:void <init>() -> <init>
    170:170:void filter(org.locationtech.jts.geom.Geometry) -> filter
org.locationtech.jts.geom.Geometry$2 -> org.locationtech.jts.geom.Geometry$2:
    1325:1325:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> <init>
    1327:1327:org.locationtech.jts.geom.Geometry map(org.locationtech.jts.geom.Geometry) -> map
org.locationtech.jts.geom.GeometryCollection -> org.locationtech.jts.geom.GeometryCollection:
    39:39:void <init>(org.locationtech.jts.geom.Geometry[],org.locationtech.jts.geom.PrecisionModel,int) -> <init>
    51:58:void <init>(org.locationtech.jts.geom.Geometry[],org.locationtech.jts.geom.GeometryFactory) -> <init>
    179:180:void apply(org.locationtech.jts.geom.CoordinateFilter) -> apply
    185:194:void apply(org.locationtech.jts.geom.CoordinateSequenceFilter) -> apply
    198:200:void apply(org.locationtech.jts.geom.GeometryFilter) -> apply
    205:207:void apply(org.locationtech.jts.geom.GeometryComponentFilter) -> apply
    219:219:java.lang.Object clone() -> clone
    246:248:int compareToSameClass(java.lang.Object) -> compareToSameClass
    252:260:int compareToSameClass(java.lang.Object,org.locationtech.jts.geom.CoordinateSequenceComparator) -> compareToSameClass
    238:240:org.locationtech.jts.geom.Envelope computeEnvelopeInternal() -> computeEnvelopeInternal
    29:29:org.locationtech.jts.geom.Geometry copyInternal() -> copyInternal
    223:227:org.locationtech.jts.geom.GeometryCollection copyInternal() -> copyInternal
    163:171:boolean equalsExact(org.locationtech.jts.geom.Geometry,double) -> equalsExact
    147:148:double getArea() -> getArea
    134:135:org.locationtech.jts.geom.Geometry getBoundary() -> getBoundary
    107:108:int getBoundaryDimension() -> getBoundaryDimension
    62:63:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    76:82:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    99:100:int getDimension() -> getDimension
    118:118:org.locationtech.jts.geom.Geometry getGeometryN(int) -> getGeometryN
    0:0:java.lang.String getGeometryType() -> getGeometryType
    156:157:double getLength() -> getLength
    114:114:int getNumGeometries() -> getNumGeometries
    123:124:int getNumPoints() -> getNumPoints
    0:0:int getSortIndex() -> getSortIndex
    89:90:boolean isEmpty() -> isEmpty
    231:234:void normalize() -> normalize
    283:288:org.locationtech.jts.geom.Geometry reverse() -> reverse
org.locationtech.jts.geom.GeometryCollectionIterator -> org.locationtech.jts.geom.GeometryCollectionIterator:
    64:68:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    77:86:boolean hasNext() -> hasNext
    127:127:boolean isAtomic(org.locationtech.jts.geom.Geometry) -> isAtomic
    99:120:java.lang.Object next() -> next
    136:136:void remove() -> remove
org.locationtech.jts.geom.GeometryFactory -> org.locationtech.jts.geom.GeometryFactory:
    55:58:void <init>(org.locationtech.jts.geom.PrecisionModel,int,org.locationtech.jts.geom.CoordinateSequenceFactory) -> <init>
    67:67:void <init>(org.locationtech.jts.geom.CoordinateSequenceFactory) -> <init>
    78:78:void <init>(org.locationtech.jts.geom.PrecisionModel) -> <init>
    90:90:void <init>(org.locationtech.jts.geom.PrecisionModel,int) -> <init>
    98:98:void <init>() -> <init>
    35:35:org.locationtech.jts.geom.CoordinateSequenceFactory access$000(org.locationtech.jts.geom.GeometryFactory) -> access$000
    519:557:org.locationtech.jts.geom.Geometry buildGeometry(java.util.Collection) -> buildGeometry
    604:605:org.locationtech.jts.geom.Geometry createGeometry(org.locationtech.jts.geom.Geometry) -> createGeometry
    297:297:org.locationtech.jts.geom.GeometryCollection createGeometryCollection() -> createGeometryCollection
    308:308:org.locationtech.jts.geom.GeometryCollection createGeometryCollection(org.locationtech.jts.geom.Geometry[]) -> createGeometryCollection
    563:563:org.locationtech.jts.geom.LineString createLineString() -> createLineString
    573:573:org.locationtech.jts.geom.LineString createLineString(org.locationtech.jts.geom.Coordinate[]) -> createLineString
    582:582:org.locationtech.jts.geom.LineString createLineString(org.locationtech.jts.geom.CoordinateSequence) -> createLineString
    331:331:org.locationtech.jts.geom.LinearRing createLinearRing() -> createLinearRing
    343:343:org.locationtech.jts.geom.LinearRing createLinearRing(org.locationtech.jts.geom.Coordinate[]) -> createLinearRing
    356:356:org.locationtech.jts.geom.LinearRing createLinearRing(org.locationtech.jts.geom.CoordinateSequence) -> createLinearRing
    282:282:org.locationtech.jts.geom.MultiLineString createMultiLineString() -> createMultiLineString
    293:293:org.locationtech.jts.geom.MultiLineString createMultiLineString(org.locationtech.jts.geom.LineString[]) -> createMultiLineString
    360:360:org.locationtech.jts.geom.MultiPoint createMultiPoint() -> createMultiPoint
    371:371:org.locationtech.jts.geom.MultiPoint createMultiPoint(org.locationtech.jts.geom.Point[]) -> createMultiPoint
    383:384:org.locationtech.jts.geom.MultiPoint createMultiPoint(org.locationtech.jts.geom.Coordinate[]) -> createMultiPoint
    411:420:org.locationtech.jts.geom.MultiPoint createMultiPoint(org.locationtech.jts.geom.CoordinateSequence) -> createMultiPoint
    396:397:org.locationtech.jts.geom.MultiPoint createMultiPointFromCoords(org.locationtech.jts.geom.Coordinate[]) -> createMultiPointFromCoords
    312:312:org.locationtech.jts.geom.MultiPolygon createMultiPolygon() -> createMultiPolygon
    327:327:org.locationtech.jts.geom.MultiPolygon createMultiPolygon(org.locationtech.jts.geom.Polygon[]) -> createMultiPolygon
    256:256:org.locationtech.jts.geom.Point createPoint() -> createPoint
    267:267:org.locationtech.jts.geom.Point createPoint(org.locationtech.jts.geom.Coordinate) -> createPoint
    278:278:org.locationtech.jts.geom.Point createPoint(org.locationtech.jts.geom.CoordinateSequence) -> createPoint
    46:47:org.locationtech.jts.geom.Point createPointFromInternalCoord(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Geometry) -> createPointFromInternalCoord
    438:438:org.locationtech.jts.geom.Polygon createPolygon(org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geom.LinearRing[]) -> createPolygon
    451:451:org.locationtech.jts.geom.Polygon createPolygon(org.locationtech.jts.geom.CoordinateSequence) -> createPolygon
    464:464:org.locationtech.jts.geom.Polygon createPolygon(org.locationtech.jts.geom.Coordinate[]) -> createPolygon
    477:477:org.locationtech.jts.geom.Polygon createPolygon(org.locationtech.jts.geom.LinearRing) -> createPolygon
    481:481:org.locationtech.jts.geom.Polygon createPolygon() -> createPolygon
    624:624:org.locationtech.jts.geom.CoordinateSequenceFactory getCoordinateSequenceFactory() -> getCoordinateSequenceFactory
    103:103:org.locationtech.jts.geom.CoordinateSequenceFactory getDefaultCoordinateSequenceFactory() -> getDefaultCoordinateSequenceFactory
    252:252:org.locationtech.jts.geom.PrecisionModel getPrecisionModel() -> getPrecisionModel
    618:618:int getSRID() -> getSRID
    217:241:org.locationtech.jts.geom.Geometry toGeometry(org.locationtech.jts.geom.Envelope) -> toGeometry
    125:126:org.locationtech.jts.geom.Geometry[] toGeometryArray(java.util.Collection) -> toGeometryArray
    147:148:org.locationtech.jts.geom.LineString[] toLineStringArray(java.util.Collection) -> toLineStringArray
    136:137:org.locationtech.jts.geom.LinearRing[] toLinearRingArray(java.util.Collection) -> toLinearRingArray
    180:181:org.locationtech.jts.geom.MultiLineString[] toMultiLineStringArray(java.util.Collection) -> toMultiLineStringArray
    191:192:org.locationtech.jts.geom.MultiPoint[] toMultiPointArray(java.util.Collection) -> toMultiPointArray
    169:170:org.locationtech.jts.geom.MultiPolygon[] toMultiPolygonArray(java.util.Collection) -> toMultiPolygonArray
    113:114:org.locationtech.jts.geom.Point[] toPointArray(java.util.Collection) -> toPointArray
    158:159:org.locationtech.jts.geom.Polygon[] toPolygonArray(java.util.Collection) -> toPolygonArray
org.locationtech.jts.geom.GeometryFactory$1 -> org.locationtech.jts.geom.GeometryFactory$1:
    605:605:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    607:607:org.locationtech.jts.geom.CoordinateSequence edit(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry) -> edit
org.locationtech.jts.geom.IntersectionMatrix -> org.locationtech.jts.geom.IntersectionMatrix:
    59:61:void <init>() -> <init>
    71:72:void <init>(java.lang.String) -> <init>
    82:91:void <init>(org.locationtech.jts.geom.IntersectionMatrix) -> <init>
    105:105:void add(org.locationtech.jts.geom.IntersectionMatrix) -> add
    289:289:int get(int,int) -> get
    410:410:boolean isContains() -> isContains
    448:454:boolean isCoveredBy() -> isCoveredBy
    426:432:boolean isCovers() -> isCovers
    374:384:boolean isCrosses(int,int) -> isCrosses
    300:300:boolean isDisjoint() -> isDisjoint
    481:481:boolean isEquals(int,int) -> isEquals
    314:314:boolean isIntersects() -> isIntersects
    505:512:boolean isOverlaps(int,int) -> isOverlaps
    330:340:boolean isTouches(int,int) -> isTouches
    0:0:boolean isTrue(int) -> isTrue
    397:397:boolean isWithin() -> isWithin
    0:0:boolean matches(int,char) -> matches
    171:172:boolean matches(java.lang.String,java.lang.String) -> matches
    528:533:boolean matches(java.lang.String) -> matches
    186:186:void set(int,int,int) -> set
    197:200:void set(java.lang.String) -> set
    269:269:void setAll(int) -> setAll
    217:218:void setAtLeast(int,int,int) -> setAtLeast
    251:254:void setAtLeast(java.lang.String) -> setAtLeast
    236:236:void setAtLeastIfValid(int,int,int) -> setAtLeastIfValid
    568:574:java.lang.String toString() -> toString
    548:556:org.locationtech.jts.geom.IntersectionMatrix transpose() -> transpose
org.locationtech.jts.geom.LineSegment -> org.locationtech.jts.geom.LineSegment:
    46:48:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    52:52:void <init>(double,double,double,double) -> <init>
    56:56:void <init>(org.locationtech.jts.geom.LineSegment) -> <init>
    60:60:void <init>() -> <init>
    218:218:double angle() -> angle
    455:463:org.locationtech.jts.geom.Coordinate closestPoint(org.locationtech.jts.geom.Coordinate) -> closestPoint
    474:512:org.locationtech.jts.geom.Coordinate[] closestPoints(org.locationtech.jts.geom.LineSegment) -> closestPoints
    626:629:int compareTo(java.lang.Object) -> compareTo
    249:249:double distance(org.locationtech.jts.geom.LineSegment) -> distance
    259:259:double distance(org.locationtech.jts.geom.Coordinate) -> distance
    270:270:double distancePerpendicular(org.locationtech.jts.geom.Coordinate) -> distancePerpendicular
    591:595:boolean equals(java.lang.Object) -> equals
    643:645:boolean equalsTopo(org.locationtech.jts.geom.LineSegment) -> equalsTopo
    65:66:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    120:120:double getLength() -> getLength
    604:609:int hashCode() -> hashCode
    535:538:org.locationtech.jts.geom.Coordinate intersection(org.locationtech.jts.geom.LineSegment) -> intersection
    128:128:boolean isHorizontal() -> isHorizontal
    135:135:boolean isVertical() -> isVertical
    562:562:org.locationtech.jts.geom.Coordinate lineIntersection(org.locationtech.jts.geom.LineSegment) -> lineIntersection
    95:95:double maxX() -> maxX
    111:111:double maxY() -> maxY
    228:228:org.locationtech.jts.geom.Coordinate midPoint() -> midPoint
    238:238:org.locationtech.jts.geom.Coordinate midPoint(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> midPoint
    87:87:double minX() -> minX
    103:103:double minY() -> minY
    206:206:void normalize() -> normalize
    158:165:int orientationIndex(org.locationtech.jts.geom.LineSegment) -> orientationIndex
    184:184:int orientationIndex(org.locationtech.jts.geom.Coordinate) -> orientationIndex
    286:288:org.locationtech.jts.geom.Coordinate pointAlong(double) -> pointAlong
    311:332:org.locationtech.jts.geom.Coordinate pointAlongOffset(double,double) -> pointAlongOffset
    410:415:org.locationtech.jts.geom.Coordinate project(org.locationtech.jts.geom.Coordinate) -> project
    432:446:org.locationtech.jts.geom.LineSegment project(org.locationtech.jts.geom.LineSegment) -> project
    351:371:double projectionFactor(org.locationtech.jts.geom.Coordinate) -> projectionFactor
    192:194:void reverse() -> reverse
    392:395:double segmentFraction(org.locationtech.jts.geom.Coordinate) -> segmentFraction
    71:71:void setCoordinates(org.locationtech.jts.geom.LineSegment) -> setCoordinates
    76:79:void setCoordinates(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> setCoordinates
    579:579:org.locationtech.jts.geom.LineString toGeometry(org.locationtech.jts.geom.GeometryFactory) -> toGeometry
    650:650:java.lang.String toString() -> toString
org.locationtech.jts.geom.LineString -> org.locationtech.jts.geom.LineString:
    59:60:void <init>(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.PrecisionModel,int) -> <init>
    71:72:void <init>(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.GeometryFactory) -> <init>
    231:232:void apply(org.locationtech.jts.geom.CoordinateFilter) -> apply
    238:246:void apply(org.locationtech.jts.geom.CoordinateSequenceFilter) -> apply
    250:250:void apply(org.locationtech.jts.geom.GeometryFilter) -> apply
    254:254:void apply(org.locationtech.jts.geom.GeometryComponentFilter) -> apply
    265:265:java.lang.Object clone() -> clone
    299:314:int compareToSameClass(java.lang.Object) -> compareToSameClass
    322:323:int compareToSameClass(java.lang.Object,org.locationtech.jts.geom.CoordinateSequenceComparator) -> compareToSameClass
    208:211:org.locationtech.jts.geom.Envelope computeEnvelopeInternal() -> computeEnvelopeInternal
    34:34:org.locationtech.jts.geom.Geometry copyInternal() -> copyInternal
    269:269:org.locationtech.jts.geom.LineString copyInternal() -> copyInternal
    215:223:boolean equalsExact(org.locationtech.jts.geom.Geometry,double) -> equalsExact
    174:174:org.locationtech.jts.geom.Geometry getBoundary() -> getBoundary
    109:109:int getBoundaryDimension() -> getBoundaryDimension
    100:101:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    95:95:org.locationtech.jts.geom.Coordinate getCoordinateN(int) -> getCoordinateN
    91:91:org.locationtech.jts.geom.CoordinateSequence getCoordinateSequence() -> getCoordinateSequence
    87:87:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    0:0:int getDimension() -> getDimension
    135:138:org.locationtech.jts.geom.Point getEndPoint() -> getEndPoint
    0:0:java.lang.String getGeometryType() -> getGeometryType
    163:163:double getLength() -> getLength
    120:120:int getNumPoints() -> getNumPoints
    124:124:org.locationtech.jts.geom.Point getPointN(int) -> getPointN
    0:0:int getSortIndex() -> getSortIndex
    128:131:org.locationtech.jts.geom.Point getStartPoint() -> getStartPoint
    78:84:void init(org.locationtech.jts.geom.CoordinateSequence) -> init
    142:145:boolean isClosed() -> isClosed
    199:200:boolean isCoordinate(org.locationtech.jts.geom.Coordinate) -> isCoordinate
    116:116:boolean isEmpty() -> isEmpty
    294:294:boolean isEquivalentClass(org.locationtech.jts.geom.Geometry) -> isEquivalentClass
    149:149:boolean isRing() -> isRing
    279:286:void normalize() -> normalize
    185:187:org.locationtech.jts.geom.Geometry reverse() -> reverse
org.locationtech.jts.geom.LinearRing -> org.locationtech.jts.geom.LinearRing:
    58:59:void <init>(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.PrecisionModel,int) -> <init>
    69:69:void <init>(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.GeometryFactory) -> <init>
    84:85:void <init>(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.GeometryFactory) -> <init>
    31:31:org.locationtech.jts.geom.Geometry copyInternal() -> copyInternal
    31:31:org.locationtech.jts.geom.LineString copyInternal() -> copyInternal
    132:132:org.locationtech.jts.geom.LinearRing copyInternal() -> copyInternal
    0:0:int getBoundaryDimension() -> getBoundaryDimension
    0:0:java.lang.String getGeometryType() -> getGeometryType
    0:0:int getSortIndex() -> getSortIndex
    115:119:boolean isClosed() -> isClosed
    137:139:org.locationtech.jts.geom.Geometry reverse() -> reverse
    89:94:void validateConstruction() -> validateConstruction
org.locationtech.jts.geom.Location -> org.locationtech.jts.geom.Location:
    24:24:void <init>() -> <init>
    67:67:char toLocationSymbol(int) -> toLocationSymbol
org.locationtech.jts.geom.MultiLineString -> org.locationtech.jts.geom.MultiLineString:
    42:42:void <init>(org.locationtech.jts.geom.LineString[],org.locationtech.jts.geom.PrecisionModel,int) -> <init>
    55:55:void <init>(org.locationtech.jts.geom.LineString[],org.locationtech.jts.geom.GeometryFactory) -> <init>
    23:23:org.locationtech.jts.geom.Geometry copyInternal() -> copyInternal
    23:23:org.locationtech.jts.geom.GeometryCollection copyInternal() -> copyInternal
    117:121:org.locationtech.jts.geom.MultiLineString copyInternal() -> copyInternal
    125:128:boolean equalsExact(org.locationtech.jts.geom.Geometry,double) -> equalsExact
    94:94:org.locationtech.jts.geom.Geometry getBoundary() -> getBoundary
    63:63:int getBoundaryDimension() -> getBoundaryDimension
    0:0:int getDimension() -> getDimension
    0:0:java.lang.String getGeometryType() -> getGeometryType
    0:0:int getSortIndex() -> getSortIndex
    74:78:boolean isClosed() -> isClosed
    108:113:org.locationtech.jts.geom.Geometry reverse() -> reverse
org.locationtech.jts.geom.MultiPoint -> org.locationtech.jts.geom.MultiPoint:
    43:43:void <init>(org.locationtech.jts.geom.Point[],org.locationtech.jts.geom.PrecisionModel,int) -> <init>
    52:52:void <init>(org.locationtech.jts.geom.Point[],org.locationtech.jts.geom.GeometryFactory) -> <init>
    23:23:org.locationtech.jts.geom.Geometry copyInternal() -> copyInternal
    23:23:org.locationtech.jts.geom.GeometryCollection copyInternal() -> copyInternal
    102:106:org.locationtech.jts.geom.MultiPoint copyInternal() -> copyInternal
    84:87:boolean equalsExact(org.locationtech.jts.geom.Geometry,double) -> equalsExact
    76:76:org.locationtech.jts.geom.Geometry getBoundary() -> getBoundary
    0:0:int getBoundaryDimension() -> getBoundaryDimension
    98:98:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    0:0:int getDimension() -> getDimension
    0:0:java.lang.String getGeometryType() -> getGeometryType
    0:0:int getSortIndex() -> getSortIndex
    0:0:boolean isValid() -> isValid
org.locationtech.jts.geom.MultiPolygon -> org.locationtech.jts.geom.MultiPolygon:
    51:51:void <init>(org.locationtech.jts.geom.Polygon[],org.locationtech.jts.geom.PrecisionModel,int) -> <init>
    66:66:void <init>(org.locationtech.jts.geom.Polygon[],org.locationtech.jts.geom.GeometryFactory) -> <init>
    30:30:org.locationtech.jts.geom.Geometry copyInternal() -> copyInternal
    30:30:org.locationtech.jts.geom.GeometryCollection copyInternal() -> copyInternal
    134:138:org.locationtech.jts.geom.MultiPolygon copyInternal() -> copyInternal
    110:113:boolean equalsExact(org.locationtech.jts.geom.Geometry,double) -> equalsExact
    94:106:org.locationtech.jts.geom.Geometry getBoundary() -> getBoundary
    0:0:int getBoundaryDimension() -> getBoundaryDimension
    0:0:int getDimension() -> getDimension
    0:0:java.lang.String getGeometryType() -> getGeometryType
    0:0:int getSortIndex() -> getSortIndex
    125:130:org.locationtech.jts.geom.Geometry reverse() -> reverse
org.locationtech.jts.geom.OctagonalEnvelope -> org.locationtech.jts.geom.OctagonalEnvelope:
    45:45:void <clinit>() -> <clinit>
    48:61:void <init>() -> <init>
    48:71:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    48:83:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    48:91:void <init>(org.locationtech.jts.geom.Envelope) -> <init>
    48:100:void <init>(org.locationtech.jts.geom.OctagonalEnvelope) -> <init>
    48:108:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    0:0:double computeA(double,double) -> computeA
    0:0:double computeB(double,double) -> computeB
    280:282:boolean contains(org.locationtech.jts.geom.OctagonalEnvelope) -> contains
    216:230:void expandBy(double) -> expandBy
    132:132:void expandToInclude(org.locationtech.jts.geom.Geometry) -> expandToInclude
    137:140:org.locationtech.jts.geom.OctagonalEnvelope expandToInclude(org.locationtech.jts.geom.CoordinateSequence) -> expandToInclude
    147:167:org.locationtech.jts.geom.OctagonalEnvelope expandToInclude(org.locationtech.jts.geom.OctagonalEnvelope) -> expandToInclude
    173:173:org.locationtech.jts.geom.OctagonalEnvelope expandToInclude(org.locationtech.jts.geom.Coordinate) -> expandToInclude
    179:182:org.locationtech.jts.geom.OctagonalEnvelope expandToInclude(org.locationtech.jts.geom.Envelope) -> expandToInclude
    188:209:org.locationtech.jts.geom.OctagonalEnvelope expandToInclude(double,double) -> expandToInclude
    117:117:double getMaxA() -> getMaxA
    119:119:double getMaxB() -> getMaxB
    113:113:double getMaxX() -> getMaxX
    115:115:double getMaxY() -> getMaxY
    116:116:double getMinA() -> getMinA
    118:118:double getMinB() -> getMinB
    112:112:double getMinX() -> getMinX
    114:114:double getMinY() -> getMinY
    249:258:boolean intersects(org.locationtech.jts.geom.OctagonalEnvelope) -> intersects
    264:274:boolean intersects(org.locationtech.jts.geom.Coordinate) -> intersects
    121:121:boolean isNull() -> isNull
    240:241:boolean isValid() -> isValid
    32:32:org.locationtech.jts.geom.Geometry octagonalEnvelope(org.locationtech.jts.geom.Geometry) -> octagonalEnvelope
    127:127:void setToNull() -> setToNull
    294:340:org.locationtech.jts.geom.Geometry toGeometry(org.locationtech.jts.geom.GeometryFactory) -> toGeometry
org.locationtech.jts.geom.OctagonalEnvelope$BoundingOctagonComponentFilter -> org.locationtech.jts.geom.OctagonalEnvelope$BoundingOctagonComponentFilter:
    348:349:void <init>(org.locationtech.jts.geom.OctagonalEnvelope) -> <init>
    354:358:void filter(org.locationtech.jts.geom.Geometry) -> filter
org.locationtech.jts.geom.Point -> org.locationtech.jts.geom.Point:
    51:52:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.PrecisionModel,int) -> <init>
    61:62:void <init>(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.GeometryFactory) -> <init>
    157:158:void apply(org.locationtech.jts.geom.CoordinateFilter) -> apply
    163:167:void apply(org.locationtech.jts.geom.CoordinateSequenceFilter) -> apply
    171:171:void apply(org.locationtech.jts.geom.GeometryFilter) -> apply
    175:175:void apply(org.locationtech.jts.geom.GeometryComponentFilter) -> apply
    186:186:java.lang.Object clone() -> clone
    204:205:int compareToSameClass(java.lang.Object) -> compareToSameClass
    210:211:int compareToSameClass(java.lang.Object,org.locationtech.jts.geom.CoordinateSequenceComparator) -> compareToSameClass
    135:139:org.locationtech.jts.geom.Envelope computeEnvelopeInternal() -> computeEnvelopeInternal
    29:29:org.locationtech.jts.geom.Geometry copyInternal() -> copyInternal
    190:190:org.locationtech.jts.geom.Point copyInternal() -> copyInternal
    144:153:boolean equalsExact(org.locationtech.jts.geom.Geometry,double) -> equalsExact
    131:131:org.locationtech.jts.geom.Geometry getBoundary() -> getBoundary
    0:0:int getBoundaryDimension() -> getBoundaryDimension
    115:115:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    219:219:org.locationtech.jts.geom.CoordinateSequence getCoordinateSequence() -> getCoordinateSequence
    75:76:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    0:0:int getDimension() -> getDimension
    0:0:java.lang.String getGeometryType() -> getGeometryType
    81:81:int getNumPoints() -> getNumPoints
    0:0:int getSortIndex() -> getSortIndex
    101:104:double getX() -> getX
    108:111:double getY() -> getY
    68:71:void init(org.locationtech.jts.geom.CoordinateSequence) -> init
    85:85:boolean isEmpty() -> isEmpty
    0:0:boolean isSimple() -> isSimple
    0:0:void normalize() -> normalize
    195:195:org.locationtech.jts.geom.Geometry reverse() -> reverse
org.locationtech.jts.geom.Polygon -> org.locationtech.jts.geom.Polygon:
    81:81:void <init>(org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geom.PrecisionModel,int) -> <init>
    101:101:void <init>(org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geom.LinearRing[],org.locationtech.jts.geom.PrecisionModel,int) -> <init>
    59:130:void <init>(org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geom.LinearRing[],org.locationtech.jts.geom.GeometryFactory) -> <init>
    316:318:void apply(org.locationtech.jts.geom.CoordinateFilter) -> apply
    324:333:void apply(org.locationtech.jts.geom.CoordinateSequenceFilter) -> apply
    337:337:void apply(org.locationtech.jts.geom.GeometryFilter) -> apply
    341:344:void apply(org.locationtech.jts.geom.GeometryComponentFilter) -> apply
    357:357:java.lang.Object clone() -> clone
    382:384:int compareToSameClass(java.lang.Object) -> compareToSameClass
    388:401:int compareToSameClass(java.lang.Object,org.locationtech.jts.geom.CoordinateSequenceComparator) -> compareToSameClass
    291:291:org.locationtech.jts.geom.Envelope computeEnvelopeInternal() -> computeEnvelopeInternal
    370:370:org.locationtech.jts.geom.Geometry convexHull() -> convexHull
    48:48:org.locationtech.jts.geom.Geometry copyInternal() -> copyInternal
    361:366:org.locationtech.jts.geom.Polygon copyInternal() -> copyInternal
    295:308:boolean equalsExact(org.locationtech.jts.geom.Geometry,double) -> equalsExact
    247:249:double getArea() -> getArea
    276:287:org.locationtech.jts.geom.Geometry getBoundary() -> getBoundary
    0:0:int getBoundaryDimension() -> getBoundaryDimension
    134:134:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    138:152:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    0:0:int getDimension() -> getDimension
    224:224:org.locationtech.jts.geom.LineString getExteriorRing() -> getExteriorRing
    0:0:java.lang.String getGeometryType() -> getGeometryType
    232:232:org.locationtech.jts.geom.LineString getInteriorRingN(int) -> getInteriorRingN
    262:264:double getLength() -> getLength
    228:228:int getNumInteriorRing() -> getNumInteriorRing
    159:161:int getNumPoints() -> getNumPoints
    0:0:int getSortIndex() -> getSortIndex
    175:175:boolean isEmpty() -> isEmpty
    192:212:boolean isRectangle() -> isRectangle
    374:378:void normalize() -> normalize
    421:429:void normalize(org.locationtech.jts.geom.LinearRing,boolean) -> normalize
    415:416:org.locationtech.jts.geom.LinearRing normalized(org.locationtech.jts.geom.LinearRing,boolean) -> normalized
    433:437:org.locationtech.jts.geom.Geometry reverse() -> reverse
org.locationtech.jts.geom.PrecisionModel -> org.locationtech.jts.geom.PrecisionModel:
    117:129:void <clinit>() -> <clinit>
    152:154:void <init>() -> <init>
    165:169:void <init>(org.locationtech.jts.geom.PrecisionModel$Type) -> <init>
    184:186:void <init>(double,double,double) -> <init>
    196:198:void <init>(double) -> <init>
    204:206:void <init>(org.locationtech.jts.geom.PrecisionModel) -> <init>
    445:449:int compareTo(java.lang.Object) -> compareTo
    424:428:boolean equals(java.lang.Object) -> equals
    242:247:int getMaximumSignificantDigits() -> getMaximumSignificantDigits
    0:0:double getOffsetX() -> getOffsetX
    0:0:double getOffsetY() -> getOffsetY
    263:263:double getScale() -> getScale
    273:273:org.locationtech.jts.geom.PrecisionModel$Type getType() -> getType
    216:216:boolean isFloating() -> isFloating
    383:390:double makePrecise(double) -> makePrecise
    403:406:void makePrecise(org.locationtech.jts.geom.Coordinate) -> makePrecise
    82:82:org.locationtech.jts.geom.PrecisionModel mostPrecise(org.locationtech.jts.geom.PrecisionModel,org.locationtech.jts.geom.PrecisionModel) -> mostPrecise
    281:281:void setScale(double) -> setScale
    352:352:org.locationtech.jts.geom.Coordinate toExternal(org.locationtech.jts.geom.Coordinate) -> toExternal
    365:366:void toExternal(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> toExternal
    318:326:void toInternal(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> toInternal
    338:339:org.locationtech.jts.geom.Coordinate toInternal(org.locationtech.jts.geom.Coordinate) -> toInternal
    413:418:java.lang.String toString() -> toString
org.locationtech.jts.geom.PrecisionModel$Type -> org.locationtech.jts.geom.PrecisionModel$Type:
    96:96:void <clinit>() -> <clinit>
    97:99:void <init>(java.lang.String) -> <init>
    109:109:java.lang.Object readResolve() -> readResolve
    102:102:java.lang.String toString() -> toString
org.locationtech.jts.geom.TopologyException -> org.locationtech.jts.geom.TopologyException:
    32:36:void <init>(java.lang.String) -> <init>
    32:42:void <init>(java.lang.String,org.locationtech.jts.geom.Coordinate) -> <init>
    45:45:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    28:28:java.lang.String msgWithCoord(java.lang.String,org.locationtech.jts.geom.Coordinate) -> msgWithCoord
org.locationtech.jts.geom.Triangle -> org.locationtech.jts.geom.Triangle:
    417:420:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    267:273:org.locationtech.jts.geom.Coordinate angleBisector(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> angleBisector
    292:293:double area(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> area
    507:507:double area() -> area
    344:359:double area3D(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> area3D
    536:536:double area3D() -> area3D
    218:220:org.locationtech.jts.geom.Coordinate centroid(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> centroid
    484:484:org.locationtech.jts.geom.Coordinate centroid() -> centroid
    133:147:org.locationtech.jts.geom.Coordinate circumcentre(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> circumcentre
    469:469:org.locationtech.jts.geom.Coordinate circumcentre() -> circumcentre
    0:0:double det(double,double,double,double) -> det
    189:196:org.locationtech.jts.geom.Coordinate inCentre(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> inCentre
    434:434:org.locationtech.jts.geom.Coordinate inCentre() -> inCentre
    386:397:double interpolateZ(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> interpolateZ
    555:556:double interpolateZ(org.locationtech.jts.geom.Coordinate) -> interpolateZ
    45:49:boolean isAcute(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isAcute
    449:449:boolean isAcute() -> isAcute
    237:239:double longestSideLength(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> longestSideLength
    494:494:double longestSideLength() -> longestSideLength
    67:72:org.locationtech.jts.algorithm.HCoordinate perpendicularBisector(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> perpendicularBisector
    322:322:double signedArea(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> signedArea
    525:525:double signedArea() -> signedArea
org.locationtech.jts.geom.impl.CoordinateArraySequence -> org.locationtech.jts.geom.impl.CoordinateArraySequence:
    61:61:void <init>(org.locationtech.jts.geom.Coordinate[]) -> <init>
    73:73:void <init>(org.locationtech.jts.geom.Coordinate[],int) -> <init>
    85:92:void <init>(org.locationtech.jts.geom.Coordinate[],int,int) -> <init>
    42:105:void <init>(int) -> <init>
    42:120:void <init>(int,int) -> <init>
    42:135:void <init>(int,int,int) -> <init>
    42:157:void <init>(org.locationtech.jts.geom.CoordinateSequence) -> <init>
    306:306:java.lang.Object clone() -> clone
    32:32:org.locationtech.jts.geom.CoordinateSequence copy() -> copy
    314:320:org.locationtech.jts.geom.impl.CoordinateArraySequence copy() -> copy
    0:0:org.locationtech.jts.geom.Coordinate createCoordinate() -> createCoordinate
      # {"id":"com.android.tools.r8.synthesized"}
    171:195:org.locationtech.jts.geom.Coordinate[] enforceArrayConsistency(org.locationtech.jts.geom.Coordinate[]) -> enforceArrayConsistency
    359:360:org.locationtech.jts.geom.Envelope expandEnvelope(org.locationtech.jts.geom.Envelope) -> expandEnvelope
    225:225:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    244:244:void getCoordinate(int,org.locationtech.jts.geom.Coordinate) -> getCoordinate
    235:236:org.locationtech.jts.geom.Coordinate getCoordinateCopy(int) -> getCoordinateCopy
    208:208:int getDimension() -> getDimension
    278:279:double getM(int) -> getM
    214:214:int getMeasures() -> getMeasures
    292:295:double getOrdinate(int,int) -> getOrdinate
    251:251:double getX(int) -> getX
    258:258:double getY(int) -> getY
    266:267:double getZ(int) -> getZ
    0:0:boolean hasM() -> hasM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean hasZ() -> hasZ
      # {"id":"com.android.tools.r8.synthesized"}
    338:344:void setOrdinate(int,int,double) -> setOrdinate
    328:328:int size() -> size
    354:354:org.locationtech.jts.geom.Coordinate[] toCoordinateArray() -> toCoordinateArray
    371:380:java.lang.String toString() -> toString
org.locationtech.jts.geom.impl.CoordinateArraySequenceFactory -> org.locationtech.jts.geom.impl.CoordinateArraySequenceFactory:
    29:29:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    55:55:org.locationtech.jts.geom.CoordinateSequence create(org.locationtech.jts.geom.Coordinate[]) -> create
    62:62:org.locationtech.jts.geom.CoordinateSequence create(org.locationtech.jts.geom.CoordinateSequence) -> create
    80:80:org.locationtech.jts.geom.CoordinateSequence create(int,int) -> create
    98:98:org.locationtech.jts.geom.CoordinateSequence create(int,int,int) -> create
    43:43:org.locationtech.jts.geom.impl.CoordinateArraySequenceFactory instance() -> instance
    36:36:java.lang.Object readResolve() -> readResolve
org.locationtech.jts.geom.impl.PackedCoordinateSequence -> org.locationtech.jts.geom.impl.PackedCoordinateSequence:
    55:60:void <init>(int,int) -> <init>
    41:41:org.locationtech.jts.geom.CoordinateSequence copy() -> copy
    0:0:org.locationtech.jts.geom.Coordinate createCoordinate() -> createCoordinate
      # {"id":"com.android.tools.r8.synthesized"}
    133:139:org.locationtech.jts.geom.Coordinate[] getCachedCoords() -> getCachedCoords
    84:88:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    101:107:void getCoordinate(int,org.locationtech.jts.geom.Coordinate) -> getCoordinate
    94:94:org.locationtech.jts.geom.Coordinate getCoordinateCopy(int) -> getCoordinateCopy
    73:73:int getDimension() -> getDimension
    0:0:double getM(int) -> getM
      # {"id":"com.android.tools.r8.synthesized"}
    78:78:int getMeasures() -> getMeasures
    153:153:double getX(int) -> getX
    160:160:double getY(int) -> getY
    0:0:double getZ(int) -> getZ
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean hasM() -> hasM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean hasZ() -> hasZ
      # {"id":"com.android.tools.r8.synthesized"}
    196:196:java.lang.Object readResolve() -> readResolve
    175:176:void setX(int,double) -> setX
    186:187:void setY(int,double) -> setY
    115:124:org.locationtech.jts.geom.Coordinate[] toCoordinateArray() -> toCoordinateArray
    192:192:java.lang.String toString() -> toString
org.locationtech.jts.geom.impl.PackedCoordinateSequence$Double -> org.locationtech.jts.geom.impl.PackedCoordinateSequence$Double:
    251:256:void <init>(double[],int,int) -> <init>
    267:270:void <init>(float[],int,int) -> <init>
    281:281:void <init>(org.locationtech.jts.geom.Coordinate[],int) -> <init>
    291:303:void <init>(org.locationtech.jts.geom.Coordinate[],int,int) -> <init>
    312:312:void <init>(org.locationtech.jts.geom.Coordinate[]) -> <init>
    319:320:void <init>(int,int,int) -> <init>
    370:370:java.lang.Object clone() -> clone
    236:236:org.locationtech.jts.geom.CoordinateSequence copy() -> copy
    236:236:org.locationtech.jts.geom.impl.PackedCoordinateSequence copy() -> copy
    374:375:org.locationtech.jts.geom.impl.PackedCoordinateSequence$Double copy() -> copy
    399:400:org.locationtech.jts.geom.Envelope expandEnvelope(org.locationtech.jts.geom.Envelope) -> expandEnvelope
    327:345:org.locationtech.jts.geom.Coordinate getCoordinateInternal(int) -> getCoordinateInternal
    385:385:double getOrdinate(int,int) -> getOrdinate
    355:355:double[] getRawCoordinates() -> getRawCoordinates
    393:394:void setOrdinate(int,int,double) -> setOrdinate
    362:362:int size() -> size
org.locationtech.jts.geom.impl.PackedCoordinateSequence$Float -> org.locationtech.jts.geom.impl.PackedCoordinateSequence$Float:
    423:428:void <init>(float[],int,int) -> <init>
    438:442:void <init>(double[],int,int) -> <init>
    453:453:void <init>(org.locationtech.jts.geom.Coordinate[],int) -> <init>
    462:472:void <init>(org.locationtech.jts.geom.Coordinate[],int,int) -> <init>
    480:481:void <init>(int,int,int) -> <init>
    531:531:java.lang.Object clone() -> clone
    409:409:org.locationtech.jts.geom.CoordinateSequence copy() -> copy
    409:409:org.locationtech.jts.geom.impl.PackedCoordinateSequence copy() -> copy
    535:536:org.locationtech.jts.geom.impl.PackedCoordinateSequence$Float copy() -> copy
    560:561:org.locationtech.jts.geom.Envelope expandEnvelope(org.locationtech.jts.geom.Envelope) -> expandEnvelope
    488:506:org.locationtech.jts.geom.Coordinate getCoordinateInternal(int) -> getCoordinateInternal
    546:546:double getOrdinate(int,int) -> getOrdinate
    516:516:float[] getRawCoordinates() -> getRawCoordinates
    554:555:void setOrdinate(int,int,double) -> setOrdinate
    523:523:int size() -> size
org.locationtech.jts.geom.impl.PackedCoordinateSequenceFactory -> org.locationtech.jts.geom.impl.PackedCoordinateSequenceFactory:
    33:36:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    56:57:void <init>(int) -> <init>
    75:83:org.locationtech.jts.geom.CoordinateSequence create(org.locationtech.jts.geom.Coordinate[]) -> create
    91:96:org.locationtech.jts.geom.CoordinateSequence create(org.locationtech.jts.geom.CoordinateSequence) -> create
    108:108:org.locationtech.jts.geom.CoordinateSequence create(double[],int) -> create
    120:123:org.locationtech.jts.geom.CoordinateSequence create(double[],int,int) -> create
    134:134:org.locationtech.jts.geom.CoordinateSequence create(float[],int) -> create
    144:147:org.locationtech.jts.geom.CoordinateSequence create(float[],int,int) -> create
    155:158:org.locationtech.jts.geom.CoordinateSequence create(int,int) -> create
    166:169:org.locationtech.jts.geom.CoordinateSequence create(int,int,int) -> create
    66:66:int getType() -> getType
org.locationtech.jts.geom.prep.AbstractPreparedPolygonContains -> org.locationtech.jts.geom.prep.AbstractPreparedPolygonContains:
    53:67:void <init>(org.locationtech.jts.geom.prep.PreparedPolygon) -> <init>
    85:161:boolean eval(org.locationtech.jts.geom.Geometry) -> eval
    206:214:void findAndClassifyIntersections(org.locationtech.jts.geom.Geometry) -> findAndClassifyIntersections
    178:184:boolean isProperIntersectionImpliesNotContainedSituation(org.locationtech.jts.geom.Geometry) -> isProperIntersectionImpliesNotContainedSituation
    196:199:boolean isSingleShell(org.locationtech.jts.geom.Geometry) -> isSingleShell
org.locationtech.jts.geom.prep.BasicPreparedGeometry -> org.locationtech.jts.geom.prep.BasicPreparedGeometry:
    41:43:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    116:116:boolean contains(org.locationtech.jts.geom.Geometry) -> contains
    127:131:boolean containsProperly(org.locationtech.jts.geom.Geometry) -> containsProperly
    139:139:boolean coveredBy(org.locationtech.jts.geom.Geometry) -> coveredBy
    147:147:boolean covers(org.locationtech.jts.geom.Geometry) -> covers
    155:155:boolean crosses(org.locationtech.jts.geom.Geometry) -> crosses
    164:164:boolean disjoint(org.locationtech.jts.geom.Geometry) -> disjoint
    106:106:boolean envelopeCovers(org.locationtech.jts.geom.Geometry) -> envelopeCovers
    91:91:boolean envelopesIntersect(org.locationtech.jts.geom.Geometry) -> envelopesIntersect
    46:46:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    60:60:java.util.List getRepresentativePoints() -> getRepresentativePoints
    172:172:boolean intersects(org.locationtech.jts.geom.Geometry) -> intersects
    73:76:boolean isAnyTargetComponentInTest(org.locationtech.jts.geom.Geometry) -> isAnyTargetComponentInTest
    180:180:boolean overlaps(org.locationtech.jts.geom.Geometry) -> overlaps
    201:201:java.lang.String toString() -> toString
    188:188:boolean touches(org.locationtech.jts.geom.Geometry) -> touches
    196:196:boolean within(org.locationtech.jts.geom.Geometry) -> within
org.locationtech.jts.geom.prep.PreparedGeometryFactory -> org.locationtech.jts.geom.prep.PreparedGeometryFactory:
    44:44:void <init>() -> <init>
    55:65:org.locationtech.jts.geom.prep.PreparedGeometry create(org.locationtech.jts.geom.Geometry) -> create
    41:41:org.locationtech.jts.geom.prep.PreparedGeometry prepare(org.locationtech.jts.geom.Geometry) -> prepare
org.locationtech.jts.geom.prep.PreparedLineString -> org.locationtech.jts.geom.prep.PreparedLineString:
    30:33:void <init>(org.locationtech.jts.geom.Lineal) -> <init>
    27:27:boolean contains(org.locationtech.jts.geom.Geometry) -> contains
    27:27:boolean containsProperly(org.locationtech.jts.geom.Geometry) -> containsProperly
    27:27:boolean coveredBy(org.locationtech.jts.geom.Geometry) -> coveredBy
    27:27:boolean covers(org.locationtech.jts.geom.Geometry) -> covers
    27:27:boolean crosses(org.locationtech.jts.geom.Geometry) -> crosses
    27:27:boolean disjoint(org.locationtech.jts.geom.Geometry) -> disjoint
    27:27:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    44:46:org.locationtech.jts.noding.FastSegmentSetIntersectionFinder getIntersectionFinder() -> getIntersectionFinder
    27:27:java.util.List getRepresentativePoints() -> getRepresentativePoints
    51:52:boolean intersects(org.locationtech.jts.geom.Geometry) -> intersects
    27:27:boolean isAnyTargetComponentInTest(org.locationtech.jts.geom.Geometry) -> isAnyTargetComponentInTest
    27:27:boolean overlaps(org.locationtech.jts.geom.Geometry) -> overlaps
    27:27:java.lang.String toString() -> toString
    27:27:boolean touches(org.locationtech.jts.geom.Geometry) -> touches
    27:27:boolean within(org.locationtech.jts.geom.Geometry) -> within
org.locationtech.jts.geom.prep.PreparedLineStringIntersects -> org.locationtech.jts.geom.prep.PreparedLineStringIntersects:
    57:58:void <init>(org.locationtech.jts.geom.prep.PreparedLineString) -> <init>
    45:46:boolean intersects(org.locationtech.jts.geom.prep.PreparedLineString,org.locationtech.jts.geom.Geometry) -> intersects
    72:96:boolean intersects(org.locationtech.jts.geom.Geometry) -> intersects
    115:119:boolean isAnyTestPointInTarget(org.locationtech.jts.geom.Geometry) -> isAnyTestPointInTarget
org.locationtech.jts.geom.prep.PreparedPoint -> org.locationtech.jts.geom.prep.PreparedPoint:
    30:30:void <init>(org.locationtech.jts.geom.Puntal) -> <init>
    26:26:boolean contains(org.locationtech.jts.geom.Geometry) -> contains
    26:26:boolean containsProperly(org.locationtech.jts.geom.Geometry) -> containsProperly
    26:26:boolean coveredBy(org.locationtech.jts.geom.Geometry) -> coveredBy
    26:26:boolean covers(org.locationtech.jts.geom.Geometry) -> covers
    26:26:boolean crosses(org.locationtech.jts.geom.Geometry) -> crosses
    26:26:boolean disjoint(org.locationtech.jts.geom.Geometry) -> disjoint
    26:26:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    26:26:java.util.List getRepresentativePoints() -> getRepresentativePoints
    41:46:boolean intersects(org.locationtech.jts.geom.Geometry) -> intersects
    26:26:boolean isAnyTargetComponentInTest(org.locationtech.jts.geom.Geometry) -> isAnyTargetComponentInTest
    26:26:boolean overlaps(org.locationtech.jts.geom.Geometry) -> overlaps
    26:26:java.lang.String toString() -> toString
    26:26:boolean touches(org.locationtech.jts.geom.Geometry) -> touches
    26:26:boolean within(org.locationtech.jts.geom.Geometry) -> within
org.locationtech.jts.geom.prep.PreparedPolygon -> org.locationtech.jts.geom.prep.PreparedPolygon:
    43:48:void <init>(org.locationtech.jts.geom.Polygonal) -> <init>
    93:101:boolean contains(org.locationtech.jts.geom.Geometry) -> contains
    107:109:boolean containsProperly(org.locationtech.jts.geom.Geometry) -> containsProperly
    38:38:boolean coveredBy(org.locationtech.jts.geom.Geometry) -> coveredBy
    115:121:boolean covers(org.locationtech.jts.geom.Geometry) -> covers
    38:38:boolean crosses(org.locationtech.jts.geom.Geometry) -> crosses
    38:38:boolean disjoint(org.locationtech.jts.geom.Geometry) -> disjoint
    38:38:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    64:66:org.locationtech.jts.noding.FastSegmentSetIntersectionFinder getIntersectionFinder() -> getIntersectionFinder
    71:74:org.locationtech.jts.algorithm.locate.PointOnGeometryLocator getPointLocator() -> getPointLocator
    38:38:java.util.List getRepresentativePoints() -> getRepresentativePoints
    80:87:boolean intersects(org.locationtech.jts.geom.Geometry) -> intersects
    38:38:boolean isAnyTargetComponentInTest(org.locationtech.jts.geom.Geometry) -> isAnyTargetComponentInTest
    38:38:boolean overlaps(org.locationtech.jts.geom.Geometry) -> overlaps
    38:38:java.lang.String toString() -> toString
    38:38:boolean touches(org.locationtech.jts.geom.Geometry) -> touches
    38:38:boolean within(org.locationtech.jts.geom.Geometry) -> within
org.locationtech.jts.geom.prep.PreparedPolygonContains -> org.locationtech.jts.geom.prep.PreparedPolygonContains:
    53:53:void <init>(org.locationtech.jts.geom.prep.PreparedPolygon) -> <init>
    42:43:boolean contains(org.locationtech.jts.geom.prep.PreparedPolygon,org.locationtech.jts.geom.Geometry) -> contains
    64:64:boolean contains(org.locationtech.jts.geom.Geometry) -> contains
    76:76:boolean fullTopologicalPredicate(org.locationtech.jts.geom.Geometry) -> fullTopologicalPredicate
org.locationtech.jts.geom.prep.PreparedPolygonContainsProperly -> org.locationtech.jts.geom.prep.PreparedPolygonContainsProperly:
    63:63:void <init>(org.locationtech.jts.geom.prep.PreparedPolygon) -> <init>
    52:53:boolean containsProperly(org.locationtech.jts.geom.prep.PreparedPolygon,org.locationtech.jts.geom.Geometry) -> containsProperly
    80:98:boolean containsProperly(org.locationtech.jts.geom.Geometry) -> containsProperly
org.locationtech.jts.geom.prep.PreparedPolygonCovers -> org.locationtech.jts.geom.prep.PreparedPolygonCovers:
    52:53:void <init>(org.locationtech.jts.geom.prep.PreparedPolygon) -> <init>
    41:42:boolean covers(org.locationtech.jts.geom.prep.PreparedPolygon,org.locationtech.jts.geom.Geometry) -> covers
    64:64:boolean covers(org.locationtech.jts.geom.Geometry) -> covers
    76:76:boolean fullTopologicalPredicate(org.locationtech.jts.geom.Geometry) -> fullTopologicalPredicate
org.locationtech.jts.geom.prep.PreparedPolygonIntersects -> org.locationtech.jts.geom.prep.PreparedPolygonIntersects:
    51:51:void <init>(org.locationtech.jts.geom.prep.PreparedPolygon) -> <init>
    40:41:boolean intersects(org.locationtech.jts.geom.prep.PreparedPolygon,org.locationtech.jts.geom.Geometry) -> intersects
    68:98:boolean intersects(org.locationtech.jts.geom.Geometry) -> intersects
org.locationtech.jts.geom.prep.PreparedPolygonPredicate -> org.locationtech.jts.geom.prep.PreparedPolygonPredicate:
    43:45:void <init>(org.locationtech.jts.geom.prep.PreparedPolygon) -> <init>
    58:61:boolean isAllTestComponentsInTarget(org.locationtech.jts.geom.Geometry) -> isAllTestComponentsInTarget
    78:81:boolean isAllTestComponentsInTargetInterior(org.locationtech.jts.geom.Geometry) -> isAllTestComponentsInTargetInterior
    139:142:boolean isAnyTargetComponentInAreaTest(org.locationtech.jts.geom.Geometry,java.util.List) -> isAnyTargetComponentInAreaTest
    98:101:boolean isAnyTestComponentInTarget(org.locationtech.jts.geom.Geometry) -> isAnyTestComponentInTarget
    118:121:boolean isAnyTestComponentInTargetInterior(org.locationtech.jts.geom.Geometry) -> isAnyTestComponentInTargetInterior
org.locationtech.jts.geom.util.AffineTransformation -> org.locationtech.jts.geom.util.AffineTransformation:
    254:255:void <init>() -> <init>
    267:273:void <init>(double[]) -> <init>
    293:294:void <init>(double,double,double,double,double,double) -> <init>
    304:305:void <init>(org.locationtech.jts.geom.util.AffineTransformation) -> <init>
    327:327:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    1091:1093:java.lang.Object clone() -> clone
    911:922:org.locationtech.jts.geom.util.AffineTransformation compose(org.locationtech.jts.geom.util.AffineTransformation) -> compose
    942:953:org.locationtech.jts.geom.util.AffineTransformation composeBefore(org.locationtech.jts.geom.util.AffineTransformation) -> composeBefore
    1054:1058:boolean equals(java.lang.Object) -> equals
    1012:1012:void filter(org.locationtech.jts.geom.CoordinateSequence,int) -> filter
    421:421:double getDeterminant() -> getDeterminant
    466:477:org.locationtech.jts.geom.util.AffineTransformation getInverse() -> getInverse
    400:400:double[] getMatrixEntries() -> getMatrixEntries
    0:0:boolean isDone() -> isDone
    0:0:boolean isGeometryChanged() -> isGeometryChanged
    1038:1038:boolean isIdentity() -> isIdentity
    762:762:org.locationtech.jts.geom.util.AffineTransformation reflect(double,double,double,double) -> reflect
    777:777:org.locationtech.jts.geom.util.AffineTransformation reflect(double,double) -> reflect
    91:92:org.locationtech.jts.geom.util.AffineTransformation reflectionInstance(double,double,double,double) -> reflectionInstance
    106:107:org.locationtech.jts.geom.util.AffineTransformation reflectionInstance(double,double) -> reflectionInstance
    793:793:org.locationtech.jts.geom.util.AffineTransformation rotate(double) -> rotate
    809:809:org.locationtech.jts.geom.util.AffineTransformation rotate(double,double) -> rotate
    827:827:org.locationtech.jts.geom.util.AffineTransformation rotate(double,double,double) -> rotate
    845:845:org.locationtech.jts.geom.util.AffineTransformation rotate(double,double,double,double) -> rotate
    123:123:org.locationtech.jts.geom.util.AffineTransformation rotationInstance(double) -> rotationInstance
    139:140:org.locationtech.jts.geom.util.AffineTransformation rotationInstance(double,double) -> rotationInstance
    157:157:org.locationtech.jts.geom.util.AffineTransformation rotationInstance(double,double,double) -> rotationInstance
    175:176:org.locationtech.jts.geom.util.AffineTransformation rotationInstance(double,double,double,double) -> rotationInstance
    860:860:org.locationtech.jts.geom.util.AffineTransformation scale(double,double) -> scale
    189:190:org.locationtech.jts.geom.util.AffineTransformation scaleInstance(double,double) -> scaleInstance
    205:208:org.locationtech.jts.geom.util.AffineTransformation scaleInstance(double,double,double,double) -> scaleInstance
    342:343:org.locationtech.jts.geom.util.AffineTransformation setToIdentity() -> setToIdentity
    518:535:org.locationtech.jts.geom.util.AffineTransformation setToReflection(double,double,double,double) -> setToReflection
    559:584:org.locationtech.jts.geom.util.AffineTransformation setToReflection(double,double) -> setToReflection
    491:501:org.locationtech.jts.geom.util.AffineTransformation setToReflectionBasic(double,double,double,double) -> setToReflectionBasic
    606:606:org.locationtech.jts.geom.util.AffineTransformation setToRotation(double) -> setToRotation
    627:628:org.locationtech.jts.geom.util.AffineTransformation setToRotation(double,double) -> setToRotation
    653:653:org.locationtech.jts.geom.util.AffineTransformation setToRotation(double,double,double) -> setToRotation
    678:679:org.locationtech.jts.geom.util.AffineTransformation setToRotation(double,double,double,double) -> setToRotation
    699:700:org.locationtech.jts.geom.util.AffineTransformation setToScale(double,double) -> setToScale
    724:725:org.locationtech.jts.geom.util.AffineTransformation setToShear(double,double) -> setToShear
    744:745:org.locationtech.jts.geom.util.AffineTransformation setToTranslation(double,double) -> setToTranslation
    365:370:org.locationtech.jts.geom.util.AffineTransformation setTransformation(double,double,double,double,double,double) -> setTransformation
    382:383:org.locationtech.jts.geom.util.AffineTransformation setTransformation(org.locationtech.jts.geom.util.AffineTransformation) -> setTransformation
    875:875:org.locationtech.jts.geom.util.AffineTransformation shear(double,double) -> shear
    222:223:org.locationtech.jts.geom.util.AffineTransformation shearInstance(double,double) -> shearInstance
    1078:1078:java.lang.String toString() -> toString
    968:971:org.locationtech.jts.geom.Coordinate transform(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> transform
    984:985:org.locationtech.jts.geom.Geometry transform(org.locationtech.jts.geom.Geometry) -> transform
    998:1001:void transform(org.locationtech.jts.geom.CoordinateSequence,int) -> transform
    890:890:org.locationtech.jts.geom.util.AffineTransformation translate(double,double) -> translate
    236:237:org.locationtech.jts.geom.util.AffineTransformation translationInstance(double,double) -> translationInstance
org.locationtech.jts.geom.util.AffineTransformationBuilder -> org.locationtech.jts.geom.util.AffineTransformationBuilder:
    74:80:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    109:121:boolean compute() -> compute
    93:95:org.locationtech.jts.geom.util.AffineTransformation getTransformation() -> getTransformation
    134:139:double[] solve(double[]) -> solve
org.locationtech.jts.geom.util.AffineTransformationFactory -> org.locationtech.jts.geom.util.AffineTransformationFactory:
    25:25:void <init>() -> <init>
    156:173:org.locationtech.jts.geom.util.AffineTransformation createFromBaseLines(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> createFromBaseLines
    43:45:org.locationtech.jts.geom.util.AffineTransformation createFromControlVectors(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> createFromControlVectors
    64:80:org.locationtech.jts.geom.util.AffineTransformation createFromControlVectors(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> createFromControlVectors
    98:100:org.locationtech.jts.geom.util.AffineTransformation createFromControlVectors(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> createFromControlVectors
    118:131:org.locationtech.jts.geom.util.AffineTransformation createFromControlVectors(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate[]) -> createFromControlVectors
org.locationtech.jts.geom.util.ComponentCoordinateExtracter -> org.locationtech.jts.geom.util.ComponentCoordinateExtracter:
    56:57:void <init>(java.util.List) -> <init>
    63:65:void filter(org.locationtech.jts.geom.Geometry) -> filter
    45:46:java.util.List getCoordinates(org.locationtech.jts.geom.Geometry) -> getCoordinates
org.locationtech.jts.geom.util.GeometryCollectionMapper -> org.locationtech.jts.geom.util.GeometryCollectionMapper:
    41:42:void <init>(org.locationtech.jts.geom.util.GeometryMapper$MapOp) -> <init>
    35:36:org.locationtech.jts.geom.GeometryCollection map(org.locationtech.jts.geom.GeometryCollection,org.locationtech.jts.geom.util.GeometryMapper$MapOp) -> map
    47:54:org.locationtech.jts.geom.GeometryCollection map(org.locationtech.jts.geom.GeometryCollection) -> map
org.locationtech.jts.geom.util.GeometryCombiner -> org.locationtech.jts.geom.util.GeometryCombiner:
    111:122:void <init>(java.util.Collection) -> <init>
    48:49:org.locationtech.jts.geom.Geometry combine(java.util.Collection) -> combine
    61:62:org.locationtech.jts.geom.Geometry combine(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> combine
    75:76:org.locationtech.jts.geom.Geometry combine(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> combine
    145:159:org.locationtech.jts.geom.Geometry combine() -> combine
    88:90:java.util.List createList(java.lang.Object,java.lang.Object) -> createList
    103:106:java.util.List createList(java.lang.Object,java.lang.Object,java.lang.Object) -> createList
    167:171:void extractElements(org.locationtech.jts.geom.Geometry,java.util.List) -> extractElements
    132:134:org.locationtech.jts.geom.GeometryFactory extractFactory(java.util.Collection) -> extractFactory
org.locationtech.jts.geom.util.GeometryEditor -> org.locationtech.jts.geom.util.GeometryEditor:
    86:94:void <init>() -> <init>
    87:105:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    133:135:org.locationtech.jts.geom.Geometry edit(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.util.GeometryEditor$GeometryEditorOperation) -> edit
    201:226:org.locationtech.jts.geom.GeometryCollection editGeometryCollection(org.locationtech.jts.geom.GeometryCollection,org.locationtech.jts.geom.util.GeometryEditor$GeometryEditorOperation) -> editGeometryCollection
    143:163:org.locationtech.jts.geom.Geometry editInternal(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.util.GeometryEditor$GeometryEditorOperation) -> editInternal
    169:194:org.locationtech.jts.geom.Polygon editPolygon(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.util.GeometryEditor$GeometryEditorOperation) -> editPolygon
    116:116:void setCopyUserData(boolean) -> setCopyUserData
org.locationtech.jts.geom.util.GeometryEditor$CoordinateOperation -> org.locationtech.jts.geom.util.GeometryEditor$CoordinateOperation:
    277:277:void <init>() -> <init>
    281:295:org.locationtech.jts.geom.Geometry edit(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.GeometryFactory) -> edit
org.locationtech.jts.geom.util.GeometryEditor$CoordinateSequenceOperation -> org.locationtech.jts.geom.util.GeometryEditor$CoordinateSequenceOperation:
    322:322:void <init>() -> <init>
    326:340:org.locationtech.jts.geom.Geometry edit(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.GeometryFactory) -> edit
org.locationtech.jts.geom.util.GeometryEditor$NoOpGeometryOperation -> org.locationtech.jts.geom.util.GeometryEditor$NoOpGeometryOperation:
    264:264:void <init>() -> <init>
    0:0:org.locationtech.jts.geom.Geometry edit(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.GeometryFactory) -> edit
org.locationtech.jts.geom.util.GeometryExtracter -> org.locationtech.jts.geom.util.GeometryExtracter:
    78:80:void <init>(java.lang.Class,java.util.List) -> <init>
    46:50:java.util.List extract(org.locationtech.jts.geom.Geometry,java.lang.Class,java.util.List) -> extract
    65:65:java.util.List extract(org.locationtech.jts.geom.Geometry,java.lang.Class) -> extract
    85:85:void filter(org.locationtech.jts.geom.Geometry) -> filter
    33:33:boolean isOfClass(java.lang.Object,java.lang.Class) -> isOfClass
org.locationtech.jts.geom.util.GeometryMapper -> org.locationtech.jts.geom.util.GeometryMapper:
    30:30:void <init>() -> <init>
    46:52:org.locationtech.jts.geom.Geometry map(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.util.GeometryMapper$MapOp) -> map
    57:62:java.util.Collection map(java.util.Collection,org.locationtech.jts.geom.util.GeometryMapper$MapOp) -> map
org.locationtech.jts.geom.util.GeometryTransformer -> org.locationtech.jts.geom.util.GeometryTransformer:
    78:103:void <init>() -> <init>
    157:157:org.locationtech.jts.geom.CoordinateSequence copy(org.locationtech.jts.geom.CoordinateSequence) -> copy
    147:147:org.locationtech.jts.geom.CoordinateSequence createCoordinateSequence(org.locationtech.jts.geom.Coordinate[]) -> createCoordinateSequence
    111:111:org.locationtech.jts.geom.Geometry getInputGeometry() -> getInputGeometry
    115:135:org.locationtech.jts.geom.Geometry transform(org.locationtech.jts.geom.Geometry) -> transform
    174:174:org.locationtech.jts.geom.CoordinateSequence transformCoordinates(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry) -> transformCoordinates
    285:294:org.locationtech.jts.geom.Geometry transformGeometryCollection(org.locationtech.jts.geom.GeometryCollection,org.locationtech.jts.geom.Geometry) -> transformGeometryCollection
    226:227:org.locationtech.jts.geom.Geometry transformLineString(org.locationtech.jts.geom.LineString,org.locationtech.jts.geom.Geometry) -> transformLineString
    207:214:org.locationtech.jts.geom.Geometry transformLinearRing(org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geom.Geometry) -> transformLinearRing
    231:238:org.locationtech.jts.geom.Geometry transformMultiLineString(org.locationtech.jts.geom.MultiLineString,org.locationtech.jts.geom.Geometry) -> transformMultiLineString
    183:190:org.locationtech.jts.geom.Geometry transformMultiPoint(org.locationtech.jts.geom.MultiPoint,org.locationtech.jts.geom.Geometry) -> transformMultiPoint
    274:281:org.locationtech.jts.geom.Geometry transformMultiPolygon(org.locationtech.jts.geom.MultiPolygon,org.locationtech.jts.geom.Geometry) -> transformMultiPolygon
    178:179:org.locationtech.jts.geom.Geometry transformPoint(org.locationtech.jts.geom.Point,org.locationtech.jts.geom.Geometry) -> transformPoint
    243:269:org.locationtech.jts.geom.Geometry transformPolygon(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.Geometry) -> transformPolygon
org.locationtech.jts.geom.util.LineStringExtracter -> org.locationtech.jts.geom.util.LineStringExtracter:
    84:85:void <init>(java.util.List) -> <init>
    90:90:void filter(org.locationtech.jts.geom.Geometry) -> filter
    75:75:org.locationtech.jts.geom.Geometry getGeometry(org.locationtech.jts.geom.Geometry) -> getGeometry
    43:47:java.util.List getLines(org.locationtech.jts.geom.Geometry,java.util.List) -> getLines
    63:63:java.util.List getLines(org.locationtech.jts.geom.Geometry) -> getLines
org.locationtech.jts.geom.util.LinearComponentExtracter -> org.locationtech.jts.geom.util.LinearComponentExtracter:
    165:172:void <init>(java.util.Collection) -> <init>
    179:181:void <init>(java.util.Collection,boolean) -> <init>
    197:204:void filter(org.locationtech.jts.geom.Geometry) -> filter
    146:146:org.locationtech.jts.geom.Geometry getGeometry(org.locationtech.jts.geom.Geometry) -> getGeometry
    160:160:org.locationtech.jts.geom.Geometry getGeometry(org.locationtech.jts.geom.Geometry,boolean) -> getGeometry
    47:49:java.util.Collection getLines(java.util.Collection,java.util.Collection) -> getLines
    65:67:java.util.Collection getLines(java.util.Collection,java.util.Collection,boolean) -> getLines
    82:86:java.util.Collection getLines(org.locationtech.jts.geom.Geometry,java.util.Collection) -> getLines
    102:102:java.util.Collection getLines(org.locationtech.jts.geom.Geometry,java.util.Collection,boolean) -> getLines
    117:117:java.util.List getLines(org.locationtech.jts.geom.Geometry) -> getLines
    132:133:java.util.List getLines(org.locationtech.jts.geom.Geometry,boolean) -> getLines
    192:192:void setForceToLineString(boolean) -> setForceToLineString
org.locationtech.jts.geom.util.NoninvertibleTransformationException -> org.locationtech.jts.geom.util.NoninvertibleTransformationException:
    26:26:void <init>() -> <init>
    30:30:void <init>(java.lang.String) -> <init>
org.locationtech.jts.geom.util.PointExtracter -> org.locationtech.jts.geom.util.PointExtracter:
    72:73:void <init>(java.util.List) -> <init>
    78:78:void filter(org.locationtech.jts.geom.Geometry) -> filter
    43:47:java.util.List getPoints(org.locationtech.jts.geom.Geometry,java.util.List) -> getPoints
    61:64:java.util.List getPoints(org.locationtech.jts.geom.Geometry) -> getPoints
org.locationtech.jts.geom.util.PolygonExtracter -> org.locationtech.jts.geom.util.PolygonExtracter:
    68:69:void <init>(java.util.List) -> <init>
    74:74:void filter(org.locationtech.jts.geom.Geometry) -> filter
    41:45:java.util.List getPolygons(org.locationtech.jts.geom.Geometry,java.util.List) -> getPolygons
    60:60:java.util.List getPolygons(org.locationtech.jts.geom.Geometry) -> getPolygons
org.locationtech.jts.geom.util.ShortCircuitedGeometryVisitor -> org.locationtech.jts.geom.util.ShortCircuitedGeometryVisitor:
    26:28:void <init>() -> <init>
    32:42:void applyTo(org.locationtech.jts.geom.Geometry) -> applyTo
org.locationtech.jts.geom.util.SineStarFactory -> org.locationtech.jts.geom.util.SineStarFactory:
    56:65:void <init>() -> <init>
    56:76:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    46:52:org.locationtech.jts.geom.Geometry create(org.locationtech.jts.geom.Coordinate,double,int,int,double) -> create
    108:148:org.locationtech.jts.geom.Geometry createSineStar() -> createSineStar
    98:98:void setArmLengthRatio(double) -> setArmLengthRatio
    86:86:void setNumArms(int) -> setNumArms
org.locationtech.jts.geomgraph.Depth -> org.locationtech.jts.geomgraph.Depth:
    34:40:void <init>() -> <init>
    61:61:void add(int,int,int) -> add
    88:95:void add(org.locationtech.jts.geomgraph.Label) -> add
    0:0:int depthAtLocation(int) -> depthAtLocation
    102:102:int getDelta(int) -> getDelta
    47:47:int getDepth(int,int) -> getDepth
    55:55:int getLocation(int,int) -> getLocation
    70:70:boolean isNull() -> isNull
    78:78:boolean isNull(int) -> isNull
    82:82:boolean isNull(int,int) -> isNull
    115:125:void normalize() -> normalize
    51:51:void setDepth(int,int,int) -> setDepth
    133:133:java.lang.String toString() -> toString
org.locationtech.jts.geomgraph.DirectedEdge -> org.locationtech.jts.geomgraph.DirectedEdge:
    44:69:void <init>(org.locationtech.jts.geomgraph.Edge,boolean) -> <init>
    172:174:void computeDirectedLabel() -> computeDirectedLabel
    0:0:int depthFactor(int,int) -> depthFactor
    80:80:int getDepth(int) -> getDepth
    97:98:int getDepthDelta() -> getDepthDelta
    71:71:org.locationtech.jts.geomgraph.Edge getEdge() -> getEdge
    77:77:org.locationtech.jts.geomgraph.EdgeRing getEdgeRing() -> getEdgeRing
    79:79:org.locationtech.jts.geomgraph.EdgeRing getMinEdgeRing() -> getMinEdgeRing
    123:123:org.locationtech.jts.geomgraph.DirectedEdge getNext() -> getNext
    125:125:org.locationtech.jts.geomgraph.DirectedEdge getNextMin() -> getNextMin
    117:117:org.locationtech.jts.geomgraph.DirectedEdge getSym() -> getSym
    118:118:boolean isForward() -> isForward
    73:73:boolean isInResult() -> isInResult
    158:160:boolean isInteriorAreaEdge() -> isInteriorAreaEdge
    137:141:boolean isLineEdge() -> isLineEdge
    74:74:boolean isVisited() -> isVisited
    202:207:void print(java.io.PrintStream) -> print
    211:216:void printEdge(java.io.PrintStream) -> printEdge
    84:92:void setDepth(int,int) -> setDepth
    184:197:void setEdgeDepths(int,int) -> setEdgeDepths
    76:76:void setEdgeRing(org.locationtech.jts.geomgraph.EdgeRing) -> setEdgeRing
    72:72:void setInResult(boolean) -> setInResult
    78:78:void setMinEdgeRing(org.locationtech.jts.geomgraph.EdgeRing) -> setMinEdgeRing
    124:124:void setNext(org.locationtech.jts.geomgraph.DirectedEdge) -> setNext
    126:126:void setNextMin(org.locationtech.jts.geomgraph.DirectedEdge) -> setNextMin
    121:121:void setSym(org.locationtech.jts.geomgraph.DirectedEdge) -> setSym
    75:75:void setVisited(boolean) -> setVisited
    109:110:void setVisitedEdge(boolean) -> setVisitedEdge
org.locationtech.jts.geomgraph.DirectedEdgeStar -> org.locationtech.jts.geomgraph.DirectedEdgeStar:
    43:168:void <init>() -> <init>
    344:355:void computeDepths(org.locationtech.jts.geomgraph.DirectedEdge) -> computeDepths
    368:371:int computeDepths(int,int,int) -> computeDepths
    110:122:void computeLabelling(org.locationtech.jts.geomgraph.GeometryGraph[]) -> computeLabelling
    303:336:void findCoveredLineEdges() -> findCoveredLineEdges
    54:54:org.locationtech.jts.geomgraph.Label getLabel() -> getLabel
    59:61:int getOutgoingDegree() -> getOutgoingDegree
    68:70:int getOutgoingDegree(org.locationtech.jts.geomgraph.EdgeRing) -> getOutgoingDegree
    157:164:java.util.List getResultAreaEdges() -> getResultAreaEdges
    77:99:org.locationtech.jts.geomgraph.DirectedEdge getRightmostEdge() -> getRightmostEdge
    50:51:void insert(org.locationtech.jts.geomgraph.EdgeEnd) -> insert
    266:279:void linkAllDirectedEdges() -> linkAllDirectedEdges
    237:261:void linkMinimalDirectedEdges(org.locationtech.jts.geomgraph.EdgeRing) -> linkMinimalDirectedEdges
    190:227:void linkResultDirectedEdges() -> linkResultDirectedEdges
    134:137:void mergeSymLabels() -> mergeSymLabels
    378:386:void print(java.io.PrintStream) -> print
    146:150:void updateLabelling(org.locationtech.jts.geomgraph.Label) -> updateLabelling
org.locationtech.jts.geomgraph.Edge -> org.locationtech.jts.geomgraph.Edge:
    48:58:void <init>(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geomgraph.Label) -> <init>
    62:62:void <init>(org.locationtech.jts.geom.Coordinate[]) -> <init>
    160:181:void addIntersection(org.locationtech.jts.algorithm.LineIntersector,int,int,int) -> addIntersection
    149:150:void addIntersections(org.locationtech.jts.algorithm.LineIntersector,int,int) -> addIntersections
    192:192:void computeIM(org.locationtech.jts.geom.IntersectionMatrix) -> computeIM
    204:216:boolean equals(java.lang.Object) -> equals
    128:130:org.locationtech.jts.geomgraph.Edge getCollapsedEdge() -> getCollapsedEdge
    70:70:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    74:74:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    67:67:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    89:89:org.locationtech.jts.geomgraph.Depth getDepth() -> getDepth
    95:95:int getDepthDelta() -> getDepthDelta
    102:102:org.locationtech.jts.geomgraph.EdgeIntersectionList getEdgeIntersectionList() -> getEdgeIntersectionList
    80:86:org.locationtech.jts.geom.Envelope getEnvelope() -> getEnvelope
    100:100:int getMaximumSegmentIndex() -> getMaximumSegmentIndex
    106:107:org.locationtech.jts.geomgraph.index.MonotoneChainEdge getMonotoneChainEdge() -> getMonotoneChainEdge
    65:65:int getNumPoints() -> getNumPoints
    112:112:boolean isClosed() -> isClosed
    120:122:boolean isCollapsed() -> isCollapsed
    140:140:boolean isIsolated() -> isIsolated
    229:232:boolean isPointwiseEqual(org.locationtech.jts.geomgraph.Edge) -> isPointwiseEqual
    253:259:void print(java.io.PrintStream) -> print
    263:267:void printReverse(java.io.PrintStream) -> printReverse
    96:96:void setDepthDelta(int) -> setDepthDelta
    136:136:void setIsolated(boolean) -> setIsolated
    66:66:void setName(java.lang.String) -> setName
    241:249:java.lang.String toString() -> toString
    39:42:void updateIM(org.locationtech.jts.geomgraph.Label,org.locationtech.jts.geom.IntersectionMatrix) -> updateIM
org.locationtech.jts.geomgraph.EdgeEnd -> org.locationtech.jts.geomgraph.EdgeEnd:
    46:47:void <init>(org.locationtech.jts.geomgraph.Edge) -> <init>
    50:50:void <init>(org.locationtech.jts.geomgraph.Edge,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    53:55:void <init>(org.locationtech.jts.geomgraph.Edge,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geomgraph.Label) -> <init>
    99:106:int compareDirection(org.locationtech.jts.geomgraph.EdgeEnd) -> compareDirection
    81:82:int compareTo(java.lang.Object) -> compareTo
    0:0:void computeLabel(org.locationtech.jts.algorithm.BoundaryNodeRule) -> computeLabel
    70:70:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    71:71:org.locationtech.jts.geom.Coordinate getDirectedCoordinate() -> getDirectedCoordinate
    73:73:double getDx() -> getDx
    74:74:double getDy() -> getDy
    68:68:org.locationtech.jts.geomgraph.Edge getEdge() -> getEdge
    69:69:org.locationtech.jts.geomgraph.Label getLabel() -> getLabel
    77:77:org.locationtech.jts.geomgraph.Node getNode() -> getNode
    72:72:int getQuadrant() -> getQuadrant
    60:65:void init(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> init
    115:119:void print(java.io.PrintStream) -> print
    76:76:void setNode(org.locationtech.jts.geomgraph.Node) -> setNode
    123:127:java.lang.String toString() -> toString
org.locationtech.jts.geomgraph.EdgeEndStar -> org.locationtech.jts.geomgraph.EdgeEndStar:
    44:55:void <init>() -> <init>
    219:236:boolean checkAreaLabelsConsistent(int) -> checkAreaLabelsConsistent
    194:196:void computeEdgeEndLabels(org.locationtech.jts.algorithm.BoundaryNodeRule) -> computeEdgeEndLabels
    118:182:void computeLabelling(org.locationtech.jts.geomgraph.GeometryGraph[]) -> computeLabelling
    309:311:int findIndex(org.locationtech.jts.geomgraph.EdgeEnd) -> findIndex
    79:82:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    86:86:int getDegree() -> getDegree
    101:104:java.util.List getEdges() -> getEdges
    203:206:int getLocation(int,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geomgraph.GeometryGraph[]) -> getLocation
    108:113:org.locationtech.jts.geomgraph.EdgeEnd getNextCW(org.locationtech.jts.geomgraph.EdgeEnd) -> getNextCW
    70:71:void insertEdgeEnd(org.locationtech.jts.geomgraph.EdgeEnd,java.lang.Object) -> insertEdgeEnd
    211:212:boolean isAreaLabelsConsistent(org.locationtech.jts.geomgraph.GeometryGraph) -> isAreaLabelsConsistent
    97:97:java.util.Iterator iterator() -> iterator
    319:322:void print(java.io.PrintStream) -> print
    261:301:void propagateSideLabels(int) -> propagateSideLabels
    328:336:java.lang.String toString() -> toString
org.locationtech.jts.geomgraph.EdgeIntersection -> org.locationtech.jts.geomgraph.EdgeIntersection:
    39:42:void <init>(org.locationtech.jts.geom.Coordinate,int,double) -> <init>
    63:65:int compare(int,double) -> compare
    53:54:int compareTo(java.lang.Object) -> compareTo
    45:45:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    49:49:double getDistance() -> getDistance
    47:47:int getSegmentIndex() -> getSegmentIndex
    72:72:boolean isEndPoint(int) -> isEndPoint
    79:81:void print(java.io.PrintStream) -> print
    85:85:java.lang.String toString() -> toString
org.locationtech.jts.geomgraph.EdgeIntersectionList -> org.locationtech.jts.geomgraph.EdgeIntersectionList:
    32:37:void <init>(org.locationtech.jts.geomgraph.Edge) -> <init>
    47:52:org.locationtech.jts.geomgraph.EdgeIntersection add(org.locationtech.jts.geom.Coordinate,int,double) -> add
    84:86:void addEndpoints() -> addEndpoints
    100:108:void addSplitEdges(java.util.List) -> addSplitEdges
    121:140:org.locationtech.jts.geomgraph.Edge createSplitEdge(org.locationtech.jts.geomgraph.EdgeIntersection,org.locationtech.jts.geomgraph.EdgeIntersection) -> createSplitEdge
    71:73:boolean isIntersection(org.locationtech.jts.geom.Coordinate) -> isIntersection
    61:61:java.util.Iterator iterator() -> iterator
    145:148:void print(java.io.PrintStream) -> print
org.locationtech.jts.geomgraph.EdgeList -> org.locationtech.jts.geomgraph.EdgeList:
    36:43:void <init>() -> <init>
    51:53:void add(org.locationtech.jts.geomgraph.Edge) -> add
    58:59:void addAll(java.util.Collection) -> addAll
    90:91:int findEdgeIndex(org.locationtech.jts.geomgraph.Edge) -> findEdgeIndex
    73:75:org.locationtech.jts.geomgraph.Edge findEqualEdge(org.locationtech.jts.geomgraph.Edge) -> findEqualEdge
    81:81:org.locationtech.jts.geomgraph.Edge get(int) -> get
    63:63:java.util.List getEdges() -> getEdges
    79:79:java.util.Iterator iterator() -> iterator
    98:110:void print(java.io.PrintStream) -> print
org.locationtech.jts.geomgraph.EdgeNodingValidator -> org.locationtech.jts.geomgraph.EdgeNodingValidator:
    68:69:void <init>(java.util.Collection) -> <init>
    45:46:void checkValid(java.util.Collection) -> checkValid
    81:81:void checkValid() -> checkValid
    52:55:java.util.Collection toSegmentStrings(java.util.Collection) -> toSegmentStrings
org.locationtech.jts.geomgraph.EdgeRing -> org.locationtech.jts.geomgraph.EdgeRing:
    40:54:void <init>(org.locationtech.jts.geomgraph.DirectedEdge,org.locationtech.jts.geom.GeometryFactory) -> <init>
    77:77:void addHole(org.locationtech.jts.geomgraph.EdgeRing) -> addHole
    195:207:void addPoints(org.locationtech.jts.geomgraph.Edge,boolean,boolean) -> addPoints
    149:157:void computeMaxNodeDegree() -> computeMaxNodeDegree
    118:138:void computePoints(org.locationtech.jts.geomgraph.DirectedEdge) -> computePoints
    95:101:void computeRing() -> computeRing
    218:225:boolean containsPoint(org.locationtech.jts.geom.Coordinate) -> containsPoint
    67:67:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    110:110:java.util.List getEdges() -> getEdges
    69:69:org.locationtech.jts.geomgraph.Label getLabel() -> getLabel
    68:68:org.locationtech.jts.geom.LinearRing getLinearRing() -> getLinearRing
    143:144:int getMaxNodeDegree() -> getMaxNodeDegree
    71:71:org.locationtech.jts.geomgraph.EdgeRing getShell() -> getShell
    64:64:boolean isHole() -> isHole
    59:59:boolean isIsolated() -> isIsolated
    70:70:boolean isShell() -> isShell
    172:173:void mergeLabel(org.locationtech.jts.geomgraph.Label) -> mergeLabel
    184:189:void mergeLabel(org.locationtech.jts.geomgraph.Label,int) -> mergeLabel
    163:167:void setInResult() -> setInResult
    74:75:void setShell(org.locationtech.jts.geomgraph.EdgeRing) -> setShell
    81:85:org.locationtech.jts.geom.Polygon toPolygon(org.locationtech.jts.geom.GeometryFactory) -> toPolygon
org.locationtech.jts.geomgraph.GeometryGraph -> org.locationtech.jts.geomgraph.GeometryGraph:
    125:125:void <init>(int,org.locationtech.jts.geom.Geometry) -> <init>
    91:137:void <init>(int,org.locationtech.jts.geom.Geometry,org.locationtech.jts.algorithm.BoundaryNodeRule) -> <init>
    198:213:void add(org.locationtech.jts.geom.Geometry) -> add
    218:220:void addCollection(org.locationtech.jts.geom.GeometryCollection) -> addCollection
    320:324:void addEdge(org.locationtech.jts.geomgraph.Edge) -> addEdge
    290:310:void addLineString(org.locationtech.jts.geom.LineString) -> addLineString
    228:229:void addPoint(org.locationtech.jts.geom.Point) -> addPoint
    333:333:void addPoint(org.locationtech.jts.geom.Coordinate) -> addPoint
    270:281:void addPolygon(org.locationtech.jts.geom.Polygon) -> addPolygon
    243:265:void addPolygonRing(org.locationtech.jts.geom.LinearRing,int,int) -> addPolygonRing
    449:453:void addSelfIntersectionNode(int,org.locationtech.jts.geom.Coordinate,int) -> addSelfIntersectionNode
    431:436:void addSelfIntersectionNodes(int) -> addSelfIntersectionNodes
    382:386:org.locationtech.jts.geomgraph.index.SegmentIntersector computeEdgeIntersections(org.locationtech.jts.geomgraph.GeometryGraph,org.locationtech.jts.algorithm.LineIntersector,boolean) -> computeEdgeIntersections
    347:347:org.locationtech.jts.geomgraph.index.SegmentIntersector computeSelfNodes(org.locationtech.jts.algorithm.LineIntersector,boolean) -> computeSelfNodes
    362:373:org.locationtech.jts.geomgraph.index.SegmentIntersector computeSelfNodes(org.locationtech.jts.algorithm.LineIntersector,boolean,boolean) -> computeSelfNodes
    191:193:void computeSplitEdges(java.util.List) -> computeSplitEdges
    120:120:org.locationtech.jts.geomgraph.index.EdgeSetIntersector createEdgeSetIntersector() -> createEdgeSetIntersector
    80:80:int determineBoundary(org.locationtech.jts.algorithm.BoundaryNodeRule,int) -> determineBoundary
    186:186:org.locationtech.jts.geomgraph.Edge findEdge(org.locationtech.jts.geom.LineString) -> findEdge
    163:163:org.locationtech.jts.algorithm.BoundaryNodeRule getBoundaryNodeRule() -> getBoundaryNodeRule
    167:169:java.util.Collection getBoundaryNodes() -> getBoundaryNodes
    174:179:org.locationtech.jts.geom.Coordinate[] getBoundaryPoints() -> getBoundaryPoints
    161:161:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    159:159:org.locationtech.jts.geom.Coordinate getInvalidPoint() -> getInvalidPoint
    157:157:boolean hasTooFewPoints() -> hasTooFewPoints
    414:426:void insertBoundaryPoint(int,org.locationtech.jts.geom.Coordinate) -> insertBoundaryPoint
    398:404:void insertPoint(int,org.locationtech.jts.geom.Coordinate,int) -> insertPoint
    466:473:int locate(org.locationtech.jts.geom.Coordinate) -> locate
org.locationtech.jts.geomgraph.GraphComponent -> org.locationtech.jts.geomgraph.GraphComponent:
    33:38:void <init>() -> <init>
    33:42:void <init>(org.locationtech.jts.geomgraph.Label) -> <init>
    45:45:org.locationtech.jts.geomgraph.Label getLabel() -> getLabel
    54:54:boolean isCovered() -> isCovered
    55:55:boolean isCoveredSet() -> isCoveredSet
    48:48:boolean isInResult() -> isInResult
    56:56:boolean isVisited() -> isVisited
    51:52:void setCovered(boolean) -> setCovered
    47:47:void setInResult(boolean) -> setInResult
    46:46:void setLabel(org.locationtech.jts.geomgraph.Label) -> setLabel
    57:57:void setVisited(boolean) -> setVisited
    80:81:void updateIM(org.locationtech.jts.geom.IntersectionMatrix) -> updateIM
org.locationtech.jts.geomgraph.Label -> org.locationtech.jts.geomgraph.Label:
    55:64:void <init>(int) -> <init>
    55:74:void <init>(int,int) -> <init>
    55:83:void <init>(int,int,int) -> <init>
    55:93:void <init>(int,int,int,int) -> <init>
    55:101:void <init>(org.locationtech.jts.geomgraph.Label) -> <init>
    178:178:boolean allPositionsEqual(int,int) -> allPositionsEqual
    106:107:void flip() -> flip
    151:152:int getGeometryCount() -> getGeometryCount
    110:110:int getLocation(int,int) -> getLocation
    111:111:int getLocation(int) -> getLocation
    156:156:boolean isAnyNull(int) -> isAnyNull
    158:158:boolean isArea() -> isArea
    166:166:boolean isArea(int) -> isArea
    172:174:boolean isEqualOnSide(org.locationtech.jts.geomgraph.Label,int) -> isEqualOnSide
    168:168:boolean isLine(int) -> isLine
    155:155:boolean isNull(int) -> isNull
    140:144:void merge(org.locationtech.jts.geomgraph.Label) -> merge
    122:122:void setAllLocations(int,int) -> setAllLocations
    126:126:void setAllLocationsIfNull(int,int) -> setAllLocationsIfNull
    130:131:void setAllLocationsIfNull(int) -> setAllLocationsIfNull
    114:114:void setLocation(int,int,int) -> setLocation
    118:118:void setLocation(int,int) -> setLocation
    185:186:void toLine(int) -> toLine
    48:50:org.locationtech.jts.geomgraph.Label toLineLabel(org.locationtech.jts.geomgraph.Label) -> toLineLabel
    190:199:java.lang.String toString() -> toString
org.locationtech.jts.geomgraph.Node -> org.locationtech.jts.geomgraph.Node:
    35:38:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geomgraph.EdgeEndStar) -> <init>
    76:77:void add(org.locationtech.jts.geomgraph.EdgeEnd) -> add
    0:0:void computeIM(org.locationtech.jts.geom.IntersectionMatrix) -> computeIM
    142:144:int computeMergedLocation(org.locationtech.jts.geomgraph.Label,int) -> computeMergedLocation
    41:41:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    42:42:org.locationtech.jts.geomgraph.EdgeEndStar getEdges() -> getEdges
    54:56:boolean isIncidentEdgeInResult() -> isIncidentEdgeInResult
    64:64:boolean isIsolated() -> isIsolated
    82:82:void mergeLabel(org.locationtech.jts.geomgraph.Node) -> mergeLabel
    95:97:void mergeLabel(org.locationtech.jts.geomgraph.Label) -> mergeLabel
    152:152:void print(java.io.PrintStream) -> print
    103:107:void setLabel(int,int) -> setLabel
    116:129:void setLabelBoundary(int) -> setLabelBoundary
org.locationtech.jts.geomgraph.NodeFactory -> org.locationtech.jts.geomgraph.NodeFactory:
    21:21:void <init>() -> <init>
    27:27:org.locationtech.jts.geomgraph.Node createNode(org.locationtech.jts.geom.Coordinate) -> createNode
org.locationtech.jts.geomgraph.NodeMap -> org.locationtech.jts.geomgraph.NodeMap:
    36:40:void <init>(org.locationtech.jts.geomgraph.NodeFactory) -> <init>
    83:85:void add(org.locationtech.jts.geomgraph.EdgeEnd) -> add
    57:60:org.locationtech.jts.geomgraph.Node addNode(org.locationtech.jts.geom.Coordinate) -> addNode
    67:72:org.locationtech.jts.geomgraph.Node addNode(org.locationtech.jts.geomgraph.Node) -> addNode
    90:90:org.locationtech.jts.geomgraph.Node find(org.locationtech.jts.geom.Coordinate) -> find
    103:107:java.util.Collection getBoundaryNodes(int) -> getBoundaryNodes
    94:94:java.util.Iterator iterator() -> iterator
    114:117:void print(java.io.PrintStream) -> print
    98:98:java.util.Collection values() -> values
org.locationtech.jts.geomgraph.PlanarGraph -> org.locationtech.jts.geomgraph.PlanarGraph:
    61:66:void <init>(org.locationtech.jts.geomgraph.NodeFactory) -> <init>
    61:70:void <init>() -> <init>
    90:91:void add(org.locationtech.jts.geomgraph.EdgeEnd) -> add
    110:120:void addEdges(java.util.List) -> addEdges
    96:96:org.locationtech.jts.geomgraph.Node addNode(org.locationtech.jts.geomgraph.Node) -> addNode
    97:97:org.locationtech.jts.geomgraph.Node addNode(org.locationtech.jts.geom.Coordinate) -> addNode
    231:231:void debugPrint(java.lang.Object) -> debugPrint
    235:235:void debugPrintln(java.lang.Object) -> debugPrintln
    101:101:org.locationtech.jts.geomgraph.Node find(org.locationtech.jts.geom.Coordinate) -> find
    173:176:org.locationtech.jts.geomgraph.Edge findEdge(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> findEdge
    157:159:org.locationtech.jts.geomgraph.EdgeEnd findEdgeEnd(org.locationtech.jts.geomgraph.Edge) -> findEdgeEnd
    190:197:org.locationtech.jts.geomgraph.Edge findEdgeInSameDirection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> findEdgeInSameDirection
    74:74:java.util.Collection getEdgeEnds() -> getEdgeEnds
    73:73:java.util.Iterator getEdgeIterator() -> getEdgeIterator
    94:94:java.util.Iterator getNodeIterator() -> getNodeIterator
    95:95:java.util.Collection getNodes() -> getNodes
    86:86:void insertEdge(org.locationtech.jts.geomgraph.Edge) -> insertEdge
    78:81:boolean isBoundaryNode(int,org.locationtech.jts.geom.Coordinate) -> isBoundaryNode
    143:145:void linkAllDirectedEdges() -> linkAllDirectedEdges
    55:57:void linkResultDirectedEdges(java.util.Collection) -> linkResultDirectedEdges
    131:133:void linkResultDirectedEdges() -> linkResultDirectedEdges
    210:214:boolean matchInSameDirection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> matchInSameDirection
    221:226:void printEdges(java.io.PrintStream) -> printEdges
org.locationtech.jts.geomgraph.Position -> org.locationtech.jts.geomgraph.Position:
    22:22:void <init>() -> <init>
    0:0:int opposite(int) -> opposite
org.locationtech.jts.geomgraph.Quadrant -> org.locationtech.jts.geomgraph.Quadrant:
    32:32:void <init>() -> <init>
    108:108:int commonHalfPlane(int,int) -> commonHalfPlane
    0:0:boolean isInHalfPlane(int,int) -> isInHalfPlane
    0:0:boolean isNorthern(int) -> isNorthern
    93:93:boolean isOpposite(int,int) -> isOpposite
    48:48:int quadrant(double,double) -> quadrant
    70:80:int quadrant(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> quadrant
org.locationtech.jts.geomgraph.TopologyLocation -> org.locationtech.jts.geomgraph.TopologyLocation:
    47:48:void <init>(int[]) -> <init>
    57:61:void <init>(int,int,int) -> <init>
    64:66:void <init>(int) -> <init>
    68:72:void <init>(org.locationtech.jts.geomgraph.TopologyLocation) -> <init>
    151:152:boolean allPositionsEqual(int) -> allPositionsEqual
    115:118:void flip() -> flip
    83:83:int get(int) -> get
    143:143:int[] getLocations() -> getLocations
    78:79:void init(int) -> init
    101:102:boolean isAnyNull() -> isAnyNull
    110:110:boolean isArea() -> isArea
    108:108:boolean isEqualOnSide(org.locationtech.jts.geomgraph.TopologyLocation,int) -> isEqualOnSide
    111:111:boolean isLine() -> isLine
    91:92:boolean isNull() -> isNull
    164:173:void merge(org.locationtech.jts.geomgraph.TopologyLocation) -> merge
    124:125:void setAllLocations(int) -> setAllLocations
    130:131:void setAllLocationsIfNull(int) -> setAllLocationsIfNull
    137:137:void setLocation(int,int) -> setLocation
    141:141:void setLocation(int) -> setLocation
    145:147:void setLocations(int,int,int) -> setLocations
    179:183:java.lang.String toString() -> toString
org.locationtech.jts.geomgraph.index.EdgeSetIntersector -> org.locationtech.jts.geomgraph.index.EdgeSetIntersector:
    37:37:void <init>() -> <init>
org.locationtech.jts.geomgraph.index.MonotoneChain -> org.locationtech.jts.geomgraph.index.MonotoneChain:
    25:27:void <init>(org.locationtech.jts.geomgraph.index.MonotoneChainEdge,int) -> <init>
    32:32:void computeIntersections(org.locationtech.jts.geomgraph.index.MonotoneChain,org.locationtech.jts.geomgraph.index.SegmentIntersector) -> computeIntersections
org.locationtech.jts.geomgraph.index.MonotoneChainEdge -> org.locationtech.jts.geomgraph.index.MonotoneChainEdge:
    47:51:void <init>(org.locationtech.jts.geomgraph.Edge) -> <init>
    72:74:void computeIntersects(org.locationtech.jts.geomgraph.index.MonotoneChainEdge,org.locationtech.jts.geomgraph.index.SegmentIntersector) -> computeIntersects
    86:86:void computeIntersectsForChain(int,org.locationtech.jts.geomgraph.index.MonotoneChainEdge,int,org.locationtech.jts.geomgraph.index.SegmentIntersector) -> computeIntersectsForChain
    102:120:void computeIntersectsForChain(int,int,org.locationtech.jts.geomgraph.index.MonotoneChainEdge,int,int,org.locationtech.jts.geomgraph.index.SegmentIntersector) -> computeIntersectsForChain
    54:54:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    65:66:double getMaxX(int) -> getMaxX
    59:60:double getMinX(int) -> getMinX
    55:55:int[] getStartIndexes() -> getStartIndexes
    139:139:boolean overlaps(int,int,org.locationtech.jts.geomgraph.index.MonotoneChainEdge,int,int) -> overlaps
org.locationtech.jts.geomgraph.index.MonotoneChainIndexer -> org.locationtech.jts.geomgraph.index.MonotoneChainIndexer:
    60:60:void <init>() -> <init>
    85:90:int findChainEnd(org.locationtech.jts.geom.Coordinate[],int) -> findChainEnd
    67:75:int[] getChainStartIndices(org.locationtech.jts.geom.Coordinate[]) -> getChainStartIndices
    53:55:int[] toIntArray(java.util.List) -> toIntArray
org.locationtech.jts.geomgraph.index.SegmentIntersector -> org.locationtech.jts.geomgraph.index.SegmentIntersector:
    44:69:void <init>(org.locationtech.jts.algorithm.LineIntersector,boolean,boolean) -> <init>
    144:180:void addIntersections(org.locationtech.jts.geomgraph.Edge,int,org.locationtech.jts.geomgraph.Edge,int) -> addIntersections
    90:90:org.locationtech.jts.geom.Coordinate getProperIntersectionPoint() -> getProperIntersectionPoint
    92:92:boolean hasIntersection() -> hasIntersection
    105:105:boolean hasProperInteriorIntersection() -> hasProperInteriorIntersection
    100:100:boolean hasProperIntersection() -> hasProperIntersection
    37:37:boolean isAdjacentSegments(int,int) -> isAdjacentSegments
    191:192:boolean isBoundaryPoint(org.locationtech.jts.algorithm.LineIntersector,java.util.Collection[]) -> isBoundaryPoint
    198:201:boolean isBoundaryPointInternal(org.locationtech.jts.algorithm.LineIntersector,java.util.Collection) -> isBoundaryPointInternal
    85:85:boolean isDone() -> isDone
    117:121:boolean isTrivialIntersection(org.locationtech.jts.geomgraph.Edge,int,org.locationtech.jts.geomgraph.Edge,int) -> isTrivialIntersection
    75:75:void setBoundaryNodes(java.util.Collection,java.util.Collection) -> setBoundaryNodes
    81:81:void setIsDoneIfProperInt(boolean) -> setIsDoneIfProperInt
org.locationtech.jts.geomgraph.index.SimpleEdgeSetIntersector -> org.locationtech.jts.geomgraph.index.SimpleEdgeSetIntersector:
    36:36:void <init>() -> <init>
    41:48:void computeIntersections(java.util.List,org.locationtech.jts.geomgraph.index.SegmentIntersector,boolean) -> computeIntersections
    56:62:void computeIntersections(java.util.List,java.util.List,org.locationtech.jts.geomgraph.index.SegmentIntersector) -> computeIntersections
    74:78:void computeIntersects(org.locationtech.jts.geomgraph.Edge,org.locationtech.jts.geomgraph.Edge,org.locationtech.jts.geomgraph.index.SegmentIntersector) -> computeIntersects
org.locationtech.jts.geomgraph.index.SimpleMCSweepLineIntersector -> org.locationtech.jts.geomgraph.index.SimpleMCSweepLineIntersector:
    41:49:void <init>() -> <init>
    86:92:void addEdge(org.locationtech.jts.geomgraph.Edge,java.lang.Object) -> addEdge
    70:73:void addEdges(java.util.List) -> addEdges
    78:80:void addEdges(java.util.List,java.lang.Object) -> addEdges
    55:58:void computeIntersections(java.util.List,org.locationtech.jts.geomgraph.index.SegmentIntersector,boolean) -> computeIntersections
    63:65:void computeIntersections(java.util.List,java.util.List,org.locationtech.jts.geomgraph.index.SegmentIntersector) -> computeIntersections
    116:125:void computeIntersections(org.locationtech.jts.geomgraph.index.SegmentIntersector) -> computeIntersections
    103:109:void prepareEvents() -> prepareEvents
    133:146:void processOverlaps(int,int,org.locationtech.jts.geomgraph.index.SweepLineEvent,org.locationtech.jts.geomgraph.index.SegmentIntersector) -> processOverlaps
org.locationtech.jts.geomgraph.index.SimpleSweepLineIntersector -> org.locationtech.jts.geomgraph.index.SimpleSweepLineIntersector:
    40:44:void <init>() -> <init>
    65:68:void add(java.util.List) -> add
    73:75:void add(java.util.List,java.lang.Object) -> add
    82:87:void add(org.locationtech.jts.geomgraph.Edge,java.lang.Object) -> add
    50:53:void computeIntersections(java.util.List,org.locationtech.jts.geomgraph.index.SegmentIntersector,boolean) -> computeIntersections
    58:60:void computeIntersections(java.util.List,java.util.List,org.locationtech.jts.geomgraph.index.SegmentIntersector) -> computeIntersections
    111:118:void computeIntersections(org.locationtech.jts.geomgraph.index.SegmentIntersector) -> computeIntersections
    98:104:void prepareEvents() -> prepareEvents
    125:138:void processOverlaps(int,int,org.locationtech.jts.geomgraph.index.SweepLineEvent,org.locationtech.jts.geomgraph.index.SegmentIntersector) -> processOverlaps
org.locationtech.jts.geomgraph.index.SweepLineEvent -> org.locationtech.jts.geomgraph.index.SweepLineEvent:
    29:45:void <init>(java.lang.Object,double,java.lang.Object) -> <init>
    55:58:void <init>(double,org.locationtech.jts.geomgraph.index.SweepLineEvent) -> <init>
    82:85:int compareTo(java.lang.Object) -> compareTo
    64:64:int getDeleteEventIndex() -> getDeleteEventIndex
    63:63:org.locationtech.jts.geomgraph.index.SweepLineEvent getInsertEvent() -> getInsertEvent
    67:67:java.lang.Object getObject() -> getObject
    62:62:boolean isDelete() -> isDelete
    61:61:boolean isInsert() -> isInsert
    72:73:boolean isSameLabel(org.locationtech.jts.geomgraph.index.SweepLineEvent) -> isSameLabel
    65:65:void setDeleteEventIndex(int) -> setDeleteEventIndex
org.locationtech.jts.geomgraph.index.SweepLineSegment -> org.locationtech.jts.geomgraph.index.SweepLineSegment:
    30:33:void <init>(org.locationtech.jts.geomgraph.Edge,int) -> <init>
    50:50:void computeIntersections(org.locationtech.jts.geomgraph.index.SweepLineSegment,org.locationtech.jts.geomgraph.index.SegmentIntersector) -> computeIntersections
    44:45:double getMaxX() -> getMaxX
    38:39:double getMinX() -> getMinX
org.locationtech.jts.index.ArrayListVisitor -> org.locationtech.jts.index.ArrayListVisitor:
    26:31:void <init>() -> <init>
    49:49:java.util.ArrayList getItems() -> getItems
    41:41:void visitItem(java.lang.Object) -> visitItem
org.locationtech.jts.index.bintree.Bintree -> org.locationtech.jts.index.bintree.Bintree:
    82:86:void <init>() -> <init>
    185:187:void collectStats(org.locationtech.jts.index.bintree.Interval) -> collectStats
    91:91:int depth() -> depth
    58:68:org.locationtech.jts.index.bintree.Interval ensureExtent(org.locationtech.jts.index.bintree.Interval,double) -> ensureExtent
    112:115:void insert(org.locationtech.jts.index.bintree.Interval,java.lang.Object) -> insert
    142:144:java.util.Iterator iterator() -> iterator
    106:106:int nodeSize() -> nodeSize
    149:149:java.util.List query(double) -> query
    165:166:java.util.List query(org.locationtech.jts.index.bintree.Interval) -> query
    180:180:void query(org.locationtech.jts.index.bintree.Interval,java.util.Collection) -> query
    136:137:boolean remove(org.locationtech.jts.index.bintree.Interval,java.lang.Object) -> remove
    96:96:int size() -> size
org.locationtech.jts.index.bintree.Interval -> org.locationtech.jts.index.bintree.Interval:
    25:27:void <init>() -> <init>
    31:32:void <init>(double,double) -> <init>
    35:36:void <init>(org.locationtech.jts.index.bintree.Interval) -> <init>
    69:69:boolean contains(org.locationtech.jts.index.bintree.Interval) -> contains
    73:73:boolean contains(double,double) -> contains
    77:77:boolean contains(double) -> contains
    53:54:void expandToInclude(org.locationtech.jts.index.bintree.Interval) -> expandToInclude
    48:48:double getMax() -> getMax
    47:47:double getMin() -> getMin
    49:49:double getWidth() -> getWidth
    40:44:void init(double,double) -> init
    58:58:boolean overlaps(org.locationtech.jts.index.bintree.Interval) -> overlaps
    63:63:boolean overlaps(double,double) -> overlaps
    82:82:java.lang.String toString() -> toString
org.locationtech.jts.index.bintree.Key -> org.locationtech.jts.index.bintree.Key:
    38:45:void <init>(org.locationtech.jts.index.bintree.Interval) -> <init>
    70:73:void computeInterval(int,org.locationtech.jts.index.bintree.Interval) -> computeInterval
    58:64:void computeKey(org.locationtech.jts.index.bintree.Interval) -> computeKey
    30:32:int computeLevel(org.locationtech.jts.index.bintree.Interval) -> computeLevel
    50:50:org.locationtech.jts.index.bintree.Interval getInterval() -> getInterval
    49:49:int getLevel() -> getLevel
    48:48:double getPoint() -> getPoint
org.locationtech.jts.index.bintree.Node -> org.locationtech.jts.index.bintree.Node:
    49:52:void <init>(org.locationtech.jts.index.bintree.Interval,int) -> <init>
    36:40:org.locationtech.jts.index.bintree.Node createExpanded(org.locationtech.jts.index.bintree.Node,org.locationtech.jts.index.bintree.Interval) -> createExpanded
    27:30:org.locationtech.jts.index.bintree.Node createNode(org.locationtech.jts.index.bintree.Interval) -> createNode
    139:148:org.locationtech.jts.index.bintree.Node createSubnode(int) -> createSubnode
    90:96:org.locationtech.jts.index.bintree.NodeBase find(org.locationtech.jts.index.bintree.Interval) -> find
    55:55:org.locationtech.jts.index.bintree.Interval getInterval() -> getInterval
    71:77:org.locationtech.jts.index.bintree.Node getNode(org.locationtech.jts.index.bintree.Interval) -> getNode
    124:127:org.locationtech.jts.index.bintree.Node getSubnode(int) -> getSubnode
    104:114:void insert(org.locationtech.jts.index.bintree.Node) -> insert
    61:61:boolean isSearchMatch(org.locationtech.jts.index.bintree.Interval) -> isSearchMatch
org.locationtech.jts.index.bintree.NodeBase -> org.locationtech.jts.index.bintree.NodeBase:
    40:49:void <init>() -> <init>
    56:56:void add(java.lang.Object) -> add
    60:63:java.util.List addAllItems(java.util.List) -> addAllItems
    80:87:void addAllItemsFromOverlapping(org.locationtech.jts.index.bintree.Interval,java.util.Collection) -> addAllItemsFromOverlapping
    142:143:int depth() -> depth
    52:52:java.util.List getItems() -> getItems
    35:36:int getSubnodeIndex(org.locationtech.jts.index.bintree.Interval,double) -> getSubnodeIndex
    130:130:boolean hasChildren() -> hasChildren
    136:136:boolean hasItems() -> hasItems
    124:124:boolean isPrunable() -> isPrunable
    166:167:int nodeSize() -> nodeSize
    100:118:boolean remove(org.locationtech.jts.index.bintree.Interval,java.lang.Object) -> remove
    155:159:int size() -> size
org.locationtech.jts.index.bintree.Root -> org.locationtech.jts.index.bintree.Root:
    33:33:void <init>() -> <init>
    41:65:void insert(org.locationtech.jts.index.bintree.Interval,java.lang.Object) -> insert
    76:88:void insertContained(org.locationtech.jts.index.bintree.Node,org.locationtech.jts.index.bintree.Interval,java.lang.Object) -> insertContained
    0:0:boolean isSearchMatch(org.locationtech.jts.index.bintree.Interval) -> isSearchMatch
org.locationtech.jts.index.chain.MonotoneChain -> org.locationtech.jts.index.chain.MonotoneChain:
    68:77:void <init>(org.locationtech.jts.geom.Coordinate[],int,int,java.lang.Object) -> <init>
    191:191:void computeOverlaps(org.locationtech.jts.index.chain.MonotoneChain,org.locationtech.jts.index.chain.MonotoneChainOverlapAction) -> computeOverlaps
    203:221:void computeOverlaps(int,int,org.locationtech.jts.index.chain.MonotoneChain,int,int,org.locationtech.jts.index.chain.MonotoneChainOverlapAction) -> computeOverlaps
    148:171:void computeSelect(org.locationtech.jts.geom.Envelope,int,int,org.locationtech.jts.index.chain.MonotoneChainSelectAction) -> computeSelect
    83:83:java.lang.Object getContext() -> getContext
    115:118:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    96:96:int getEndIndex() -> getEndIndex
    87:92:org.locationtech.jts.geom.Envelope getEnvelope() -> getEnvelope
    81:81:int getId() -> getId
    106:107:void getLineSegment(int,org.locationtech.jts.geom.LineSegment) -> getLineSegment
    95:95:int getStartIndex() -> getStartIndex
    239:239:boolean overlaps(int,int,org.locationtech.jts.index.chain.MonotoneChain,int,int) -> overlaps
    140:140:void select(org.locationtech.jts.geom.Envelope,org.locationtech.jts.index.chain.MonotoneChainSelectAction) -> select
    80:80:void setId(int) -> setId
org.locationtech.jts.index.chain.MonotoneChainBuilder -> org.locationtech.jts.index.chain.MonotoneChainBuilder:
    118:118:void <init>() -> <init>
    95:109:int findChainEnd(org.locationtech.jts.geom.Coordinate[],int) -> findChainEnd
    69:77:int[] getChainStartIndices(org.locationtech.jts.geom.Coordinate[]) -> getChainStartIndices
    41:41:java.util.List getChains(org.locationtech.jts.geom.Coordinate[]) -> getChains
    50:54:java.util.List getChains(org.locationtech.jts.geom.Coordinate[],java.lang.Object) -> getChains
    32:34:int[] toIntArray(java.util.List) -> toIntArray
org.locationtech.jts.index.chain.MonotoneChainOverlapAction -> org.locationtech.jts.index.chain.MonotoneChainOverlapAction:
    24:27:void <init>() -> <init>
    0:0:void overlap(org.locationtech.jts.geom.LineSegment,org.locationtech.jts.geom.LineSegment) -> overlap
    37:39:void overlap(org.locationtech.jts.index.chain.MonotoneChain,int,org.locationtech.jts.index.chain.MonotoneChain,int) -> overlap
org.locationtech.jts.index.chain.MonotoneChainSelectAction -> org.locationtech.jts.index.chain.MonotoneChainSelectAction:
    24:29:void <init>() -> <init>
    0:0:void select(org.locationtech.jts.geom.LineSegment) -> select
    41:43:void select(org.locationtech.jts.index.chain.MonotoneChain,int) -> select
org.locationtech.jts.index.intervalrtree.IntervalRTreeBranchNode -> org.locationtech.jts.index.intervalrtree.IntervalRTreeBranchNode:
    23:26:void <init>(org.locationtech.jts.index.intervalrtree.IntervalRTreeNode,org.locationtech.jts.index.intervalrtree.IntervalRTreeNode) -> <init>
    31:32:void buildExtent(org.locationtech.jts.index.intervalrtree.IntervalRTreeNode,org.locationtech.jts.index.intervalrtree.IntervalRTreeNode) -> buildExtent
    37:43:void query(double,double,org.locationtech.jts.index.ItemVisitor) -> query
org.locationtech.jts.index.intervalrtree.IntervalRTreeLeafNode -> org.locationtech.jts.index.intervalrtree.IntervalRTreeLeafNode:
    22:25:void <init>(double,double,java.lang.Object) -> <init>
    30:33:void query(double,double,org.locationtech.jts.index.ItemVisitor) -> query
org.locationtech.jts.index.intervalrtree.IntervalRTreeNode -> org.locationtech.jts.index.intervalrtree.IntervalRTreeNode:
    21:24:void <init>() -> <init>
    27:27:double getMax() -> getMax
    26:26:double getMin() -> getMin
    33:33:boolean intersects(double,double) -> intersects
    41:41:java.lang.String toString() -> toString
org.locationtech.jts.index.intervalrtree.IntervalRTreeNode$NodeComparator -> org.locationtech.jts.index.intervalrtree.IntervalRTreeNode$NodeComparator:
    44:44:void <init>() -> <init>
    48:51:int compare(java.lang.Object,java.lang.Object) -> compare
org.locationtech.jts.index.intervalrtree.SortedPackedIntervalRTree -> org.locationtech.jts.index.intervalrtree.SortedPackedIntervalRTree:
    40:98:void <init>() -> <init>
    102:116:void buildLevel(java.util.List,java.util.List) -> buildLevel
    72:74:void buildRoot() -> buildRoot
    80:90:org.locationtech.jts.index.intervalrtree.IntervalRTreeNode buildTree() -> buildTree
    66:67:void init() -> init
    59:61:void insert(double,double,java.lang.Object) -> insert
    123:123:void printNode(org.locationtech.jts.index.intervalrtree.IntervalRTreeNode) -> printNode
    136:138:void query(double,double,org.locationtech.jts.index.ItemVisitor) -> query
org.locationtech.jts.index.kdtree.KdNode -> org.locationtech.jts.index.kdtree.KdNode:
    24:42:void <init>(double,double,java.lang.Object) -> <init>
    24:56:void <init>(org.locationtech.jts.geom.Coordinate,java.lang.Object) -> <init>
    83:83:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    123:123:int getCount() -> getCount
    91:91:java.lang.Object getData() -> getData
    100:100:org.locationtech.jts.index.kdtree.KdNode getLeft() -> getLeft
    109:109:org.locationtech.jts.index.kdtree.KdNode getRight() -> getRight
    65:65:double getX() -> getX
    74:74:double getY() -> getY
    114:114:void increment() -> increment
    132:132:boolean isRepeated() -> isRepeated
    137:137:void setLeft(org.locationtech.jts.index.kdtree.KdNode) -> setLeft
    142:142:void setRight(org.locationtech.jts.index.kdtree.KdNode) -> setRight
org.locationtech.jts.index.kdtree.KdTree -> org.locationtech.jts.index.kdtree.KdTree:
    88:88:void <init>() -> <init>
    79:100:void <init>(double) -> <init>
    171:173:org.locationtech.jts.index.kdtree.KdNode findBestMatchNode(org.locationtech.jts.geom.Coordinate) -> findBestMatchNode
    122:122:org.locationtech.jts.index.kdtree.KdNode insert(org.locationtech.jts.geom.Coordinate) -> insert
    137:155:org.locationtech.jts.index.kdtree.KdNode insert(org.locationtech.jts.geom.Coordinate,java.lang.Object) -> insert
    227:270:org.locationtech.jts.index.kdtree.KdNode insertExact(org.locationtech.jts.geom.Coordinate,java.lang.Object) -> insertExact
    109:109:boolean isEmpty() -> isEmpty
    316:316:void query(org.locationtech.jts.geom.Envelope,org.locationtech.jts.index.kdtree.KdNodeVisitor) -> query
    327:328:java.util.List query(org.locationtech.jts.geom.Envelope) -> query
    341:341:void query(org.locationtech.jts.geom.Envelope,java.util.List) -> query
    284:303:void queryNode(org.locationtech.jts.index.kdtree.KdNode,org.locationtech.jts.geom.Envelope,boolean,org.locationtech.jts.index.kdtree.KdNodeVisitor) -> queryNode
    53:53:org.locationtech.jts.geom.Coordinate[] toCoordinates(java.util.Collection) -> toCoordinates
    68:76:org.locationtech.jts.geom.Coordinate[] toCoordinates(java.util.Collection,boolean) -> toCoordinates
org.locationtech.jts.index.kdtree.KdTree$1 -> org.locationtech.jts.index.kdtree.KdTree$1:
    341:341:void <init>(org.locationtech.jts.index.kdtree.KdTree,java.util.List) -> <init>
    344:344:void visit(org.locationtech.jts.index.kdtree.KdNode) -> visit
org.locationtech.jts.index.kdtree.KdTree$BestMatchVisitor -> org.locationtech.jts.index.kdtree.KdTree$BestMatchVisitor:
    179:185:void <init>(org.locationtech.jts.geom.Coordinate,double) -> <init>
    195:195:org.locationtech.jts.index.kdtree.KdNode getNode() -> getNode
    189:190:org.locationtech.jts.geom.Envelope queryEnvelope() -> queryEnvelope
    199:212:void visit(org.locationtech.jts.index.kdtree.KdNode) -> visit
org.locationtech.jts.index.quadtree.DoubleBits -> org.locationtech.jts.index.quadtree.DoubleBits:
    77:79:void <init>(double) -> <init>
    92:92:int biasedExponent() -> biasedExponent
    42:43:int exponent(double) -> exponent
    115:115:int getBit(int) -> getBit
    84:84:double getDouble() -> getDouble
    102:102:int getExponent() -> getExponent
    63:70:double maximumCommonMantissa(double,double) -> maximumCommonMantissa
    130:130:int numCommonMantissaBits(org.locationtech.jts.index.quadtree.DoubleBits) -> numCommonMantissaBits
    34:37:double powerOf2(int) -> powerOf2
    55:56:java.lang.String toBinaryString(double) -> toBinaryString
    141:148:java.lang.String toString() -> toString
    48:50:double truncateToPowerOfTwo(double) -> truncateToPowerOfTwo
    109:109:void zeroLowerBits(int) -> zeroLowerBits
org.locationtech.jts.index.quadtree.IntervalSize -> org.locationtech.jts.index.quadtree.IntervalSize:
    26:26:void <init>() -> <init>
    47:49:boolean isZeroWidth(double,double) -> isZeroWidth
org.locationtech.jts.index.quadtree.Key -> org.locationtech.jts.index.quadtree.Key:
    37:44:void <init>(org.locationtech.jts.geom.Envelope) -> <init>
    64:70:void computeKey(org.locationtech.jts.geom.Envelope) -> computeKey
    76:79:void computeKey(int,org.locationtech.jts.geom.Envelope) -> computeKey
    29:32:int computeQuadLevel(org.locationtech.jts.geom.Envelope) -> computeQuadLevel
    53:55:org.locationtech.jts.geom.Coordinate getCentre() -> getCentre
    49:49:org.locationtech.jts.geom.Envelope getEnvelope() -> getEnvelope
    48:48:int getLevel() -> getLevel
    47:47:org.locationtech.jts.geom.Coordinate getPoint() -> getPoint
org.locationtech.jts.index.quadtree.Node -> org.locationtech.jts.index.quadtree.Node:
    51:56:void <init>(org.locationtech.jts.geom.Envelope,int) -> <init>
    37:41:org.locationtech.jts.index.quadtree.Node createExpanded(org.locationtech.jts.index.quadtree.Node,org.locationtech.jts.geom.Envelope) -> createExpanded
    30:31:org.locationtech.jts.index.quadtree.Node createNode(org.locationtech.jts.geom.Envelope) -> createNode
    150:175:org.locationtech.jts.index.quadtree.Node createSubnode(int) -> createSubnode
    95:101:org.locationtech.jts.index.quadtree.NodeBase find(org.locationtech.jts.geom.Envelope) -> find
    59:59:org.locationtech.jts.geom.Envelope getEnvelope() -> getEnvelope
    76:82:org.locationtech.jts.index.quadtree.Node getNode(org.locationtech.jts.geom.Envelope) -> getNode
    133:136:org.locationtech.jts.index.quadtree.Node getSubnode(int) -> getSubnode
    109:123:void insertNode(org.locationtech.jts.index.quadtree.Node) -> insertNode
    64:64:boolean isSearchMatch(org.locationtech.jts.geom.Envelope) -> isSearchMatch
org.locationtech.jts.index.quadtree.NodeBase -> org.locationtech.jts.index.quadtree.NodeBase:
    54:66:void <init>() -> <init>
    75:75:void add(java.lang.Object) -> add
    149:152:java.util.List addAllItems(java.util.List) -> addAllItems
    161:170:void addAllItemsFromOverlapping(org.locationtech.jts.geom.Envelope,java.util.List) -> addAllItemsFromOverlapping
    205:206:int depth() -> depth
    69:69:java.util.List getItems() -> getItems
    229:230:int getNodeCount() -> getNodeCount
    43:49:int getSubnodeIndex(org.locationtech.jts.geom.Envelope,double,double) -> getSubnodeIndex
    120:120:boolean hasChildren() -> hasChildren
    71:71:boolean hasItems() -> hasItems
    129:133:boolean isEmpty() -> isEmpty
    114:114:boolean isPrunable() -> isPrunable
    90:108:boolean remove(org.locationtech.jts.geom.Envelope,java.lang.Object) -> remove
    218:222:int size() -> size
    177:186:void visit(org.locationtech.jts.geom.Envelope,org.locationtech.jts.index.ItemVisitor) -> visit
    194:195:void visitItems(org.locationtech.jts.geom.Envelope,org.locationtech.jts.index.ItemVisitor) -> visitItems
org.locationtech.jts.index.quadtree.Quadtree -> org.locationtech.jts.index.quadtree.Quadtree:
    97:104:void <init>() -> <init>
    233:239:void collectStats(org.locationtech.jts.geom.Envelope) -> collectStats
    115:115:int depth() -> depth
    68:84:org.locationtech.jts.geom.Envelope ensureExtent(org.locationtech.jts.geom.Envelope,double) -> ensureExtent
    143:145:void insert(org.locationtech.jts.geom.Envelope,java.lang.Object) -> insert
    126:127:boolean isEmpty() -> isEmpty
    194:196:java.util.List query(org.locationtech.jts.geom.Envelope) -> query
    218:218:void query(org.locationtech.jts.geom.Envelope,org.locationtech.jts.index.ItemVisitor) -> query
    226:227:java.util.List queryAll() -> queryAll
    157:158:boolean remove(org.locationtech.jts.geom.Envelope,java.lang.Object) -> remove
    137:137:int size() -> size
org.locationtech.jts.index.quadtree.Root -> org.locationtech.jts.index.quadtree.Root:
    30:30:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    41:65:void insert(org.locationtech.jts.geom.Envelope,java.lang.Object) -> insert
    77:90:void insertContained(org.locationtech.jts.index.quadtree.Node,org.locationtech.jts.geom.Envelope,java.lang.Object) -> insertContained
    0:0:boolean isSearchMatch(org.locationtech.jts.geom.Envelope) -> isSearchMatch
org.locationtech.jts.index.strtree.AbstractNode -> org.locationtech.jts.index.strtree.AbstractNode:
    38:45:void <init>() -> <init>
    38:54:void <init>(int) -> <init>
    128:129:void addChildBoundable(org.locationtech.jts.index.strtree.Boundable) -> addChildBoundable
    85:88:java.lang.Object getBounds() -> getBounds
    64:64:java.util.List getChildBoundables() -> getChildBoundables
    98:98:int getLevel() -> getLevel
    118:118:boolean isEmpty() -> isEmpty
    108:108:int size() -> size
org.locationtech.jts.index.strtree.AbstractSTRtree -> org.locationtech.jts.index.strtree.AbstractSTRtree:
    83:83:void <init>() -> <init>
    68:94:void <init>(int) -> <init>
    428:429:java.util.List boundablesAtLevel(int) -> boundablesAtLevel
    437:449:void boundablesAtLevel(int,org.locationtech.jts.index.strtree.AbstractNode,java.util.Collection) -> boundablesAtLevel
    104:111:void build() -> build
    0:0:int compareDoubles(double,double) -> compareDoubles
    156:161:org.locationtech.jts.index.strtree.AbstractNode createHigherLevels(java.util.List,int) -> createHigherLevels
    120:130:java.util.List createParentBoundables(java.util.List,int) -> createParentBoundables
    219:223:int depth() -> depth
    229:232:int depth(org.locationtech.jts.index.strtree.AbstractNode) -> depth
    180:180:int getNodeCapacity() -> getNodeCapacity
    171:172:org.locationtech.jts.index.strtree.AbstractNode getRoot() -> getRoot
    242:243:void insert(java.lang.Object,java.lang.Object) -> insert
    191:192:boolean isEmpty() -> isEmpty
    336:340:java.util.List itemsTree() -> itemsTree
    346:362:java.util.List itemsTree(org.locationtech.jts.index.strtree.AbstractNode) -> itemsTree
    136:136:org.locationtech.jts.index.strtree.AbstractNode lastNode(java.util.List) -> lastNode
    250:257:java.util.List query(java.lang.Object) -> query
    266:273:void query(java.lang.Object,org.locationtech.jts.index.ItemVisitor) -> query
    285:298:void queryInternal(java.lang.Object,org.locationtech.jts.index.strtree.AbstractNode,java.util.List) -> queryInternal
    304:317:void queryInternal(java.lang.Object,org.locationtech.jts.index.strtree.AbstractNode,org.locationtech.jts.index.ItemVisitor) -> queryInternal
    372:374:boolean remove(java.lang.Object,java.lang.Object) -> remove
    398:421:boolean remove(java.lang.Object,org.locationtech.jts.index.strtree.AbstractNode,java.lang.Object) -> remove
    382:390:boolean removeItem(org.locationtech.jts.index.strtree.AbstractNode,java.lang.Object) -> removeItem
    196:200:int size() -> size
    206:211:int size(org.locationtech.jts.index.strtree.AbstractNode) -> size
org.locationtech.jts.index.strtree.BoundablePair -> org.locationtech.jts.index.strtree.BoundablePair:
    44:48:void <init>(org.locationtech.jts.index.strtree.Boundable,org.locationtech.jts.index.strtree.Boundable,org.locationtech.jts.index.strtree.ItemDistance) -> <init>
    155:155:double area(org.locationtech.jts.index.strtree.Boundable) -> area
    132:133:int compareTo(java.lang.Object) -> compareTo
    76:82:double distance() -> distance
    205:218:void expand(org.locationtech.jts.index.strtree.Boundable,org.locationtech.jts.index.strtree.Boundable,boolean,org.locationtech.jts.util.PriorityQueue,double) -> expand
    172:199:void expandToQueue(org.locationtech.jts.util.PriorityQueue,double) -> expandToQueue
    60:61:org.locationtech.jts.index.strtree.Boundable getBoundable(int) -> getBoundable
    125:125:double getDistance() -> getDistance
    150:150:boolean isComposite(java.lang.Object) -> isComposite
    145:145:boolean isLeaves() -> isLeaves
org.locationtech.jts.index.strtree.BoundablePairDistanceComparator -> org.locationtech.jts.index.strtree.BoundablePairDistanceComparator:
    35:36:void <init>(boolean) -> <init>
    23:23:int compare(java.lang.Object,java.lang.Object) -> compare
    43:45:int compare(org.locationtech.jts.index.strtree.BoundablePair,org.locationtech.jts.index.strtree.BoundablePair) -> compare
org.locationtech.jts.index.strtree.GeometryItemDistance -> org.locationtech.jts.index.strtree.GeometryItemDistance:
    25:25:void <init>() -> <init>
    38:40:double distance(org.locationtech.jts.index.strtree.ItemBoundable,org.locationtech.jts.index.strtree.ItemBoundable) -> distance
org.locationtech.jts.index.strtree.Interval -> org.locationtech.jts.index.strtree.Interval:
    26:26:void <init>(org.locationtech.jts.index.strtree.Interval) -> <init>
    29:32:void <init>(double,double) -> <init>
    53:55:boolean equals(java.lang.Object) -> equals
    44:45:org.locationtech.jts.index.strtree.Interval expandToInclude(org.locationtech.jts.index.strtree.Interval) -> expandToInclude
    38:38:double getCentre() -> getCentre
    50:50:boolean intersects(org.locationtech.jts.index.strtree.Interval) -> intersects
org.locationtech.jts.index.strtree.ItemBoundable -> org.locationtech.jts.index.strtree.ItemBoundable:
    27:29:void <init>(java.lang.Object,java.lang.Object) -> <init>
    33:33:java.lang.Object getBounds() -> getBounds
    36:36:java.lang.Object getItem() -> getItem
org.locationtech.jts.index.strtree.SIRtree -> org.locationtech.jts.index.strtree.SIRtree:
    51:51:void <init>() -> <init>
    34:58:void <init>(int) -> <init>
    62:62:org.locationtech.jts.index.strtree.AbstractNode createNode(int) -> createNode
    106:106:java.util.Comparator getComparator() -> getComparator
    102:102:org.locationtech.jts.index.strtree.AbstractSTRtree$IntersectsOp getIntersectsOp() -> getIntersectsOp
    83:83:void insert(double,double,java.lang.Object) -> insert
    90:90:java.util.List query(double) -> query
    98:98:java.util.List query(double,double) -> query
org.locationtech.jts.index.strtree.SIRtree$1 -> org.locationtech.jts.index.strtree.SIRtree$1:
    34:34:void <init>(org.locationtech.jts.index.strtree.SIRtree) -> <init>
    36:38:int compare(java.lang.Object,java.lang.Object) -> compare
org.locationtech.jts.index.strtree.SIRtree$2 -> org.locationtech.jts.index.strtree.SIRtree$2:
    42:42:void <init>(org.locationtech.jts.index.strtree.SIRtree) -> <init>
    44:44:boolean intersects(java.lang.Object,java.lang.Object) -> intersects
org.locationtech.jts.index.strtree.SIRtree$3 -> org.locationtech.jts.index.strtree.SIRtree$3:
    62:62:void <init>(org.locationtech.jts.index.strtree.SIRtree,int) -> <init>
    65:71:java.lang.Object computeBounds() -> computeBounds
org.locationtech.jts.index.strtree.STRtree -> org.locationtech.jts.index.strtree.STRtree:
    79:106:void <clinit>() -> <clinit>
    169:169:void <init>() -> <init>
    180:180:void <init>(int) -> <init>
    48:48:double access$000(org.locationtech.jts.geom.Envelope) -> access$000
    48:48:double access$100(org.locationtech.jts.geom.Envelope) -> access$100
    0:0:double avg(double,double) -> avg
    97:97:double centreX(org.locationtech.jts.geom.Envelope) -> centreX
    101:101:double centreY(org.locationtech.jts.geom.Envelope) -> centreY
    184:184:org.locationtech.jts.index.strtree.AbstractNode createNode(int) -> createNode
    120:126:java.util.List createParentBoundables(java.util.List,int) -> createParentBoundables
    140:140:java.util.List createParentBoundablesFromVerticalSlice(java.util.List,int) -> createParentBoundablesFromVerticalSlice
    130:134:java.util.List createParentBoundablesFromVerticalSlices(java.util.List[],int) -> createParentBoundablesFromVerticalSlices
    245:245:int depth() -> depth
    249:249:java.util.Comparator getComparator() -> getComparator
    188:188:org.locationtech.jts.index.strtree.AbstractSTRtree$IntersectsOp getIntersectsOp() -> getIntersectsOp
    490:495:java.lang.Object[] getItems(java.util.PriorityQueue) -> getItems
    195:196:void insert(org.locationtech.jts.geom.Envelope,java.lang.Object) -> insert
    263:264:java.lang.Object[] nearestNeighbour(org.locationtech.jts.index.strtree.ItemDistance) -> nearestNeighbour
    289:291:java.lang.Object[] nearestNeighbour(org.locationtech.jts.geom.Envelope,java.lang.Object,org.locationtech.jts.index.strtree.ItemDistance,int) -> nearestNeighbour
    311:313:java.lang.Object nearestNeighbour(org.locationtech.jts.geom.Envelope,java.lang.Object,org.locationtech.jts.index.strtree.ItemDistance) -> nearestNeighbour
    332:333:java.lang.Object[] nearestNeighbour(org.locationtech.jts.index.strtree.STRtree,org.locationtech.jts.index.strtree.ItemDistance) -> nearestNeighbour
    338:338:java.lang.Object[] nearestNeighbour(org.locationtech.jts.index.strtree.BoundablePair) -> nearestNeighbour
    342:342:java.lang.Object[] nearestNeighbour(org.locationtech.jts.index.strtree.BoundablePair,int) -> nearestNeighbour
    350:402:java.lang.Object[] nearestNeighbour(org.locationtech.jts.index.strtree.BoundablePair,double) -> nearestNeighbour
    410:482:java.lang.Object[] nearestNeighbour(org.locationtech.jts.index.strtree.BoundablePair,double,int) -> nearestNeighbour
    205:205:java.util.List query(org.locationtech.jts.geom.Envelope) -> query
    214:214:void query(org.locationtech.jts.geom.Envelope,org.locationtech.jts.index.ItemVisitor) -> query
    225:225:boolean remove(org.locationtech.jts.geom.Envelope,java.lang.Object) -> remove
    235:235:int size() -> size
    147:155:java.util.List[] verticalSlices(java.util.List,int) -> verticalSlices
org.locationtech.jts.index.strtree.STRtree$1 -> org.locationtech.jts.index.strtree.STRtree$1:
    80:80:void <init>() -> <init>
    82:84:int compare(java.lang.Object,java.lang.Object) -> compare
org.locationtech.jts.index.strtree.STRtree$2 -> org.locationtech.jts.index.strtree.STRtree$2:
    88:88:void <init>() -> <init>
    90:92:int compare(java.lang.Object,java.lang.Object) -> compare
org.locationtech.jts.index.strtree.STRtree$3 -> org.locationtech.jts.index.strtree.STRtree$3:
    106:106:void <init>() -> <init>
    108:108:boolean intersects(java.lang.Object,java.lang.Object) -> intersects
org.locationtech.jts.index.strtree.STRtree$STRtreeNode -> org.locationtech.jts.index.strtree.STRtree$STRtreeNode:
    52:52:void <init>(int,org.locationtech.jts.index.strtree.STRtree$1) -> <init>
    56:56:void <init>(int) -> <init>
    61:67:java.lang.Object computeBounds() -> computeBounds
org.locationtech.jts.index.sweepline.SweepLineEvent -> org.locationtech.jts.index.sweepline.SweepLineEvent:
    33:39:void <init>(double,org.locationtech.jts.index.sweepline.SweepLineEvent,org.locationtech.jts.index.sweepline.SweepLineInterval) -> <init>
    57:60:int compareTo(java.lang.Object) -> compareTo
    45:45:int getDeleteEventIndex() -> getDeleteEventIndex
    44:44:org.locationtech.jts.index.sweepline.SweepLineEvent getInsertEvent() -> getInsertEvent
    48:48:org.locationtech.jts.index.sweepline.SweepLineInterval getInterval() -> getInterval
    43:43:boolean isDelete() -> isDelete
    42:42:boolean isInsert() -> isInsert
    46:46:void setDeleteEventIndex(int) -> setDeleteEventIndex
org.locationtech.jts.index.sweepline.SweepLineIndex -> org.locationtech.jts.index.sweepline.SweepLineIndex:
    28:33:void <init>() -> <init>
    38:40:void add(org.locationtech.jts.index.sweepline.SweepLineInterval) -> add
    50:59:void buildIndex() -> buildIndex
    64:71:void computeOverlaps(org.locationtech.jts.index.sweepline.SweepLineOverlapAction) -> computeOverlaps
    84:88:void processOverlaps(int,int,org.locationtech.jts.index.sweepline.SweepLineInterval,org.locationtech.jts.index.sweepline.SweepLineOverlapAction) -> processOverlaps
org.locationtech.jts.index.sweepline.SweepLineInterval -> org.locationtech.jts.index.sweepline.SweepLineInterval:
    26:26:void <init>(double,double) -> <init>
    30:33:void <init>(double,double,java.lang.Object) -> <init>
    38:38:java.lang.Object getItem() -> getItem
    37:37:double getMax() -> getMax
    36:36:double getMin() -> getMin
org.locationtech.jts.io.ByteArrayInStream -> org.locationtech.jts.io.ByteArrayInStream:
    34:35:void <init>(byte[]) -> <init>
    55:68:void read(byte[]) -> read
    44:45:void setBytes(byte[]) -> setBytes
org.locationtech.jts.io.ByteOrderDataInStream -> org.locationtech.jts.io.ByteOrderDataInStream:
    23:32:void <init>() -> <init>
    23:37:void <init>(org.locationtech.jts.io.InStream) -> <init>
    63:64:byte readByte() -> readByte
    83:84:double readDouble() -> readDouble
    70:71:int readInt() -> readInt
    76:77:long readLong() -> readLong
    48:48:void setInStream(org.locationtech.jts.io.InStream) -> setInStream
    52:52:void setOrder(int) -> setOrder
org.locationtech.jts.io.ByteOrderValues -> org.locationtech.jts.io.ByteOrderValues:
    20:20:void <init>() -> <init>
    108:109:double getDouble(byte[],int) -> getDouble
    28:34:int getInt(byte[],int) -> getInt
    59:70:long getLong(byte[],int) -> getLong
    114:115:void putDouble(double,byte[],int) -> putDouble
    44:53:void putInt(int,byte[],int) -> putInt
    85:102:void putLong(long,byte[],int) -> putLong
org.locationtech.jts.io.InputStreamInStream -> org.locationtech.jts.io.InputStreamInStream:
    26:27:void <init>(java.io.InputStream) -> <init>
    32:32:void read(byte[]) -> read
org.locationtech.jts.io.Ordinate -> org.locationtech.jts.io.Ordinate:
    22:43:void <clinit>() -> <clinit>
    22:22:void <init>(java.lang.String,int) -> <init>
    49:49:java.util.EnumSet createXY() -> createXY
    59:59:java.util.EnumSet createXYM() -> createXYM
    54:54:java.util.EnumSet createXYZ() -> createXYZ
    64:64:java.util.EnumSet createXYZM() -> createXYZM
    22:22:org.locationtech.jts.io.Ordinate valueOf(java.lang.String) -> valueOf
    22:22:org.locationtech.jts.io.Ordinate[] values() -> values
org.locationtech.jts.io.OutputStreamOutStream -> org.locationtech.jts.io.OutputStreamOutStream:
    26:27:void <init>(java.io.OutputStream) -> <init>
    31:31:void write(byte[],int) -> write
org.locationtech.jts.io.ParseException -> org.locationtech.jts.io.ParseException:
    29:29:void <init>(java.lang.String) -> <init>
    39:39:void <init>(java.lang.Exception) -> <init>
    50:50:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.locationtech.jts.io.WKBHexFileReader -> org.locationtech.jts.io.WKBHexFileReader:
    41:55:void <init>(java.io.File,org.locationtech.jts.io.WKBReader) -> <init>
    66:66:void <init>(java.lang.String,org.locationtech.jts.io.WKBReader) -> <init>
    38:78:void <init>(java.io.Reader,org.locationtech.jts.io.WKBReader) -> <init>
    160:168:boolean isAtEndOfFile(java.io.BufferedReader) -> isAtEndOfFile
    147:148:boolean isAtLimit(java.util.List) -> isAtLimit
    114:126:java.util.List read() -> read
    132:140:java.util.List read(java.io.BufferedReader) -> read
    88:88:void setLimit(int) -> setLimit
    98:98:void setOffset(int) -> setOffset
org.locationtech.jts.io.WKBReader -> org.locationtech.jts.io.WKBReader:
    116:116:void <init>() -> <init>
    104:122:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    73:84:byte[] hexToBytes(java.lang.String) -> hexToBytes
    91:93:int hexToInt(char) -> hexToInt
    137:140:org.locationtech.jts.geom.Geometry read(byte[]) -> read
    155:156:org.locationtech.jts.geom.Geometry read(org.locationtech.jts.io.InStream) -> read
    376:381:void readCoordinate() -> readCoordinate
    340:347:org.locationtech.jts.geom.CoordinateSequence readCoordinateSequence(int) -> readCoordinateSequence
    355:358:org.locationtech.jts.geom.CoordinateSequence readCoordinateSequenceLineString(int) -> readCoordinateSequenceLineString
    363:366:org.locationtech.jts.geom.CoordinateSequence readCoordinateSequenceRing(int) -> readCoordinateSequenceRing
    165:237:org.locationtech.jts.geom.Geometry readGeometry() -> readGeometry
    330:335:org.locationtech.jts.geom.GeometryCollection readGeometryCollection() -> readGeometryCollection
    262:264:org.locationtech.jts.geom.LineString readLineString() -> readLineString
    269:271:org.locationtech.jts.geom.LinearRing readLinearRing() -> readLinearRing
    303:311:org.locationtech.jts.geom.MultiLineString readMultiLineString() -> readMultiLineString
    290:298:org.locationtech.jts.geom.MultiPoint readMultiPoint() -> readMultiPoint
    316:325:org.locationtech.jts.geom.MultiPolygon readMultiPolygon() -> readMultiPolygon
    256:257:org.locationtech.jts.geom.Point readPoint() -> readPoint
    276:285:org.locationtech.jts.geom.Polygon readPolygon() -> readPolygon
    250:250:org.locationtech.jts.geom.Geometry setSRID(org.locationtech.jts.geom.Geometry,int) -> setSRID
org.locationtech.jts.io.WKBWriter -> org.locationtech.jts.io.WKBWriter:
    213:213:void <init>() -> <init>
    226:226:void <init>(int) -> <init>
    242:242:void <init>(int,boolean) -> <init>
    256:256:void <init>(int,int) -> <init>
    200:277:void <init>(int,int,boolean) -> <init>
    171:171:java.lang.String bytesToHex(byte[]) -> bytesToHex
    182:188:java.lang.String toHex(byte[]) -> toHex
    194:194:char toHexDigit(int) -> toHexDigit
    289:295:byte[] write(org.locationtech.jts.geom.Geometry) -> write
    307:327:void write(org.locationtech.jts.geom.Geometry,org.locationtech.jts.io.OutStream) -> write
    373:377:void writeByteOrder(org.locationtech.jts.io.OutStream) -> writeByteOrder
    412:424:void writeCoordinate(org.locationtech.jts.geom.CoordinateSequence,int,org.locationtech.jts.io.OutStream) -> writeCoordinate
    402:405:void writeCoordinateSequence(org.locationtech.jts.geom.CoordinateSequence,boolean,org.locationtech.jts.io.OutStream) -> writeCoordinateSequence
    363:367:void writeGeometryCollection(int,org.locationtech.jts.geom.GeometryCollection,org.locationtech.jts.io.OutStream) -> writeGeometryCollection
    383:388:void writeGeometryType(int,org.locationtech.jts.geom.Geometry,org.locationtech.jts.io.OutStream) -> writeGeometryType
    394:395:void writeInt(int,org.locationtech.jts.io.OutStream) -> writeInt
    343:345:void writeLineString(org.locationtech.jts.geom.LineString,org.locationtech.jts.io.OutStream) -> writeLineString
    333:337:void writePoint(org.locationtech.jts.geom.Point,org.locationtech.jts.io.OutStream) -> writePoint
    350:355:void writePolygon(org.locationtech.jts.geom.Polygon,org.locationtech.jts.io.OutStream) -> writePolygon
org.locationtech.jts.io.WKTFileReader -> org.locationtech.jts.io.WKTFileReader:
    41:55:void <init>(java.io.File,org.locationtech.jts.io.WKTReader) -> <init>
    66:66:void <init>(java.lang.String,org.locationtech.jts.io.WKTReader) -> <init>
    37:78:void <init>(java.io.Reader,org.locationtech.jts.io.WKTReader) -> <init>
    157:165:boolean isAtEndOfFile(java.io.BufferedReader) -> isAtEndOfFile
    144:145:boolean isAtLimit(java.util.List) -> isAtLimit
    114:126:java.util.List read() -> read
    132:137:java.util.List read(java.io.BufferedReader) -> read
    88:88:void setLimit(int) -> setLimit
    98:98:void setOffset(int) -> setOffset
org.locationtech.jts.io.WKTReader -> org.locationtech.jts.io.WKTReader:
    145:145:void <clinit>() -> <clinit>
    166:166:void <init>() -> <init>
    153:178:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    247:258:java.io.StreamTokenizer createTokenizer(java.io.Reader) -> createTokenizer
    282:305:org.locationtech.jts.geom.CoordinateSequence getCoordinate(java.io.StreamTokenizer,java.util.EnumSet,boolean) -> getCoordinate
    329:329:org.locationtech.jts.geom.CoordinateSequence getCoordinateSequence(java.io.StreamTokenizer,java.util.EnumSet) -> getCoordinateSequence
    350:358:org.locationtech.jts.geom.CoordinateSequence getCoordinateSequence(java.io.StreamTokenizer,java.util.EnumSet,boolean) -> getCoordinateSequence
    444:456:org.locationtech.jts.geom.Coordinate[] getCoordinates(java.io.StreamTokenizer) -> getCoordinates
    473:481:org.locationtech.jts.geom.Coordinate[] getCoordinatesNoLeftParen(java.io.StreamTokenizer) -> getCoordinatesNoLeftParen
    673:677:java.lang.String getNextCloser(java.io.StreamTokenizer) -> getNextCloser
    656:660:java.lang.String getNextCloserOrComma(java.io.StreamTokenizer) -> getNextCloserOrComma
    581:598:java.lang.String getNextEmptyOrOpener(java.io.StreamTokenizer) -> getNextEmptyOrOpener
    551:568:double getNextNumber(java.io.StreamTokenizer) -> getNextNumber
    613:627:java.util.EnumSet getNextOrdinateFlags(java.io.StreamTokenizer) -> getNextOrdinateFlags
    689:702:java.lang.String getNextWord(java.io.StreamTokenizer) -> getNextWord
    499:508:org.locationtech.jts.geom.Coordinate getPreciseCoordinate(java.io.StreamTokenizer) -> getPreciseCoordinate
    520:521:boolean isNumberNext(java.io.StreamTokenizer) -> isNumberNext
    533:534:boolean isOpenerNext(java.io.StreamTokenizer) -> isOpenerNext
    642:643:java.lang.String lookAheadWord(java.io.StreamTokenizer) -> lookAheadWord
    391:422:org.locationtech.jts.geom.CoordinateSequence mergeSequences(java.util.ArrayList,java.util.EnumSet) -> mergeSequences
    715:721:org.locationtech.jts.io.ParseException parseErrorExpected(java.io.StreamTokenizer,java.lang.String) -> parseErrorExpected
    733:733:org.locationtech.jts.io.ParseException parseErrorWithLine(java.io.StreamTokenizer,java.lang.String) -> parseErrorWithLine
    212:217:org.locationtech.jts.geom.Geometry read(java.lang.String) -> read
    231:236:org.locationtech.jts.geom.Geometry read(java.io.Reader) -> read
    996:1008:org.locationtech.jts.geom.GeometryCollection readGeometryCollectionText(java.io.StreamTokenizer,java.util.EnumSet) -> readGeometryCollectionText
    768:785:org.locationtech.jts.geom.Geometry readGeometryTaggedText(java.io.StreamTokenizer) -> readGeometryTaggedText
    791:832:org.locationtech.jts.geom.Geometry readGeometryTaggedText(java.io.StreamTokenizer,java.lang.String,java.util.EnumSet) -> readGeometryTaggedText
    861:861:org.locationtech.jts.geom.LineString readLineStringText(java.io.StreamTokenizer,java.util.EnumSet) -> readLineStringText
    879:879:org.locationtech.jts.geom.LinearRing readLinearRingText(java.io.StreamTokenizer,java.util.EnumSet) -> readLinearRingText
    940:953:org.locationtech.jts.geom.MultiLineString readMultiLineStringText(java.io.StreamTokenizer,java.util.EnumSet) -> readMultiLineStringText
    894:895:org.locationtech.jts.geom.MultiPoint readMultiPointText(java.io.StreamTokenizer,java.util.EnumSet) -> readMultiPointText
    968:979:org.locationtech.jts.geom.MultiPolygon readMultiPolygonText(java.io.StreamTokenizer,java.util.EnumSet) -> readMultiPolygonText
    846:846:org.locationtech.jts.geom.Point readPointText(java.io.StreamTokenizer,java.util.EnumSet) -> readPointText
    912:925:org.locationtech.jts.geom.Polygon readPolygonText(java.io.StreamTokenizer,java.util.EnumSet) -> readPolygonText
    188:188:void setIsOldJtsCoordinateSyntaxAllowed(boolean) -> setIsOldJtsCoordinateSyntaxAllowed
    197:197:void setIsOldJtsMultiPointSyntaxAllowed(boolean) -> setIsOldJtsMultiPointSyntaxAllowed
    370:375:int toDimension(java.util.EnumSet) -> toDimension
    743:751:java.lang.String tokenString(java.io.StreamTokenizer) -> tokenString
org.locationtech.jts.io.WKTWriter -> org.locationtech.jts.io.WKTWriter:
    245:245:void <init>() -> <init>
    235:279:void <init>(int) -> <init>
    730:745:void appendCoordinate(org.locationtech.jts.geom.CoordinateSequence,java.util.EnumSet,int,java.io.Writer,java.text.DecimalFormat) -> appendCoordinate
    709:711:void appendGeometryCollectionTaggedText(org.locationtech.jts.geom.GeometryCollection,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendGeometryCollectionTaggedText
    975:989:void appendGeometryCollectionText(org.locationtech.jts.geom.GeometryCollection,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendGeometryCollectionText
    477:481:void appendGeometryTaggedText(org.locationtech.jts.geom.Geometry,boolean,java.io.Writer,java.text.DecimalFormat) -> appendGeometryTaggedText
    501:537:void appendGeometryTaggedText(org.locationtech.jts.geom.Geometry,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendGeometryTaggedText
    578:580:void appendLineStringTaggedText(org.locationtech.jts.geom.LineString,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendLineStringTaggedText
    600:602:void appendLinearRingTaggedText(org.locationtech.jts.geom.LinearRing,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendLinearRingTaggedText
    665:667:void appendMultiLineStringTaggedText(org.locationtech.jts.geom.MultiLineString,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendMultiLineStringTaggedText
    905:921:void appendMultiLineStringText(org.locationtech.jts.geom.MultiLineString,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendMultiLineStringText
    644:646:void appendMultiPointTaggedText(org.locationtech.jts.geom.MultiPoint,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendMultiPointTaggedText
    872:885:void appendMultiPointText(org.locationtech.jts.geom.MultiPoint,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendMultiPointText
    687:689:void appendMultiPolygonTaggedText(org.locationtech.jts.geom.MultiPolygon,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendMultiPolygonTaggedText
    940:956:void appendMultiPolygonText(org.locationtech.jts.geom.MultiPolygon,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendMultiPolygonText
    781:784:void appendOrdinateText(java.util.EnumSet,java.io.Writer) -> appendOrdinateText
    556:558:void appendPointTaggedText(org.locationtech.jts.geom.Point,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendPointTaggedText
    622:624:void appendPolygonTaggedText(org.locationtech.jts.geom.Polygon,java.util.EnumSet,boolean,int,java.io.Writer,java.text.DecimalFormat) -> appendPolygonTaggedText
    840:853:void appendPolygonText(org.locationtech.jts.geom.Polygon,java.util.EnumSet,boolean,int,boolean,java.io.Writer,java.text.DecimalFormat) -> appendPolygonText
    803:819:void appendSequenceText(org.locationtech.jts.geom.CoordinateSequence,java.util.EnumSet,boolean,int,boolean,java.io.Writer,java.text.DecimalFormat) -> appendSequenceText
    155:161:java.text.DecimalFormat createFormatter(org.locationtech.jts.geom.PrecisionModel) -> createFormatter
    356:356:java.util.EnumSet getOutputOrdinates() -> getOutputOrdinates
    1007:1009:void indent(boolean,int,java.io.Writer) -> indent
    996:999:void indentCoords(boolean,int,int,java.io.Writer) -> indentCoords
    289:289:void setFormatted(boolean) -> setFormatted
    302:302:void setMaxCoordinatesPerLine(int) -> setMaxCoordinatesPerLine
    333:346:void setOutputOrdinates(java.util.EnumSet) -> setOutputOrdinates
    369:369:void setPrecisionModel(org.locationtech.jts.geom.PrecisionModel) -> setPrecisionModel
    314:315:void setTab(int) -> setTab
    172:176:java.lang.String stringOfChar(char,int) -> stringOfChar
    84:97:java.lang.String toLineString(org.locationtech.jts.geom.CoordinateSequence) -> toLineString
    110:123:java.lang.String toLineString(org.locationtech.jts.geom.Coordinate[]) -> toLineString
    137:137:java.lang.String toLineString(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> toLineString
    71:71:java.lang.String toPoint(org.locationtech.jts.geom.Coordinate) -> toPoint
    381:393:java.lang.String write(org.locationtech.jts.geom.Geometry) -> write
    405:409:void write(org.locationtech.jts.geom.Geometry,java.io.Writer) -> write
    422:429:java.lang.String writeFormatted(org.locationtech.jts.geom.Geometry) -> writeFormatted
    440:440:void writeFormatted(org.locationtech.jts.geom.Geometry,java.io.Writer) -> writeFormatted
    453:459:void writeFormatted(org.locationtech.jts.geom.Geometry,boolean,java.io.Writer,org.locationtech.jts.geom.PrecisionModel) -> writeFormatted
    758:758:java.lang.String writeNumber(double,java.text.DecimalFormat) -> writeNumber
org.locationtech.jts.io.WKTWriter$CheckOrdinatesFilter -> org.locationtech.jts.io.WKTWriter$CheckOrdinatesFilter:
    183:183:void <init>(org.locationtech.jts.io.WKTWriter,java.util.EnumSet,org.locationtech.jts.io.WKTWriter$1) -> <init>
    193:196:void <init>(org.locationtech.jts.io.WKTWriter,java.util.EnumSet) -> <init>
    202:209:void filter(org.locationtech.jts.geom.CoordinateSequence,int) -> filter
    229:229:java.util.EnumSet getOutputOrdinates() -> getOutputOrdinates
    220:220:boolean isDone() -> isDone
    0:0:boolean isGeometryChanged() -> isGeometryChanged
org.locationtech.jts.io.gml2.GMLConstants -> org.locationtech.jts.io.gml2.GMLConstants:
    17:17:void <init>() -> <init>
org.locationtech.jts.io.gml2.GMLHandler -> org.locationtech.jts.io.gml2.GMLHandler:
    111:235:void <init>(org.locationtech.jts.geom.GeometryFactory,org.xml.sax.ErrorHandler) -> <init>
    184:185:void characters(char[],int,int) -> characters
    202:203:void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    258:261:void error(org.xml.sax.SAXParseException) -> error
    248:251:void fatalError(org.xml.sax.SAXParseException) -> fatalError
    238:238:org.xml.sax.Locator getDocumentLocator() -> getDocumentLocator
    165:173:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    193:194:void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    147:151:boolean isGeometryComplete() -> isGeometryComplete
    229:231:void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    212:219:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    268:271:void warning(org.xml.sax.SAXParseException) -> warning
org.locationtech.jts.io.gml2.GMLHandler$Handler -> org.locationtech.jts.io.gml2.GMLHandler$Handler:
    61:87:void <init>(org.locationtech.jts.io.gml2.GeometryStrategies$ParseStrategy,org.xml.sax.Attributes) -> <init>
    82:84:void addText(java.lang.String) -> addText
    107:107:java.lang.Object create(org.locationtech.jts.geom.GeometryFactory) -> create
    95:97:void keep(java.lang.Object) -> keep
org.locationtech.jts.io.gml2.GMLReader -> org.locationtech.jts.io.gml2.GMLReader:
    70:70:void <init>() -> <init>
    89:89:org.locationtech.jts.geom.Geometry read(java.lang.String,org.locationtech.jts.geom.GeometryFactory) -> read
    104:117:org.locationtech.jts.geom.Geometry read(java.io.Reader,org.locationtech.jts.geom.GeometryFactory) -> read
org.locationtech.jts.io.gml2.GMLWriter -> org.locationtech.jts.io.gml2.GMLWriter:
    57:82:void <init>() -> <init>
    57:93:void <init>(boolean) -> <init>
    466:468:void endGeomTag(java.lang.String,java.io.Writer) -> endGeomTag
    473:475:java.lang.String prefix() -> prefix
    149:149:void setCustomElements(java.lang.String[]) -> setCustomElements
    170:172:void setMaxCoordinatesPerLine(int) -> setMaxCoordinatesPerLine
    132:132:void setNamespace(boolean) -> setNamespace
    105:105:void setPrefix(java.lang.String) -> setPrefix
    120:120:void setSrsName(java.lang.String) -> setSrsName
    160:160:void setStartingIndentIndex(int) -> setStartingIndentIndex
    426:432:void startGeomTag(java.lang.String,org.locationtech.jts.geom.Geometry,java.io.Writer) -> startGeomTag
    421:421:void startLine(int,java.io.Writer) -> startLine
    183:190:java.lang.String write(org.locationtech.jts.geom.Geometry) -> write
    201:201:void write(org.locationtech.jts.geom.Geometry,java.io.Writer) -> write
    207:227:void write(org.locationtech.jts.geom.Geometry,java.io.Writer,int) -> write
    377:416:void write(org.locationtech.jts.geom.Coordinate[],java.io.Writer,int) -> write
    438:447:void writeAttributes(org.locationtech.jts.geom.Geometry,java.io.Writer) -> writeAttributes
    455:460:void writeCustomElements(org.locationtech.jts.geom.Geometry,java.io.Writer) -> writeCustomElements
    348:361:void writeGeometryCollection(org.locationtech.jts.geom.GeometryCollection,java.io.Writer,int) -> writeGeometryCollection
    244:250:void writeLineString(org.locationtech.jts.geom.LineString,java.io.Writer,int) -> writeLineString
    256:262:void writeLinearRing(org.locationtech.jts.geom.LinearRing,java.io.Writer,int) -> writeLinearRing
    312:325:void writeMultiLineString(org.locationtech.jts.geom.MultiLineString,java.io.Writer,int) -> writeMultiLineString
    294:307:void writeMultiPoint(org.locationtech.jts.geom.MultiPoint,java.io.Writer,int) -> writeMultiPoint
    330:343:void writeMultiPolygon(org.locationtech.jts.geom.MultiPolygon,java.io.Writer,int) -> writeMultiPolygon
    232:238:void writePoint(org.locationtech.jts.geom.Point,java.io.Writer,int) -> writePoint
    267:289:void writePolygon(org.locationtech.jts.geom.Polygon,java.io.Writer,int) -> writePolygon
org.locationtech.jts.io.gml2.GeometryStrategies -> org.locationtech.jts.io.gml2.GeometryStrategies:
    64:64:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
    525:525:org.locationtech.jts.io.gml2.GeometryStrategies$ParseStrategy findStrategy(java.lang.String,java.lang.String) -> findStrategy
    490:506:int getSrid(org.xml.sax.Attributes,int) -> getSrid
    66:483:java.util.HashMap loadStrategies() -> loadStrategies
org.locationtech.jts.io.gml2.GeometryStrategies$1 -> org.locationtech.jts.io.gml2.GeometryStrategies$1:
    69:69:void <init>() -> <init>
    75:88:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$10 -> org.locationtech.jts.io.gml2.GeometryStrategies$10:
    305:307:void <init>() -> <init>
    313:409:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$11 -> org.locationtech.jts.io.gml2.GeometryStrategies$11:
    417:417:void <init>() -> <init>
    423:434:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$12 -> org.locationtech.jts.io.gml2.GeometryStrategies$12:
    440:440:void <init>() -> <init>
    443:445:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$13 -> org.locationtech.jts.io.gml2.GeometryStrategies$13:
    458:458:void <init>() -> <init>
    461:467:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$2 -> org.locationtech.jts.io.gml2.GeometryStrategies$2:
    95:95:void <init>() -> <init>
    101:125:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$3 -> org.locationtech.jts.io.gml2.GeometryStrategies$3:
    132:132:void <init>() -> <init>
    138:162:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$4 -> org.locationtech.jts.io.gml2.GeometryStrategies$4:
    169:169:void <init>() -> <init>
    175:187:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$5 -> org.locationtech.jts.io.gml2.GeometryStrategies$5:
    194:194:void <init>() -> <init>
    200:210:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$6 -> org.locationtech.jts.io.gml2.GeometryStrategies$6:
    218:218:void <init>() -> <init>
    224:234:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$7 -> org.locationtech.jts.io.gml2.GeometryStrategies$7:
    241:241:void <init>() -> <init>
    247:257:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$8 -> org.locationtech.jts.io.gml2.GeometryStrategies$8:
    264:264:void <init>() -> <init>
    270:280:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.gml2.GeometryStrategies$9 -> org.locationtech.jts.io.gml2.GeometryStrategies$9:
    287:287:void <init>() -> <init>
    293:298:java.lang.Object parse(org.locationtech.jts.io.gml2.GMLHandler$Handler,org.locationtech.jts.geom.GeometryFactory) -> parse
org.locationtech.jts.io.kml.KMLWriter -> org.locationtech.jts.io.kml.KMLWriter:
    0:0:void <clinit>() -> <clinit>
    96:111:void <init>() -> <init>
    391:395:java.text.DecimalFormat createFormatter(int) -> createFormatter
    244:252:java.lang.String geometryTag(java.lang.String,java.lang.String) -> geometryTag
    171:171:void setAltitudeMode(java.lang.String) -> setAltitudeMode
    153:153:void setExtrude(boolean) -> setExtrude
    121:121:void setLinePrefix(java.lang.String) -> setLinePrefix
    134:134:void setMaximumCoordinatesPerLine(int) -> setMaximumCoordinatesPerLine
    183:183:void setPrecision(int) -> setPrecision
    162:162:void setTesselate(boolean) -> setTesselate
    144:144:void setZ(double) -> setZ
    237:240:void startLine(java.lang.String,int,java.lang.StringBuffer) -> startLine
    193:195:java.lang.String write(org.locationtech.jts.geom.Geometry) -> write
    206:206:void write(org.locationtech.jts.geom.Geometry,java.io.Writer) -> write
    216:216:void write(org.locationtech.jts.geom.Geometry,java.lang.StringBuffer) -> write
    330:351:void write(org.locationtech.jts.geom.Coordinate[],int,java.lang.StringBuffer) -> write
    355:368:void write(org.locationtech.jts.geom.Coordinate,java.lang.StringBuffer) -> write
    373:376:void write(double,java.lang.StringBuffer) -> write
    69:71:java.lang.String writeGeometry(org.locationtech.jts.geom.Geometry,double) -> writeGeometry
    88:93:java.lang.String writeGeometry(org.locationtech.jts.geom.Geometry,double,int,boolean,java.lang.String) -> writeGeometry
    221:233:void writeGeometry(org.locationtech.jts.geom.Geometry,int,java.lang.StringBuffer) -> writeGeometry
    316:320:void writeGeometryCollection(org.locationtech.jts.geom.GeometryCollection,java.lang.String,int,java.lang.StringBuffer) -> writeGeometryCollection
    280:283:void writeLineString(org.locationtech.jts.geom.LineString,java.lang.String,int,java.lang.StringBuffer) -> writeLineString
    290:293:void writeLinearRing(org.locationtech.jts.geom.LinearRing,java.lang.String,boolean,int,java.lang.StringBuffer) -> writeLinearRing
    257:264:void writeModifiers(int,java.lang.StringBuffer) -> writeModifiers
    271:274:void writePoint(org.locationtech.jts.geom.Point,java.lang.String,int,java.lang.StringBuffer) -> writePoint
    298:311:void writePolygon(org.locationtech.jts.geom.Polygon,java.lang.String,int,java.lang.StringBuffer) -> writePolygon
org.locationtech.jts.linearref.ExtractLineByLocation -> org.locationtech.jts.linearref.ExtractLineByLocation:
    47:48:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    85:120:org.locationtech.jts.geom.LineString computeLine(org.locationtech.jts.linearref.LinearLocation,org.locationtech.jts.linearref.LinearLocation) -> computeLine
    132:151:org.locationtech.jts.geom.Geometry computeLinear(org.locationtech.jts.linearref.LinearLocation,org.locationtech.jts.linearref.LinearLocation) -> computeLinear
    41:42:org.locationtech.jts.geom.Geometry extract(org.locationtech.jts.geom.Geometry,org.locationtech.jts.linearref.LinearLocation,org.locationtech.jts.linearref.LinearLocation) -> extract
    61:64:org.locationtech.jts.geom.Geometry extract(org.locationtech.jts.linearref.LinearLocation,org.locationtech.jts.linearref.LinearLocation) -> extract
    69:73:org.locationtech.jts.geom.Geometry reverse(org.locationtech.jts.geom.Geometry) -> reverse
org.locationtech.jts.linearref.LengthIndexOfPoint -> org.locationtech.jts.linearref.LengthIndexOfPoint:
    43:44:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    31:32:double indexOf(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Coordinate) -> indexOf
    55:55:double indexOf(org.locationtech.jts.geom.Coordinate) -> indexOf
    37:38:double indexOfAfter(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Coordinate,double) -> indexOfAfter
    75:86:double indexOfAfter(org.locationtech.jts.geom.Coordinate,double) -> indexOfAfter
    97:112:double indexOfFromStart(org.locationtech.jts.geom.Coordinate,double) -> indexOfFromStart
    121:127:double segmentNearestMeasure(org.locationtech.jts.geom.LineSegment,org.locationtech.jts.geom.Coordinate,double) -> segmentNearestMeasure
org.locationtech.jts.linearref.LengthIndexedLine -> org.locationtech.jts.linearref.LengthIndexedLine:
    39:40:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    237:241:double clampIndex(double) -> clampIndex
    95:103:org.locationtech.jts.geom.Geometry extractLine(double,double) -> extractLine
    56:57:org.locationtech.jts.geom.Coordinate extractPoint(double) -> extractPoint
    78:80:org.locationtech.jts.geom.Coordinate extractPoint(double,double) -> extractPoint
    214:214:double getEndIndex() -> getEndIndex
    0:0:double getStartIndex() -> getStartIndex
    135:135:double indexOf(org.locationtech.jts.geom.Coordinate) -> indexOf
    162:162:double indexOfAfter(org.locationtech.jts.geom.Coordinate,double) -> indexOfAfter
    176:179:double[] indicesOf(org.locationtech.jts.geom.Geometry) -> indicesOf
    225:226:boolean isValidIndex(double) -> isValidIndex
    108:108:org.locationtech.jts.linearref.LinearLocation locationOf(double) -> locationOf
    113:113:org.locationtech.jts.linearref.LinearLocation locationOf(double,boolean) -> locationOf
    250:250:double positiveIndex(double) -> positiveIndex
    196:196:double project(org.locationtech.jts.geom.Coordinate) -> project
org.locationtech.jts.linearref.LengthLocationMap -> org.locationtech.jts.linearref.LengthLocationMap:
    78:79:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    71:72:double getLength(org.locationtech.jts.geom.Geometry,org.locationtech.jts.linearref.LinearLocation) -> getLength
    187:200:double getLength(org.locationtech.jts.linearref.LinearLocation) -> getLength
    40:41:org.locationtech.jts.linearref.LinearLocation getLocation(org.locationtech.jts.geom.Geometry,double) -> getLocation
    57:58:org.locationtech.jts.linearref.LinearLocation getLocation(org.locationtech.jts.geom.Geometry,double,boolean) -> getLocation
    93:93:org.locationtech.jts.linearref.LinearLocation getLocation(double) -> getLocation
    112:119:org.locationtech.jts.linearref.LinearLocation getLocation(double,boolean) -> getLocation
    125:164:org.locationtech.jts.linearref.LinearLocation getLocationForward(double) -> getLocationForward
    169:180:org.locationtech.jts.linearref.LinearLocation resolveHigher(org.locationtech.jts.linearref.LinearLocation) -> resolveHigher
org.locationtech.jts.linearref.LinearGeometryBuilder -> org.locationtech.jts.linearref.LinearGeometryBuilder:
    34:43:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    75:75:void add(org.locationtech.jts.geom.Coordinate) -> add
    85:88:void add(org.locationtech.jts.geom.Coordinate,boolean) -> add
    98:122:void endLine() -> endLine
    135:136:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    91:91:org.locationtech.jts.geom.Coordinate getLastCoordinate() -> getLastCoordinate
    65:65:void setFixInvalidLines(boolean) -> setFixInvalidLines
    54:54:void setIgnoreInvalidLines(boolean) -> setIgnoreInvalidLines
    127:128:org.locationtech.jts.geom.Coordinate[] validCoordinateSequence(org.locationtech.jts.geom.Coordinate[]) -> validCoordinateSequence
org.locationtech.jts.linearref.LinearIterator -> org.locationtech.jts.linearref.LinearIterator:
    64:64:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    76:76:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.linearref.LinearLocation) -> <init>
    54:96:void <init>(org.locationtech.jts.geom.Geometry,int,int) -> <init>
    158:158:int getComponentIndex() -> getComponentIndex
    170:170:org.locationtech.jts.geom.LineString getLine() -> getLine
    188:189:org.locationtech.jts.geom.Coordinate getSegmentEnd() -> getSegmentEnd
    177:177:org.locationtech.jts.geom.Coordinate getSegmentStart() -> getSegmentStart
    164:164:int getVertexIndex() -> getVertexIndex
    118:120:boolean hasNext() -> hasNext
    147:149:boolean isEndOfLine() -> isEndOfLine
    101:105:void loadCurrentLine() -> loadCurrentLine
    130:136:void next() -> next
    42:44:int segmentEndVertexIndex(org.locationtech.jts.linearref.LinearLocation) -> segmentEndVertexIndex
org.locationtech.jts.linearref.LinearLocation -> org.locationtech.jts.linearref.LinearLocation:
    71:79:void <init>() -> <init>
    83:83:void <init>(int,double) -> <init>
    87:91:void <init>(int,int,double) -> <init>
    95:100:void <init>(int,int,double,boolean) -> <init>
    71:112:void <init>(org.locationtech.jts.linearref.LinearLocation) -> <init>
    154:161:void clamp(org.locationtech.jts.geom.Geometry) -> clamp
    458:458:java.lang.Object clone() -> clone
    0:0:int compareLocationValues(int,int,double,int,int,double) -> compareLocationValues
    348:354:int compareLocationValues(int,int,double) -> compareLocationValues
    323:331:int compareTo(java.lang.Object) -> compareTo
    467:467:org.locationtech.jts.linearref.LinearLocation copy() -> copy
    227:227:int getComponentIndex() -> getComponentIndex
    263:268:org.locationtech.jts.geom.Coordinate getCoordinate(org.locationtech.jts.geom.Geometry) -> getCoordinate
    39:40:org.locationtech.jts.linearref.LinearLocation getEndLocation(org.locationtech.jts.geom.Geometry) -> getEndLocation
    280:288:org.locationtech.jts.geom.LineSegment getSegment(org.locationtech.jts.geom.Geometry) -> getSegment
    241:241:double getSegmentFraction() -> getSegmentFraction
    234:234:int getSegmentIndex() -> getSegmentIndex
    196:205:double getSegmentLength(org.locationtech.jts.geom.Geometry) -> getSegmentLength
    419:422:boolean isEndpoint(org.locationtech.jts.geom.Geometry) -> isEndpoint
    399:404:boolean isOnSameSegment(org.locationtech.jts.linearref.LinearLocation) -> isOnSameSegment
    300:309:boolean isValid(org.locationtech.jts.geom.Geometry) -> isValid
    250:250:boolean isVertex() -> isVertex
    124:142:void normalize() -> normalize
    64:68:org.locationtech.jts.geom.Coordinate pointAlongSegmentByFraction(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double) -> pointAlongSegmentByFraction
    216:219:void setToEnd(org.locationtech.jts.geom.Geometry) -> setToEnd
    174:183:void snapToVertex(org.locationtech.jts.geom.Geometry,double) -> snapToVertex
    443:447:org.locationtech.jts.linearref.LinearLocation toLowest(org.locationtech.jts.geom.Geometry) -> toLowest
    472:472:java.lang.String toString() -> toString
org.locationtech.jts.linearref.LocationIndexOfLine -> org.locationtech.jts.linearref.LocationIndexOfLine:
    43:44:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    37:38:org.locationtech.jts.linearref.LinearLocation[] indicesOf(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> indicesOf
    49:62:org.locationtech.jts.linearref.LinearLocation[] indicesOf(org.locationtech.jts.geom.Geometry) -> indicesOf
org.locationtech.jts.linearref.LocationIndexOfPoint -> org.locationtech.jts.linearref.LocationIndexOfPoint:
    43:44:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    31:32:org.locationtech.jts.linearref.LinearLocation indexOf(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Coordinate) -> indexOf
    55:55:org.locationtech.jts.linearref.LinearLocation indexOf(org.locationtech.jts.geom.Coordinate) -> indexOf
    37:38:org.locationtech.jts.linearref.LinearLocation indexOfAfter(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.linearref.LinearLocation) -> indexOfAfter
    75:87:org.locationtech.jts.linearref.LinearLocation indexOfAfter(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.linearref.LinearLocation) -> indexOfAfter
    99:131:org.locationtech.jts.linearref.LinearLocation indexOfFromStart(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.linearref.LinearLocation) -> indexOfFromStart
org.locationtech.jts.linearref.LocationIndexedLine -> org.locationtech.jts.linearref.LocationIndexedLine:
    36:38:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    43:44:void checkGeometryType() -> checkGeometryType
    210:211:org.locationtech.jts.linearref.LinearLocation clampIndex(org.locationtech.jts.linearref.LinearLocation) -> clampIndex
    96:96:org.locationtech.jts.geom.Geometry extractLine(org.locationtech.jts.linearref.LinearLocation,org.locationtech.jts.linearref.LinearLocation) -> extractLine
    59:59:org.locationtech.jts.geom.Coordinate extractPoint(org.locationtech.jts.linearref.LinearLocation) -> extractPoint
    80:81:org.locationtech.jts.geom.Coordinate extractPoint(org.locationtech.jts.linearref.LinearLocation,double) -> extractPoint
    188:188:org.locationtech.jts.linearref.LinearLocation getEndIndex() -> getEndIndex
    179:179:org.locationtech.jts.linearref.LinearLocation getStartIndex() -> getStartIndex
    114:114:org.locationtech.jts.linearref.LinearLocation indexOf(org.locationtech.jts.geom.Coordinate) -> indexOf
    141:141:org.locationtech.jts.linearref.LinearLocation indexOfAfter(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.linearref.LinearLocation) -> indexOfAfter
    156:156:org.locationtech.jts.linearref.LinearLocation[] indicesOf(org.locationtech.jts.geom.Geometry) -> indicesOf
    199:199:boolean isValidIndex(org.locationtech.jts.linearref.LinearLocation) -> isValidIndex
    170:170:org.locationtech.jts.linearref.LinearLocation project(org.locationtech.jts.geom.Coordinate) -> project
org.locationtech.jts.math.DD -> org.locationtech.jts.math.DD:
    99:1027:void <clinit>() -> <clinit>
    168:180:void <init>() -> <init>
    168:190:void <init>(double) -> <init>
    168:201:void <init>(double,double) -> <init>
    168:211:void <init>(org.locationtech.jts.math.DD) -> <init>
    223:223:void <init>(java.lang.String) -> <init>
    735:738:org.locationtech.jts.math.DD abs() -> abs
    319:319:org.locationtech.jts.math.DD add(org.locationtech.jts.math.DD) -> add
    330:330:org.locationtech.jts.math.DD add(double) -> add
    656:664:org.locationtech.jts.math.DD ceil() -> ceil
    245:245:java.lang.Object clone() -> clone
    1010:1014:int compareTo(java.lang.Object) -> compareTo
    234:234:org.locationtech.jts.math.DD copy(org.locationtech.jts.math.DD) -> copy
    136:136:org.locationtech.jts.math.DD createNaN() -> createNaN
    531:539:org.locationtech.jts.math.DD divide(org.locationtech.jts.math.DD) -> divide
    550:551:org.locationtech.jts.math.DD divide(double) -> divide
    899:899:double doubleValue() -> doubleValue
    1038:1038:java.lang.String dump() -> dump
    962:962:boolean equals(org.locationtech.jts.math.DD) -> equals
    1141:1220:java.lang.String extractSignificantDigits(boolean,int[]) -> extractSignificantDigits
    632:640:org.locationtech.jts.math.DD floor() -> floor
    981:981:boolean ge(org.locationtech.jts.math.DD) -> ge
    1249:1250:java.lang.String getSpecialNumberString() -> getSpecialNumberString
    972:972:boolean gt(org.locationtech.jts.math.DD) -> gt
    255:256:void init(double) -> init
    261:262:void init(double,double) -> init
    267:268:void init(org.locationtech.jts.math.DD) -> init
    909:909:int intValue() -> intValue
    952:952:boolean isNaN() -> isNaN
    934:934:boolean isNegative() -> isNegative
    944:944:boolean isPositive() -> isPositive
    924:924:boolean isZero() -> isZero
    999:999:boolean le(org.locationtech.jts.math.DD) -> le
    990:990:boolean lt(org.locationtech.jts.math.DD) -> lt
    1266:1274:int magnitude(double) -> magnitude
    879:879:org.locationtech.jts.math.DD max(org.locationtech.jts.math.DD) -> max
    864:864:org.locationtech.jts.math.DD min(org.locationtech.jts.math.DD) -> min
    464:465:org.locationtech.jts.math.DD multiply(org.locationtech.jts.math.DD) -> multiply
    476:477:org.locationtech.jts.math.DD multiply(double) -> multiply
    452:453:org.locationtech.jts.math.DD negate() -> negate
    1303:1380:org.locationtech.jts.math.DD parse(java.lang.String) -> parse
    825:847:org.locationtech.jts.math.DD pow(int) -> pow
    604:614:org.locationtech.jts.math.DD reciprocal() -> reciprocal
    699:702:org.locationtech.jts.math.DD rint() -> rint
    344:344:org.locationtech.jts.math.DD selfAdd(org.locationtech.jts.math.DD) -> selfAdd
    359:367:org.locationtech.jts.math.DD selfAdd(double) -> selfAdd
    375:388:org.locationtech.jts.math.DD selfAdd(double,double) -> selfAdd
    565:565:org.locationtech.jts.math.DD selfDivide(org.locationtech.jts.math.DD) -> selfDivide
    579:579:org.locationtech.jts.math.DD selfDivide(double) -> selfDivide
    585:592:org.locationtech.jts.math.DD selfDivide(double,double) -> selfDivide
    491:491:org.locationtech.jts.math.DD selfMultiply(org.locationtech.jts.math.DD) -> selfMultiply
    505:505:org.locationtech.jts.math.DD selfMultiply(double) -> selfMultiply
    511:518:org.locationtech.jts.math.DD selfMultiply(double,double) -> selfMultiply
    761:761:org.locationtech.jts.math.DD selfSqr() -> selfSqr
    426:427:org.locationtech.jts.math.DD selfSubtract(org.locationtech.jts.math.DD) -> selfSubtract
    441:442:org.locationtech.jts.math.DD selfSubtract(double) -> selfSubtract
    295:295:org.locationtech.jts.math.DD setValue(org.locationtech.jts.math.DD) -> setValue
    306:306:org.locationtech.jts.math.DD setValue(double) -> setValue
    680:682:int signum() -> signum
    748:748:org.locationtech.jts.math.DD sqr() -> sqr
    771:771:org.locationtech.jts.math.DD sqr(double) -> sqr
    793:807:org.locationtech.jts.math.DD sqrt() -> sqrt
    812:812:org.locationtech.jts.math.DD sqrt(double) -> sqrt
    1233:1237:java.lang.String stringOfChar(char,int) -> stringOfChar
    400:400:org.locationtech.jts.math.DD subtract(org.locationtech.jts.math.DD) -> subtract
    411:411:org.locationtech.jts.math.DD subtract(double) -> subtract
    1100:1125:java.lang.String toSciNotation() -> toSciNotation
    1063:1088:java.lang.String toStandardNotation() -> toStandardNotation
    1050:1053:java.lang.String toString() -> toString
    717:721:org.locationtech.jts.math.DD trunc() -> trunc
    149:149:org.locationtech.jts.math.DD valueOf(java.lang.String) -> valueOf
    158:158:org.locationtech.jts.math.DD valueOf(double) -> valueOf
org.locationtech.jts.math.MathUtil -> org.locationtech.jts.math.MathUtil:
    50:50:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    0:0:double average(double,double) -> average
    0:0:double clamp(double,double,double) -> clamp
    0:0:int clamp(int,int,int) -> clamp
    65:68:double log10(double) -> log10
    0:0:double max(double,double,double) -> max
    0:0:double max(double,double,double,double) -> max
    0:0:double min(double,double,double,double) -> min
    83:85:int wrap(int,int) -> wrap
org.locationtech.jts.math.Matrix -> org.locationtech.jts.math.Matrix:
    21:21:void <init>() -> <init>
    56:94:double[] solve(double[][],double[]) -> solve
    26:29:void swapRows(double[][],int,int) -> swapRows
    36:38:void swapRows(double[],int,int) -> swapRows
org.locationtech.jts.math.Plane3D -> org.locationtech.jts.math.Plane3D:
    36:38:void <init>(org.locationtech.jts.math.Vector3D,org.locationtech.jts.geom.Coordinate) -> <init>
    74:76:int closestAxisPlane() -> closestAxisPlane
    54:58:double orientedDistance(org.locationtech.jts.geom.Coordinate) -> orientedDistance
org.locationtech.jts.math.Vector2D -> org.locationtech.jts.math.Vector2D:
    81:81:void <init>() -> <init>
    84:86:void <init>(double,double) -> <init>
    89:91:void <init>(org.locationtech.jts.math.Vector2D) -> <init>
    94:96:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    99:101:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    119:119:org.locationtech.jts.math.Vector2D add(org.locationtech.jts.math.Vector2D) -> add
    214:214:double angle() -> angle
    219:219:double angle(org.locationtech.jts.math.Vector2D) -> angle
    224:225:double angleTo(org.locationtech.jts.math.Vector2D) -> angleTo
    166:166:org.locationtech.jts.math.Vector2D average(org.locationtech.jts.math.Vector2D) -> average
    296:296:java.lang.Object clone() -> clone
    34:34:org.locationtech.jts.math.Vector2D create(double,double) -> create
    44:44:org.locationtech.jts.math.Vector2D create(org.locationtech.jts.math.Vector2D) -> create
    54:54:org.locationtech.jts.math.Vector2D create(org.locationtech.jts.geom.Coordinate) -> create
    67:67:org.locationtech.jts.math.Vector2D create(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> create
    197:199:double distance(org.locationtech.jts.math.Vector2D) -> distance
    143:143:org.locationtech.jts.math.Vector2D divide(double) -> divide
    209:209:double dot(org.locationtech.jts.math.Vector2D) -> dot
    318:322:boolean equals(java.lang.Object) -> equals
    114:115:double getComponent(int) -> getComponent
    105:105:double getX() -> getX
    109:109:double getY() -> getY
    333:334:int hashCode() -> hashCode
    278:278:boolean isParallel(org.locationtech.jts.math.Vector2D) -> isParallel
    151:151:double length() -> length
    155:155:double lengthSquared() -> lengthSquared
    133:133:org.locationtech.jts.math.Vector2D multiply(double) -> multiply
    147:147:org.locationtech.jts.math.Vector2D negate() -> negate
    159:162:org.locationtech.jts.math.Vector2D normalize() -> normalize
    238:240:org.locationtech.jts.math.Vector2D rotate(double) -> rotate
    258:272:org.locationtech.jts.math.Vector2D rotateByQuarterCircle(int) -> rotateByQuarterCircle
    123:123:org.locationtech.jts.math.Vector2D subtract(org.locationtech.jts.math.Vector2D) -> subtract
    286:286:org.locationtech.jts.geom.Coordinate toCoordinate() -> toCoordinate
    305:305:java.lang.String toString() -> toString
    282:282:org.locationtech.jts.geom.Coordinate translate(org.locationtech.jts.geom.Coordinate) -> translate
    185:185:org.locationtech.jts.math.Vector2D weightedSum(org.locationtech.jts.math.Vector2D,double) -> weightedSum
org.locationtech.jts.math.Vector3D -> org.locationtech.jts.math.Vector3D:
    71:74:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    92:95:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    98:101:void <init>(double,double,double) -> <init>
    57:57:org.locationtech.jts.math.Vector3D create(double,double,double) -> create
    68:68:org.locationtech.jts.math.Vector3D create(org.locationtech.jts.geom.Coordinate) -> create
    144:144:org.locationtech.jts.math.Vector3D divide(double) -> divide
    36:41:double dot(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> dot
    85:85:double dot(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> dot
    125:125:double dot(org.locationtech.jts.math.Vector3D) -> dot
    105:105:double getX() -> getX
    109:109:double getY() -> getY
    113:113:double getZ() -> getZ
    129:129:double length() -> length
    133:133:double length(org.locationtech.jts.geom.Coordinate) -> length
    137:140:org.locationtech.jts.math.Vector3D normalize() -> normalize
    148:149:org.locationtech.jts.geom.Coordinate normalize(org.locationtech.jts.geom.Coordinate) -> normalize
    157:157:java.lang.String toString() -> toString
org.locationtech.jts.noding.BasicSegmentString -> org.locationtech.jts.noding.BasicSegmentString:
    44:46:void <init>(org.locationtech.jts.geom.Coordinate[],java.lang.Object) -> <init>
    64:64:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    65:65:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    54:54:java.lang.Object getData() -> getData
    81:82:int getSegmentOctant(int) -> getSegmentOctant
    69:69:boolean isClosed() -> isClosed
    61:61:void setData(java.lang.Object) -> setData
    63:63:int size() -> size
    87:87:java.lang.String toString() -> toString
org.locationtech.jts.noding.FastNodingValidator -> org.locationtech.jts.noding.FastNodingValidator:
    67:81:void <init>(java.util.Collection) -> <init>
    157:164:void checkInteriorIntersections() -> checkInteriorIntersections
    138:140:void checkValid() -> checkValid
    61:64:java.util.List computeIntersections(java.util.Collection) -> computeIntersections
    145:147:void execute() -> execute
    121:127:java.lang.String getErrorMessage() -> getErrorMessage
    98:98:java.util.List getIntersections() -> getIntersections
    109:110:boolean isValid() -> isValid
    86:86:void setFindAllIntersections(boolean) -> setFindAllIntersections
org.locationtech.jts.noding.FastSegmentSetIntersectionFinder -> org.locationtech.jts.noding.FastSegmentSetIntersectionFinder:
    39:40:void <init>(java.util.Collection) -> <init>
    51:51:org.locationtech.jts.noding.SegmentSetMutualIntersector getSegmentSetIntersector() -> getSegmentSetIntersector
    62:63:boolean intersects(java.util.Collection) -> intersects
    76:77:boolean intersects(java.util.Collection,org.locationtech.jts.noding.SegmentIntersectionDetector) -> intersects
org.locationtech.jts.noding.InteriorIntersectionFinderAdder -> org.locationtech.jts.noding.InteriorIntersectionFinderAdder:
    44:46:void <init>(org.locationtech.jts.algorithm.LineIntersector) -> <init>
    49:49:java.util.List getInteriorIntersections() -> getInteriorIntersections
    0:0:boolean isDone() -> isDone
    67:81:void processIntersections(org.locationtech.jts.noding.SegmentString,int,org.locationtech.jts.noding.SegmentString,int) -> processIntersections
org.locationtech.jts.noding.IntersectionAdder -> org.locationtech.jts.noding.IntersectionAdder:
    36:56:void <init>(org.locationtech.jts.algorithm.LineIntersector) -> <init>
    59:59:org.locationtech.jts.algorithm.LineIntersector getLineIntersector() -> getLineIntersector
    64:64:org.locationtech.jts.geom.Coordinate getProperIntersectionPoint() -> getProperIntersectionPoint
    84:84:boolean hasInteriorIntersection() -> hasInteriorIntersection
    66:66:boolean hasIntersection() -> hasIntersection
    79:79:boolean hasProperInteriorIntersection() -> hasProperInteriorIntersection
    74:74:boolean hasProperIntersection() -> hasProperIntersection
    29:29:boolean isAdjacentSegments(int,int) -> isAdjacentSegments
    0:0:boolean isDone() -> isDone
    95:99:boolean isTrivialIntersection(org.locationtech.jts.noding.SegmentString,int,org.locationtech.jts.noding.SegmentString,int) -> isTrivialIntersection
    124:152:void processIntersections(org.locationtech.jts.noding.SegmentString,int,org.locationtech.jts.noding.SegmentString,int) -> processIntersections
org.locationtech.jts.noding.IntersectionFinderAdder -> org.locationtech.jts.noding.IntersectionFinderAdder:
    45:47:void <init>(org.locationtech.jts.algorithm.LineIntersector) -> <init>
    50:50:java.util.List getInteriorIntersections() -> getInteriorIntersections
    0:0:boolean isDone() -> isDone
    68:82:void processIntersections(org.locationtech.jts.noding.SegmentString,int,org.locationtech.jts.noding.SegmentString,int) -> processIntersections
org.locationtech.jts.noding.IteratedNoder -> org.locationtech.jts.noding.IteratedNoder:
    43:49:void <init>(org.locationtech.jts.geom.PrecisionModel) -> <init>
    81:97:void computeNodes(java.util.Collection) -> computeNodes
    66:66:java.util.Collection getNodedSubstrings() -> getNodedSubstrings
    113:118:void node(java.util.Collection,int[]) -> node
    63:63:void setMaximumIterations(int) -> setMaximumIterations
org.locationtech.jts.noding.MCIndexNoder -> org.locationtech.jts.noding.MCIndexNoder:
    38:46:void <init>() -> <init>
    38:50:void <init>(org.locationtech.jts.noding.SegmentIntersector) -> <init>
    98:103:void add(org.locationtech.jts.noding.SegmentString) -> add
    64:68:void computeNodes(java.util.Collection) -> computeNodes
    55:55:org.locationtech.jts.index.SpatialIndex getIndex() -> getIndex
    53:53:java.util.List getMonotoneChains() -> getMonotoneChains
    59:59:java.util.Collection getNodedSubstrings() -> getNodedSubstrings
    74:90:void intersectChains() -> intersectChains
org.locationtech.jts.noding.MCIndexNoder$SegmentOverlapAction -> org.locationtech.jts.noding.MCIndexNoder$SegmentOverlapAction:
    113:114:void <init>(org.locationtech.jts.noding.SegmentIntersector) -> <init>
    119:121:void overlap(org.locationtech.jts.index.chain.MonotoneChain,int,org.locationtech.jts.index.chain.MonotoneChain,int) -> overlap
org.locationtech.jts.noding.MCIndexSegmentSetMutualIntersector -> org.locationtech.jts.noding.MCIndexSegmentSetMutualIntersector:
    42:51:void <init>(java.util.Collection) -> <init>
    74:77:void addToIndex(org.locationtech.jts.noding.SegmentString) -> addToIndex
    102:105:void addToMonoChains(org.locationtech.jts.noding.SegmentString,java.util.List) -> addToMonoChains
    61:61:org.locationtech.jts.index.SpatialIndex getIndex() -> getIndex
    65:69:void initBaseSegments(java.util.Collection) -> initBaseSegments
    111:119:void intersectChains(java.util.List,org.locationtech.jts.noding.SegmentIntersector) -> intersectChains
    91:95:void process(java.util.Collection,org.locationtech.jts.noding.SegmentIntersector) -> process
org.locationtech.jts.noding.MCIndexSegmentSetMutualIntersector$SegmentOverlapAction -> org.locationtech.jts.noding.MCIndexSegmentSetMutualIntersector$SegmentOverlapAction:
    130:131:void <init>(org.locationtech.jts.noding.SegmentIntersector) -> <init>
    136:138:void overlap(org.locationtech.jts.index.chain.MonotoneChain,int,org.locationtech.jts.index.chain.MonotoneChain,int) -> overlap
org.locationtech.jts.noding.NodeVertexIterator -> org.locationtech.jts.noding.NodeVertexIterator:
# {"id":"sourceFile","fileName":"SegmentNodeList.java"}
    312:321:void <init>(org.locationtech.jts.noding.SegmentNodeList) -> <init>
    325:325:boolean hasNext() -> hasNext
    331:344:java.lang.Object next() -> next
    355:358:void readNextNode() -> readNextNode
    366:366:void remove() -> remove
org.locationtech.jts.noding.NodedSegmentString -> org.locationtech.jts.noding.NodedSegmentString:
    67:80:void <init>(org.locationtech.jts.geom.Coordinate[],java.lang.Object) -> <init>
    145:146:void addIntersection(org.locationtech.jts.algorithm.LineIntersector,int,int,int) -> addIntersection
    156:156:void addIntersection(org.locationtech.jts.geom.Coordinate,int) -> addIntersection
    173:187:org.locationtech.jts.noding.SegmentNode addIntersectionNode(org.locationtech.jts.geom.Coordinate,int) -> addIntersectionNode
    133:134:void addIntersections(org.locationtech.jts.algorithm.LineIntersector,int,int) -> addIntersections
    99:99:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    100:100:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    88:88:java.lang.Object getData() -> getData
    97:97:org.locationtech.jts.noding.SegmentNodeList getNodeList() -> getNodeList
    48:49:java.util.List getNodedSubstrings(java.util.Collection) -> getNodedSubstrings
    61:63:void getNodedSubstrings(java.util.Collection,java.util.Collection) -> getNodedSubstrings
    116:117:int getSegmentOctant(int) -> getSegmentOctant
    104:104:boolean isClosed() -> isClosed
    123:124:int safeOctant(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> safeOctant
    95:95:void setData(java.lang.Object) -> setData
    98:98:int size() -> size
    193:193:java.lang.String toString() -> toString
org.locationtech.jts.noding.NodingIntersectionFinder -> org.locationtech.jts.noding.NodingIntersectionFinder:
    79:97:void <init>(org.locationtech.jts.algorithm.LineIntersector) -> <init>
    144:144:int count() -> count
    59:60:org.locationtech.jts.noding.NodingIntersectionFinder createAllIntersectionsFinder(org.locationtech.jts.algorithm.LineIntersector) -> createAllIntersectionsFinder
    47:47:org.locationtech.jts.noding.NodingIntersectionFinder createAnyIntersectionFinder(org.locationtech.jts.algorithm.LineIntersector) -> createAnyIntersectionFinder
    73:75:org.locationtech.jts.noding.NodingIntersectionFinder createIntersectionCounter(org.locationtech.jts.algorithm.LineIntersector) -> createIntersectionCounter
    179:179:org.locationtech.jts.geom.Coordinate getInteriorIntersection() -> getInteriorIntersection
    189:189:org.locationtech.jts.geom.Coordinate[] getIntersectionSegments() -> getIntersectionSegments
    134:134:java.util.List getIntersections() -> getIntersections
    168:168:boolean hasIntersection() -> hasIntersection
    332:333:boolean isDone() -> isDone
    323:323:boolean isEndSegment(org.locationtech.jts.noding.SegmentString,int) -> isEndSegment
    282:285:boolean isInteriorVertexIntersection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,boolean,boolean,boolean,boolean) -> isInteriorVertexIntersection
    306:306:boolean isInteriorVertexIntersection(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,boolean,boolean) -> isInteriorVertexIntersection
    206:258:void processIntersections(org.locationtech.jts.noding.SegmentString,int,org.locationtech.jts.noding.SegmentString,int) -> processIntersections
    158:158:void setCheckEndSegmentsOnly(boolean) -> setCheckEndSegmentsOnly
    111:111:void setFindAllIntersections(boolean) -> setFindAllIntersections
    124:124:void setKeepIntersections(boolean) -> setKeepIntersections
org.locationtech.jts.noding.NodingValidator -> org.locationtech.jts.noding.NodingValidator:
    36:36:void <clinit>() -> <clinit>
    32:40:void <init>(java.util.Collection) -> <init>
    72:74:void checkCollapse(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> checkCollapse
    56:58:void checkCollapses() -> checkCollapses
    64:66:void checkCollapses(org.locationtech.jts.noding.SegmentString) -> checkCollapses
    144:148:void checkEndPtVertexIntersections() -> checkEndPtVertexIntersections
    154:159:void checkEndPtVertexIntersections(org.locationtech.jts.geom.Coordinate,java.util.Collection) -> checkEndPtVertexIntersections
    82:87:void checkInteriorIntersections() -> checkInteriorIntersections
    94:98:void checkInteriorIntersections(org.locationtech.jts.noding.SegmentString,org.locationtech.jts.noding.SegmentString) -> checkInteriorIntersections
    107:118:void checkInteriorIntersections(org.locationtech.jts.noding.SegmentString,int,org.locationtech.jts.noding.SegmentString,int) -> checkInteriorIntersections
    46:48:void checkValid() -> checkValid
    130:132:boolean hasInteriorIntersection(org.locationtech.jts.algorithm.LineIntersector,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> hasInteriorIntersection
org.locationtech.jts.noding.Octant -> org.locationtech.jts.noding.Octant:
    87:87:void <init>() -> <init>
    40:43:int octant(double,double) -> octant
    80:84:int octant(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> octant
org.locationtech.jts.noding.OrientedCoordinateArray -> org.locationtech.jts.noding.OrientedCoordinateArray:
    37:39:void <init>(org.locationtech.jts.geom.Coordinate[]) -> <init>
    89:95:int compareOriented(org.locationtech.jts.geom.Coordinate[],boolean,org.locationtech.jts.geom.Coordinate[],boolean) -> compareOriented
    63:64:int compareTo(java.lang.Object) -> compareTo
    51:51:boolean orientation(org.locationtech.jts.geom.Coordinate[]) -> orientation
org.locationtech.jts.noding.ScaledNoder -> org.locationtech.jts.noding.ScaledNoder:
    47:47:void <init>(org.locationtech.jts.noding.Noder,double) -> <init>
    44:54:void <init>(org.locationtech.jts.noding.Noder,double,double,double) -> <init>
    69:71:void computeNodes(java.util.Collection) -> computeNodes
    61:62:java.util.Collection getNodedSubstrings() -> getNodedSubstrings
    57:57:boolean isIntegerPrecision() -> isIntegerPrecision
    102:104:void rescale(java.util.Collection) -> rescale
    110:116:void rescale(org.locationtech.jts.geom.Coordinate[]) -> rescale
    76:79:java.util.Collection scale(java.util.Collection) -> scale
    86:94:org.locationtech.jts.geom.Coordinate[] scale(org.locationtech.jts.geom.Coordinate[]) -> scale
org.locationtech.jts.noding.SegmentIntersectionDetector -> org.locationtech.jts.noding.SegmentIntersectionDetector:
    47:47:void <init>() -> <init>
    32:57:void <init>(org.locationtech.jts.algorithm.LineIntersector) -> <init>
    118:118:org.locationtech.jts.geom.Coordinate getIntersection() -> getIntersection
    129:129:org.locationtech.jts.geom.Coordinate[] getIntersectionSegments() -> getIntersectionSegments
    87:87:boolean hasIntersection() -> hasIntersection
    107:107:boolean hasNonProperIntersection() -> hasNonProperIntersection
    97:97:boolean hasProperIntersection() -> hasProperIntersection
    204:214:boolean isDone() -> isDone
    148:182:void processIntersections(org.locationtech.jts.noding.SegmentString,int,org.locationtech.jts.noding.SegmentString,int) -> processIntersections
    77:77:void setFindAllIntersectionTypes(boolean) -> setFindAllIntersectionTypes
    67:67:void setFindProper(boolean) -> setFindProper
org.locationtech.jts.noding.SegmentNode -> org.locationtech.jts.noding.SegmentNode:
    32:37:void <init>(org.locationtech.jts.noding.NodedSegmentString,org.locationtech.jts.geom.Coordinate,int,int) -> <init>
    66:73:int compareTo(java.lang.Object) -> compareTo
    47:47:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    54:54:boolean isEndPoint(int) -> isEndPoint
    50:50:boolean isInterior() -> isInterior
    79:80:void print(java.io.PrintStream) -> print
org.locationtech.jts.noding.SegmentNodeList -> org.locationtech.jts.noding.SegmentNodeList:
    34:39:void <init>(org.locationtech.jts.noding.NodedSegmentString) -> <init>
    52:63:org.locationtech.jts.noding.SegmentNode add(org.locationtech.jts.geom.Coordinate,int) -> add
    91:99:void addCollapsedNodes() -> addCollapsedNodes
    273:291:void addEdgeCoordinates(org.locationtech.jts.noding.SegmentNode,org.locationtech.jts.noding.SegmentNode,org.locationtech.jts.geom.CoordinateList) -> addEdgeCoordinates
    77:79:void addEndpoints() -> addEndpoints
    172:185:void addSplitEdges(java.util.Collection) -> addSplitEdges
    198:210:void checkSplitEdgesCorrectness(java.util.List) -> checkSplitEdgesCorrectness
    222:242:org.locationtech.jts.noding.SegmentString createSplitEdge(org.locationtech.jts.noding.SegmentNode,org.locationtech.jts.noding.SegmentNode) -> createSplitEdge
    146:155:boolean findCollapseIndex(org.locationtech.jts.noding.SegmentNode,org.locationtech.jts.noding.SegmentNode,int[]) -> findCollapseIndex
    109:115:void findCollapsesFromExistingVertices(java.util.List) -> findCollapsesFromExistingVertices
    130:137:void findCollapsesFromInsertedNodes(java.util.List) -> findCollapsesFromInsertedNodes
    42:42:org.locationtech.jts.noding.NodedSegmentString getEdge() -> getEdge
    256:268:org.locationtech.jts.geom.Coordinate[] getSplitCoordinates() -> getSplitCoordinates
    70:70:java.util.Iterator iterator() -> iterator
    297:300:void print(java.io.PrintStream) -> print
org.locationtech.jts.noding.SegmentPointComparator -> org.locationtech.jts.noding.SegmentPointComparator:
    29:29:void <init>() -> <init>
    42:57:int compare(int,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> compare
    0:0:int compareValue(int,int) -> compareValue
    0:0:int relativeSign(double,double) -> relativeSign
org.locationtech.jts.noding.SegmentStringDissolver -> org.locationtech.jts.noding.SegmentStringDissolver:
    62:73:void <init>(org.locationtech.jts.noding.SegmentStringDissolver$SegmentStringMerger) -> <init>
    80:80:void <init>() -> <init>
    96:96:void add(org.locationtech.jts.noding.OrientedCoordinateArray,org.locationtech.jts.noding.SegmentString) -> add
    89:90:void dissolve(java.util.Collection) -> dissolve
    107:116:void dissolve(org.locationtech.jts.noding.SegmentString) -> dissolve
    124:124:org.locationtech.jts.noding.SegmentString findMatching(org.locationtech.jts.noding.OrientedCoordinateArray,org.locationtech.jts.noding.SegmentString) -> findMatching
    152:152:java.util.Collection getDissolved() -> getDissolved
org.locationtech.jts.noding.SegmentStringUtil -> org.locationtech.jts.noding.SegmentStringUtil:
    34:34:void <init>() -> <init>
    59:64:java.util.List extractNodedSegmentStrings(org.locationtech.jts.geom.Geometry) -> extractNodedSegmentStrings
    46:46:java.util.List extractSegmentStrings(org.locationtech.jts.geom.Geometry) -> extractSegmentStrings
    78:86:org.locationtech.jts.geom.Geometry toGeometry(java.util.Collection,org.locationtech.jts.geom.GeometryFactory) -> toGeometry
    91:98:java.lang.String toString(java.util.List) -> toString
org.locationtech.jts.noding.SimpleNoder -> org.locationtech.jts.noding.SimpleNoder:
    34:34:void <init>() -> <init>
    56:60:void computeIntersects(org.locationtech.jts.noding.SegmentString,org.locationtech.jts.noding.SegmentString) -> computeIntersects
    44:49:void computeNodes(java.util.Collection) -> computeNodes
    39:39:java.util.Collection getNodedSubstrings() -> getNodedSubstrings
org.locationtech.jts.noding.SimpleSegmentSetMutualIntersector -> org.locationtech.jts.noding.SimpleSegmentSetMutualIntersector:
    37:38:void <init>(java.util.Collection) -> <init>
    71:76:void intersect(org.locationtech.jts.noding.SegmentString,org.locationtech.jts.noding.SegmentString,org.locationtech.jts.noding.SegmentIntersector) -> intersect
    50:55:void process(java.util.Collection,org.locationtech.jts.noding.SegmentIntersector) -> process
org.locationtech.jts.noding.SinglePassNoder -> org.locationtech.jts.noding.SinglePassNoder:
    32:32:void <init>() -> <init>
    35:36:void <init>(org.locationtech.jts.noding.SegmentIntersector) -> <init>
    50:50:void setSegmentIntersector(org.locationtech.jts.noding.SegmentIntersector) -> setSegmentIntersector
org.locationtech.jts.noding.snapround.GeometryNoder -> org.locationtech.jts.noding.snapround.GeometryNoder:
    51:60:void <init>(org.locationtech.jts.geom.PrecisionModel) -> <init>
    115:119:java.util.List extractLines(java.util.Collection) -> extractLines
    82:97:java.util.List node(java.util.Collection) -> node
    70:70:void setValidate(boolean) -> setValidate
    102:108:java.util.List toLineStrings(java.util.Collection) -> toLineStrings
    126:129:java.util.List toSegmentStrings(java.util.Collection) -> toSegmentStrings
org.locationtech.jts.noding.snapround.HotPixel -> org.locationtech.jts.noding.snapround.HotPixel:
    58:84:void <init>(org.locationtech.jts.geom.Coordinate,double,org.locationtech.jts.algorithm.LineIntersector) -> <init>
    287:293:boolean addSnappedNode(org.locationtech.jts.noding.NodedSegmentString,int) -> addSnappedNode
    155:156:void copyScaled(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> copyScaled
    92:92:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    105:113:org.locationtech.jts.geom.Envelope getSafeEnvelope() -> getSafeEnvelope
    119:127:void initCorners(org.locationtech.jts.geom.Coordinate) -> initCorners
    145:150:boolean intersects(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersects
    262:269:boolean intersectsPixelClosure(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersectsPixelClosure
    161:192:boolean intersectsScaled(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersectsScaled
    227:244:boolean intersectsToleranceSquare(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> intersectsToleranceSquare
    132:132:double scale(double) -> scale
org.locationtech.jts.noding.snapround.MCIndexPointSnapper -> org.locationtech.jts.noding.snapround.MCIndexPointSnapper:
    36:37:void <init>(org.locationtech.jts.index.SpatialIndex) -> <init>
    53:63:boolean snap(org.locationtech.jts.noding.snapround.HotPixel,org.locationtech.jts.noding.SegmentString,int) -> snap
    68:68:boolean snap(org.locationtech.jts.noding.snapround.HotPixel) -> snap
org.locationtech.jts.noding.snapround.MCIndexPointSnapper$1 -> org.locationtech.jts.noding.snapround.MCIndexPointSnapper$1:
    56:56:void <init>(org.locationtech.jts.noding.snapround.MCIndexPointSnapper,org.locationtech.jts.geom.Envelope,org.locationtech.jts.noding.snapround.MCIndexPointSnapper$HotPixelSnapAction) -> <init>
    58:59:void visitItem(java.lang.Object) -> visitItem
org.locationtech.jts.noding.snapround.MCIndexPointSnapper$HotPixelSnapAction -> org.locationtech.jts.noding.snapround.MCIndexPointSnapper$HotPixelSnapAction:
    78:84:void <init>(org.locationtech.jts.noding.snapround.HotPixel,org.locationtech.jts.noding.SegmentString,int) -> <init>
    87:87:boolean isNodeAdded() -> isNodeAdded
    91:108:void select(org.locationtech.jts.index.chain.MonotoneChain,int) -> select
org.locationtech.jts.noding.snapround.MCIndexSnapRounder -> org.locationtech.jts.noding.snapround.MCIndexSnapRounder:
    58:62:void <init>(org.locationtech.jts.geom.PrecisionModel) -> <init>
    83:88:void checkCorrectness(java.util.Collection) -> checkCorrectness
    120:123:void computeIntersectionSnaps(java.util.Collection) -> computeIntersectionSnaps
    72:75:void computeNodes(java.util.Collection) -> computeNodes
    134:136:void computeVertexSnaps(java.util.Collection) -> computeVertexSnaps
    145:151:void computeVertexSnaps(org.locationtech.jts.noding.NodedSegmentString) -> computeVertexSnaps
    109:112:java.util.List findInteriorIntersections(java.util.Collection,org.locationtech.jts.algorithm.LineIntersector) -> findInteriorIntersections
    67:67:java.util.Collection getNodedSubstrings() -> getNodedSubstrings
    94:96:void snapRound(java.util.Collection,org.locationtech.jts.algorithm.LineIntersector) -> snapRound
org.locationtech.jts.noding.snapround.SimpleSnapRounder -> org.locationtech.jts.noding.snapround.SimpleSnapRounder:
    57:61:void <init>(org.locationtech.jts.geom.PrecisionModel) -> <init>
    87:92:void checkCorrectness(java.util.Collection) -> checkCorrectness
    78:79:void computeNodes(java.util.Collection) -> computeNodes
    126:128:void computeSnaps(java.util.Collection,java.util.Collection) -> computeSnaps
    134:138:void computeSnaps(org.locationtech.jts.noding.NodedSegmentString,java.util.Collection) -> computeSnaps
    151:155:void computeVertexSnaps(java.util.Collection) -> computeVertexSnaps
    166:179:void computeVertexSnaps(org.locationtech.jts.noding.NodedSegmentString,org.locationtech.jts.noding.NodedSegmentString) -> computeVertexSnaps
    112:116:java.util.List findInteriorIntersections(java.util.Collection,org.locationtech.jts.algorithm.LineIntersector) -> findInteriorIntersections
    70:70:java.util.Collection getNodedSubstrings() -> getNodedSubstrings
    97:99:void snapRound(java.util.Collection,org.locationtech.jts.algorithm.LineIntersector) -> snapRound
org.locationtech.jts.operation.BoundaryOp -> org.locationtech.jts.operation.BoundaryOp:
    83:83:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    93:96:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.algorithm.BoundaryNodeRule) -> <init>
    170:175:void addEndpoint(org.locationtech.jts.geom.Coordinate) -> addEndpoint
    180:196:org.locationtech.jts.geom.Geometry boundaryLineString(org.locationtech.jts.geom.LineString) -> boundaryLineString
    118:129:org.locationtech.jts.geom.Geometry boundaryMultiLineString(org.locationtech.jts.geom.MultiLineString) -> boundaryMultiLineString
    146:165:org.locationtech.jts.geom.Coordinate[] computeBoundaryCoordinates(org.locationtech.jts.geom.MultiLineString) -> computeBoundaryCoordinates
    54:55:org.locationtech.jts.geom.Geometry getBoundary(org.locationtech.jts.geom.Geometry) -> getBoundary
    68:69:org.locationtech.jts.geom.Geometry getBoundary(org.locationtech.jts.geom.Geometry,org.locationtech.jts.algorithm.BoundaryNodeRule) -> getBoundary
    106:108:org.locationtech.jts.geom.Geometry getBoundary() -> getBoundary
    113:113:org.locationtech.jts.geom.MultiPoint getEmptyMultiPoint() -> getEmptyMultiPoint
org.locationtech.jts.operation.Counter -> org.locationtech.jts.operation.Counter:
# {"id":"sourceFile","fileName":"BoundaryOp.java"}
    207:207:void <init>() -> <init>
org.locationtech.jts.operation.GeometryGraphOperation -> org.locationtech.jts.operation.GeometryGraphOperation:
    40:40:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> <init>
    30:56:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.algorithm.BoundaryNodeRule) -> <init>
    30:63:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    66:66:org.locationtech.jts.geom.Geometry getArgGeometry(int) -> getArgGeometry
    70:71:void setComputationPrecision(org.locationtech.jts.geom.PrecisionModel) -> setComputationPrecision
org.locationtech.jts.operation.IsSimpleOp -> org.locationtech.jts.operation.IsSimpleOp:
    86:94:void <init>() -> <init>
    86:103:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    86:115:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.algorithm.BoundaryNodeRule) -> <init>
    336:341:void addEndpoint(java.util.Map,org.locationtech.jts.geom.Coordinate,boolean) -> addEndpoint
    131:137:boolean computeSimple(org.locationtech.jts.geom.Geometry) -> computeSimple
    153:153:org.locationtech.jts.geom.Coordinate getNonSimpleLocation() -> getNonSimpleLocation
    311:324:boolean hasClosedEndpointIntersection(org.locationtech.jts.geomgraph.GeometryGraph) -> hasClosedEndpointIntersection
    266:272:boolean hasNonEndpointIntersection(org.locationtech.jts.geomgraph.GeometryGraph) -> hasNonEndpointIntersection
    125:126:boolean isSimple() -> isSimple
    165:165:boolean isSimple(org.locationtech.jts.geom.LineString) -> isSimple
    177:177:boolean isSimple(org.locationtech.jts.geom.MultiLineString) -> isSimple
    186:186:boolean isSimple(org.locationtech.jts.geom.MultiPoint) -> isSimple
    233:235:boolean isSimpleGeometryCollection(org.locationtech.jts.geom.Geometry) -> isSimpleGeometryCollection
    243:255:boolean isSimpleLinearGeometry(org.locationtech.jts.geom.Geometry) -> isSimpleLinearGeometry
    191:200:boolean isSimpleMultiPoint(org.locationtech.jts.geom.MultiPoint) -> isSimpleMultiPoint
    215:218:boolean isSimplePolygonal(org.locationtech.jts.geom.Geometry) -> isSimplePolygonal
org.locationtech.jts.operation.IsSimpleOp$EndpointInfo -> org.locationtech.jts.operation.IsSimpleOp$EndpointInfo:
    286:289:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    296:297:void addEndpoint(boolean) -> addEndpoint
    292:292:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
org.locationtech.jts.operation.buffer.BufferBuilder -> org.locationtech.jts.operation.buffer.BufferBuilder:
    84:94:void <init>(org.locationtech.jts.operation.buffer.BufferParameters) -> <init>
    122:164:org.locationtech.jts.geom.Geometry buffer(org.locationtech.jts.geom.Geometry,double) -> buffer
    281:300:void buildSubgraphs(java.util.List,org.locationtech.jts.operation.overlay.PolygonBuilder) -> buildSubgraphs
    187:206:void computeNodedEdges(java.util.List,org.locationtech.jts.geom.PrecisionModel) -> computeNodedEdges
    306:313:org.locationtech.jts.geom.Geometry convertSegStrings(java.util.Iterator) -> convertSegStrings
    325:325:org.locationtech.jts.geom.Geometry createEmptyResultGeometry() -> createEmptyResultGeometry
    252:267:java.util.List createSubgraphs(org.locationtech.jts.geomgraph.PlanarGraph) -> createSubgraphs
    69:70:int depthDelta(org.locationtech.jts.geomgraph.Label) -> depthDelta
    170:176:org.locationtech.jts.noding.Noder getNoder(org.locationtech.jts.geom.PrecisionModel) -> getNoder
    221:246:void insertUniqueEdge(org.locationtech.jts.geomgraph.Edge) -> insertUniqueEdge
    117:117:void setNoder(org.locationtech.jts.noding.Noder) -> setNoder
    107:107:void setWorkingPrecisionModel(org.locationtech.jts.geom.PrecisionModel) -> setWorkingPrecisionModel
org.locationtech.jts.operation.buffer.BufferInputLineSimplifier -> org.locationtech.jts.operation.buffer.BufferInputLineSimplifier:
    78:81:void <init>(org.locationtech.jts.geom.Coordinate[]) -> <init>
    166:172:org.locationtech.jts.geom.Coordinate[] collapseLine() -> collapseLine
    125:145:boolean deleteShallowConcavities() -> deleteShallowConcavities
    159:159:int findNextNonDeletedIndex(int) -> findNextNonDeletedIndex
    236:237:boolean isConcave(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isConcave
    177:187:boolean isDeletable(int,int,int,double) -> isDeletable
    229:229:boolean isShallow(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double) -> isShallow
    192:197:boolean isShallowConcavity(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double) -> isShallowConcavity
    218:222:boolean isShallowSampled(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,int,int,double) -> isShallowSampled
    66:67:org.locationtech.jts.geom.Coordinate[] simplify(org.locationtech.jts.geom.Coordinate[],double) -> simplify
    96:108:org.locationtech.jts.geom.Coordinate[] simplify(double) -> simplify
org.locationtech.jts.operation.buffer.BufferOp -> org.locationtech.jts.operation.buffer.BufferOp:
    0:0:void <clinit>() -> <clinit>
    243:254:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    243:266:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.operation.buffer.BufferParameters) -> <init>
    362:369:void bufferFixedPrecision(org.locationtech.jts.geom.PrecisionModel) -> bufferFixedPrecision
    175:176:org.locationtech.jts.geom.Geometry bufferOp(org.locationtech.jts.geom.Geometry,double) -> bufferOp
    194:195:org.locationtech.jts.geom.Geometry bufferOp(org.locationtech.jts.geom.Geometry,double,org.locationtech.jts.operation.buffer.BufferParameters) -> bufferOp
    211:213:org.locationtech.jts.geom.Geometry bufferOp(org.locationtech.jts.geom.Geometry,double,int) -> bufferOp
    233:236:org.locationtech.jts.geom.Geometry bufferOp(org.locationtech.jts.geom.Geometry,double,int,int) -> bufferOp
    339:343:void bufferOriginalPrecision() -> bufferOriginalPrecision
    319:332:void bufferReducedPrecision() -> bufferReducedPrecision
    353:357:void bufferReducedPrecision(int) -> bufferReducedPrecision
    306:313:void computeGeometry() -> computeGeometry
    299:301:org.locationtech.jts.geom.Geometry getResultGeometry(double) -> getResultGeometry
    128:143:double precisionScaleFactor(org.locationtech.jts.geom.Geometry,double,int) -> precisionScaleFactor
    278:278:void setEndCapStyle(int) -> setEndCapStyle
    288:288:void setQuadrantSegments(int) -> setQuadrantSegments
org.locationtech.jts.operation.buffer.BufferParameters -> org.locationtech.jts.operation.buffer.BufferParameters:
    79:90:void <init>() -> <init>
    79:101:void <init>(int) -> <init>
    79:115:void <init>(int,int) -> <init>
    79:135:void <init>(int,int,int,double) -> <init>
    215:215:double bufferDistanceError(int) -> bufferDistanceError
    225:225:int getEndCapStyle() -> getEndCapStyle
    247:247:int getJoinStyle() -> getJoinStyle
    269:269:double getMitreLimit() -> getMitreLimit
    145:145:int getQuadrantSegments() -> getQuadrantSegments
    328:328:double getSimplifyFactor() -> getSimplifyFactor
    319:319:boolean isSingleSided() -> isSingleSided
    237:237:void setEndCapStyle(int) -> setEndCapStyle
    259:259:void setJoinStyle(int) -> setJoinStyle
    287:287:void setMitreLimit(double) -> setMitreLimit
    173:201:void setQuadrantSegments(int) -> setQuadrantSegments
    343:343:void setSimplifyFactor(double) -> setSimplifyFactor
    310:310:void setSingleSided(boolean) -> setSingleSided
org.locationtech.jts.operation.buffer.BufferSubgraph -> org.locationtech.jts.operation.buffer.BufferSubgraph:
    52:59:void <init>() -> <init>
    131:143:void add(org.locationtech.jts.geomgraph.Node,java.util.Stack) -> add
    116:120:void addReachable(org.locationtech.jts.geomgraph.Node) -> addReachable
    149:151:void clearVisitedEdges() -> clearVisitedEdges
    283:284:int compareTo(java.lang.Object) -> compareTo
    157:167:void computeDepth(int) -> computeDepth
    177:201:void computeDepths(org.locationtech.jts.geomgraph.DirectedEdge) -> computeDepths
    211:231:void computeNodeDepth(org.locationtech.jts.geomgraph.Node) -> computeNodeDepth
    237:239:void copySymDepths(org.locationtech.jts.geomgraph.DirectedEdge) -> copySymDepths
    103:105:void create(org.locationtech.jts.geomgraph.Node) -> create
    252:265:void findResultEdges() -> findResultEdges
    62:62:java.util.List getDirectedEdges() -> getDirectedEdges
    73:84:org.locationtech.jts.geom.Envelope getEnvelope() -> getEnvelope
    63:63:java.util.List getNodes() -> getNodes
    92:92:org.locationtech.jts.geom.Coordinate getRightmostCoordinate() -> getRightmostCoordinate
org.locationtech.jts.operation.buffer.OffsetCurveBuilder -> org.locationtech.jts.operation.buffer.OffsetCurveBuilder:
    34:44:void <init>(org.locationtech.jts.geom.PrecisionModel,org.locationtech.jts.operation.buffer.BufferParameters) -> <init>
    179:212:void computeLineBufferCurve(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.operation.buffer.OffsetSegmentGenerator) -> computeLineBufferCurve
    287:318:void computeOffsetCurve(org.locationtech.jts.geom.Coordinate[],boolean,org.locationtech.jts.operation.buffer.OffsetSegmentGenerator) -> computeOffsetCurve
    166:171:void computePointCurve(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.operation.buffer.OffsetSegmentGenerator) -> computePointCurve
    324:337:void computeRingBufferCurve(org.locationtech.jts.geom.Coordinate[],int,org.locationtech.jts.operation.buffer.OffsetSegmentGenerator) -> computeRingBufferCurve
    244:282:void computeSingleSidedBufferCurve(org.locationtech.jts.geom.Coordinate[],boolean,org.locationtech.jts.operation.buffer.OffsetSegmentGenerator) -> computeSingleSidedBufferCurve
    141:143:org.locationtech.jts.geom.Coordinate[] copyCoordinates(org.locationtech.jts.geom.Coordinate[]) -> copyCoordinates
    54:54:org.locationtech.jts.operation.buffer.BufferParameters getBufferParameters() -> getBufferParameters
    70:90:org.locationtech.jts.geom.Coordinate[] getLineCurve(org.locationtech.jts.geom.Coordinate[],double) -> getLineCurve
    118:135:org.locationtech.jts.geom.Coordinate[] getOffsetCurve(org.locationtech.jts.geom.Coordinate[],double) -> getOffsetCurve
    103:113:org.locationtech.jts.geom.Coordinate[] getRingCurve(org.locationtech.jts.geom.Coordinate[],int,double) -> getRingCurve
    150:150:org.locationtech.jts.operation.buffer.OffsetSegmentGenerator getSegGen(double) -> getSegGen
    162:162:double simplifyTolerance(double) -> simplifyTolerance
org.locationtech.jts.operation.buffer.OffsetCurveSetBuilder -> org.locationtech.jts.operation.buffer.OffsetCurveSetBuilder:
    57:66:void <init>(org.locationtech.jts.geom.Geometry,double,org.locationtech.jts.operation.buffer.OffsetCurveBuilder) -> <init>
    104:114:void add(org.locationtech.jts.geom.Geometry) -> add
    118:120:void addCollection(org.locationtech.jts.geom.GeometryCollection) -> addCollection
    94:98:void addCurve(org.locationtech.jts.geom.Coordinate[],int,int) -> addCurve
    139:143:void addLineString(org.locationtech.jts.geom.LineString) -> addLineString
    129:133:void addPoint(org.locationtech.jts.geom.Point) -> addPoint
    152:192:void addPolygon(org.locationtech.jts.geom.Polygon) -> addPolygon
    214:226:void addPolygonRing(org.locationtech.jts.geom.Coordinate[],double,int,int,int) -> addPolygonRing
    78:79:java.util.List getCurves() -> getCurves
    240:254:boolean isErodedCompletely(org.locationtech.jts.geom.LinearRing,double) -> isErodedCompletely
    299:302:boolean isTriangleErodedCompletely(org.locationtech.jts.geom.Coordinate[],double) -> isTriangleErodedCompletely
org.locationtech.jts.operation.buffer.OffsetSegmentGenerator -> org.locationtech.jts.operation.buffer.OffsetSegmentGenerator:
    64:121:void <init>(org.locationtech.jts.geom.PrecisionModel,org.locationtech.jts.operation.buffer.BufferParameters,double) -> <init>
    561:562:void addBevelJoin(org.locationtech.jts.geom.LineSegment,org.locationtech.jts.geom.LineSegment) -> addBevelJoin
    231:254:void addCollinear(boolean) -> addCollinear
    578:593:void addCornerFillet(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,int,double) -> addCornerFillet
    609:626:void addDirectedFillet(org.locationtech.jts.geom.Coordinate,double,double,int,double) -> addDirectedFillet
    181:181:void addFirstSegment() -> addFirstSegment
    304:368:void addInsideTurn(int,boolean) -> addInsideTurn
    189:189:void addLastSegment() -> addLastSegment
    506:546:void addLimitedMitreJoin(org.locationtech.jts.geom.LineSegment,org.locationtech.jts.geom.LineSegment,double,double) -> addLimitedMitreJoin
    403:439:void addLineEndCap(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> addLineEndCap
    466:484:void addMitreJoin(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.LineSegment,org.locationtech.jts.geom.LineSegment,double) -> addMitreJoin
    197:221:void addNextSegment(org.locationtech.jts.geom.Coordinate,boolean) -> addNextSegment
    274:290:void addOutsideTurn(int,boolean) -> addOutsideTurn
    176:176:void addSegments(org.locationtech.jts.geom.Coordinate[],boolean) -> addSegments
    171:171:void closeRing() -> closeRing
    386:395:void computeOffsetSegment(org.locationtech.jts.geom.LineSegment,int,double,org.locationtech.jts.geom.LineSegment) -> computeOffsetSegment
    638:641:void createCircle(org.locationtech.jts.geom.Coordinate) -> createCircle
    649:653:void createSquare(org.locationtech.jts.geom.Coordinate) -> createSquare
    165:165:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    138:138:boolean hasNarrowConcaveAngle() -> hasNarrowConcaveAngle
    143:150:void init(double) -> init
    156:160:void initSideSegments(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,int) -> initSideSegments
org.locationtech.jts.operation.buffer.OffsetSegmentString -> org.locationtech.jts.operation.buffer.OffsetSegmentString:
    31:31:void <clinit>() -> <clinit>
    34:45:void <init>() -> <init>
    60:65:void addPt(org.locationtech.jts.geom.Coordinate) -> addPt
    72:78:void addPts(org.locationtech.jts.geom.Coordinate[],boolean) -> addPts
    104:108:void closeRing() -> closeRing
    126:126:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    93:97:boolean isRedundant(org.locationtech.jts.geom.Coordinate) -> isRedundant
    0:0:void reverse() -> reverse
    55:55:void setMinimumVertexDistance(double) -> setMinimumVertexDistance
    50:50:void setPrecisionModel(org.locationtech.jts.geom.PrecisionModel) -> setPrecisionModel
    132:134:java.lang.String toString() -> toString
org.locationtech.jts.operation.buffer.RightmostEdgeFinder -> org.locationtech.jts.operation.buffer.RightmostEdgeFinder:
    40:49:void <init>() -> <init>
    131:138:void checkForRightmostCoordinate(org.locationtech.jts.geomgraph.DirectedEdge) -> checkForRightmostCoordinate
    61:86:void findEdge(java.util.List) -> findEdge
    91:98:void findRightmostEdgeAtNode() -> findRightmostEdgeAtNode
    108:126:void findRightmostEdgeAtVertex() -> findRightmostEdgeAtVertex
    53:53:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    52:52:org.locationtech.jts.geomgraph.DirectedEdge getEdge() -> getEdge
    146:154:int getRightmostSide(org.locationtech.jts.geomgraph.DirectedEdge,int) -> getRightmostSide
    161:165:int getRightmostSideOfSegment(org.locationtech.jts.geomgraph.DirectedEdge,int) -> getRightmostSideOfSegment
org.locationtech.jts.operation.buffer.SubgraphDepthLocater -> org.locationtech.jts.operation.buffer.SubgraphDepthLocater:
    40:44:void <init>(java.util.List) -> <init>
    66:76:java.util.List findStabbedSegments(org.locationtech.jts.geom.Coordinate) -> findStabbedSegments
    97:101:void findStabbedSegments(org.locationtech.jts.geom.Coordinate,java.util.List,java.util.List) -> findStabbedSegments
    117:149:void findStabbedSegments(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geomgraph.DirectedEdge,java.util.List) -> findStabbedSegments
    49:54:int getDepth(org.locationtech.jts.geom.Coordinate) -> getDepth
org.locationtech.jts.operation.buffer.SubgraphDepthLocater$DepthSegment -> org.locationtech.jts.operation.buffer.SubgraphDepthLocater$DepthSegment:
    165:169:void <init>(org.locationtech.jts.geom.LineSegment,int) -> <init>
    158:158:int access$000(org.locationtech.jts.operation.buffer.SubgraphDepthLocater$DepthSegment) -> access$000
    195:217:int compareTo(java.lang.Object) -> compareTo
    233:236:int compareX(org.locationtech.jts.geom.LineSegment,org.locationtech.jts.geom.LineSegment) -> compareX
    242:242:java.lang.String toString() -> toString
org.locationtech.jts.operation.buffer.validate.BufferCurveMaximumDistanceFinder -> org.locationtech.jts.operation.buffer.validate.BufferCurveMaximumDistanceFinder:
    38:42:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    65:67:void computeMaxMidpointDistance(org.locationtech.jts.geom.Geometry) -> computeMaxMidpointDistance
    58:60:void computeMaxVertexDistance(org.locationtech.jts.geom.Geometry) -> computeMaxVertexDistance
    47:49:double findDistance(org.locationtech.jts.geom.Geometry) -> findDistance
    54:54:org.locationtech.jts.operation.buffer.validate.PointPairDistance getDistancePoints() -> getDistancePoints
org.locationtech.jts.operation.buffer.validate.BufferCurveMaximumDistanceFinder$MaxMidpointDistanceFilter -> org.locationtech.jts.operation.buffer.validate.BufferCurveMaximumDistanceFinder$MaxMidpointDistanceFilter:
    93:98:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    106:114:void filter(org.locationtech.jts.geom.CoordinateSequence,int) -> filter
    122:122:org.locationtech.jts.operation.buffer.validate.PointPairDistance getMaxPointDistance() -> getMaxPointDistance
    0:0:boolean isDone() -> isDone
    0:0:boolean isGeometryChanged() -> isGeometryChanged
org.locationtech.jts.operation.buffer.validate.BufferCurveMaximumDistanceFinder$MaxPointDistanceFilter -> org.locationtech.jts.operation.buffer.validate.BufferCurveMaximumDistanceFinder$MaxPointDistanceFilter:
    71:76:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    80:82:void filter(org.locationtech.jts.geom.Coordinate) -> filter
    86:86:org.locationtech.jts.operation.buffer.validate.PointPairDistance getMaxPointDistance() -> getMaxPointDistance
org.locationtech.jts.operation.buffer.validate.BufferDistanceValidator -> org.locationtech.jts.operation.buffer.validate.BufferDistanceValidator:
    0:0:void <clinit>() -> <clinit>
    63:72:void <init>(org.locationtech.jts.geom.Geometry,double,org.locationtech.jts.geom.Geometry) -> <init>
    205:216:void checkMaximumDistance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,double) -> checkMaximumDistance
    174:185:void checkMinimumDistance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,double) -> checkMinimumDistance
    140:150:void checkNegativeValid() -> checkNegativeValid
    128:132:void checkPositiveValid() -> checkPositiveValid
    123:123:org.locationtech.jts.geom.Geometry getErrorIndicator() -> getErrorIndicator
    109:109:org.locationtech.jts.geom.Coordinate getErrorLocation() -> getErrorLocation
    104:104:java.lang.String getErrorMessage() -> getErrorMessage
    155:162:org.locationtech.jts.geom.Geometry getPolygonLines(org.locationtech.jts.geom.Geometry) -> getPolygonLines
    77:99:boolean isValid() -> isValid
org.locationtech.jts.operation.buffer.validate.BufferResultValidator -> org.locationtech.jts.operation.buffer.validate.BufferResultValidator:
    0:0:void <clinit>() -> <clinit>
    74:83:void <init>(org.locationtech.jts.geom.Geometry,double,org.locationtech.jts.geom.Geometry) -> <init>
    181:196:void checkArea() -> checkArea
    201:208:void checkDistance() -> checkDistance
    160:176:void checkEnvelope() -> checkEnvelope
    145:155:void checkExpectedEmpty() -> checkExpectedEmpty
    134:139:void checkPolygonal() -> checkPolygonal
    122:122:org.locationtech.jts.geom.Geometry getErrorIndicator() -> getErrorIndicator
    107:107:org.locationtech.jts.geom.Coordinate getErrorLocation() -> getErrorLocation
    102:102:java.lang.String getErrorMessage() -> getErrorMessage
    47:48:boolean isValid(org.locationtech.jts.geom.Geometry,double,org.locationtech.jts.geom.Geometry) -> isValid
    88:97:boolean isValid() -> isValid
    65:67:java.lang.String isValidMsg(org.locationtech.jts.geom.Geometry,double,org.locationtech.jts.geom.Geometry) -> isValidMsg
    127:128:void report(java.lang.String) -> report
org.locationtech.jts.operation.buffer.validate.DistanceToPointFinder -> org.locationtech.jts.operation.buffer.validate.DistanceToPointFinder:
    27:27:void <init>() -> <init>
    32:46:void computeDistance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.operation.buffer.validate.PointPairDistance) -> computeDistance
    51:57:void computeDistance(org.locationtech.jts.geom.LineString,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.operation.buffer.validate.PointPairDistance) -> computeDistance
    63:64:void computeDistance(org.locationtech.jts.geom.LineSegment,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.operation.buffer.validate.PointPairDistance) -> computeDistance
    69:71:void computeDistance(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.operation.buffer.validate.PointPairDistance) -> computeDistance
org.locationtech.jts.operation.buffer.validate.PointPairDistance -> org.locationtech.jts.operation.buffer.validate.PointPairDistance:
    23:28:void <init>() -> <init>
    59:59:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    57:57:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    55:55:double getDistance() -> getDistance
    31:31:void initialize() -> initialize
    35:38:void initialize(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> initialize
    49:52:void initialize(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double) -> initialize
    63:63:void setMaximum(org.locationtech.jts.operation.buffer.validate.PointPairDistance) -> setMaximum
    68:74:void setMaximum(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> setMaximum
    79:79:void setMinimum(org.locationtech.jts.operation.buffer.validate.PointPairDistance) -> setMinimum
    84:90:void setMinimum(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> setMinimum
org.locationtech.jts.operation.distance.ConnectedElementLocationFilter -> org.locationtech.jts.operation.distance.ConnectedElementLocationFilter:
    53:54:void <init>(java.util.List) -> <init>
    59:62:void filter(org.locationtech.jts.geom.Geometry) -> filter
    45:46:java.util.List getLocations(org.locationtech.jts.geom.Geometry) -> getLocations
org.locationtech.jts.operation.distance.ConnectedElementPointFilter -> org.locationtech.jts.operation.distance.ConnectedElementPointFilter:
    51:52:void <init>(java.util.List) -> <init>
    57:60:void filter(org.locationtech.jts.geom.Geometry) -> filter
    43:44:java.util.List getCoordinates(org.locationtech.jts.geom.Geometry) -> getCoordinates
org.locationtech.jts.operation.distance.DistanceOp -> org.locationtech.jts.operation.distance.DistanceOp:
    119:119:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> <init>
    105:134:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,double) -> <init>
    200:200:org.locationtech.jts.operation.distance.GeometryLocation[] closestLocations() -> closestLocations
    99:100:org.locationtech.jts.geom.Coordinate[] closestPoints(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> closestPoints
    178:178:org.locationtech.jts.geom.Coordinate[] closestPoints() -> closestPoints
    233:235:void computeContainmentDistance() -> computeContainmentDistance
    240:252:void computeContainmentDistance(int,org.locationtech.jts.operation.distance.GeometryLocation[]) -> computeContainmentDistance
    260:264:void computeContainmentDistance(java.util.List,java.util.List,org.locationtech.jts.operation.distance.GeometryLocation[]) -> computeContainmentDistance
    273:278:void computeContainmentDistance(org.locationtech.jts.operation.distance.GeometryLocation,org.locationtech.jts.geom.Polygon,org.locationtech.jts.operation.distance.GeometryLocation[]) -> computeContainmentDistance
    296:322:void computeFacetDistance() -> computeFacetDistance
    221:226:void computeMinDistance() -> computeMinDistance
    370:389:void computeMinDistance(org.locationtech.jts.geom.LineString,org.locationtech.jts.geom.LineString,org.locationtech.jts.operation.distance.GeometryLocation[]) -> computeMinDistance
    397:413:void computeMinDistance(org.locationtech.jts.geom.LineString,org.locationtech.jts.geom.Point,org.locationtech.jts.operation.distance.GeometryLocation[]) -> computeMinDistance
    327:332:void computeMinDistanceLines(java.util.List,java.util.List,org.locationtech.jts.operation.distance.GeometryLocation[]) -> computeMinDistanceLines
    357:362:void computeMinDistanceLinesPoints(java.util.List,java.util.List,org.locationtech.jts.operation.distance.GeometryLocation[]) -> computeMinDistanceLinesPoints
    339:349:void computeMinDistancePoints(java.util.List,java.util.List,org.locationtech.jts.operation.distance.GeometryLocation[]) -> computeMinDistancePoints
    57:58:double distance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> distance
    146:152:double distance() -> distance
    70:71:boolean isWithinDistance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,double) -> isWithinDistance
    189:190:org.locationtech.jts.operation.distance.GeometryLocation[] nearestLocations() -> nearestLocations
    84:85:org.locationtech.jts.geom.Coordinate[] nearestPoints(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> nearestPoints
    163:167:org.locationtech.jts.geom.Coordinate[] nearestPoints() -> nearestPoints
    206:214:void updateMinDistance(org.locationtech.jts.operation.distance.GeometryLocation[],boolean) -> updateMinDistance
org.locationtech.jts.operation.distance.FacetSequence -> org.locationtech.jts.operation.distance.FacetSequence:
    47:51:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.CoordinateSequence,int,int) -> <init>
    32:65:void <init>(org.locationtech.jts.geom.CoordinateSequence,int,int) -> <init>
    32:78:void <init>(org.locationtech.jts.geom.CoordinateSequence,int) -> <init>
    179:189:double computeDistanceLineLine(org.locationtech.jts.operation.distance.FacetSequence,org.locationtech.jts.operation.distance.GeometryLocation[]) -> computeDistanceLineLine
    210:216:double computeDistancePointLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.operation.distance.FacetSequence,org.locationtech.jts.operation.distance.GeometryLocation[]) -> computeDistancePointLine
    114:132:double distance(org.locationtech.jts.operation.distance.FacetSequence) -> distance
    97:97:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    83:85:org.locationtech.jts.geom.Envelope getEnvelope() -> getEnvelope
    102:102:boolean isPoint() -> isPoint
    146:169:org.locationtech.jts.operation.distance.GeometryLocation[] nearestLocations(org.locationtech.jts.operation.distance.FacetSequence) -> nearestLocations
    92:92:int size() -> size
    234:244:java.lang.String toString() -> toString
    199:203:void updateNearestLocationsLineLine(int,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.operation.distance.FacetSequence,int,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.operation.distance.GeometryLocation[]) -> updateNearestLocationsLineLine
    226:229:void updateNearestLocationsPointLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.operation.distance.FacetSequence,int,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.operation.distance.GeometryLocation[]) -> updateNearestLocationsPointLine
org.locationtech.jts.operation.distance.FacetSequenceTreeBuilder -> org.locationtech.jts.operation.distance.FacetSequenceTreeBuilder:
    27:27:void <init>() -> <init>
    27:27:void access$000(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.CoordinateSequence,java.util.List) -> access$000
    73:81:void addFacetSequences(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.CoordinateSequence,java.util.List) -> addFacetSequences
    35:41:org.locationtech.jts.index.strtree.STRtree build(org.locationtech.jts.geom.Geometry) -> build
    52:54:java.util.List computeFacetSequences(org.locationtech.jts.geom.Geometry) -> computeFacetSequences
org.locationtech.jts.operation.distance.FacetSequenceTreeBuilder$1 -> org.locationtech.jts.operation.distance.FacetSequenceTreeBuilder$1:
    54:54:void <init>(java.util.List) -> <init>
    58:64:void filter(org.locationtech.jts.geom.Geometry) -> filter
org.locationtech.jts.operation.distance.GeometryLocation -> org.locationtech.jts.operation.distance.GeometryLocation:
    54:57:void <init>(org.locationtech.jts.geom.Geometry,int,org.locationtech.jts.geom.Coordinate) -> <init>
    68:68:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Coordinate) -> <init>
    87:87:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    74:74:org.locationtech.jts.geom.Geometry getGeometryComponent() -> getGeometryComponent
    82:82:int getSegmentIndex() -> getSegmentIndex
    92:92:boolean isInsideArea() -> isInsideArea
    95:97:java.lang.String toString() -> toString
org.locationtech.jts.operation.distance.IndexedFacetDistance -> org.locationtech.jts.operation.distance.IndexedFacetDistance:
    98:99:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    67:68:double distance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> distance
    112:117:double distance(org.locationtech.jts.geom.Geometry) -> distance
    129:134:org.locationtech.jts.operation.distance.GeometryLocation[] nearestLocations(org.locationtech.jts.geom.Geometry) -> nearestLocations
    79:80:org.locationtech.jts.geom.Coordinate[] nearestPoints(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> nearestPoints
    145:148:org.locationtech.jts.geom.Coordinate[] nearestPoints(org.locationtech.jts.geom.Geometry) -> nearestPoints
org.locationtech.jts.operation.distance.IndexedFacetDistance$FacetSequenceDistance -> org.locationtech.jts.operation.distance.IndexedFacetDistance$FacetSequenceDistance:
    195:195:void <init>() -> <init>
    195:195:void <init>(org.locationtech.jts.operation.distance.IndexedFacetDistance$1) -> <init>
    199:201:double distance(org.locationtech.jts.index.strtree.ItemBoundable,org.locationtech.jts.index.strtree.ItemBoundable) -> distance
org.locationtech.jts.operation.distance3d.AxisPlaneCoordinateSequence -> org.locationtech.jts.operation.distance3d.AxisPlaneCoordinateSequence:
    69:71:void <clinit>() -> <clinit>
    76:78:void <init>(org.locationtech.jts.geom.CoordinateSequence,int[]) -> <init>
    135:135:java.lang.Object clone() -> clone
    30:30:org.locationtech.jts.geom.CoordinateSequence copy() -> copy
    140:140:org.locationtech.jts.operation.distance3d.AxisPlaneCoordinateSequence copy() -> copy
    0:0:org.locationtech.jts.geom.Coordinate createCoordinate() -> createCoordinate
      # {"id":"com.android.tools.r8.synthesized"}
    130:130:org.locationtech.jts.geom.Envelope expandEnvelope(org.locationtech.jts.geom.Envelope) -> expandEnvelope
    86:86:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    94:96:void getCoordinate(int,org.locationtech.jts.geom.Coordinate) -> getCoordinate
    90:90:org.locationtech.jts.geom.Coordinate getCoordinateCopy(int) -> getCoordinateCopy
    0:0:int getDimension() -> getDimension
    0:0:double getM(int) -> getM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getMeasures() -> getMeasures
      # {"id":"com.android.tools.r8.synthesized"}
    114:114:double getOrdinate(int,int) -> getOrdinate
    100:100:double getX(int) -> getX
    104:104:double getY(int) -> getY
    108:108:double getZ(int) -> getZ
    0:0:boolean hasM() -> hasM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean hasZ() -> hasZ
      # {"id":"com.android.tools.r8.synthesized"}
    44:44:org.locationtech.jts.geom.CoordinateSequence projectToXY(org.locationtech.jts.geom.CoordinateSequence) -> projectToXY
    55:55:org.locationtech.jts.geom.CoordinateSequence projectToXZ(org.locationtech.jts.geom.CoordinateSequence) -> projectToXZ
    66:66:org.locationtech.jts.geom.CoordinateSequence projectToYZ(org.locationtech.jts.geom.CoordinateSequence) -> projectToYZ
    122:122:void setOrdinate(int,int,double) -> setOrdinate
    118:118:int size() -> size
    126:126:org.locationtech.jts.geom.Coordinate[] toCoordinateArray() -> toCoordinateArray
org.locationtech.jts.operation.distance3d.Distance3DOp -> org.locationtech.jts.operation.distance3d.Distance3DOp:
    110:110:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> <init>
    97:128:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,double) -> <init>
    187:193:void computeMinDistance() -> computeMinDistance
    291:329:void computeMinDistance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,boolean) -> computeMinDistance
    480:499:void computeMinDistanceLineLine(org.locationtech.jts.geom.LineString,org.locationtech.jts.geom.LineString,boolean) -> computeMinDistanceLineLine
    506:520:void computeMinDistanceLinePoint(org.locationtech.jts.geom.LineString,org.locationtech.jts.geom.Point,boolean) -> computeMinDistanceLinePoint
    219:237:void computeMinDistanceMultiMulti(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,boolean) -> computeMinDistanceMultiMulti
    242:251:void computeMinDistanceOneMulti(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,boolean) -> computeMinDistanceOneMulti
    256:274:void computeMinDistanceOneMulti(org.locationtech.jts.operation.distance3d.PlanarPolygon3D,org.locationtech.jts.geom.Geometry,boolean) -> computeMinDistanceOneMulti
    525:531:void computeMinDistancePointPoint(org.locationtech.jts.geom.Point,org.locationtech.jts.geom.Point,boolean) -> computeMinDistancePointPoint
    386:402:void computeMinDistancePolygonLine(org.locationtech.jts.operation.distance3d.PlanarPolygon3D,org.locationtech.jts.geom.LineString,boolean) -> computeMinDistancePolygonLine
    451:475:void computeMinDistancePolygonPoint(org.locationtech.jts.operation.distance3d.PlanarPolygon3D,org.locationtech.jts.geom.Point,boolean) -> computeMinDistancePolygonPoint
    356:359:void computeMinDistancePolygonPolygon(org.locationtech.jts.operation.distance3d.PlanarPolygon3D,org.locationtech.jts.geom.Polygon,boolean) -> computeMinDistancePolygonPolygon
    372:378:void computeMinDistancePolygonRings(org.locationtech.jts.operation.distance3d.PlanarPolygon3D,org.locationtech.jts.geom.Polygon,boolean) -> computeMinDistancePolygonRings
    56:57:double distance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> distance
    139:146:double distance() -> distance
    407:439:org.locationtech.jts.geom.Coordinate intersection(org.locationtech.jts.operation.distance3d.PlanarPolygon3D,org.locationtech.jts.geom.LineString) -> intersection
    73:74:boolean isWithinDistance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,double) -> isWithinDistance
    204:207:int mostPolygonalIndex() -> mostPolygonalIndex
    170:171:org.locationtech.jts.operation.distance.GeometryLocation[] nearestLocations() -> nearestLocations
    88:89:org.locationtech.jts.geom.Coordinate[] nearestPoints(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> nearestPoints
    156:159:org.locationtech.jts.geom.Coordinate[] nearestPoints() -> nearestPoints
    287:287:org.locationtech.jts.operation.distance3d.PlanarPolygon3D polyPlane(org.locationtech.jts.geom.Geometry) -> polyPlane
    553:560:org.locationtech.jts.geom.Coordinate segmentPoint(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double,double) -> segmentPoint
    177:182:void updateDistance(double,org.locationtech.jts.operation.distance.GeometryLocation,org.locationtech.jts.operation.distance.GeometryLocation,boolean) -> updateDistance
org.locationtech.jts.operation.distance3d.PlanarPolygon3D -> org.locationtech.jts.operation.distance3d.PlanarPolygon3D:
    40:45:void <init>(org.locationtech.jts.geom.Polygon) -> <init>
    80:94:org.locationtech.jts.math.Vector3D averageNormal(org.locationtech.jts.geom.CoordinateSequence) -> averageNormal
    108:117:org.locationtech.jts.geom.Coordinate averagePoint(org.locationtech.jts.geom.CoordinateSequence) -> averagePoint
    62:65:org.locationtech.jts.math.Plane3D findBestFitPlane(org.locationtech.jts.geom.Polygon) -> findBestFitPlane
    122:122:org.locationtech.jts.math.Plane3D getPlane() -> getPlane
    126:126:org.locationtech.jts.geom.Polygon getPolygon() -> getPolygon
    130:134:boolean intersects(org.locationtech.jts.geom.Coordinate) -> intersects
    148:151:boolean intersects(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.LineString) -> intersects
    141:144:int locate(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.LineString) -> locate
    157:159:org.locationtech.jts.geom.CoordinateSequence project(org.locationtech.jts.geom.CoordinateSequence,int) -> project
    166:169:org.locationtech.jts.geom.Coordinate project(org.locationtech.jts.geom.Coordinate,int) -> project
org.locationtech.jts.operation.linemerge.EdgeString -> org.locationtech.jts.operation.linemerge.EdgeString:
    34:41:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    48:48:void add(org.locationtech.jts.operation.linemerge.LineMergeDirectedEdge) -> add
    52:74:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    81:81:org.locationtech.jts.geom.LineString toLineString() -> toLineString
org.locationtech.jts.operation.linemerge.LineMergeDirectedEdge -> org.locationtech.jts.operation.linemerge.LineMergeDirectedEdge:
    40:40:void <init>(org.locationtech.jts.planargraph.Node,org.locationtech.jts.planargraph.Node,org.locationtech.jts.geom.Coordinate,boolean) -> <init>
    49:57:org.locationtech.jts.operation.linemerge.LineMergeDirectedEdge getNext() -> getNext
org.locationtech.jts.operation.linemerge.LineMergeEdge -> org.locationtech.jts.operation.linemerge.LineMergeEdge:
    29:30:void <init>(org.locationtech.jts.geom.LineString) -> <init>
    36:36:org.locationtech.jts.geom.LineString getLine() -> getLine
org.locationtech.jts.operation.linemerge.LineMergeGraph -> org.locationtech.jts.operation.linemerge.LineMergeGraph:
    31:31:void <init>() -> <init>
    41:58:void addEdge(org.locationtech.jts.geom.LineString) -> addEdge
    62:65:org.locationtech.jts.planargraph.Node getNode(org.locationtech.jts.geom.Coordinate) -> getNode
org.locationtech.jts.operation.linemerge.LineMerger -> org.locationtech.jts.operation.linemerge.LineMerger:
    52:103:void <init>() -> <init>
    50:50:void access$000(org.locationtech.jts.operation.linemerge.LineMerger,org.locationtech.jts.geom.LineString) -> access$000
    73:73:void add(org.locationtech.jts.geom.Geometry) -> add
    90:93:void add(java.util.Collection) -> add
    97:100:void add(org.locationtech.jts.geom.LineString) -> add
    159:164:org.locationtech.jts.operation.linemerge.EdgeString buildEdgeStringStartingWith(org.locationtech.jts.operation.linemerge.LineMergeDirectedEdge) -> buildEdgeStringStartingWith
    128:128:void buildEdgeStringsForIsolatedLoops() -> buildEdgeStringsForIsolatedLoops
    142:146:void buildEdgeStringsForNonDegree2Nodes() -> buildEdgeStringsForNonDegree2Nodes
    124:124:void buildEdgeStringsForObviousStartNodes() -> buildEdgeStringsForObviousStartNodes
    132:137:void buildEdgeStringsForUnprocessedNodes() -> buildEdgeStringsForUnprocessedNodes
    151:154:void buildEdgeStringsStartingAt(org.locationtech.jts.planargraph.Node) -> buildEdgeStringsStartingAt
    175:176:java.util.Collection getMergedLineStrings() -> getMergedLineStrings
    107:119:void merge() -> merge
org.locationtech.jts.operation.linemerge.LineMerger$1 -> org.locationtech.jts.operation.linemerge.LineMerger$1:
    73:73:void <init>(org.locationtech.jts.operation.linemerge.LineMerger) -> <init>
    75:76:void filter(org.locationtech.jts.geom.Geometry) -> filter
org.locationtech.jts.operation.linemerge.LineSequencer -> org.locationtech.jts.operation.linemerge.LineSequencer:
    79:142:void <init>() -> <init>
    79:79:void access$000(org.locationtech.jts.operation.linemerge.LineSequencer,org.locationtech.jts.geom.LineString) -> access$000
    153:155:void add(java.util.Collection) -> add
    167:167:void add(org.locationtech.jts.geom.Geometry) -> add
    177:181:void addLine(org.locationtech.jts.geom.LineString) -> addLine
    316:331:void addReverseSubpath(org.locationtech.jts.planargraph.DirectedEdge,java.util.ListIterator,boolean) -> addReverseSubpath
    439:457:org.locationtech.jts.geom.Geometry buildSequencedGeometry(java.util.List) -> buildSequencedGeometry
    208:220:void computeSequence() -> computeSequence
    339:342:org.locationtech.jts.planargraph.Node findLowestDegreeNode(org.locationtech.jts.planargraph.Subgraph) -> findLowestDegreeNode
    264:285:java.util.List findSequence(org.locationtech.jts.planargraph.Subgraph) -> findSequence
    227:234:java.util.List findSequences() -> findSequences
    300:304:org.locationtech.jts.planargraph.DirectedEdge findUnvisitedBestOrientedDE(org.locationtech.jts.planargraph.Node) -> findUnvisitedBestOrientedDE
    203:204:org.locationtech.jts.geom.Geometry getSequencedLineStrings() -> getSequencedLineStrings
    254:256:boolean hasSequence(org.locationtech.jts.planargraph.Subgraph) -> hasSequence
    192:193:boolean isSequenceable() -> isSequenceable
    100:129:boolean isSequenced(org.locationtech.jts.geom.Geometry) -> isSequenced
    369:407:java.util.List orient(java.util.List) -> orient
    421:424:java.util.List reverse(java.util.List) -> reverse
    462:468:org.locationtech.jts.geom.LineString reverse(org.locationtech.jts.geom.LineString) -> reverse
    83:85:org.locationtech.jts.geom.Geometry sequence(org.locationtech.jts.geom.Geometry) -> sequence
org.locationtech.jts.operation.linemerge.LineSequencer$1 -> org.locationtech.jts.operation.linemerge.LineSequencer$1:
    167:167:void <init>(org.locationtech.jts.operation.linemerge.LineSequencer) -> <init>
    169:170:void filter(org.locationtech.jts.geom.Geometry) -> filter
org.locationtech.jts.operation.overlay.ConsistentPolygonRingChecker -> org.locationtech.jts.operation.overlay.ConsistentPolygonRingChecker:
    40:95:void <init>(org.locationtech.jts.geomgraph.PlanarGraph) -> <init>
    59:61:void check(int) -> check
    46:49:void checkAll() -> checkAll
    68:72:java.util.List getPotentialResultAreaEdges(org.locationtech.jts.geomgraph.DirectedEdgeStar,int) -> getPotentialResultAreaEdges
    80:85:boolean isPotentialResultAreaEdge(org.locationtech.jts.geomgraph.DirectedEdge,int) -> isPotentialResultAreaEdge
    100:136:void testLinkResultDirectedEdges(org.locationtech.jts.geomgraph.DirectedEdgeStar,int) -> testLinkResultDirectedEdges
org.locationtech.jts.operation.overlay.EdgeSetNoder -> org.locationtech.jts.operation.overlay.EdgeSetNoder:
    36:39:void <init>(org.locationtech.jts.algorithm.LineIntersector) -> <init>
    44:44:void addEdges(java.util.List) -> addEdges
    49:57:java.util.List getNodedEdges() -> getNodedEdges
org.locationtech.jts.operation.overlay.LineBuilder -> org.locationtech.jts.operation.overlay.LineBuilder:
    39:45:void <init>(org.locationtech.jts.operation.overlay.OverlayOp,org.locationtech.jts.geom.GeometryFactory,org.locationtech.jts.algorithm.PointLocator) -> <init>
    52:56:java.util.List build(int) -> build
    155:160:void buildLines(int) -> buildLines
    135:149:void collectBoundaryTouchEdge(org.locationtech.jts.geomgraph.DirectedEdge,int,java.util.List) -> collectBoundaryTouchEdge
    109:118:void collectLineEdge(org.locationtech.jts.geomgraph.DirectedEdge,int,java.util.List) -> collectLineEdge
    90:93:void collectLines(int) -> collectLines
    68:83:void findCoveredLineEdges() -> findCoveredLineEdges
    183:184:void labelIsolatedLine(org.locationtech.jts.geomgraph.Edge,int) -> labelIsolatedLine
    166:174:void labelIsolatedLines(java.util.List) -> labelIsolatedLines
org.locationtech.jts.operation.overlay.MaximalEdgeRing -> org.locationtech.jts.operation.overlay.MaximalEdgeRing:
    48:48:void <init>(org.locationtech.jts.geomgraph.DirectedEdge,org.locationtech.jts.geom.GeometryFactory) -> <init>
    76:84:java.util.List buildMinimalRings() -> buildMinimalRings
    53:53:org.locationtech.jts.geomgraph.DirectedEdge getNext(org.locationtech.jts.geomgraph.DirectedEdge) -> getNext
    66:71:void linkDirectedEdgesForMinimalEdgeRings() -> linkDirectedEdgesForMinimalEdgeRings
    57:57:void setEdgeRing(org.locationtech.jts.geomgraph.DirectedEdge,org.locationtech.jts.geomgraph.EdgeRing) -> setEdgeRing
org.locationtech.jts.operation.overlay.MinimalEdgeRing -> org.locationtech.jts.operation.overlay.MinimalEdgeRing:
    34:34:void <init>(org.locationtech.jts.geomgraph.DirectedEdge,org.locationtech.jts.geom.GeometryFactory) -> <init>
    39:39:org.locationtech.jts.geomgraph.DirectedEdge getNext(org.locationtech.jts.geomgraph.DirectedEdge) -> getNext
    43:43:void setEdgeRing(org.locationtech.jts.geomgraph.DirectedEdge,org.locationtech.jts.geomgraph.EdgeRing) -> setEdgeRing
org.locationtech.jts.operation.overlay.OverlayNodeFactory -> org.locationtech.jts.operation.overlay.OverlayNodeFactory:
    31:31:void <init>() -> <init>
    36:36:org.locationtech.jts.geomgraph.Node createNode(org.locationtech.jts.geom.Coordinate) -> createNode
org.locationtech.jts.operation.overlay.OverlayOp -> org.locationtech.jts.operation.overlay.OverlayOp:
    143:169:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> <init>
    552:557:void cancelDuplicateResultEdges() -> cancelDuplicateResultEdges
    604:616:org.locationtech.jts.geom.Geometry computeGeometry(java.util.List,java.util.List,java.util.List,int) -> computeGeometry
    431:437:void computeLabelling() -> computeLabelling
    348:380:void computeLabelsFromDepths() -> computeLabelsFromDepths
    199:260:void computeOverlay(int) -> computeOverlay
    415:418:void copyPoints(int) -> copyPoints
    643:654:org.locationtech.jts.geom.Geometry createEmptyResult(int,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.GeometryFactory) -> createEmptyResult
    529:539:void findResultAreaEdges(int) -> findResultAreaEdges
    192:192:org.locationtech.jts.geomgraph.PlanarGraph getGraph() -> getGraph
    183:184:org.locationtech.jts.geom.Geometry getResultGeometry(int) -> getResultGeometry
    281:311:void insertUniqueEdge(org.locationtech.jts.geomgraph.Edge) -> insertUniqueEdge
    265:267:void insertUniqueEdges(java.util.List) -> insertUniqueEdges
    591:593:boolean isCovered(org.locationtech.jts.geom.Coordinate,java.util.List) -> isCovered
    582:582:boolean isCoveredByA(org.locationtech.jts.geom.Coordinate) -> isCoveredByA
    570:571:boolean isCoveredByLA(org.locationtech.jts.geom.Coordinate) -> isCoveredByLA
    0:0:boolean isResultOfOp(int,int,int) -> isResultOfOp
    104:106:boolean isResultOfOp(org.locationtech.jts.geomgraph.Label,int) -> isResultOfOp
    512:516:void labelIncompleteNode(org.locationtech.jts.geomgraph.Node,int) -> labelIncompleteNode
    484:495:void labelIncompleteNodes() -> labelIncompleteNodes
    447:449:void mergeSymLabels() -> mergeSymLabels
    85:86:org.locationtech.jts.geom.Geometry overlayOp(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,int) -> overlayOp
    393:402:void replaceCollapsedEdges() -> replaceCollapsedEdges
    662:684:int resultDimension(int,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> resultDimension
    459:462:void updateNodeLabelling() -> updateNodeLabelling
org.locationtech.jts.operation.overlay.PointBuilder -> org.locationtech.jts.operation.overlay.PointBuilder:
    32:36:void <init>(org.locationtech.jts.operation.overlay.OverlayOp,org.locationtech.jts.geom.GeometryFactory,org.locationtech.jts.algorithm.PointLocator) -> <init>
    48:54:java.util.List build(int) -> build
    70:87:void extractNonCoveredResultNodes(int) -> extractNonCoveredResultNodes
    105:108:void filterCoveredNodeToPoint(org.locationtech.jts.geomgraph.Node) -> filterCoveredNodeToPoint
org.locationtech.jts.operation.overlay.PolygonBuilder -> org.locationtech.jts.operation.overlay.PolygonBuilder:
    42:46:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    56:56:void add(org.locationtech.jts.geomgraph.PlanarGraph) -> add
    66:71:void add(java.util.Collection,java.util.Collection) -> add
    87:95:java.util.List buildMaximalEdgeRings(java.util.Collection) -> buildMaximalEdgeRings
    105:122:java.util.List buildMinimalEdgeRings(java.util.List,java.util.List,java.util.List) -> buildMinimalEdgeRings
    270:275:java.util.List computePolygons(java.util.List) -> computePolygons
    236:262:org.locationtech.jts.geomgraph.EdgeRing findEdgeRingContaining(org.locationtech.jts.geomgraph.EdgeRing,java.util.List) -> findEdgeRingContaining
    142:149:org.locationtech.jts.geomgraph.EdgeRing findShell(java.util.List) -> findShell
    77:77:java.util.List getPolygons() -> getPolygons
    207:215:void placeFreeHoles(java.util.List,java.util.List) -> placeFreeHoles
    165:168:void placePolygonHoles(org.locationtech.jts.geomgraph.EdgeRing,java.util.List) -> placePolygonHoles
    181:188:void sortShellsAndHoles(java.util.List,java.util.List,java.util.List) -> sortShellsAndHoles
org.locationtech.jts.operation.overlay.snap.GeometrySnapper -> org.locationtech.jts.operation.overlay.snap.GeometrySnapper:
    143:144:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    218:219:double computeMinimumSegmentLength(org.locationtech.jts.geom.Coordinate[]) -> computeMinimumSegmentLength
    58:71:double computeOverlaySnapTolerance(org.locationtech.jts.geom.Geometry) -> computeOverlaySnapTolerance
    88:88:double computeOverlaySnapTolerance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> computeOverlaySnapTolerance
    80:81:double computeSizeBasedSnapTolerance(org.locationtech.jts.geom.Geometry) -> computeSizeBasedSnapTolerance
    209:209:double computeSnapTolerance(org.locationtech.jts.geom.Coordinate[]) -> computeSnapTolerance
    193:198:org.locationtech.jts.geom.Coordinate[] extractTargetCoordinates(org.locationtech.jts.geom.Geometry) -> extractTargetCoordinates
    102:110:org.locationtech.jts.geom.Geometry[] snap(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,double) -> snap
    158:161:org.locationtech.jts.geom.Geometry snapTo(org.locationtech.jts.geom.Geometry,double) -> snapTo
    131:132:org.locationtech.jts.geom.Geometry snapToSelf(org.locationtech.jts.geom.Geometry,double,boolean) -> snapToSelf
    178:185:org.locationtech.jts.geom.Geometry snapToSelf(double,boolean) -> snapToSelf
org.locationtech.jts.operation.overlay.snap.LineStringSnapper -> org.locationtech.jts.operation.overlay.snap.LineStringSnapper:
    48:48:void <init>(org.locationtech.jts.geom.LineString,double) -> <init>
    32:62:void <init>(org.locationtech.jts.geom.Coordinate[],double) -> <init>
    193:210:int findSegmentIndexToSnap(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.CoordinateList) -> findSegmentIndexToSnap
    118:123:org.locationtech.jts.geom.Coordinate findSnapForVertex(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> findSnapForVertex
    71:72:boolean isClosed(org.locationtech.jts.geom.Coordinate[]) -> isClosed
    67:67:void setAllowSnappingToSourceVertices(boolean) -> setAllowSnappingToSourceVertices
    145:164:void snapSegments(org.locationtech.jts.geom.CoordinateList,org.locationtech.jts.geom.Coordinate[]) -> snapSegments
    83:88:org.locationtech.jts.geom.Coordinate[] snapTo(org.locationtech.jts.geom.Coordinate[]) -> snapTo
    102:111:void snapVertices(org.locationtech.jts.geom.CoordinateList,org.locationtech.jts.geom.Coordinate[]) -> snapVertices
org.locationtech.jts.operation.overlay.snap.SnapIfNeededOverlayOp -> org.locationtech.jts.operation.overlay.snap.SnapIfNeededOverlayOp:
    60:63:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> <init>
    52:52:org.locationtech.jts.geom.Geometry difference(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> difference
    75:98:org.locationtech.jts.geom.Geometry getResultGeometry(int) -> getResultGeometry
    42:42:org.locationtech.jts.geom.Geometry intersection(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> intersection
    36:37:org.locationtech.jts.geom.Geometry overlayOp(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,int) -> overlayOp
    57:57:org.locationtech.jts.geom.Geometry symDifference(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> symDifference
    47:47:org.locationtech.jts.geom.Geometry union(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> union
org.locationtech.jts.operation.overlay.snap.SnapOverlayOp -> org.locationtech.jts.operation.overlay.snap.SnapOverlayOp:
    60:67:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> <init>
    134:135:void checkValid(org.locationtech.jts.geom.Geometry) -> checkValid
    71:71:void computeSnapTolerance() -> computeSnapTolerance
    51:51:org.locationtech.jts.geom.Geometry difference(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> difference
    79:81:org.locationtech.jts.geom.Geometry getResultGeometry(int) -> getResultGeometry
    41:41:org.locationtech.jts.geom.Geometry intersection(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> intersection
    35:36:org.locationtech.jts.geom.Geometry overlayOp(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,int) -> overlayOp
    115:115:org.locationtech.jts.geom.Geometry prepareResult(org.locationtech.jts.geom.Geometry) -> prepareResult
    123:128:org.locationtech.jts.geom.Geometry[] removeCommonBits(org.locationtech.jts.geom.Geometry[]) -> removeCommonBits
    86:87:org.locationtech.jts.geom.Geometry selfSnap(org.locationtech.jts.geom.Geometry) -> selfSnap
    95:100:org.locationtech.jts.geom.Geometry[] snap(org.locationtech.jts.geom.Geometry[]) -> snap
    56:56:org.locationtech.jts.geom.Geometry symDifference(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> symDifference
    46:46:org.locationtech.jts.geom.Geometry union(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> union
org.locationtech.jts.operation.overlay.snap.SnapTransformer -> org.locationtech.jts.operation.overlay.snap.SnapTransformer:
# {"id":"sourceFile","fileName":"GeometrySnapper.java"}
    233:238:void <init>(double,org.locationtech.jts.geom.Coordinate[]) -> <init>
    242:245:void <init>(double,org.locationtech.jts.geom.Coordinate[],boolean) -> <init>
    257:259:org.locationtech.jts.geom.Coordinate[] snapLine(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate[]) -> snapLine
    250:252:org.locationtech.jts.geom.CoordinateSequence transformCoordinates(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry) -> transformCoordinates
org.locationtech.jts.operation.overlay.validate.FuzzyPointLocator -> org.locationtech.jts.operation.overlay.validate.FuzzyPointLocator:
    47:54:void <init>(org.locationtech.jts.geom.Geometry,double) -> <init>
    81:85:org.locationtech.jts.geom.MultiLineString extractLinework(org.locationtech.jts.geom.Geometry) -> extractLinework
    59:70:int getLocation(org.locationtech.jts.geom.Coordinate) -> getLocation
    90:97:boolean isWithinToleranceOfBoundary(org.locationtech.jts.geom.Coordinate) -> isWithinToleranceOfBoundary
org.locationtech.jts.operation.overlay.validate.OffsetPointGenerator -> org.locationtech.jts.operation.overlay.validate.OffsetPointGenerator:
    41:46:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    96:113:void computeOffsetPoints(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double,java.util.List) -> computeOffsetPoints
    80:82:void extractPoints(org.locationtech.jts.geom.LineString,double,java.util.List) -> extractPoints
    68:72:java.util.List getPoints(double) -> getPoints
    57:58:void setSidesToGenerate(boolean,boolean) -> setSidesToGenerate
org.locationtech.jts.operation.overlay.validate.OverlayResultValidator -> org.locationtech.jts.operation.overlay.validate.OverlayResultValidator:
    58:72:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> <init>
    102:103:void addTestPts(org.locationtech.jts.geom.Geometry) -> addTestPts
    108:111:boolean checkValid(int) -> checkValid
    120:130:boolean checkValid(int,org.locationtech.jts.geom.Coordinate) -> checkValid
    50:51:double computeBoundaryDistanceTolerance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> computeBoundaryDistanceTolerance
    98:98:org.locationtech.jts.geom.Coordinate getInvalidLocation() -> getInvalidLocation
    136:136:boolean hasLocation(int[],int) -> hasLocation
    44:45:boolean isValid(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,int,org.locationtech.jts.geom.Geometry) -> isValid
    81:83:boolean isValid(int) -> isValid
    144:150:boolean isValidResult(int,int[]) -> isValidResult
    157:161:void reportResult(int,int[],boolean) -> reportResult
org.locationtech.jts.operation.overlay.validate.PolygonalLineworkExtracter -> org.locationtech.jts.operation.overlay.validate.PolygonalLineworkExtracter:
# {"id":"sourceFile","fileName":"FuzzyPointLocator.java"}
    117:118:void <init>() -> <init>
    126:130:void filter(org.locationtech.jts.geom.Geometry) -> filter
    140:140:java.util.List getLinework() -> getLinework
org.locationtech.jts.operation.polygonize.EdgeRing -> org.locationtech.jts.operation.polygonize.EdgeRing:
    156:172:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    192:192:void add(org.locationtech.jts.planargraph.DirectedEdge) -> add
    336:342:void addEdge(org.locationtech.jts.geom.Coordinate[],boolean,org.locationtech.jts.geom.CoordinateList) -> addEdge
    220:222:void addHole(org.locationtech.jts.geom.LinearRing) -> addHole
    230:234:void addHole(org.locationtech.jts.operation.polygonize.EdgeRing) -> addHole
    178:182:void build(org.locationtech.jts.operation.polygonize.PolygonizeDirectedEdge) -> build
    211:212:void computeHole() -> computeHole
    144:149:java.util.List findDirEdgesInRing(org.locationtech.jts.operation.polygonize.PolygonizeDirectedEdge) -> findDirEdgesInRing
    62:88:org.locationtech.jts.operation.polygonize.EdgeRing findEdgeRingContaining(org.locationtech.jts.operation.polygonize.EdgeRing,java.util.List) -> findEdgeRingContaining
    289:298:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    310:311:org.locationtech.jts.geom.LineString getLineString() -> getLineString
    396:404:org.locationtech.jts.operation.polygonize.EdgeRing getOuterHole() -> getOuterHole
    245:251:org.locationtech.jts.geom.Polygon getPolygon() -> getPolygon
    321:330:org.locationtech.jts.geom.LinearRing getRing() -> getRing
    371:371:org.locationtech.jts.operation.polygonize.EdgeRing getShell() -> getShell
    362:362:boolean hasShell() -> hasShell
    201:201:boolean isHole() -> isHole
    126:127:boolean isInList(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate[]) -> isInList
    273:273:boolean isIncluded() -> isIncluded
    269:269:boolean isIncludedSet() -> isIncludedSet
    381:382:boolean isOuterHole() -> isOuterHole
    391:391:boolean isOuterShell() -> isOuterShell
    440:440:boolean isProcessed() -> isProcessed
    262:265:boolean isValid() -> isValid
    106:108:org.locationtech.jts.geom.Coordinate ptNotInList(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate[]) -> ptNotInList
    277:278:void setIncluded(boolean) -> setIncluded
    447:447:void setProcessed(boolean) -> setProcessed
    353:353:void setShell(org.locationtech.jts.operation.polygonize.EdgeRing) -> setShell
    433:433:java.lang.String toString() -> toString
    414:421:void updateIncluded() -> updateIncluded
org.locationtech.jts.operation.polygonize.EdgeRing$EnvelopeComparator -> org.locationtech.jts.operation.polygonize.EdgeRing$EnvelopeComparator:
    458:458:void <init>() -> <init>
    460:462:int compare(java.lang.Object,java.lang.Object) -> compare
org.locationtech.jts.operation.polygonize.PolygonizeDirectedEdge -> org.locationtech.jts.operation.polygonize.PolygonizeDirectedEdge:
    30:48:void <init>(org.locationtech.jts.planargraph.Node,org.locationtech.jts.planargraph.Node,org.locationtech.jts.geom.Coordinate,boolean) -> <init>
    54:54:long getLabel() -> getLabel
    63:63:org.locationtech.jts.operation.polygonize.PolygonizeDirectedEdge getNext() -> getNext
    90:90:org.locationtech.jts.operation.polygonize.EdgeRing getRing() -> getRing
    74:74:boolean isInRing() -> isInRing
    58:58:void setLabel(long) -> setLabel
    68:68:void setNext(org.locationtech.jts.operation.polygonize.PolygonizeDirectedEdge) -> setNext
    81:81:void setRing(org.locationtech.jts.operation.polygonize.EdgeRing) -> setRing
org.locationtech.jts.operation.polygonize.PolygonizeEdge -> org.locationtech.jts.operation.polygonize.PolygonizeEdge:
    31:32:void <init>(org.locationtech.jts.geom.LineString) -> <init>
    34:34:org.locationtech.jts.geom.LineString getLine() -> getLine
org.locationtech.jts.operation.polygonize.PolygonizeGraph -> org.locationtech.jts.operation.polygonize.PolygonizeGraph:
    95:96:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    105:120:void addEdge(org.locationtech.jts.geom.LineString) -> addEdge
    0:0:void computeDepthParity() -> computeDepthParity
    0:0:void computeDepthParity(org.locationtech.jts.operation.polygonize.PolygonizeDirectedEdge) -> computeDepthParity
    317:351:void computeNextCCWEdges(org.locationtech.jts.planargraph.Node,long) -> computeNextCCWEdges
    137:139:void computeNextCWEdges() -> computeNextCWEdges
    288:307:void computeNextCWEdges(org.locationtech.jts.planargraph.Node) -> computeNextCWEdges
    151:160:void convertMaximalToMinimalEdgeRings(java.util.List) -> convertMaximalToMinimalEdgeRings
    77:83:void deleteAllEdges(org.locationtech.jts.planargraph.Node) -> deleteAllEdges
    252:273:java.util.List deleteCutEdges() -> deleteCutEdges
    374:402:java.util.Collection deleteDangles() -> deleteDangles
    357:358:org.locationtech.jts.operation.polygonize.EdgeRing findEdgeRing(org.locationtech.jts.operation.polygonize.PolygonizeDirectedEdge) -> findEdgeRing
    177:186:java.util.List findIntersectionNodes(org.locationtech.jts.operation.polygonize.PolygonizeDirectedEdge,long) -> findIntersectionNodes
    229:240:java.util.List findLabeledEdgeRings(java.util.Collection) -> findLabeledEdgeRings
    63:67:int getDegree(org.locationtech.jts.planargraph.Node,long) -> getDegree
    52:56:int getDegreeNonDeleted(org.locationtech.jts.planargraph.Node) -> getDegreeNonDeleted
    200:214:java.util.List getEdgeRings() -> getEdgeRings
    125:129:org.locationtech.jts.planargraph.Node getNode(org.locationtech.jts.geom.Coordinate) -> getNode
    281:283:void label(java.util.Collection,long) -> label
org.locationtech.jts.operation.polygonize.Polygonizer -> org.locationtech.jts.operation.polygonize.Polygonizer:
    97:97:void <init>() -> <init>
    73:107:void <init>(boolean) -> <init>
    52:52:void access$000(org.locationtech.jts.operation.polygonize.Polygonizer,org.locationtech.jts.geom.LineString) -> access$000
    120:122:void add(java.util.Collection) -> add
    136:136:void add(org.locationtech.jts.geom.Geometry) -> add
    147:151:void add(org.locationtech.jts.geom.LineString) -> add
    307:309:void assignHoleToShell(org.locationtech.jts.operation.polygonize.EdgeRing,java.util.List) -> assignHoleToShell
    294:296:void assignHolesToShells(java.util.List,java.util.List) -> assignHolesToShells
    350:354:java.util.List extractPolygons(java.util.List,boolean) -> extractPolygons
    314:324:void findDisjointShells(java.util.List) -> findDisjointShells
    339:344:void findOuterShells(java.util.List) -> findOuterShells
    280:288:void findShellsAndHoles(java.util.List) -> findShellsAndHoles
    269:274:void findValidRings(java.util.List,java.util.List,java.util.List) -> findValidRings
    210:211:java.util.Collection getCutEdges() -> getCutEdges
    200:201:java.util.Collection getDangles() -> getDangles
    185:191:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    220:221:java.util.Collection getInvalidRingLines() -> getInvalidRingLines
    173:174:java.util.Collection getPolygons() -> getPolygons
    230:264:void polygonize() -> polygonize
    164:164:void setCheckRingsValid(boolean) -> setCheckRingsValid
org.locationtech.jts.operation.polygonize.Polygonizer$LineStringAdder -> org.locationtech.jts.operation.polygonize.Polygonizer$LineStringAdder:
    62:63:void <init>(org.locationtech.jts.operation.polygonize.Polygonizer) -> <init>
    67:68:void filter(org.locationtech.jts.geom.Geometry) -> filter
org.locationtech.jts.operation.predicate.EnvelopeIntersectsVisitor -> org.locationtech.jts.operation.predicate.EnvelopeIntersectsVisitor:
# {"id":"sourceFile","fileName":"RectangleIntersects.java"}
    129:133:void <init>(org.locationtech.jts.geom.Envelope) -> <init>
    145:145:boolean intersects() -> intersects
    184:184:boolean isDone() -> isDone
    150:177:void visit(org.locationtech.jts.geom.Geometry) -> visit
org.locationtech.jts.operation.predicate.GeometryContainsPointVisitor -> org.locationtech.jts.operation.predicate.GeometryContainsPointVisitor:
# {"id":"sourceFile","fileName":"RectangleIntersects.java"}
    202:207:void <init>(org.locationtech.jts.geom.Polygon) -> <init>
    219:219:boolean containsPoint() -> containsPoint
    251:251:boolean isDone() -> isDone
    225:243:void visit(org.locationtech.jts.geom.Geometry) -> visit
org.locationtech.jts.operation.predicate.RectangleContains -> org.locationtech.jts.operation.predicate.RectangleContains:
    59:60:void <init>(org.locationtech.jts.geom.Polygon) -> <init>
    48:49:boolean contains(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.Geometry) -> contains
    66:74:boolean contains(org.locationtech.jts.geom.Geometry) -> contains
    82:88:boolean isContainedInBoundary(org.locationtech.jts.geom.Geometry) -> isContainedInBoundary
    146:157:boolean isLineSegmentContainedInBoundary(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isLineSegmentContainedInBoundary
    125:132:boolean isLineStringContainedInBoundary(org.locationtech.jts.geom.LineString) -> isLineStringContainedInBoundary
    96:96:boolean isPointContainedInBoundary(org.locationtech.jts.geom.Point) -> isPointContainedInBoundary
    112:115:boolean isPointContainedInBoundary(org.locationtech.jts.geom.Coordinate) -> isPointContainedInBoundary
org.locationtech.jts.operation.predicate.RectangleIntersects -> org.locationtech.jts.operation.predicate.RectangleIntersects:
    72:74:void <init>(org.locationtech.jts.geom.Polygon) -> <init>
    57:58:boolean intersects(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.Geometry) -> intersects
    86:111:boolean intersects(org.locationtech.jts.geom.Geometry) -> intersects
org.locationtech.jts.operation.predicate.RectangleIntersectsSegmentVisitor -> org.locationtech.jts.operation.predicate.RectangleIntersectsSegmentVisitor:
# {"id":"sourceFile","fileName":"RectangleIntersects.java"}
    268:281:void <init>(org.locationtech.jts.geom.Polygon) -> <init>
    315:318:void checkIntersectionWithLineStrings(java.util.List) -> checkIntersectionWithLineStrings
    325:331:void checkIntersectionWithSegments(org.locationtech.jts.geom.LineString) -> checkIntersectionWithSegments
    292:292:boolean intersects() -> intersects
    339:339:boolean isDone() -> isDone
    302:310:void visit(org.locationtech.jts.geom.Geometry) -> visit
org.locationtech.jts.operation.relate.EdgeEndBuilder -> org.locationtech.jts.operation.relate.EdgeEndBuilder:
    42:42:void <init>() -> <init>
    47:50:java.util.List computeEdgeEnds(java.util.Iterator) -> computeEdgeEnds
    61:80:void computeEdgeEnds(org.locationtech.jts.geomgraph.Edge,java.util.List) -> computeEdgeEnds
    135:147:void createEdgeEndForNext(org.locationtech.jts.geomgraph.Edge,java.util.List,org.locationtech.jts.geomgraph.EdgeIntersection,org.locationtech.jts.geomgraph.EdgeIntersection) -> createEdgeEndForNext
    102:118:void createEdgeEndForPrev(org.locationtech.jts.geomgraph.Edge,java.util.List,org.locationtech.jts.geomgraph.EdgeIntersection,org.locationtech.jts.geomgraph.EdgeIntersection) -> createEdgeEndForPrev
org.locationtech.jts.operation.relate.EdgeEndBundle -> org.locationtech.jts.operation.relate.EdgeEndBundle:
    41:46:void <init>(org.locationtech.jts.algorithm.BoundaryNodeRule,org.locationtech.jts.geomgraph.EdgeEnd) -> <init>
    57:57:void <init>(org.locationtech.jts.geomgraph.EdgeEnd) -> <init>
    80:93:void computeLabel(org.locationtech.jts.algorithm.BoundaryNodeRule) -> computeLabel
    123:134:void computeLabelOn(int,org.locationtech.jts.algorithm.BoundaryNodeRule) -> computeLabelOn
    162:171:void computeLabelSide(int,int) -> computeLabelSide
    142:143:void computeLabelSides(int) -> computeLabelSides
    62:62:java.util.List getEdgeEnds() -> getEdgeEnds
    60:60:org.locationtech.jts.geomgraph.Label getLabel() -> getLabel
    68:68:void insert(org.locationtech.jts.geomgraph.EdgeEnd) -> insert
    61:61:java.util.Iterator iterator() -> iterator
    185:189:void print(java.io.PrintStream) -> print
    181:181:void updateIM(org.locationtech.jts.geom.IntersectionMatrix) -> updateIM
org.locationtech.jts.operation.relate.EdgeEndBundleStar -> org.locationtech.jts.operation.relate.EdgeEndBundleStar:
    36:36:void <init>() -> <init>
    48:54:void insert(org.locationtech.jts.geomgraph.EdgeEnd) -> insert
    63:65:void updateIM(org.locationtech.jts.geom.IntersectionMatrix) -> updateIM
org.locationtech.jts.operation.relate.RelateComputer -> org.locationtech.jts.operation.relate.RelateComputer:
    58:70:void <init>(org.locationtech.jts.geomgraph.GeometryGraph[]) -> <init>
    274:282:void computeDisjointIM(org.locationtech.jts.geom.IntersectionMatrix) -> computeDisjointIM
    75:142:org.locationtech.jts.geom.IntersectionMatrix computeIM() -> computeIM
    227:237:void computeIntersectionNodes(int) -> computeIntersectionNodes
    157:196:void computeProperIntersectionIM(org.locationtech.jts.geomgraph.index.SegmentIntersector,org.locationtech.jts.geom.IntersectionMatrix) -> computeProperIntersectionIM
    211:214:void copyNodesAndLabels(int) -> copyNodesAndLabels
    148:150:void insertEdgeEnds(java.util.List) -> insertEdgeEnds
    252:262:void labelIntersectionNodes(int) -> labelIntersectionNodes
    342:350:void labelIsolatedEdge(org.locationtech.jts.geomgraph.Edge,int,org.locationtech.jts.geom.Geometry) -> labelIsolatedEdge
    326:330:void labelIsolatedEdges(int,int) -> labelIsolatedEdges
    385:386:void labelIsolatedNode(org.locationtech.jts.geomgraph.Node,int) -> labelIsolatedNode
    366:375:void labelIsolatedNodes() -> labelIsolatedNodes
    288:290:void labelNodeEdges() -> labelNodeEdges
    302:311:void updateIM(org.locationtech.jts.geom.IntersectionMatrix) -> updateIM
org.locationtech.jts.operation.relate.RelateNode -> org.locationtech.jts.operation.relate.RelateNode:
    33:33:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geomgraph.EdgeEndStar) -> <init>
    42:42:void computeIM(org.locationtech.jts.geom.IntersectionMatrix) -> computeIM
    49:49:void updateIMFromEdges(org.locationtech.jts.geom.IntersectionMatrix) -> updateIMFromEdges
org.locationtech.jts.operation.relate.RelateNodeFactory -> org.locationtech.jts.operation.relate.RelateNodeFactory:
    26:26:void <init>() -> <init>
    31:31:org.locationtech.jts.geomgraph.Node createNode(org.locationtech.jts.geom.Coordinate) -> createNode
org.locationtech.jts.operation.relate.RelateNodeGraph -> org.locationtech.jts.operation.relate.RelateNodeGraph:
    51:53:void <init>() -> <init>
    61:73:void build(org.locationtech.jts.geomgraph.GeometryGraph) -> build
    90:100:void computeIntersectionNodes(org.locationtech.jts.geomgraph.GeometryGraph,int) -> computeIntersectionNodes
    118:121:void copyNodesAndLabels(org.locationtech.jts.geomgraph.GeometryGraph,int) -> copyNodesAndLabels
    56:56:java.util.Iterator getNodeIterator() -> getNodeIterator
    128:130:void insertEdgeEnds(java.util.List) -> insertEdgeEnds
org.locationtech.jts.operation.relate.RelateOp -> org.locationtech.jts.operation.relate.RelateOp:
    87:88:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> <init>
    100:101:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.algorithm.BoundaryNodeRule) -> <init>
    112:112:org.locationtech.jts.geom.IntersectionMatrix getIntersectionMatrix() -> getIntersectionMatrix
    56:57:org.locationtech.jts.geom.IntersectionMatrix relate(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> relate
    72:73:org.locationtech.jts.geom.IntersectionMatrix relate(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.algorithm.BoundaryNodeRule) -> relate
org.locationtech.jts.operation.union.CascadedPolygonUnion -> org.locationtech.jts.operation.union.CascadedPolygonUnion:
    72:85:void <init>(java.util.Collection) -> <init>
    202:202:org.locationtech.jts.geom.Geometry binaryUnion(java.util.List) -> binaryUnion
    217:228:org.locationtech.jts.geom.Geometry binaryUnion(java.util.List,int,int) -> binaryUnion
    179:181:org.locationtech.jts.geom.Geometry bufferUnion(java.util.List) -> bufferUnion
    187:189:org.locationtech.jts.geom.Geometry bufferUnion(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> bufferUnion
    356:364:org.locationtech.jts.geom.Geometry extractByEnvelope(org.locationtech.jts.geom.Envelope,org.locationtech.jts.geom.Geometry,java.util.List) -> extractByEnvelope
    243:244:org.locationtech.jts.geom.Geometry getGeometry(java.util.List,int) -> getGeometry
    256:266:java.util.List reduceToGeometries(java.util.List) -> reduceToGeometries
    167:172:org.locationtech.jts.geom.Geometry repeatedUnion(java.util.List) -> repeatedUnion
    404:410:org.locationtech.jts.geom.Geometry restrictToPolygons(org.locationtech.jts.geom.Geometry) -> restrictToPolygons
    67:68:org.locationtech.jts.geom.Geometry union(java.util.Collection) -> union
    113:136:org.locationtech.jts.geom.Geometry union() -> union
    386:386:org.locationtech.jts.geom.Geometry unionActual(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> unionActual
    295:315:org.locationtech.jts.geom.Geometry unionOptimized(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> unionOptimized
    286:290:org.locationtech.jts.geom.Geometry unionSafe(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> unionSafe
    146:148:org.locationtech.jts.geom.Geometry unionTree(java.util.List) -> unionTree
    339:348:org.locationtech.jts.geom.Geometry unionUsingEnvelopeIntersection(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Envelope) -> unionUsingEnvelopeIntersection
org.locationtech.jts.operation.union.PointGeometryUnion -> org.locationtech.jts.operation.union.PointGeometryUnion:
    49:52:void <init>(org.locationtech.jts.geom.Puntal,org.locationtech.jts.geom.Geometry) -> <init>
    40:41:org.locationtech.jts.geom.Geometry union(org.locationtech.jts.geom.Puntal,org.locationtech.jts.geom.Geometry) -> union
    57:84:org.locationtech.jts.geom.Geometry union() -> union
org.locationtech.jts.operation.union.UnaryUnionOp -> org.locationtech.jts.operation.union.UnaryUnionOp:
    116:132:void <init>(java.util.Collection,org.locationtech.jts.geom.GeometryFactory) -> <init>
    116:144:void <init>(java.util.Collection) -> <init>
    116:154:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    159:161:void extract(java.util.Collection) -> extract
    167:177:void extract(org.locationtech.jts.geom.Geometry) -> extract
    80:81:org.locationtech.jts.geom.Geometry union(java.util.Collection) -> union
    98:99:org.locationtech.jts.geom.Geometry union(java.util.Collection,org.locationtech.jts.geom.GeometryFactory) -> union
    112:113:org.locationtech.jts.geom.Geometry union(org.locationtech.jts.geom.Geometry) -> union
    192:233:org.locationtech.jts.geom.Geometry union() -> union
    274:275:org.locationtech.jts.geom.Geometry unionNoOpt(org.locationtech.jts.geom.Geometry) -> unionNoOpt
    257:257:org.locationtech.jts.geom.Geometry unionWithNull(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> unionWithNull
org.locationtech.jts.operation.union.UnionInteracting -> org.locationtech.jts.operation.union.UnionInteracting:
    50:55:void <init>(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> <init>
    93:95:org.locationtech.jts.geom.Geometry bufferUnion(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> bufferUnion
    101:103:void computeInteracting() -> computeInteracting
    110:113:boolean computeInteracting(org.locationtech.jts.geom.Geometry) -> computeInteracting
    123:129:org.locationtech.jts.geom.Geometry extractElements(org.locationtech.jts.geom.Geometry,boolean[],boolean) -> extractElements
    36:37:org.locationtech.jts.geom.Geometry union(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> union
    60:85:org.locationtech.jts.geom.Geometry union() -> union
org.locationtech.jts.operation.valid.ConnectedInteriorTester -> org.locationtech.jts.operation.valid.ConnectedInteriorTester:
    63:72:void <init>(org.locationtech.jts.geomgraph.GeometryGraph) -> <init>
    123:133:java.util.List buildEdgeRings(java.util.Collection) -> buildEdgeRings
    56:58:org.locationtech.jts.geom.Coordinate findDifferentPoint(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Coordinate) -> findDifferentPoint
    75:75:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    207:227:boolean hasUnvisitedShellEdge(java.util.List) -> hasUnvisitedShellEdge
    80:103:boolean isInteriorsConnected() -> isInteriorsConnected
    108:111:void setInteriorEdgesInResult(org.locationtech.jts.geomgraph.PlanarGraph) -> setInteriorEdgesInResult
    162:181:void visitInteriorRing(org.locationtech.jts.geom.LineString,org.locationtech.jts.geomgraph.PlanarGraph) -> visitInteriorRing
    189:191:void visitLinkedDirectedEdges(org.locationtech.jts.geomgraph.DirectedEdge) -> visitLinkedDirectedEdges
    147:155:void visitShellInteriors(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geomgraph.PlanarGraph) -> visitShellInteriors
org.locationtech.jts.operation.valid.ConsistentAreaTester -> org.locationtech.jts.operation.valid.ConsistentAreaTester:
    52:66:void <init>(org.locationtech.jts.geomgraph.GeometryGraph) -> <init>
    72:72:org.locationtech.jts.geom.Coordinate getInvalidPoint() -> getInvalidPoint
    134:139:boolean hasDuplicateRings() -> hasDuplicateRings
    85:96:boolean isNodeConsistentArea() -> isNodeConsistentArea
    107:110:boolean isNodeEdgeAreaLabelsConsistent() -> isNodeEdgeAreaLabelsConsistent
org.locationtech.jts.operation.valid.IndexedNestedRingTester -> org.locationtech.jts.operation.valid.IndexedNestedRingTester:
    35:42:void <init>(org.locationtech.jts.geomgraph.GeometryGraph) -> <init>
    49:50:void add(org.locationtech.jts.geom.LinearRing) -> add
    100:105:void buildIndex() -> buildIndex
    45:45:org.locationtech.jts.geom.Coordinate getNestedPoint() -> getNestedPoint
    55:90:boolean isNonNested() -> isNonNested
org.locationtech.jts.operation.valid.IsValidOp -> org.locationtech.jts.operation.valid.IsValidOp:
    106:111:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    339:344:void checkClosedRing(org.locationtech.jts.geom.LinearRing) -> checkClosedRing
    329:333:void checkClosedRings(org.locationtech.jts.geom.Polygon) -> checkClosedRings
    616:620:void checkConnectedInteriors(org.locationtech.jts.geomgraph.GeometryGraph) -> checkConnectedInteriors
    370:381:void checkConsistentArea(org.locationtech.jts.geomgraph.GeometryGraph) -> checkConsistentArea
    443:465:void checkHolesInShell(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geomgraph.GeometryGraph) -> checkHolesInShell
    487:500:void checkHolesNotNested(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geomgraph.GeometryGraph) -> checkHolesNotNested
    307:309:void checkInvalidCoordinates(org.locationtech.jts.geom.Coordinate[]) -> checkInvalidCoordinates
    319:323:void checkInvalidCoordinates(org.locationtech.jts.geom.Polygon) -> checkInvalidCoordinates
    409:424:void checkNoSelfIntersectingRing(org.locationtech.jts.geomgraph.EdgeIntersectionList) -> checkNoSelfIntersectingRing
    394:397:void checkNoSelfIntersectingRings(org.locationtech.jts.geomgraph.GeometryGraph) -> checkNoSelfIntersectingRings
    590:610:org.locationtech.jts.geom.Coordinate checkShellInsideHole(org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geomgraph.GeometryGraph) -> checkShellInsideHole
    541:574:void checkShellNotNested(org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geom.Polygon,org.locationtech.jts.geomgraph.GeometryGraph) -> checkShellNotNested
    518:525:void checkShellsNotNested(org.locationtech.jts.geom.MultiPolygon,org.locationtech.jts.geomgraph.GeometryGraph) -> checkShellsNotNested
    352:355:void checkTooFewPoints(org.locationtech.jts.geomgraph.GeometryGraph) -> checkTooFewPoints
    171:184:void checkValid(org.locationtech.jts.geom.Geometry) -> checkValid
    192:192:void checkValid(org.locationtech.jts.geom.Point) -> checkValid
    199:199:void checkValid(org.locationtech.jts.geom.MultiPoint) -> checkValid
    207:210:void checkValid(org.locationtech.jts.geom.LineString) -> checkValid
    217:228:void checkValid(org.locationtech.jts.geom.LinearRing) -> checkValid
    237:258:void checkValid(org.locationtech.jts.geom.Polygon) -> checkValid
    263:293:void checkValid(org.locationtech.jts.geom.MultiPolygon) -> checkValid
    298:301:void checkValid(org.locationtech.jts.geom.GeometryCollection) -> checkValid
    89:95:org.locationtech.jts.geom.Coordinate findPtNotNode(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geomgraph.GeometryGraph) -> findPtNotNode
    165:166:org.locationtech.jts.operation.valid.TopologyValidationError getValidationError() -> getValidationError
    57:58:boolean isValid(org.locationtech.jts.geom.Geometry) -> isValid
    71:74:boolean isValid(org.locationtech.jts.geom.Coordinate) -> isValid
    151:152:boolean isValid() -> isValid
    140:140:void setSelfTouchingRingFormingHoleValid(boolean) -> setSelfTouchingRingFormingHoleValid
org.locationtech.jts.operation.valid.RepeatedPointTester -> org.locationtech.jts.operation.valid.RepeatedPointTester:
    36:36:void <init>() -> <init>
    39:39:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    43:50:boolean hasRepeatedPoint(org.locationtech.jts.geom.Geometry) -> hasRepeatedPoint
    55:57:boolean hasRepeatedPoint(org.locationtech.jts.geom.Coordinate[]) -> hasRepeatedPoint
    65:67:boolean hasRepeatedPoint(org.locationtech.jts.geom.Polygon) -> hasRepeatedPoint
    73:75:boolean hasRepeatedPoint(org.locationtech.jts.geom.GeometryCollection) -> hasRepeatedPoint
org.locationtech.jts.operation.valid.TopologyValidationError -> org.locationtech.jts.operation.valid.TopologyValidationError:
    98:98:void <clinit>() -> <clinit>
    123:126:void <init>(int,org.locationtech.jts.geom.Coordinate) -> <init>
    137:137:void <init>(int) -> <init>
    145:145:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    152:152:int getErrorType() -> getErrorType
    160:160:java.lang.String getMessage() -> getMessage
    169:171:java.lang.String toString() -> toString
org.locationtech.jts.planargraph.DirectedEdge -> org.locationtech.jts.planargraph.DirectedEdge:
    55:82:void <init>(org.locationtech.jts.planargraph.Node,org.locationtech.jts.planargraph.Node,org.locationtech.jts.geom.Coordinate,boolean) -> <init>
    195:199:int compareDirection(org.locationtech.jts.planargraph.DirectedEdge) -> compareDirection
    173:174:int compareTo(java.lang.Object) -> compareTo
    126:126:double getAngle() -> getAngle
    121:121:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    104:104:org.locationtech.jts.geom.Coordinate getDirectionPt() -> getDirectionPt
    89:89:org.locationtech.jts.planargraph.Edge getEdge() -> getEdge
    109:109:boolean getEdgeDirection() -> getEdgeDirection
    113:113:org.locationtech.jts.planargraph.Node getFromNode() -> getFromNode
    99:99:int getQuadrant() -> getQuadrant
    131:131:org.locationtech.jts.planargraph.DirectedEdge getSym() -> getSym
    117:117:org.locationtech.jts.planargraph.Node getToNode() -> getToNode
    153:153:boolean isRemoved() -> isRemoved
    207:210:void print(java.io.PrintStream) -> print
    142:143:void remove() -> remove
    94:94:void setEdge(org.locationtech.jts.planargraph.Edge) -> setEdge
    136:136:void setSym(org.locationtech.jts.planargraph.DirectedEdge) -> setSym
    44:46:java.util.List toEdges(java.util.Collection) -> toEdges
org.locationtech.jts.planargraph.DirectedEdgeStar -> org.locationtech.jts.planargraph.DirectedEdgeStar:
    36:42:void <init>() -> <init>
    49:50:void add(org.locationtech.jts.planargraph.DirectedEdge) -> add
    78:81:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    71:71:int getDegree() -> getDegree
    89:90:java.util.List getEdges() -> getEdges
    106:109:int getIndex(org.locationtech.jts.planargraph.Edge) -> getIndex
    120:122:int getIndex(org.locationtech.jts.planargraph.DirectedEdge) -> getIndex
    136:138:int getIndex(int) -> getIndex
    160:161:org.locationtech.jts.planargraph.DirectedEdge getNextCWEdge(org.locationtech.jts.planargraph.DirectedEdge) -> getNextCWEdge
    149:150:org.locationtech.jts.planargraph.DirectedEdge getNextEdge(org.locationtech.jts.planargraph.DirectedEdge) -> getNextEdge
    64:65:java.util.Iterator iterator() -> iterator
    57:57:void remove(org.locationtech.jts.planargraph.DirectedEdge) -> remove
    95:97:void sortEdges() -> sortEdges
org.locationtech.jts.planargraph.Edge -> org.locationtech.jts.planargraph.Edge:
    40:40:void <init>() -> <init>
    49:50:void <init>(org.locationtech.jts.planargraph.DirectedEdge,org.locationtech.jts.planargraph.DirectedEdge) -> <init>
    74:74:org.locationtech.jts.planargraph.DirectedEdge getDirEdge(int) -> getDirEdge
    83:84:org.locationtech.jts.planargraph.DirectedEdge getDirEdge(org.locationtech.jts.planargraph.Node) -> getDirEdge
    96:97:org.locationtech.jts.planargraph.Node getOppositeNode(org.locationtech.jts.planargraph.Node) -> getOppositeNode
    117:117:boolean isRemoved() -> isRemoved
    107:107:void remove() -> remove
    59:65:void setDirectedEdges(org.locationtech.jts.planargraph.DirectedEdge,org.locationtech.jts.planargraph.DirectedEdge) -> setDirectedEdges
org.locationtech.jts.planargraph.GraphComponent -> org.locationtech.jts.planargraph.GraphComponent:
    85:89:void <init>() -> <init>
    77:79:org.locationtech.jts.planargraph.GraphComponent getComponentWithVisitedState(java.util.Iterator,boolean) -> getComponentWithVisitedState
    129:129:java.lang.Object getContext() -> getContext
    143:143:java.lang.Object getData() -> getData
    109:109:boolean isMarked() -> isMarked
    96:96:boolean isVisited() -> isVisited
    122:122:void setContext(java.lang.Object) -> setContext
    136:136:void setData(java.lang.Object) -> setData
    61:63:void setMarked(java.util.Iterator,boolean) -> setMarked
    115:115:void setMarked(boolean) -> setMarked
    47:49:void setVisited(java.util.Iterator,boolean) -> setVisited
    102:102:void setVisited(boolean) -> setVisited
org.locationtech.jts.planargraph.Node -> org.locationtech.jts.planargraph.Node:
    59:59:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    66:68:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.planargraph.DirectedEdgeStar) -> <init>
    81:81:void addOutEdge(org.locationtech.jts.planargraph.DirectedEdge) -> addOutEdge
    74:74:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    91:91:int getDegree() -> getDegree
    41:44:java.util.Collection getEdgesBetween(org.locationtech.jts.planargraph.Node,org.locationtech.jts.planargraph.Node) -> getEdgesBetween
    98:98:int getIndex(org.locationtech.jts.planargraph.Edge) -> getIndex
    87:87:org.locationtech.jts.planargraph.DirectedEdgeStar getOutEdges() -> getOutEdges
    125:125:boolean isRemoved() -> isRemoved
    107:107:void remove(org.locationtech.jts.planargraph.DirectedEdge) -> remove
    114:114:void remove() -> remove
org.locationtech.jts.planargraph.NodeMap -> org.locationtech.jts.planargraph.NodeMap:
    33:38:void <init>() -> <init>
    47:47:org.locationtech.jts.planargraph.Node add(org.locationtech.jts.planargraph.Node) -> add
    62:62:org.locationtech.jts.planargraph.Node find(org.locationtech.jts.geom.Coordinate) -> find
    70:70:java.util.Iterator iterator() -> iterator
    56:56:org.locationtech.jts.planargraph.Node remove(org.locationtech.jts.geom.Coordinate) -> remove
    78:78:java.util.Collection values() -> values
org.locationtech.jts.planargraph.PlanarGraph -> org.locationtech.jts.planargraph.PlanarGraph:
    40:48:void <init>() -> <init>
    72:72:void add(org.locationtech.jts.planargraph.Node) -> add
    82:84:void add(org.locationtech.jts.planargraph.Edge) -> add
    93:93:void add(org.locationtech.jts.planargraph.DirectedEdge) -> add
    111:111:boolean contains(org.locationtech.jts.planargraph.Edge) -> contains
    122:122:boolean contains(org.locationtech.jts.planargraph.DirectedEdge) -> contains
    134:134:java.util.Iterator dirEdgeIterator() -> dirEdgeIterator
    141:141:java.util.Iterator edgeIterator() -> edgeIterator
    61:61:org.locationtech.jts.planargraph.Node findNode(org.locationtech.jts.geom.Coordinate) -> findNode
    211:215:java.util.List findNodesOfDegree(int) -> findNodesOfDegree
    147:147:java.util.Collection getEdges() -> getEdges
    125:125:java.util.Collection getNodes() -> getNodes
    98:98:java.util.Iterator nodeIterator() -> nodeIterator
    158:161:void remove(org.locationtech.jts.planargraph.Edge) -> remove
    171:176:void remove(org.locationtech.jts.planargraph.DirectedEdge) -> remove
    186:203:void remove(org.locationtech.jts.planargraph.Node) -> remove
org.locationtech.jts.planargraph.Subgraph -> org.locationtech.jts.planargraph.Subgraph:
    33:43:void <init>(org.locationtech.jts.planargraph.PlanarGraph) -> <init>
    65:71:void add(org.locationtech.jts.planargraph.Edge) -> add
    105:105:boolean contains(org.locationtech.jts.planargraph.Edge) -> contains
    82:82:java.util.Iterator dirEdgeIterator() -> dirEdgeIterator
    92:92:java.util.Iterator edgeIterator() -> edgeIterator
    54:54:org.locationtech.jts.planargraph.PlanarGraph getParent() -> getParent
    98:98:java.util.Iterator nodeIterator() -> nodeIterator
org.locationtech.jts.planargraph.algorithm.ConnectedSubgraphFinder -> org.locationtech.jts.planargraph.algorithm.ConnectedSubgraphFinder:
    38:39:void <init>(org.locationtech.jts.planargraph.PlanarGraph) -> <init>
    87:92:void addEdges(org.locationtech.jts.planargraph.Node,java.util.Stack,org.locationtech.jts.planargraph.Subgraph) -> addEdges
    72:76:void addReachable(org.locationtech.jts.planargraph.Node,org.locationtech.jts.planargraph.Subgraph) -> addReachable
    59:60:org.locationtech.jts.planargraph.Subgraph findSubgraph(org.locationtech.jts.planargraph.Node) -> findSubgraph
    44:51:java.util.List getConnectedSubgraphs() -> getConnectedSubgraphs
org.locationtech.jts.precision.CommonBits -> org.locationtech.jts.precision.CommonBits:
    88:93:void <init>() -> <init>
    98:115:void add(double) -> add
    0:0:int getBit(long,int) -> getBit
    121:121:double getCommon() -> getCommon
    54:54:int numCommonMostSigMantissaBits(long,long) -> numCommonMostSigMantissaBits
    0:0:long signExpBits(long) -> signExpBits
    128:134:java.lang.String toString(long) -> toString
    0:0:long zeroLowerBits(long,int) -> zeroLowerBits
org.locationtech.jts.precision.CommonBitsOp -> org.locationtech.jts.precision.CommonBitsOp:
    38:38:void <init>() -> <init>
    48:49:void <init>(boolean) -> <init>
    110:111:org.locationtech.jts.geom.Geometry buffer(org.locationtech.jts.geom.Geometry,double) -> buffer
    126:127:org.locationtech.jts.geom.Geometry computeResultPrecision(org.locationtech.jts.geom.Geometry) -> computeResultPrecision
    84:85:org.locationtech.jts.geom.Geometry difference(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> difference
    60:61:org.locationtech.jts.geom.Geometry intersection(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> intersection
    139:141:org.locationtech.jts.geom.Geometry removeCommonBits(org.locationtech.jts.geom.Geometry) -> removeCommonBits
    155:160:org.locationtech.jts.geom.Geometry[] removeCommonBits(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> removeCommonBits
    97:98:org.locationtech.jts.geom.Geometry symDifference(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> symDifference
    72:73:org.locationtech.jts.geom.Geometry union(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> union
org.locationtech.jts.precision.CommonBitsRemover -> org.locationtech.jts.precision.CommonBitsRemover:
    53:56:void <init>() -> <init>
    69:70:void add(org.locationtech.jts.geom.Geometry) -> add
    106:108:void addCommonBits(org.locationtech.jts.geom.Geometry) -> addCommonBits
    76:76:org.locationtech.jts.geom.Coordinate getCommonCoordinate() -> getCommonCoordinate
    87:94:org.locationtech.jts.geom.Geometry removeCommonBits(org.locationtech.jts.geom.Geometry) -> removeCommonBits
org.locationtech.jts.precision.CommonBitsRemover$CommonCoordinateFilter -> org.locationtech.jts.precision.CommonBitsRemover$CommonCoordinateFilter:
    111:115:void <init>() -> <init>
    119:120:void filter(org.locationtech.jts.geom.Coordinate) -> filter
    125:127:org.locationtech.jts.geom.Coordinate getCommonCoordinate() -> getCommonCoordinate
org.locationtech.jts.precision.CommonBitsRemover$Translater -> org.locationtech.jts.precision.CommonBitsRemover$Translater:
    137:138:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    142:145:void filter(org.locationtech.jts.geom.CoordinateSequence,int) -> filter
    0:0:boolean isDone() -> isDone
    0:0:boolean isGeometryChanged() -> isGeometryChanged
org.locationtech.jts.precision.CoordinatePrecisionReducerFilter -> org.locationtech.jts.precision.CoordinatePrecisionReducerFilter:
    42:43:void <init>(org.locationtech.jts.geom.PrecisionModel) -> <init>
    51:52:void filter(org.locationtech.jts.geom.CoordinateSequence,int) -> filter
    0:0:boolean isDone() -> isDone
    0:0:boolean isGeometryChanged() -> isGeometryChanged
org.locationtech.jts.precision.EnhancedPrecisionOp -> org.locationtech.jts.precision.EnhancedPrecisionOp:
    23:23:void <init>() -> <init>
    178:200:org.locationtech.jts.geom.Geometry buffer(org.locationtech.jts.geom.Geometry,double) -> buffer
    105:127:org.locationtech.jts.geom.Geometry difference(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> difference
    35:57:org.locationtech.jts.geom.Geometry intersection(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> intersection
    140:162:org.locationtech.jts.geom.Geometry symDifference(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> symDifference
    70:92:org.locationtech.jts.geom.Geometry union(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry) -> union
org.locationtech.jts.precision.GeometryPrecisionReducer -> org.locationtech.jts.precision.GeometryPrecisionReducer:
    66:72:void <init>(org.locationtech.jts.geom.PrecisionModel) -> <init>
    192:194:org.locationtech.jts.geom.Geometry changePM(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.PrecisionModel) -> changePM
    200:204:org.locationtech.jts.geom.util.GeometryEditor createEditor(org.locationtech.jts.geom.GeometryFactory,org.locationtech.jts.geom.PrecisionModel) -> createEditor
    210:213:org.locationtech.jts.geom.GeometryFactory createFactory(org.locationtech.jts.geom.GeometryFactory,org.locationtech.jts.geom.PrecisionModel) -> createFactory
    168:177:org.locationtech.jts.geom.Geometry fixPolygonalTopology(org.locationtech.jts.geom.Geometry) -> fixPolygonalTopology
    43:44:org.locationtech.jts.geom.Geometry reduce(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.PrecisionModel) -> reduce
    120:133:org.locationtech.jts.geom.Geometry reduce(org.locationtech.jts.geom.Geometry) -> reduce
    60:62:org.locationtech.jts.geom.Geometry reducePointwise(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.PrecisionModel) -> reducePointwise
    139:155:org.locationtech.jts.geom.Geometry reducePointwise(org.locationtech.jts.geom.Geometry) -> reducePointwise
    100:100:void setChangePrecisionModel(boolean) -> setChangePrecisionModel
    115:115:void setPointwise(boolean) -> setPointwise
    85:85:void setRemoveCollapsedComponents(boolean) -> setRemoveCollapsedComponents
org.locationtech.jts.precision.MinimumClearance -> org.locationtech.jts.precision.MinimumClearance:
    145:146:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    188:206:void compute() -> compute
    115:116:double getDistance(org.locationtech.jts.geom.Geometry) -> getDistance
    161:162:double getDistance() -> getDistance
    130:131:org.locationtech.jts.geom.Geometry getLine(org.locationtech.jts.geom.Geometry) -> getLine
    178:182:org.locationtech.jts.geom.LineString getLine() -> getLine
org.locationtech.jts.precision.MinimumClearance$MinClearanceDistance -> org.locationtech.jts.precision.MinimumClearance$MinClearanceDistance:
    228:232:void <init>() -> <init>
    228:228:void <init>(org.locationtech.jts.precision.MinimumClearance$1) -> <init>
    240:243:double distance(org.locationtech.jts.index.strtree.ItemBoundable,org.locationtech.jts.index.strtree.ItemBoundable) -> distance
    250:256:double distance(org.locationtech.jts.operation.distance.FacetSequence,org.locationtech.jts.operation.distance.FacetSequence) -> distance
    236:236:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    280:299:double segmentDistance(org.locationtech.jts.operation.distance.FacetSequence,org.locationtech.jts.operation.distance.FacetSequence) -> segmentDistance
    304:306:void updatePts(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> updatePts
    260:276:double vertexDistance(org.locationtech.jts.operation.distance.FacetSequence,org.locationtech.jts.operation.distance.FacetSequence) -> vertexDistance
org.locationtech.jts.precision.PrecisionReducerCoordinateOperation -> org.locationtech.jts.precision.PrecisionReducerCoordinateOperation:
    29:31:void <init>(org.locationtech.jts.geom.PrecisionModel,boolean) -> <init>
    35:70:org.locationtech.jts.geom.Coordinate[] edit(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Geometry) -> edit
org.locationtech.jts.precision.SimpleGeometryPrecisionReducer -> org.locationtech.jts.precision.SimpleGeometryPrecisionReducer:
    59:64:void <init>(org.locationtech.jts.geom.PrecisionModel) -> <init>
    42:42:org.locationtech.jts.geom.PrecisionModel access$100(org.locationtech.jts.precision.SimpleGeometryPrecisionReducer) -> access$100
    42:42:boolean access$200(org.locationtech.jts.precision.SimpleGeometryPrecisionReducer) -> access$200
    54:55:org.locationtech.jts.geom.Geometry reduce(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.PrecisionModel) -> reduce
    98:106:org.locationtech.jts.geom.Geometry reduce(org.locationtech.jts.geom.Geometry) -> reduce
    92:92:void setChangePrecisionModel(boolean) -> setChangePrecisionModel
    77:77:void setRemoveCollapsedComponents(boolean) -> setRemoveCollapsedComponents
org.locationtech.jts.precision.SimpleGeometryPrecisionReducer$PrecisionReducerCoordinateOperation -> org.locationtech.jts.precision.SimpleGeometryPrecisionReducer$PrecisionReducerCoordinateOperation:
    109:109:void <init>(org.locationtech.jts.precision.SimpleGeometryPrecisionReducer) -> <init>
    109:109:void <init>(org.locationtech.jts.precision.SimpleGeometryPrecisionReducer,org.locationtech.jts.precision.SimpleGeometryPrecisionReducer$1) -> <init>
    114:145:org.locationtech.jts.geom.Coordinate[] edit(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Geometry) -> edit
org.locationtech.jts.precision.SimpleMinimumClearance -> org.locationtech.jts.precision.SimpleMinimumClearance:
    58:59:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    39:39:org.locationtech.jts.geom.Geometry access$000(org.locationtech.jts.precision.SimpleMinimumClearance) -> access$000
    39:39:void access$100(org.locationtech.jts.precision.SimpleMinimumClearance,double,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> access$100
    39:39:void access$200(org.locationtech.jts.precision.SimpleMinimumClearance,double,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> access$200
    76:79:void compute() -> compute
    43:44:double getDistance(org.locationtech.jts.geom.Geometry) -> getDistance
    64:65:double getDistance() -> getDistance
    49:50:org.locationtech.jts.geom.Geometry getLine(org.locationtech.jts.geom.Geometry) -> getLine
    70:71:org.locationtech.jts.geom.LineString getLine() -> getLine
    84:87:void updateClearance(double,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> updateClearance
    94:98:void updateClearance(double,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> updateClearance
org.locationtech.jts.precision.SimpleMinimumClearance$ComputeMCCoordinateSequenceFilter -> org.locationtech.jts.precision.SimpleMinimumClearance$ComputeMCCoordinateSequenceFilter:
    124:126:void <init>(org.locationtech.jts.precision.SimpleMinimumClearance,org.locationtech.jts.geom.Coordinate) -> <init>
    148:152:void checkSegmentDistance(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> checkSegmentDistance
    140:142:void checkVertexDistance(org.locationtech.jts.geom.Coordinate) -> checkVertexDistance
    130:134:void filter(org.locationtech.jts.geom.CoordinateSequence,int) -> filter
    0:0:boolean isDone() -> isDone
    0:0:boolean isGeometryChanged() -> isGeometryChanged
org.locationtech.jts.precision.SimpleMinimumClearance$VertexCoordinateFilter -> org.locationtech.jts.precision.SimpleMinimumClearance$VertexCoordinateFilter:
    108:109:void <init>(org.locationtech.jts.precision.SimpleMinimumClearance) -> <init>
    113:113:void filter(org.locationtech.jts.geom.Coordinate) -> filter
org.locationtech.jts.shape.GeometricShapeBuilder -> org.locationtech.jts.shape.GeometricShapeBuilder:
    23:29:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    88:89:org.locationtech.jts.geom.Coordinate createCoord(double,double) -> createCoord
    44:44:org.locationtech.jts.geom.Coordinate getCentre() -> getCentre
    49:49:double getDiameter() -> getDiameter
    39:39:org.locationtech.jts.geom.Envelope getExtent() -> getExtent
    54:54:double getRadius() -> getRadius
    59:64:org.locationtech.jts.geom.LineSegment getSquareBaseLine() -> getSquareBaseLine
    69:72:org.locationtech.jts.geom.Envelope getSquareExtent() -> getSquareExtent
    34:34:void setExtent(org.locationtech.jts.geom.Envelope) -> setExtent
    82:82:void setNumPoints(int) -> setNumPoints
org.locationtech.jts.shape.fractal.HilbertCode -> org.locationtech.jts.shape.fractal.HilbertCode:
    54:54:void <init>() -> <init>
    103:103:void checkLevel(int) -> checkLevel
    207:226:org.locationtech.jts.geom.Coordinate decode(int,int) -> decode
    0:0:long deinterleave(int) -> deinterleave
    123:123:int encode(int,int,int) -> encode
    94:96:int level(int) -> level
    0:0:int levelClamp(int) -> levelClamp
    82:83:int maxOrdinate(int) -> maxOrdinate
    0:0:long prefixScan(long) -> prefixScan
    69:70:int size(int) -> size
org.locationtech.jts.shape.fractal.HilbertCurveBuilder -> org.locationtech.jts.shape.fractal.HilbertCurveBuilder:
    33:45:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    59:81:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    55:55:void setLevel(int) -> setLevel
    0:0:double transform(double,double,double) -> transform
org.locationtech.jts.shape.fractal.KochSnowflakeBuilder -> org.locationtech.jts.shape.fractal.KochSnowflakeBuilder:
    52:54:void <clinit>() -> <clinit>
    26:30:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    100:100:void addSegment(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> addSegment
    77:94:void addSide(int,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> addSide
    59:72:org.locationtech.jts.geom.Coordinate[] getBoundary(int,org.locationtech.jts.geom.Coordinate,double) -> getBoundary
    42:46:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    35:36:int recursionLevelForSize(int) -> recursionLevelForSize
org.locationtech.jts.shape.fractal.MortonCode -> org.locationtech.jts.shape.fractal.MortonCode:
    51:51:void <init>() -> <init>
    100:100:void checkLevel(int) -> checkLevel
    132:134:org.locationtech.jts.geom.Coordinate decode(int) -> decode
    0:0:long deinterleave(int) -> deinterleave
    112:112:int encode(int,int) -> encode
    0:0:int interleave(int) -> interleave
    91:93:int level(int) -> level
    79:80:int maxOrdinate(int) -> maxOrdinate
    66:67:int size(int) -> size
org.locationtech.jts.shape.fractal.MortonCurveBuilder -> org.locationtech.jts.shape.fractal.MortonCurveBuilder:
    41:44:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    61:83:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    56:56:void setLevel(int) -> setLevel
    0:0:double transform(double,double,double) -> transform
org.locationtech.jts.shape.fractal.SierpinskiCarpetBuilder -> org.locationtech.jts.shape.fractal.SierpinskiCarpetBuilder:
    31:35:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    70:82:void addHoles(int,double,double,double,java.util.List) -> addHoles
    87:94:org.locationtech.jts.geom.LinearRing createSquareHole(double,double,double) -> createSquareHole
    47:52:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    58:62:org.locationtech.jts.geom.LinearRing[] getHoles(int,double,double,double) -> getHoles
    40:41:int recursionLevelForSize(int) -> recursionLevelForSize
org.locationtech.jts.shape.random.RandomPointsBuilder -> org.locationtech.jts.shape.random.RandomPointsBuilder:
    35:44:void <init>() -> <init>
    35:55:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    95:96:org.locationtech.jts.geom.Coordinate createCoord(double,double) -> createCoord
    102:104:org.locationtech.jts.geom.Coordinate createRandomCoord(org.locationtech.jts.geom.Envelope) -> createRandomCoord
    75:83:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    88:90:boolean isInExtent(org.locationtech.jts.geom.Coordinate) -> isInExtent
    66:70:void setExtent(org.locationtech.jts.geom.Geometry) -> setExtent
org.locationtech.jts.shape.random.RandomPointsInGridBuilder -> org.locationtech.jts.shape.random.RandomPointsInGridBuilder:
    33:42:void <init>() -> <init>
    33:53:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    89:113:org.locationtech.jts.geom.Geometry getGeometry() -> getGeometry
    118:124:org.locationtech.jts.geom.Coordinate randomPointInCell(double,double,double,double) -> randomPointInCell
    139:148:org.locationtech.jts.geom.Coordinate randomPointInCircle(double,double,double,double) -> randomPointInCircle
    129:131:org.locationtech.jts.geom.Coordinate randomPointInGridCell(double,double,double,double) -> randomPointInGridCell
    67:67:void setConstrainedToCircle(boolean) -> setConstrainedToCircle
    79:79:void setGutterFraction(double) -> setGutterFraction
org.locationtech.jts.simplify.DouglasPeuckerLineSimplifier -> org.locationtech.jts.simplify.DouglasPeuckerLineSimplifier:
    39:68:void <init>(org.locationtech.jts.geom.Coordinate[]) -> <init>
    50:50:void setDistanceTolerance(double) -> setDistanceTolerance
    29:31:org.locationtech.jts.geom.Coordinate[] simplify(org.locationtech.jts.geom.Coordinate[],double) -> simplify
    55:65:org.locationtech.jts.geom.Coordinate[] simplify() -> simplify
    75:93:void simplifySection(int,int) -> simplifySection
org.locationtech.jts.simplify.DouglasPeuckerSimplifier -> org.locationtech.jts.simplify.DouglasPeuckerSimplifier:
    66:75:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    119:121:org.locationtech.jts.geom.Geometry getResultGeometry() -> getResultGeometry
    88:89:void setDistanceTolerance(double) -> setDistanceTolerance
    108:108:void setEnsureValid(boolean) -> setEnsureValid
    59:61:org.locationtech.jts.geom.Geometry simplify(org.locationtech.jts.geom.Geometry,double) -> simplify
org.locationtech.jts.simplify.DouglasPeuckerSimplifier$DPTransformer -> org.locationtech.jts.simplify.DouglasPeuckerSimplifier$DPTransformer:
    131:133:void <init>(boolean,double) -> <init>
    202:203:org.locationtech.jts.geom.Geometry createValidArea(org.locationtech.jts.geom.Geometry) -> createValidArea
    138:146:org.locationtech.jts.geom.CoordinateSequence transformCoordinates(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry) -> transformCoordinates
    172:174:org.locationtech.jts.geom.Geometry transformLinearRing(org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geom.Geometry) -> transformLinearRing
    183:184:org.locationtech.jts.geom.Geometry transformMultiPolygon(org.locationtech.jts.geom.MultiPolygon,org.locationtech.jts.geom.Geometry) -> transformMultiPolygon
    154:161:org.locationtech.jts.geom.Geometry transformPolygon(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.Geometry) -> transformPolygon
org.locationtech.jts.simplify.LineSegmentIndex -> org.locationtech.jts.simplify.LineSegmentIndex:
    31:34:void <init>() -> <init>
    38:41:void add(org.locationtech.jts.simplify.TaggedLineString) -> add
    47:47:void add(org.locationtech.jts.geom.LineSegment) -> add
    57:61:java.util.List query(org.locationtech.jts.geom.LineSegment) -> query
    52:52:void remove(org.locationtech.jts.geom.LineSegment) -> remove
org.locationtech.jts.simplify.LineSegmentVisitor -> org.locationtech.jts.simplify.LineSegmentVisitor:
# {"id":"sourceFile","fileName":"LineSegmentIndex.java"}
    81:84:void <init>(org.locationtech.jts.geom.LineSegment) -> <init>
    94:94:java.util.ArrayList getItems() -> getItems
    89:91:void visitItem(java.lang.Object) -> visitItem
org.locationtech.jts.simplify.TaggedLineSegment -> org.locationtech.jts.simplify.TaggedLineSegment:
    31:33:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Geometry,int) -> <init>
    37:37:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    41:41:int getIndex() -> getIndex
    40:40:org.locationtech.jts.geom.Geometry getParent() -> getParent
org.locationtech.jts.simplify.TaggedLineString -> org.locationtech.jts.simplify.TaggedLineString:
    39:39:void <init>(org.locationtech.jts.geom.LineString) -> <init>
    35:45:void <init>(org.locationtech.jts.geom.LineString,int) -> <init>
    76:76:void addToResult(org.locationtech.jts.geom.LineSegment) -> addToResult
    81:81:org.locationtech.jts.geom.LineString asLineString() -> asLineString
    85:85:org.locationtech.jts.geom.LinearRing asLinearRing() -> asLinearRing
    90:97:org.locationtech.jts.geom.Coordinate[] extractCoordinates(java.util.List) -> extractCoordinates
    48:48:int getMinimumSize() -> getMinimumSize
    49:49:org.locationtech.jts.geom.LineString getParent() -> getParent
    50:50:org.locationtech.jts.geom.Coordinate[] getParentCoordinates() -> getParentCoordinates
    51:51:org.locationtech.jts.geom.Coordinate[] getResultCoordinates() -> getResultCoordinates
    55:55:int getResultSize() -> getResultSize
    59:59:org.locationtech.jts.simplify.TaggedLineSegment getSegment(int) -> getSegment
    72:72:org.locationtech.jts.simplify.TaggedLineSegment[] getSegments() -> getSegments
    63:68:void init() -> init
org.locationtech.jts.simplify.TaggedLineStringSimplifier -> org.locationtech.jts.simplify.TaggedLineStringSimplifier:
    33:44:void <init>(org.locationtech.jts.simplify.LineSegmentIndex,org.locationtech.jts.simplify.LineSegmentIndex) -> <init>
    119:132:int findFurthestPoint(org.locationtech.jts.geom.Coordinate[],int,int,double[]) -> findFurthestPoint
    150:155:org.locationtech.jts.geom.LineSegment flatten(int,int) -> flatten
    184:188:boolean hasBadInputIntersection(org.locationtech.jts.simplify.TaggedLineString,int[],org.locationtech.jts.geom.LineSegment) -> hasBadInputIntersection
    163:164:boolean hasBadIntersection(org.locationtech.jts.simplify.TaggedLineString,int[],org.locationtech.jts.geom.LineSegment) -> hasBadIntersection
    170:173:boolean hasBadOutputIntersection(org.locationtech.jts.geom.LineSegment) -> hasBadOutputIntersection
    219:220:boolean hasInteriorIntersection(org.locationtech.jts.geom.LineSegment,org.locationtech.jts.geom.LineSegment) -> hasInteriorIntersection
    209:212:boolean isInLineSection(org.locationtech.jts.simplify.TaggedLineString,int[],org.locationtech.jts.simplify.TaggedLineSegment) -> isInLineSection
    234:235:void remove(org.locationtech.jts.simplify.TaggedLineString,int,int) -> remove
    55:55:void setDistanceTolerance(double) -> setDistanceTolerance
    66:68:void simplify(org.locationtech.jts.simplify.TaggedLineString) -> simplify
    76:114:void simplifySection(int,int,int) -> simplifySection
org.locationtech.jts.simplify.TaggedLinesSimplifier -> org.locationtech.jts.simplify.TaggedLinesSimplifier:
    26:31:void <init>() -> <init>
    43:43:void setDistanceTolerance(double) -> setDistanceTolerance
    52:59:void simplify(java.util.Collection) -> simplify
org.locationtech.jts.simplify.TopologyPreservingSimplifier -> org.locationtech.jts.simplify.TopologyPreservingSimplifier:
    88:93:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    78:78:java.util.Map access$000(org.locationtech.jts.simplify.TopologyPreservingSimplifier) -> access$000
    114:119:org.locationtech.jts.geom.Geometry getResultGeometry() -> getResultGeometry
    107:108:void setDistanceTolerance(double) -> setDistanceTolerance
    82:84:org.locationtech.jts.geom.Geometry simplify(org.locationtech.jts.geom.Geometry,double) -> simplify
org.locationtech.jts.simplify.TopologyPreservingSimplifier$LineStringMapBuilderFilter -> org.locationtech.jts.simplify.TopologyPreservingSimplifier$LineStringMapBuilderFilter:
    161:162:void <init>(org.locationtech.jts.simplify.TopologyPreservingSimplifier) -> <init>
    172:179:void filter(org.locationtech.jts.geom.Geometry) -> filter
org.locationtech.jts.simplify.TopologyPreservingSimplifier$LineStringTransformer -> org.locationtech.jts.simplify.TopologyPreservingSimplifier$LineStringTransformer:
    128:129:void <init>(java.util.Map) -> <init>
    134:141:org.locationtech.jts.geom.CoordinateSequence transformCoordinates(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry) -> transformCoordinates
org.locationtech.jts.simplify.VWLineSimplifier -> org.locationtech.jts.simplify.VWLineSimplifier:
    39:41:void <init>(org.locationtech.jts.geom.Coordinate[],double) -> <init>
    31:32:org.locationtech.jts.geom.Coordinate[] simplify(org.locationtech.jts.geom.Coordinate[],double) -> simplify
    46:54:org.locationtech.jts.geom.Coordinate[] simplify() -> simplify
    66:79:double simplifyVertex(org.locationtech.jts.simplify.VWLineSimplifier$VWVertex) -> simplifyVertex
org.locationtech.jts.simplify.VWLineSimplifier$VWVertex -> org.locationtech.jts.simplify.VWLineSimplifier$VWVertex:
    0:0:void <clinit>() -> <clinit>
    109:114:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    84:84:org.locationtech.jts.simplify.VWLineSimplifier$VWVertex access$000(org.locationtech.jts.simplify.VWLineSimplifier$VWVertex) -> access$000
    90:97:org.locationtech.jts.simplify.VWLineSimplifier$VWVertex buildLine(org.locationtech.jts.geom.Coordinate[]) -> buildLine
    138:138:double getArea() -> getArea
    165:171:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    142:142:boolean isLive() -> isLive
    146:160:org.locationtech.jts.simplify.VWLineSimplifier$VWVertex remove() -> remove
    124:124:void setNext(org.locationtech.jts.simplify.VWLineSimplifier$VWVertex) -> setNext
    119:119:void setPrev(org.locationtech.jts.simplify.VWLineSimplifier$VWVertex) -> setPrev
    129:133:void updateArea() -> updateArea
org.locationtech.jts.simplify.VWSimplifier -> org.locationtech.jts.simplify.VWSimplifier:
    68:77:void <init>(org.locationtech.jts.geom.Geometry) -> <init>
    122:125:org.locationtech.jts.geom.Geometry getResultGeometry() -> getResultGeometry
    91:92:void setDistanceTolerance(double) -> setDistanceTolerance
    111:111:void setEnsureValid(boolean) -> setEnsureValid
    61:63:org.locationtech.jts.geom.Geometry simplify(org.locationtech.jts.geom.Geometry,double) -> simplify
org.locationtech.jts.simplify.VWSimplifier$VWTransformer -> org.locationtech.jts.simplify.VWSimplifier$VWTransformer:
    134:136:void <init>(boolean,double) -> <init>
    207:208:org.locationtech.jts.geom.Geometry createValidArea(org.locationtech.jts.geom.Geometry) -> createValidArea
    141:149:org.locationtech.jts.geom.CoordinateSequence transformCoordinates(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry) -> transformCoordinates
    176:178:org.locationtech.jts.geom.Geometry transformLinearRing(org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geom.Geometry) -> transformLinearRing
    189:190:org.locationtech.jts.geom.Geometry transformMultiPolygon(org.locationtech.jts.geom.MultiPolygon,org.locationtech.jts.geom.Geometry) -> transformMultiPolygon
    158:165:org.locationtech.jts.geom.Geometry transformPolygon(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.Geometry) -> transformPolygon
org.locationtech.jts.triangulate.ConformingDelaunayTriangulationBuilder -> org.locationtech.jts.triangulate.ConformingDelaunayTriangulationBuilder:
    46:52:void <init>() -> <init>
    99:117:void create() -> create
    143:147:java.util.List createConstraintSegments(org.locationtech.jts.geom.Geometry) -> createConstraintSegments
    154:156:void createConstraintSegments(org.locationtech.jts.geom.LineString,java.util.List) -> createConstraintSegments
    122:127:java.util.List createSiteVertices(java.util.Collection) -> createSiteVertices
    134:137:void createVertices(org.locationtech.jts.geom.Geometry) -> createVertices
    179:180:org.locationtech.jts.geom.Geometry getEdges(org.locationtech.jts.geom.GeometryFactory) -> getEdges
    167:168:org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision getSubdivision() -> getSubdivision
    192:193:org.locationtech.jts.geom.Geometry getTriangles(org.locationtech.jts.geom.GeometryFactory) -> getTriangles
    81:81:void setConstraints(org.locationtech.jts.geom.Geometry) -> setConstraints
    67:67:void setSites(org.locationtech.jts.geom.Geometry) -> setSites
    93:93:void setTolerance(double) -> setTolerance
org.locationtech.jts.triangulate.ConformingDelaunayTriangulator -> org.locationtech.jts.triangulate.ConformingDelaunayTriangulator:
    84:113:void <init>(java.util.Collection,double) -> <init>
    408:410:void addConstraintVertices() -> addConstraintVertices
    224:236:void computeBoundingBox() -> computeBoundingBox
    240:243:void computeConvexHull() -> computeConvexHull
    71:74:org.locationtech.jts.geom.Envelope computeVertexEnvelope(java.util.Collection) -> computeVertexEnvelope
    297:300:org.locationtech.jts.triangulate.ConstraintVertex createVertex(org.locationtech.jts.geom.Coordinate) -> createVertex
    313:317:org.locationtech.jts.triangulate.ConstraintVertex createVertex(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.triangulate.Segment) -> createVertex
    386:401:void enforceConstraints() -> enforceConstraints
    421:485:int enforceGabriel(java.util.Collection) -> enforceGabriel
    508:531:org.locationtech.jts.geom.Coordinate findNonGabrielPoint(org.locationtech.jts.triangulate.Segment) -> findNonGabrielPoint
    368:372:void formInitialDelaunay() -> formInitialDelaunay
    207:207:java.util.Collection getConstraintSegments() -> getConstraintSegments
    218:218:org.locationtech.jts.geom.Geometry getConvexHull() -> getConvexHull
    198:198:java.util.List getInitialVertices() -> getInitialVertices
    189:189:org.locationtech.jts.index.kdtree.KdTree getKDT() -> getKDT
    281:290:org.locationtech.jts.geom.Coordinate[] getPointArray() -> getPointArray
    180:180:org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision getSubdivision() -> getSubdivision
    152:152:double getTolerance() -> getTolerance
    161:161:org.locationtech.jts.triangulate.ConstraintVertexFactory getVertexFactory() -> getVertexFactory
    335:340:org.locationtech.jts.triangulate.ConstraintVertex insertSite(org.locationtech.jts.triangulate.ConstraintVertex) -> insertSite
    359:359:void insertSite(org.locationtech.jts.geom.Coordinate) -> insertSite
    327:330:void insertSites(java.util.Collection) -> insertSites
    129:130:void setConstraints(java.util.List,java.util.List) -> setConstraints
    142:142:void setSplitPointFinder(org.locationtech.jts.triangulate.ConstraintSplitPointFinder) -> setSplitPointFinder
    171:171:void setVertexFactory(org.locationtech.jts.triangulate.ConstraintVertexFactory) -> setVertexFactory
org.locationtech.jts.triangulate.ConstraintEnforcementException -> org.locationtech.jts.triangulate.ConstraintEnforcementException:
    34:42:void <init>(java.lang.String) -> <init>
    34:53:void <init>(java.lang.String,org.locationtech.jts.geom.Coordinate) -> <init>
    62:62:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    30:30:java.lang.String msgWithCoord(java.lang.String,org.locationtech.jts.geom.Coordinate) -> msgWithCoord
org.locationtech.jts.triangulate.ConstraintVertex -> org.locationtech.jts.triangulate.ConstraintVertex:
    27:35:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    72:72:java.lang.Object getConstraint() -> getConstraint
    53:53:boolean isOnConstraint() -> isOnConstraint
    83:85:void merge(org.locationtech.jts.triangulate.ConstraintVertex) -> merge
    62:63:void setConstraint(java.lang.Object) -> setConstraint
    44:44:void setOnConstraint(boolean) -> setOnConstraint
org.locationtech.jts.triangulate.DelaunayTriangulationBuilder -> org.locationtech.jts.triangulate.DelaunayTriangulationBuilder:
    97:105:void <init>() -> <init>
    146:152:void create() -> create
    88:91:org.locationtech.jts.geom.Envelope envelope(java.util.Collection) -> envelope
    51:54:org.locationtech.jts.geom.CoordinateList extractUniqueCoordinates(org.locationtech.jts.geom.Geometry) -> extractUniqueCoordinates
    174:175:org.locationtech.jts.geom.Geometry getEdges(org.locationtech.jts.geom.GeometryFactory) -> getEdges
    162:163:org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision getSubdivision() -> getSubdivision
    187:188:org.locationtech.jts.geom.Geometry getTriangles(org.locationtech.jts.geom.GeometryFactory) -> getTriangles
    117:117:void setSites(org.locationtech.jts.geom.Geometry) -> setSites
    129:129:void setSites(java.util.Collection) -> setSites
    141:141:void setTolerance(double) -> setTolerance
    72:75:java.util.List toVertices(java.util.Collection) -> toVertices
    59:61:org.locationtech.jts.geom.CoordinateList unique(org.locationtech.jts.geom.Coordinate[]) -> unique
org.locationtech.jts.triangulate.IncrementalDelaunayTriangulator -> org.locationtech.jts.triangulate.IncrementalDelaunayTriangulator:
    34:45:void <init>(org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision) -> <init>
    83:118:org.locationtech.jts.triangulate.quadedge.QuadEdge insertSite(org.locationtech.jts.triangulate.quadedge.Vertex) -> insertSite
    60:62:void insertSites(java.util.Collection) -> insertSites
org.locationtech.jts.triangulate.MidpointSplitPointFinder -> org.locationtech.jts.triangulate.MidpointSplitPointFinder:
    31:31:void <init>() -> <init>
    36:38:org.locationtech.jts.geom.Coordinate findSplitPoint(org.locationtech.jts.triangulate.Segment,org.locationtech.jts.geom.Coordinate) -> findSplitPoint
org.locationtech.jts.triangulate.NonEncroachingSplitPointFinder -> org.locationtech.jts.triangulate.NonEncroachingSplitPointFinder:
    27:27:void <init>() -> <init>
    38:58:org.locationtech.jts.geom.Coordinate findSplitPoint(org.locationtech.jts.triangulate.Segment,org.locationtech.jts.geom.Coordinate) -> findSplitPoint
    69:70:org.locationtech.jts.geom.Coordinate projectedSplitPoint(org.locationtech.jts.triangulate.Segment,org.locationtech.jts.geom.Coordinate) -> projectedSplitPoint
org.locationtech.jts.triangulate.Segment -> org.locationtech.jts.triangulate.Segment:
    35:35:void <init>(double,double,double,double,double,double) -> <init>
    42:42:void <init>(double,double,double,double,double,double,java.lang.Object) -> <init>
    29:54:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,java.lang.Object) -> <init>
    29:64:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    180:180:boolean equalsTopo(org.locationtech.jts.triangulate.Segment) -> equalsTopo
    160:160:java.lang.Object getData() -> getData
    82:82:org.locationtech.jts.geom.Coordinate getEnd() -> getEnd
    121:122:double getEndX() -> getEndX
    131:132:double getEndY() -> getEndY
    141:142:double getEndZ() -> getEndZ
    151:151:org.locationtech.jts.geom.LineSegment getLineSegment() -> getLineSegment
    73:73:org.locationtech.jts.geom.Coordinate getStart() -> getStart
    91:92:double getStartX() -> getStartX
    101:102:double getStartY() -> getStartY
    111:112:double getStartZ() -> getStartZ
    190:190:org.locationtech.jts.geom.Coordinate intersection(org.locationtech.jts.triangulate.Segment) -> intersection
    169:169:void setData(java.lang.Object) -> setData
    199:199:java.lang.String toString() -> toString
org.locationtech.jts.triangulate.SplitSegment -> org.locationtech.jts.triangulate.SplitSegment:
    44:48:void <init>(org.locationtech.jts.geom.LineSegment) -> <init>
    84:84:double getConstrainedLength(double) -> getConstrainedLength
    56:56:org.locationtech.jts.geom.Coordinate getSplitPoint() -> getSplitPoint
    35:37:org.locationtech.jts.geom.Coordinate pointAlongReverse(org.locationtech.jts.geom.LineSegment,double) -> pointAlongReverse
    52:52:void setMinimumLength(double) -> setMinimumLength
    60:65:void splitAt(double,org.locationtech.jts.geom.Coordinate) -> splitAt
    70:80:void splitAt(org.locationtech.jts.geom.Coordinate) -> splitAt
org.locationtech.jts.triangulate.VertexTaggedGeometryDataMapper -> org.locationtech.jts.triangulate.VertexTaggedGeometryDataMapper:
    41:44:void <init>() -> <init>
    73:73:java.util.List getCoordinates() -> getCoordinates
    50:52:void loadSourceGeometries(java.util.Collection) -> loadSourceGeometries
    58:60:void loadSourceGeometries(org.locationtech.jts.geom.Geometry) -> loadSourceGeometries
    66:67:void loadVertices(org.locationtech.jts.geom.Coordinate[],java.lang.Object) -> loadVertices
    87:91:void transferData(org.locationtech.jts.geom.Geometry) -> transferData
org.locationtech.jts.triangulate.VoronoiDiagramBuilder -> org.locationtech.jts.triangulate.VoronoiDiagramBuilder:
    48:58:void <init>() -> <init>
    159:177:org.locationtech.jts.geom.Geometry clipGeometryCollection(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Envelope) -> clipGeometryCollection
    110:123:void create() -> create
    150:154:org.locationtech.jts.geom.Geometry getDiagram(org.locationtech.jts.geom.GeometryFactory) -> getDiagram
    133:134:org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision getSubdivision() -> getSubdivision
    94:94:void setClipEnvelope(org.locationtech.jts.geom.Envelope) -> setClipEnvelope
    70:70:void setSites(org.locationtech.jts.geom.Geometry) -> setSites
    82:82:void setSites(java.util.Collection) -> setSites
    105:105:void setTolerance(double) -> setTolerance
org.locationtech.jts.triangulate.quadedge.EdgeConnectedTriangleTraversal -> org.locationtech.jts.triangulate.quadedge.EdgeConnectedTriangleTraversal:
    25:27:void <init>() -> <init>
    30:30:void init(org.locationtech.jts.triangulate.quadedge.QuadEdgeTriangle) -> init
    39:39:void init(java.util.Collection) -> init
    63:69:void process(org.locationtech.jts.triangulate.quadedge.QuadEdgeTriangle,org.locationtech.jts.triangulate.quadedge.TraversalVisitor) -> process
    56:58:void visitAll(org.locationtech.jts.triangulate.quadedge.TraversalVisitor) -> visitAll
org.locationtech.jts.triangulate.quadedge.LastFoundQuadEdgeLocator -> org.locationtech.jts.triangulate.quadedge.LastFoundQuadEdgeLocator:
    26:30:void <init>(org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision) -> <init>
    38:40:org.locationtech.jts.triangulate.quadedge.QuadEdge findEdge() -> findEdge
    34:34:void init() -> init
    48:53:org.locationtech.jts.triangulate.quadedge.QuadEdge locate(org.locationtech.jts.triangulate.quadedge.Vertex) -> locate
org.locationtech.jts.triangulate.quadedge.LocateFailureException -> org.locationtech.jts.triangulate.quadedge.LocateFailureException:
    25:28:void <init>(java.lang.String) -> <init>
    25:33:void <init>(java.lang.String,org.locationtech.jts.geom.LineSegment) -> <init>
    25:41:void <init>(org.locationtech.jts.geom.LineSegment) -> <init>
    45:45:org.locationtech.jts.geom.LineSegment getSegment() -> getSegment
    21:21:java.lang.String msgWithSpatial(java.lang.String,org.locationtech.jts.geom.LineSegment) -> msgWithSpatial
org.locationtech.jts.triangulate.quadedge.QuadEdge -> org.locationtech.jts.triangulate.quadedge.QuadEdge:
    134:142:void <init>() -> <init>
    80:82:org.locationtech.jts.triangulate.quadedge.QuadEdge connect(org.locationtech.jts.triangulate.quadedge.QuadEdge,org.locationtech.jts.triangulate.quadedge.QuadEdge) -> connect
    267:267:org.locationtech.jts.triangulate.quadedge.QuadEdge dNext() -> dNext
    276:276:org.locationtech.jts.triangulate.quadedge.QuadEdge dPrev() -> dPrev
    189:189:void delete() -> delete
    351:351:org.locationtech.jts.triangulate.quadedge.Vertex dest() -> dest
    371:373:boolean equalsNonOriented(org.locationtech.jts.triangulate.quadedge.QuadEdge) -> equalsNonOriented
    386:387:boolean equalsOriented(org.locationtech.jts.triangulate.quadedge.QuadEdge) -> equalsOriented
    177:177:java.lang.Object getData() -> getData
    360:360:double getLength() -> getLength
    156:159:org.locationtech.jts.triangulate.quadedge.QuadEdge getPrimary() -> getPrimary
    231:231:org.locationtech.jts.triangulate.quadedge.QuadEdge invRot() -> invRot
    198:198:boolean isLive() -> isLive
    285:285:org.locationtech.jts.triangulate.quadedge.QuadEdge lNext() -> lNext
    294:294:org.locationtech.jts.triangulate.quadedge.QuadEdge lPrev() -> lPrev
    50:67:org.locationtech.jts.triangulate.quadedge.QuadEdge makeEdge(org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex) -> makeEdge
    249:249:org.locationtech.jts.triangulate.quadedge.QuadEdge oNext() -> oNext
    258:258:org.locationtech.jts.triangulate.quadedge.QuadEdge oPrev() -> oPrev
    342:342:org.locationtech.jts.triangulate.quadedge.Vertex orig() -> orig
    303:303:org.locationtech.jts.triangulate.quadedge.QuadEdge rNext() -> rNext
    312:312:org.locationtech.jts.triangulate.quadedge.QuadEdge rPrev() -> rPrev
    222:222:org.locationtech.jts.triangulate.quadedge.QuadEdge rot() -> rot
    168:168:void setData(java.lang.Object) -> setData
    333:333:void setDest(org.locationtech.jts.triangulate.quadedge.Vertex) -> setDest
    208:208:void setNext(org.locationtech.jts.triangulate.quadedge.QuadEdge) -> setNext
    324:324:void setOrig(org.locationtech.jts.triangulate.quadedge.Vertex) -> setOrig
    100:111:void splice(org.locationtech.jts.triangulate.quadedge.QuadEdge,org.locationtech.jts.triangulate.quadedge.QuadEdge) -> splice
    120:127:void swap(org.locationtech.jts.triangulate.quadedge.QuadEdge) -> swap
    240:240:org.locationtech.jts.triangulate.quadedge.QuadEdge sym() -> sym
    400:400:org.locationtech.jts.geom.LineSegment toLineSegment() -> toLineSegment
    410:412:java.lang.String toString() -> toString
org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision -> org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision:
    86:670:void <init>(org.locationtech.jts.geom.Envelope,double) -> <init>
    214:215:org.locationtech.jts.triangulate.quadedge.QuadEdge connect(org.locationtech.jts.triangulate.quadedge.QuadEdge,org.locationtech.jts.triangulate.quadedge.QuadEdge) -> connect
    119:136:void createFrame(org.locationtech.jts.geom.Envelope) -> createFrame
    227:243:void delete(org.locationtech.jts.triangulate.quadedge.QuadEdge) -> delete
    689:708:org.locationtech.jts.triangulate.quadedge.QuadEdge[] fetchTriangleToVisit(org.locationtech.jts.triangulate.quadedge.QuadEdge,java.util.Stack,boolean,java.util.Set) -> fetchTriangleToVisit
    177:177:java.util.Collection getEdges() -> getEdges
    830:838:org.locationtech.jts.geom.Geometry getEdges(org.locationtech.jts.geom.GeometryFactory) -> getEdges
    167:167:org.locationtech.jts.geom.Envelope getEnvelope() -> getEnvelope
    584:604:java.util.List getPrimaryEdges(boolean) -> getPrimaryEdges
    158:158:double getTolerance() -> getTolerance
    773:775:java.util.List getTriangleCoordinates(boolean) -> getTriangleCoordinates
    73:77:void getTriangleEdges(org.locationtech.jts.triangulate.quadedge.QuadEdge,org.locationtech.jts.triangulate.quadedge.QuadEdge[]) -> getTriangleEdges
    721:723:java.util.List getTriangleEdges(boolean) -> getTriangleEdges
    747:749:java.util.List getTriangleVertices(boolean) -> getTriangleVertices
    849:857:org.locationtech.jts.geom.Geometry getTriangles(org.locationtech.jts.geom.GeometryFactory) -> getTriangles
    543:567:java.util.List getVertexUniqueEdges(boolean) -> getVertexUniqueEdges
    503:519:java.util.Collection getVertices(boolean) -> getVertices
    921:946:org.locationtech.jts.geom.Polygon getVoronoiCellPolygon(org.locationtech.jts.triangulate.quadedge.QuadEdge,org.locationtech.jts.geom.GeometryFactory) -> getVoronoiCellPolygon
    896:902:java.util.List getVoronoiCellPolygons(org.locationtech.jts.geom.GeometryFactory) -> getVoronoiCellPolygons
    873:874:org.locationtech.jts.geom.Geometry getVoronoiDiagram(org.locationtech.jts.geom.GeometryFactory) -> getVoronoiDiagram
    142:147:org.locationtech.jts.triangulate.quadedge.QuadEdge initSubdiv() -> initSubdiv
    377:392:org.locationtech.jts.triangulate.quadedge.QuadEdge insertSite(org.locationtech.jts.triangulate.quadedge.Vertex) -> insertSite
    422:434:boolean isFrameBorderEdge(org.locationtech.jts.triangulate.quadedge.QuadEdge) -> isFrameBorderEdge
    405:405:boolean isFrameEdge(org.locationtech.jts.triangulate.quadedge.QuadEdge) -> isFrameEdge
    448:452:boolean isFrameVertex(org.locationtech.jts.triangulate.quadedge.Vertex) -> isFrameVertex
    470:473:boolean isOnEdge(org.locationtech.jts.triangulate.quadedge.QuadEdge,org.locationtech.jts.geom.Coordinate) -> isOnEdge
    485:485:boolean isVertexOfEdge(org.locationtech.jts.triangulate.quadedge.QuadEdge,org.locationtech.jts.triangulate.quadedge.Vertex) -> isVertexOfEdge
    316:316:org.locationtech.jts.triangulate.quadedge.QuadEdge locate(org.locationtech.jts.triangulate.quadedge.Vertex) -> locate
    328:328:org.locationtech.jts.triangulate.quadedge.QuadEdge locate(org.locationtech.jts.geom.Coordinate) -> locate
    342:355:org.locationtech.jts.triangulate.quadedge.QuadEdge locate(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> locate
    265:297:org.locationtech.jts.triangulate.quadedge.QuadEdge locateFromEdge(org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.QuadEdge) -> locateFromEdge
    199:200:org.locationtech.jts.triangulate.quadedge.QuadEdge makeEdge(org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex) -> makeEdge
    188:188:void setLocator(org.locationtech.jts.triangulate.quadedge.QuadEdgeLocator) -> setLocator
    645:660:void visitTriangles(org.locationtech.jts.triangulate.quadedge.TriangleVisitor,boolean) -> visitTriangles
org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision$TriangleCircumcentreVisitor -> org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision$TriangleCircumcentreVisitor:
    620:620:void <init>() -> <init>
    625:634:void visit(org.locationtech.jts.triangulate.quadedge.QuadEdge[]) -> visit
org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision$TriangleCoordinatesVisitor -> org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision$TriangleCoordinatesVisitor:
    779:783:void <init>() -> <init>
    807:811:void checkTriangleSize(org.locationtech.jts.geom.Coordinate[]) -> checkTriangleSize
    818:818:java.util.List getTriangles() -> getTriangles
    787:800:void visit(org.locationtech.jts.triangulate.quadedge.QuadEdge[]) -> visit
org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision$TriangleEdgesListVisitor -> org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision$TriangleEdgesListVisitor:
    726:727:void <init>() -> <init>
    726:726:void <init>(org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision$1) -> <init>
    734:734:java.util.List getTriangleEdges() -> getTriangleEdges
    730:730:void visit(org.locationtech.jts.triangulate.quadedge.QuadEdge[]) -> visit
org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision$TriangleVertexListVisitor -> org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision$TriangleVertexListVisitor:
    752:753:void <init>() -> <init>
    752:752:void <init>(org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision$1) -> <init>
    761:761:java.util.List getTriangleVertices() -> getTriangleVertices
    756:757:void visit(org.locationtech.jts.triangulate.quadedge.QuadEdge[]) -> visit
org.locationtech.jts.triangulate.quadedge.QuadEdgeTriangle -> org.locationtech.jts.triangulate.quadedge.QuadEdgeTriangle:
    135:139:void <init>(org.locationtech.jts.triangulate.quadedge.QuadEdge[]) -> <init>
    75:77:boolean contains(org.locationtech.jts.triangulate.quadedge.Vertex[],org.locationtech.jts.geom.Coordinate) -> contains
    91:94:boolean contains(org.locationtech.jts.triangulate.quadedge.QuadEdge[],org.locationtech.jts.geom.Coordinate) -> contains
    246:247:boolean contains(org.locationtech.jts.geom.Coordinate) -> contains
    59:61:java.util.List createOn(org.locationtech.jts.triangulate.quadedge.QuadEdgeSubdivision) -> createOn
    278:278:org.locationtech.jts.triangulate.quadedge.QuadEdgeTriangle getAdjacentTriangleAcrossEdge(int) -> getAdjacentTriangleAcrossEdge
    282:282:int getAdjacentTriangleEdgeIndex(int) -> getAdjacentTriangleEdgeIndex
    195:195:org.locationtech.jts.geom.Coordinate getCoordinate(int) -> getCoordinate
    239:241:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
    158:158:java.lang.Object getData() -> getData
    174:174:org.locationtech.jts.triangulate.quadedge.QuadEdge getEdge(int) -> getEdge
    208:208:int getEdgeIndex(org.locationtech.jts.triangulate.quadedge.QuadEdge) -> getEdgeIndex
    224:224:int getEdgeIndex(org.locationtech.jts.triangulate.quadedge.Vertex) -> getEdgeIndex
    231:233:void getEdgeSegment(int,org.locationtech.jts.geom.LineSegment) -> getEdgeSegment
    170:170:org.locationtech.jts.triangulate.quadedge.QuadEdge[] getEdges() -> getEdges
    251:252:org.locationtech.jts.geom.Polygon getGeometry(org.locationtech.jts.geom.GeometryFactory) -> getGeometry
    319:319:org.locationtech.jts.triangulate.quadedge.QuadEdgeTriangle[] getNeighbours() -> getNeighbours
    294:303:java.util.List getTrianglesAdjacentToVertex(int) -> getTrianglesAdjacentToVertex
    178:178:org.locationtech.jts.triangulate.quadedge.Vertex getVertex(int) -> getVertex
    189:189:org.locationtech.jts.triangulate.quadedge.Vertex[] getVertices() -> getVertices
    267:267:boolean isBorder() -> isBorder
    274:274:boolean isBorder(int) -> isBorder
    166:166:boolean isLive() -> isLive
    162:162:void kill() -> kill
    124:124:int nextIndex(int) -> nextIndex
    149:149:void setData(java.lang.Object) -> setData
    98:102:org.locationtech.jts.geom.Geometry toPolygon(org.locationtech.jts.triangulate.quadedge.Vertex[]) -> toPolygon
    107:112:org.locationtech.jts.geom.Geometry toPolygon(org.locationtech.jts.triangulate.quadedge.QuadEdge[]) -> toPolygon
    257:257:java.lang.String toString() -> toString
org.locationtech.jts.triangulate.quadedge.QuadEdgeTriangle$QuadEdgeTriangleBuilderVisitor -> org.locationtech.jts.triangulate.quadedge.QuadEdgeTriangle$QuadEdgeTriangleBuilderVisitor:
    325:327:void <init>() -> <init>
    335:335:java.util.List getTriangles() -> getTriangles
    331:331:void visit(org.locationtech.jts.triangulate.quadedge.QuadEdge[]) -> visit
org.locationtech.jts.triangulate.quadedge.QuadEdgeUtil -> org.locationtech.jts.triangulate.quadedge.QuadEdgeUtil:
    25:25:void <init>() -> <init>
    36:41:java.util.List findEdgesIncidentOnOrigin(org.locationtech.jts.triangulate.quadedge.QuadEdge) -> findEdgesIncidentOnOrigin
org.locationtech.jts.triangulate.quadedge.TrianglePredicate -> org.locationtech.jts.triangulate.quadedge.TrianglePredicate:
    34:34:void <init>() -> <init>
    285:309:void checkRobustInCircle(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> checkRobustInCircle
    267:269:boolean isInCircleCC(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isInCircleCC
    190:200:boolean isInCircleDDFast(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isInCircleDDFast
    222:240:boolean isInCircleDDNormalized(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isInCircleDDNormalized
    145:164:boolean isInCircleDDSlow(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isInCircleDDSlow
    51:55:boolean isInCircleNonRobust(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isInCircleNonRobust
    80:85:boolean isInCircleNormalized(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isInCircleNormalized
    128:128:boolean isInCircleRobust(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> isInCircleRobust
    107:107:double triArea(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> triArea
    208:216:org.locationtech.jts.math.DD triAreaDDFast(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> triAreaDDFast
    183:184:org.locationtech.jts.math.DD triAreaDDSlow(org.locationtech.jts.math.DD,org.locationtech.jts.math.DD,org.locationtech.jts.math.DD,org.locationtech.jts.math.DD,org.locationtech.jts.math.DD,org.locationtech.jts.math.DD) -> triAreaDDSlow
org.locationtech.jts.triangulate.quadedge.Vertex -> org.locationtech.jts.triangulate.quadedge.Vertex:
    50:51:void <init>(double,double) -> <init>
    54:55:void <init>(double,double,double) -> <init>
    58:59:void <init>(org.locationtech.jts.geom.Coordinate) -> <init>
    234:238:org.locationtech.jts.algorithm.HCoordinate bisector(org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex) -> bisector
    292:304:org.locationtech.jts.triangulate.quadedge.Vertex circleCenter(org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex) -> circleCenter
    257:264:double circumRadiusRatio(org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex) -> circumRadiusRatio
    104:117:int classify(org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex) -> classify
    169:169:org.locationtech.jts.triangulate.quadedge.Vertex cross() -> cross
    129:129:double crossProduct(org.locationtech.jts.triangulate.quadedge.Vertex) -> crossProduct
    242:243:double distance(org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex) -> distance
    139:139:double dot(org.locationtech.jts.triangulate.quadedge.Vertex) -> dot
    87:87:boolean equals(org.locationtech.jts.triangulate.quadedge.Vertex) -> equals
    95:95:boolean equals(org.locationtech.jts.triangulate.quadedge.Vertex,double) -> equals
    79:79:org.locationtech.jts.geom.Coordinate getCoordinate() -> getCoordinate
    63:63:double getX() -> getX
    67:67:double getY() -> getY
    71:71:double getZ() -> getZ
    343:354:double interpolateZ(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> interpolateZ
    367:370:double interpolateZ(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> interpolateZ
    314:325:double interpolateZValue(org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex) -> interpolateZValue
    215:215:boolean isCCW(org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex) -> isCCW
    188:188:boolean isInCircle(org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex,org.locationtech.jts.triangulate.quadedge.Vertex) -> isInCircle
    229:229:boolean leftOf(org.locationtech.jts.triangulate.quadedge.QuadEdge) -> leftOf
    164:164:double magn() -> magn
    278:281:org.locationtech.jts.triangulate.quadedge.Vertex midPoint(org.locationtech.jts.triangulate.quadedge.Vertex) -> midPoint
    225:225:boolean rightOf(org.locationtech.jts.triangulate.quadedge.QuadEdge) -> rightOf
    75:75:void setZ(double) -> setZ
    159:159:org.locationtech.jts.triangulate.quadedge.Vertex sub(org.locationtech.jts.triangulate.quadedge.Vertex) -> sub
    154:154:org.locationtech.jts.triangulate.quadedge.Vertex sum(org.locationtech.jts.triangulate.quadedge.Vertex) -> sum
    149:149:org.locationtech.jts.triangulate.quadedge.Vertex times(double) -> times
    83:83:java.lang.String toString() -> toString
org.locationtech.jts.util.Assert -> org.locationtech.jts.util.Assert:
    21:21:void <init>() -> <init>
    62:62:void equals(java.lang.Object,java.lang.Object) -> equals
    76:77:void equals(java.lang.Object,java.lang.Object,java.lang.String) -> equals
    31:31:void isTrue(boolean) -> isTrue
    45:48:void isTrue(boolean,java.lang.String) -> isTrue
    88:88:void shouldNeverReachHere() -> shouldNeverReachHere
    99:99:void shouldNeverReachHere(java.lang.String) -> shouldNeverReachHere
org.locationtech.jts.util.AssertionFailedException -> org.locationtech.jts.util.AssertionFailedException:
    28:28:void <init>() -> <init>
    38:38:void <init>(java.lang.String) -> <init>
org.locationtech.jts.util.CollectionUtil -> org.locationtech.jts.util.CollectionUtil:
    25:25:void <init>() -> <init>
    58:59:void apply(java.util.Collection,org.locationtech.jts.util.CollectionUtil$Function) -> apply
    73:77:java.util.List select(java.util.Collection,org.locationtech.jts.util.CollectionUtil$Function) -> select
    42:44:java.util.List transform(java.util.Collection,org.locationtech.jts.util.CollectionUtil$Function) -> transform
org.locationtech.jts.util.CoordinateArrayFilter -> org.locationtech.jts.util.CoordinateArrayFilter:
    27:37:void <init>(int) -> <init>
    50:50:void filter(org.locationtech.jts.geom.Coordinate) -> filter
    46:46:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
org.locationtech.jts.util.CoordinateCountFilter -> org.locationtech.jts.util.CoordinateCountFilter:
    26:28:void <init>() -> <init>
    40:40:void filter(org.locationtech.jts.geom.Coordinate) -> filter
    36:36:int getCount() -> getCount
org.locationtech.jts.util.Debug -> org.locationtech.jts.util.Debug:
    55:78:void <clinit>() -> <clinit>
    83:257:void <init>() -> <init>
    182:182:void addWatch(java.lang.Object) -> addWatch
    195:195:void breakIf(boolean) -> breakIf
    200:200:void breakIfEqual(java.lang.Object,java.lang.Object) -> breakIfEqual
    205:205:void breakIfEqual(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double) -> breakIfEqual
    0:0:void doBreak() -> doBreak
    172:172:boolean equals(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,double) -> equals
    155:158:java.lang.String formatField(java.lang.String,int) -> formatField
    216:218:boolean hasSegment(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> hasSegment
    320:320:void instanceAddWatch(java.lang.Object) -> instanceAddWatch
    277:284:void instancePrint(java.lang.Object) -> instancePrint
    290:292:void instancePrint(java.util.Iterator) -> instancePrint
    324:325:void instancePrint(java.lang.String) -> instancePrint
    270:272:void instancePrintIfWatch(java.lang.Object) -> instancePrintIfWatch
    299:311:void instancePrintObject(java.lang.Object) -> instancePrintObject
    265:266:void instancePrintWatch() -> instancePrintWatch
    86:86:boolean isDebugging() -> isDebugging
    73:73:void main(java.lang.String[]) -> main
    101:104:void print(java.lang.String) -> print
    114:115:void print(java.lang.Object) -> print
    119:121:void print(boolean,java.lang.Object) -> print
    190:190:void printIfWatch(java.lang.Object) -> printIfWatch
    140:150:void printTime(java.lang.String) -> printTime
    186:186:void printWatch() -> printWatch
    125:129:void println(java.lang.Object) -> println
    316:316:void println() -> println
    134:135:void resetTime() -> resetTime
    163:167:java.lang.String spaces(int) -> spaces
    89:89:org.locationtech.jts.geom.LineString toLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> toLine
    93:93:org.locationtech.jts.geom.LineString toLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> toLine
    97:97:org.locationtech.jts.geom.LineString toLine(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> toLine
org.locationtech.jts.util.Debug$SegmentFindingFilter -> org.locationtech.jts.util.Debug$SegmentFindingFilter:
    225:230:void <init>(org.locationtech.jts.geom.Coordinate,org.locationtech.jts.geom.Coordinate) -> <init>
    238:239:void filter(org.locationtech.jts.geom.CoordinateSequence,int) -> filter
    233:233:boolean hasSegment() -> hasSegment
    244:244:boolean isDone() -> isDone
    0:0:boolean isGeometryChanged() -> isGeometryChanged
org.locationtech.jts.util.GeometricShapeFactory -> org.locationtech.jts.util.GeometricShapeFactory:
    60:60:void <init>() -> <init>
    45:72:void <init>(org.locationtech.jts.geom.GeometryFactory) -> <init>
    381:382:org.locationtech.jts.geom.Coordinate coord(double,double) -> coord
    388:388:org.locationtech.jts.geom.Coordinate coordTrans(double,double,org.locationtech.jts.geom.Coordinate) -> coordTrans
    314:335:org.locationtech.jts.geom.LineString createArc(double,double) -> createArc
    348:376:org.locationtech.jts.geom.Polygon createArcPolygon(double,double) -> createArcPolygon
    201:201:org.locationtech.jts.geom.Polygon createCircle() -> createCircle
    214:233:org.locationtech.jts.geom.Polygon createEllipse() -> createEllipse
    155:190:org.locationtech.jts.geom.Polygon createRectangle() -> createRectangle
    247:247:org.locationtech.jts.geom.Polygon createSquircle() -> createSquircle
    260:297:org.locationtech.jts.geom.Polygon createSupercircle(double) -> createSupercircle
    137:140:org.locationtech.jts.geom.Geometry rotate(org.locationtech.jts.geom.Geometry) -> rotate
    87:87:void setBase(org.locationtech.jts.geom.Coordinate) -> setBase
    94:94:void setCentre(org.locationtech.jts.geom.Coordinate) -> setCentre
    77:77:void setEnvelope(org.locationtech.jts.geom.Envelope) -> setEnvelope
    122:122:void setHeight(double) -> setHeight
    101:101:void setNumPoints(int) -> setNumPoints
    132:132:void setRotation(double) -> setRotation
    108:108:void setSize(double) -> setSize
    115:115:void setWidth(double) -> setWidth
org.locationtech.jts.util.GeometricShapeFactory$Dimensions -> org.locationtech.jts.util.GeometricShapeFactory$Dimensions:
    391:391:void <init>() -> <init>
    399:399:org.locationtech.jts.geom.Coordinate getBase() -> getBase
    404:407:org.locationtech.jts.geom.Coordinate getCentre() -> getCentre
    435:442:org.locationtech.jts.geom.Envelope getEnvelope() -> getEnvelope
    422:422:double getHeight() -> getHeight
    418:418:double getMinSize() -> getMinSize
    421:421:double getWidth() -> getWidth
    398:398:void setBase(org.locationtech.jts.geom.Coordinate) -> setBase
    401:401:void setCentre(org.locationtech.jts.geom.Coordinate) -> setCentre
    428:431:void setEnvelope(org.locationtech.jts.geom.Envelope) -> setEnvelope
    424:424:void setHeight(double) -> setHeight
    412:413:void setSize(double) -> setSize
    420:420:void setWidth(double) -> setWidth
org.locationtech.jts.util.Memory -> org.locationtech.jts.util.Memory:
    20:20:void <init>() -> <init>
    63:65:java.lang.String allString() -> allString
    75:80:java.lang.String format(long) -> format
    35:36:long free() -> free
    41:41:java.lang.String freeString() -> freeString
    85:85:double round(double) -> round
    46:47:long total() -> total
    52:52:java.lang.String totalString() -> totalString
    24:25:long used() -> used
    30:30:java.lang.String usedString() -> usedString
    57:58:java.lang.String usedTotalString() -> usedTotalString
org.locationtech.jts.util.NumberUtil -> org.locationtech.jts.util.NumberUtil:
    15:15:void <init>() -> <init>
    20:20:boolean equalsWithTolerance(double,double,double) -> equalsWithTolerance
org.locationtech.jts.util.ObjectCounter -> org.locationtech.jts.util.ObjectCounter:
    26:28:void <init>() -> <init>
    33:37:void add(java.lang.Object) -> add
    44:48:int count(java.lang.Object) -> count
org.locationtech.jts.util.ObjectCounter$Counter -> org.locationtech.jts.util.ObjectCounter$Counter:
    53:56:void <init>() -> <init>
    61:62:void <init>(int) -> <init>
    67:67:int count() -> count
    72:72:void increment() -> increment
org.locationtech.jts.util.PriorityQueue -> org.locationtech.jts.util.PriorityQueue:
    30:34:void <init>() -> <init>
    45:58:void add(java.lang.Comparable) -> add
    91:92:void clear() -> clear
    76:76:boolean isEmpty() -> isEmpty
    101:106:java.lang.Object poll() -> poll
    119:131:void reorder(int) -> reorder
    84:84:int size() -> size
org.locationtech.jts.util.Stopwatch -> org.locationtech.jts.util.Stopwatch:
    24:29:void <init>() -> <init>
    71:72:long getTime() -> getTime
    77:78:java.lang.String getTimeString() -> getTimeString
    82:82:java.lang.String getTimeString(long) -> getTimeString
    50:51:void reset() -> reset
    56:58:long split() -> split
    34:36:void start() -> start
    41:45:long stop() -> stop
    63:66:void updateTotalTime() -> updateTotalTime
org.locationtech.jts.util.StringUtil -> org.locationtech.jts.util.StringUtil:
    60:86:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    100:104:java.lang.String chars(char,int) -> chars
    66:69:java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    74:80:java.lang.String getStackTrace(java.lang.Throwable,int) -> getStackTrace
    95:95:java.lang.String spaces(int) -> spaces
    41:55:java.lang.String[] split(java.lang.String,java.lang.String) -> split
    90:90:java.lang.String toString(double) -> toString
org.locationtech.jts.util.UniqueCoordinateArrayFilter -> org.locationtech.jts.util.UniqueCoordinateArrayFilter:
    47:50:void <init>() -> <init>
    63:65:void filter(org.locationtech.jts.geom.Coordinate) -> filter
    40:44:org.locationtech.jts.geom.Coordinate[] filterCoordinates(org.locationtech.jts.geom.Coordinate[]) -> filterCoordinates
    58:59:org.locationtech.jts.geom.Coordinate[] getCoordinates() -> getCoordinates
retrofit2.AndroidMainExecutor -> retrofit2.AndroidMainExecutor:
    22:23:void <init>() -> <init>
    27:27:void execute(java.lang.Runnable) -> execute
retrofit2.BuiltInConverters -> retrofit2.BuiltInConverters:
    27:27:void <init>() -> <init>
    52:53:retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit) -> requestBodyConverter
    32:41:retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit) -> responseBodyConverter
retrofit2.BuiltInConverters$BufferingResponseBodyConverter -> retrofit2.BuiltInConverters$BufferingResponseBodyConverter:
    99:99:void <clinit>() -> <clinit>
    97:97:void <init>() -> <init>
    97:97:java.lang.Object convert(java.lang.Object) -> convert
    105:107:okhttp3.ResponseBody convert(okhttp3.ResponseBody) -> convert
retrofit2.BuiltInConverters$RequestBodyConverter -> retrofit2.BuiltInConverters$RequestBodyConverter:
    79:79:void <clinit>() -> <clinit>
    78:78:void <init>() -> <init>
    0:0:okhttp3.RequestBody convert(okhttp3.RequestBody) -> convert
    78:78:java.lang.Object convert(java.lang.Object) -> convert
retrofit2.BuiltInConverters$StreamingResponseBodyConverter -> retrofit2.BuiltInConverters$StreamingResponseBodyConverter:
    89:89:void <clinit>() -> <clinit>
    87:87:void <init>() -> <init>
    0:0:okhttp3.ResponseBody convert(okhttp3.ResponseBody) -> convert
    87:87:java.lang.Object convert(java.lang.Object) -> convert
retrofit2.BuiltInConverters$ToStringConverter -> retrofit2.BuiltInConverters$ToStringConverter:
    113:113:void <clinit>() -> <clinit>
    112:112:void <init>() -> <init>
    112:112:java.lang.Object convert(java.lang.Object) -> convert
    117:117:java.lang.String convert(java.lang.Object) -> convert
retrofit2.BuiltInConverters$UnitResponseBodyConverter -> retrofit2.BuiltInConverters$UnitResponseBodyConverter:
    69:69:void <clinit>() -> <clinit>
    68:68:void <init>() -> <init>
    68:68:java.lang.Object convert(java.lang.Object) -> convert
    73:74:kotlin.Unit convert(okhttp3.ResponseBody) -> convert
retrofit2.BuiltInConverters$VoidResponseBodyConverter -> retrofit2.BuiltInConverters$VoidResponseBodyConverter:
    59:59:void <clinit>() -> <clinit>
    58:58:void <init>() -> <init>
    58:58:java.lang.Object convert(java.lang.Object) -> convert
    63:63:java.lang.Void convert(okhttp3.ResponseBody) -> convert
retrofit2.BuiltInFactories -> retrofit2.BuiltInFactories:
    27:27:void <init>() -> <init>
    30:30:java.util.List createDefaultCallAdapterFactories(java.util.concurrent.Executor) -> createDefaultCallAdapterFactories
    34:34:java.util.List createDefaultConverterFactories() -> createDefaultConverterFactories
retrofit2.BuiltInFactories$Java8 -> retrofit2.BuiltInFactories$Java8:
    38:38:void <init>() -> <init>
    42:42:java.util.List createDefaultCallAdapterFactories(java.util.concurrent.Executor) -> createDefaultCallAdapterFactories
    49:49:java.util.List createDefaultConverterFactories() -> createDefaultConverterFactories
retrofit2.CallAdapter$Factory -> retrofit2.CallAdapter$Factory:
    63:63:void <init>() -> <init>
    76:76:java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType) -> getParameterUpperBound
    84:84:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
retrofit2.CompletableFutureCallAdapterFactory -> retrofit2.CompletableFutureCallAdapterFactory:
    28:28:void <init>() -> <init>
    32:53:retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit) -> get
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter -> retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter:
    60:61:void <init>(java.lang.reflect.Type) -> <init>
    56:56:java.lang.Object adapt(retrofit2.Call) -> adapt
    71:72:java.util.concurrent.CompletableFuture adapt(retrofit2.Call) -> adapt
    66:66:java.lang.reflect.Type responseType() -> responseType
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback -> retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback:
    80:81:void <init>(retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter,java.util.concurrent.CompletableFuture) -> <init>
    95:95:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    86:89:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback$$ExternalSyntheticApiModelOutline0 -> retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback$$InternalSyntheticApiModelOutline$1$24a7e9f0d83622aafc95a8645a9fee07d18c36e1012519534a478cbe9aa7bb22$0.m(java.util.concurrent.CompletableFuture,java.lang.Throwable) -> m
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback$$ExternalSyntheticApiModelOutline1 -> retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback$$InternalSyntheticApiModelOutline$1$9ead04572a8df73848296773a0cb69ac7e104de67a2c52e264e8fa59a10a1535$0.m(java.util.concurrent.CompletableFuture,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture -> retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture:
    145:146:void <init>(retrofit2.Call) -> <init>
    152:154:boolean cancel(boolean) -> cancel
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter -> retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter:
    105:106:void <init>(java.lang.reflect.Type) -> <init>
    100:100:java.lang.Object adapt(retrofit2.Call) -> adapt
    116:117:java.util.concurrent.CompletableFuture adapt(retrofit2.Call) -> adapt
    111:111:java.lang.reflect.Type responseType() -> responseType
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback -> retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback:
    125:126:void <init>(retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter,java.util.concurrent.CompletableFuture) -> <init>
    136:136:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    131:131:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
retrofit2.Converter$Factory -> retrofit2.Converter$Factory:
    46:46:void <init>() -> <init>
    88:88:java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType) -> getParameterUpperBound
    96:96:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    0:0:retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit) -> requestBodyConverter
    0:0:retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit) -> responseBodyConverter
    0:0:retrofit2.Converter stringConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit) -> stringConverter
retrofit2.DefaultCallAdapterFactory -> retrofit2.DefaultCallAdapterFactory:
    31:32:void <init>(java.util.concurrent.Executor) -> <init>
    38:52:retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit) -> get
retrofit2.DefaultCallAdapterFactory$1 -> retrofit2.DefaultCallAdapterFactory$1:
    52:52:void <init>(retrofit2.DefaultCallAdapterFactory,java.lang.reflect.Type,java.util.concurrent.Executor) -> <init>
    52:52:java.lang.Object adapt(retrofit2.Call) -> adapt
    60:60:retrofit2.Call adapt(retrofit2.Call) -> adapt
    55:55:java.lang.reflect.Type responseType() -> responseType
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall -> retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall:
    69:71:void <init>(java.util.concurrent.Executor,retrofit2.Call) -> <init>
    113:113:void cancel() -> cancel
    65:65:java.lang.Object clone() -> clone
    124:124:retrofit2.Call clone() -> clone
    76:78:void enqueue(retrofit2.Callback) -> enqueue
    108:108:retrofit2.Response execute() -> execute
    118:118:boolean isCanceled() -> isCanceled
    103:103:boolean isExecuted() -> isExecuted
    129:129:okhttp3.Request request() -> request
    134:134:okio.Timeout timeout() -> timeout
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1 -> retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1:
    0:0:void $r8$lambda$G9BY9eQQk64nBfFjfIpx-YzJzUo(retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1,retrofit2.Callback,java.lang.Throwable) -> $r8$lambda$G9BY9eQQk64nBfFjfIpx-YzJzUo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$hVGjmafRi6VitDIrPNdoFizVAdk(retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1,retrofit2.Callback,retrofit2.Response) -> $r8$lambda$hVGjmafRi6VitDIrPNdoFizVAdk
      # {"id":"com.android.tools.r8.synthesized"}
    79:79:void <init>(retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall,retrofit2.Callback) -> <init>
    96:96:void lambda$onFailure$1(retrofit2.Callback,java.lang.Throwable) -> lambda$onFailure$1
    84:89:void lambda$onResponse$0(retrofit2.Callback,retrofit2.Response) -> lambda$onResponse$0
    96:96:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    82:82:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$ExternalSyntheticLambda0 -> retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    retrofit2.Response retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$InternalSyntheticLambda$1$4ec85956eedcb160a0895cee6bf63a4075ed4f0aeb1d730493e226b7e1834c9f$0.f$2 -> f$2
    retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1 retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$InternalSyntheticLambda$1$4ec85956eedcb160a0895cee6bf63a4075ed4f0aeb1d730493e226b7e1834c9f$0.f$0 -> f$0
    retrofit2.Callback retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$InternalSyntheticLambda$1$4ec85956eedcb160a0895cee6bf63a4075ed4f0aeb1d730493e226b7e1834c9f$0.f$1 -> f$1
    0:0:void retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$InternalSyntheticLambda$1$4ec85956eedcb160a0895cee6bf63a4075ed4f0aeb1d730493e226b7e1834c9f$0.<init>(retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1,retrofit2.Callback,retrofit2.Response) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$InternalSyntheticLambda$1$4ec85956eedcb160a0895cee6bf63a4075ed4f0aeb1d730493e226b7e1834c9f$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$ExternalSyntheticLambda1 -> retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Throwable retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$InternalSyntheticLambda$1$631b5a4d36411b8adec29050b498bdab9edb3d31947cebab801718c987bfda6b$0.f$2 -> f$2
    retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1 retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$InternalSyntheticLambda$1$631b5a4d36411b8adec29050b498bdab9edb3d31947cebab801718c987bfda6b$0.f$0 -> f$0
    retrofit2.Callback retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$InternalSyntheticLambda$1$631b5a4d36411b8adec29050b498bdab9edb3d31947cebab801718c987bfda6b$0.f$1 -> f$1
    0:0:void retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$InternalSyntheticLambda$1$631b5a4d36411b8adec29050b498bdab9edb3d31947cebab801718c987bfda6b$0.<init>(retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1,retrofit2.Callback,java.lang.Throwable) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1$$InternalSyntheticLambda$1$631b5a4d36411b8adec29050b498bdab9edb3d31947cebab801718c987bfda6b$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.DefaultMethodSupport -> retrofit2.DefaultMethodSupport:
    51:51:void <init>() -> <init>
    38:48:java.lang.Object invoke(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[]) -> invoke
retrofit2.DefaultMethodSupport$$ExternalSyntheticApiModelOutline0 -> retrofit2.DefaultMethodSupport$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.invoke.MethodHandle retrofit2.DefaultMethodSupport$$InternalSyntheticApiModelOutline$1$fff4eecfe7cec46237bdb06559a823caec0ad4de28f5baf0cb4c482b9deae32f$0.m(java.lang.invoke.MethodHandles$Lookup,java.lang.reflect.Method,java.lang.Class) -> m
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.DefaultMethodSupport$$ExternalSyntheticApiModelOutline1 -> retrofit2.DefaultMethodSupport$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.invoke.MethodHandle retrofit2.DefaultMethodSupport$$InternalSyntheticApiModelOutline$1$fff4eecfe7cec46237bdb06559a823caec0ad4de28f5baf0cb4c482b9deae32f$1.m(java.lang.invoke.MethodHandle,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.DefaultMethodSupport$$ExternalSyntheticApiModelOutline2 -> retrofit2.DefaultMethodSupport$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object retrofit2.DefaultMethodSupport$$InternalSyntheticApiModelOutline$1$fff4eecfe7cec46237bdb06559a823caec0ad4de28f5baf0cb4c482b9deae32f$2.m(java.lang.invoke.MethodHandle,java.lang.Object[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.HttpException -> retrofit2.HttpException:
    33:36:void <init>(retrofit2.Response) -> <init>
    41:41:int code() -> code
    24:25:java.lang.String getMessage(retrofit2.Response) -> getMessage
    46:46:java.lang.String message() -> message
    51:51:retrofit2.Response response() -> response
retrofit2.HttpServiceMethod -> retrofit2.HttpServiceMethod:
    150:153:void <init>(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter) -> <init>
    127:129:retrofit2.CallAdapter createCallAdapter(retrofit2.Retrofit,java.lang.reflect.Method,java.lang.reflect.Type,java.lang.annotation.Annotation[]) -> createCallAdapter
    135:139:retrofit2.Converter createResponseConverter(retrofit2.Retrofit,java.lang.reflect.Method,java.lang.reflect.Type) -> createResponseConverter
    158:160:java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
    39:112:retrofit2.HttpServiceMethod parseAnnotations(retrofit2.Retrofit,java.lang.reflect.Method,retrofit2.RequestFactory) -> parseAnnotations
retrofit2.HttpServiceMethod$CallAdapted -> retrofit2.HttpServiceMethod$CallAdapted:
    173:174:void <init>(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter) -> <init>
    179:179:java.lang.Object adapt(retrofit2.Call,java.lang.Object[]) -> adapt
retrofit2.HttpServiceMethod$SuspendForBody -> retrofit2.HttpServiceMethod$SuspendForBody:
    224:227:void <init>(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter,boolean,boolean) -> <init>
    232:258:java.lang.Object adapt(retrofit2.Call,java.lang.Object[]) -> adapt
retrofit2.HttpServiceMethod$SuspendForResponse -> retrofit2.HttpServiceMethod$SuspendForResponse:
    191:192:void <init>(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter) -> <init>
    197:207:java.lang.Object adapt(retrofit2.Call,java.lang.Object[]) -> adapt
retrofit2.Invocation -> retrofit2.Invocation:
    76:80:void <init>(java.lang.Class,java.lang.Object,java.lang.reflect.Method,java.util.List) -> <init>
    103:103:java.util.List arguments() -> arguments
    95:95:java.lang.Object instance() -> instance
    99:99:java.lang.reflect.Method method() -> method
    55:59:retrofit2.Invocation of(java.lang.Class,java.lang.Object,java.lang.reflect.Method,java.util.List) -> of
    64:67:retrofit2.Invocation of(java.lang.reflect.Method,java.util.List) -> of
    84:84:java.lang.Class service() -> service
    108:108:java.lang.String toString() -> toString
retrofit2.KotlinExtensions -> retrofit2.KotlinExtensions:
# {"id":"sourceFile","fileName":"KotlinExtensions.kt"}
    33:136:java.lang.Object await(retrofit2.Call,kotlin.coroutines.Continuation) -> await
    67:147:java.lang.Object awaitNullable(retrofit2.Call,kotlin.coroutines.Continuation) -> awaitNullable
    94:158:java.lang.Object awaitResponse(retrofit2.Call,kotlin.coroutines.Continuation) -> awaitResponse
    89:89:java.lang.Object awaitUnit(retrofit2.Call,kotlin.coroutines.Continuation) -> awaitUnit
    29:29:java.lang.Object create(retrofit2.Retrofit) -> create
    118:123:java.lang.Object suspendAndThrow(java.lang.Throwable,kotlin.coroutines.Continuation) -> suspendAndThrow
retrofit2.KotlinExtensions$await$2$1 -> retrofit2.KotlinExtensions$await$2$1:
# {"id":"sourceFile","fileName":"KotlinExtensions.kt"}
    0:0:void <init>(retrofit2.Call) -> <init>
    33:33:java.lang.Object invoke(java.lang.Object) -> invoke
    34:34:void invoke(java.lang.Throwable) -> invoke
retrofit2.KotlinExtensions$await$2$2 -> retrofit2.KotlinExtensions$await$2$2:
# {"id":"sourceFile","fileName":"KotlinExtensions.kt"}
    36:36:void <init>(kotlinx.coroutines.CancellableContinuation) -> <init>
    58:58:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    38:53:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
retrofit2.KotlinExtensions$await$4$1 -> retrofit2.KotlinExtensions$await$4$1:
# {"id":"sourceFile","fileName":"KotlinExtensions.kt"}
    0:0:void <init>(retrofit2.Call) -> <init>
    67:67:java.lang.Object invoke(java.lang.Object) -> invoke
    68:68:void invoke(java.lang.Throwable) -> invoke
retrofit2.KotlinExtensions$await$4$2 -> retrofit2.KotlinExtensions$await$4$2:
# {"id":"sourceFile","fileName":"KotlinExtensions.kt"}
    70:70:void <init>(kotlinx.coroutines.CancellableContinuation) -> <init>
    80:80:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    72:75:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
retrofit2.KotlinExtensions$awaitResponse$2$1 -> retrofit2.KotlinExtensions$awaitResponse$2$1:
# {"id":"sourceFile","fileName":"KotlinExtensions.kt"}
    0:0:void <init>(retrofit2.Call) -> <init>
    94:94:java.lang.Object invoke(java.lang.Object) -> invoke
    95:95:void invoke(java.lang.Throwable) -> invoke
retrofit2.KotlinExtensions$awaitResponse$2$2 -> retrofit2.KotlinExtensions$awaitResponse$2$2:
# {"id":"sourceFile","fileName":"KotlinExtensions.kt"}
    97:97:void <init>(kotlinx.coroutines.CancellableContinuation) -> <init>
    103:103:void onFailure(retrofit2.Call,java.lang.Throwable) -> onFailure
    99:99:void onResponse(retrofit2.Call,retrofit2.Response) -> onResponse
retrofit2.KotlinExtensions$suspendAndThrow$1 -> retrofit2.KotlinExtensions$suspendAndThrow$1:
# {"id":"sourceFile","fileName":"KotlinExtensions.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation) -> <init>
    0:0:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
retrofit2.KotlinExtensions$suspendAndThrow$2$1 -> retrofit2.KotlinExtensions$suspendAndThrow$2$1:
# {"id":"sourceFile","fileName":"KotlinExtensions.kt"}
    0:0:void <init>(kotlin.coroutines.Continuation,java.lang.Throwable) -> <init>
    121:121:void run() -> run
retrofit2.OkHttpCall -> retrofit2.OkHttpCall:
    56:61:void <init>(retrofit2.RequestFactory,java.lang.Object,java.lang.Object[],okhttp3.Call$Factory,retrofit2.Converter) -> <init>
    258:265:void cancel() -> cancel
    33:33:java.lang.Object clone() -> clone
    33:33:retrofit2.Call clone() -> clone
    67:67:retrofit2.OkHttpCall clone() -> clone
    211:213:okhttp3.Call createRawCall() -> createRawCall
    120:150:void enqueue(retrofit2.Callback) -> enqueue
    196:207:retrofit2.Response execute() -> execute
    94:114:okhttp3.Call getRawCall() -> getRawCall
    271:276:boolean isCanceled() -> isCanceled
    189:189:boolean isExecuted() -> isExecuted
    219:252:retrofit2.Response parseResponse(okhttp3.Response) -> parseResponse
    73:75:okhttp3.Request request() -> request
    82:84:okio.Timeout timeout() -> timeout
retrofit2.OkHttpCall$1 -> retrofit2.OkHttpCall$1:
    151:151:void <init>(retrofit2.OkHttpCall,retrofit2.Callback) -> <init>
    178:181:void callFailure(java.lang.Throwable) -> callFailure
    173:173:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    156:167:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
retrofit2.OkHttpCall$ExceptionCatchingResponseBody -> retrofit2.OkHttpCall$ExceptionCatchingResponseBody:
    309:313:void <init>(okhttp3.ResponseBody) -> <init>
    343:343:void close() -> close
    333:333:long contentLength() -> contentLength
    328:328:okhttp3.MediaType contentType() -> contentType
    338:338:okio.BufferedSource source() -> source
    347:348:void throwIfCaught() -> throwIfCaught
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1 -> retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1:
    313:313:void <init>(retrofit2.OkHttpCall$ExceptionCatchingResponseBody,okio.Source) -> <init>
    317:320:long read(okio.Buffer,long) -> read
retrofit2.OkHttpCall$NoContentResponseBody -> retrofit2.OkHttpCall$NoContentResponseBody:
    283:285:void <init>(okhttp3.MediaType,long) -> <init>
    295:295:long contentLength() -> contentLength
    290:290:okhttp3.MediaType contentType() -> contentType
    300:300:okio.BufferedSource source() -> source
retrofit2.OptionalConverterFactory -> retrofit2.OptionalConverterFactory:
    44:44:void <init>() -> <init>
    41:41:retrofit2.OptionalConverterFactory create() -> create
    49:56:retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit) -> responseBodyConverter
retrofit2.OptionalConverterFactory$OptionalConverter -> retrofit2.OptionalConverterFactory$OptionalConverter:
    63:64:void <init>(retrofit2.Converter) -> <init>
    59:59:java.lang.Object convert(java.lang.Object) -> convert
    69:69:java.util.Optional convert(okhttp3.ResponseBody) -> convert
retrofit2.OptionalConverterFactory$OptionalConverter$$ExternalSyntheticApiModelOutline0 -> retrofit2.OptionalConverterFactory$OptionalConverter$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Optional retrofit2.OptionalConverterFactory$OptionalConverter$$InternalSyntheticApiModelOutline$1$2bf8c561d8b35e3b47a70e18af8012e543d1e42145db0469e0a165c17c9d4e80$0.m(java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.ParameterHandler -> retrofit2.ParameterHandler:
    27:27:void <init>() -> <init>
    44:44:retrofit2.ParameterHandler array() -> array
    31:31:retrofit2.ParameterHandler iterable() -> iterable
retrofit2.ParameterHandler$1 -> retrofit2.ParameterHandler$1:
    31:31:void <init>(retrofit2.ParameterHandler) -> <init>
    31:31:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
    36:37:void apply(retrofit2.RequestBuilder,java.lang.Iterable) -> apply
retrofit2.ParameterHandler$2 -> retrofit2.ParameterHandler$2:
    44:44:void <init>(retrofit2.ParameterHandler) -> <init>
    49:51:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
retrofit2.ParameterHandler$Body -> retrofit2.ParameterHandler$Body:
    425:428:void <init>(java.lang.reflect.Method,int,retrofit2.Converter) -> <init>
    434:442:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
retrofit2.ParameterHandler$Field -> retrofit2.ParameterHandler$Field:
    271:274:void <init>(java.lang.String,retrofit2.Converter,boolean) -> <init>
    281:284:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
retrofit2.ParameterHandler$FieldMap -> retrofit2.ParameterHandler$FieldMap:
    294:298:void <init>(java.lang.reflect.Method,int,retrofit2.Converter,boolean) -> <init>
    288:288:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
    304:332:void apply(retrofit2.RequestBuilder,java.util.Map) -> apply
retrofit2.ParameterHandler$Header -> retrofit2.ParameterHandler$Header:
    80:83:void <init>(java.lang.String,retrofit2.Converter,boolean) -> <init>
    90:93:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
retrofit2.ParameterHandler$HeaderMap -> retrofit2.ParameterHandler$HeaderMap:
    219:223:void <init>(java.lang.reflect.Method,int,retrofit2.Converter,boolean) -> <init>
    209:209:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
    229:243:void apply(retrofit2.RequestBuilder,java.util.Map) -> apply
retrofit2.ParameterHandler$Headers -> retrofit2.ParameterHandler$Headers:
    252:254:void <init>(java.lang.reflect.Method,int) -> <init>
    248:248:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
    260:262:void apply(retrofit2.RequestBuilder,okhttp3.Headers) -> apply
retrofit2.ParameterHandler$Part -> retrofit2.ParameterHandler$Part:
    343:347:void <init>(java.lang.reflect.Method,int,okhttp3.Headers,retrofit2.Converter) -> <init>
    356:360:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
retrofit2.ParameterHandler$PartMap -> retrofit2.ParameterHandler$PartMap:
    384:388:void <init>(java.lang.reflect.Method,int,retrofit2.Converter,java.lang.String) -> <init>
    377:377:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
    394:415:void apply(retrofit2.RequestBuilder,java.util.Map) -> apply
retrofit2.ParameterHandler$Path -> retrofit2.ParameterHandler$Path:
    104:109:void <init>(java.lang.reflect.Method,int,java.lang.String,retrofit2.Converter,boolean) -> <init>
    115:118:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
retrofit2.ParameterHandler$Query -> retrofit2.ParameterHandler$Query:
    127:130:void <init>(java.lang.String,retrofit2.Converter,boolean) -> <init>
    137:140:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
retrofit2.ParameterHandler$QueryMap -> retrofit2.ParameterHandler$QueryMap:
    166:170:void <init>(java.lang.reflect.Method,int,retrofit2.Converter,boolean) -> <init>
    160:160:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
    176:204:void apply(retrofit2.RequestBuilder,java.util.Map) -> apply
retrofit2.ParameterHandler$QueryName -> retrofit2.ParameterHandler$QueryName:
    148:150:void <init>(retrofit2.Converter,boolean) -> <init>
    156:156:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
retrofit2.ParameterHandler$RawPart -> retrofit2.ParameterHandler$RawPart:
    365:365:void <clinit>() -> <clinit>
    367:367:void <init>() -> <init>
    364:364:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
    372:372:void apply(retrofit2.RequestBuilder,okhttp3.MultipartBody$Part) -> apply
retrofit2.ParameterHandler$RelativeUrl -> retrofit2.ParameterHandler$RelativeUrl:
    61:63:void <init>(java.lang.reflect.Method,int) -> <init>
    69:71:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
retrofit2.ParameterHandler$Tag -> retrofit2.ParameterHandler$Tag:
    449:450:void <init>(java.lang.Class) -> <init>
    455:455:void apply(retrofit2.RequestBuilder,java.lang.Object) -> apply
retrofit2.Platform -> retrofit2.Platform:
    29:50:void <clinit>() -> <clinit>
    55:55:void <init>() -> <init>
retrofit2.Reflection -> retrofit2.Reflection:
    25:25:void <init>() -> <init>
    38:38:java.lang.String describeMethodParameter(java.lang.reflect.Method,int) -> describeMethodParameter
    34:34:java.lang.Object invokeDefaultMethod(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[]) -> invokeDefaultMethod
    0:0:boolean isDefaultMethod(java.lang.reflect.Method) -> isDefaultMethod
retrofit2.Reflection$Android24 -> retrofit2.Reflection$Android24:
    73:73:void <init>() -> <init>
    83:87:java.lang.Object invokeDefaultMethod(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[]) -> invokeDefaultMethod
    76:76:boolean isDefaultMethod(java.lang.reflect.Method) -> isDefaultMethod
retrofit2.Reflection$Android24$$ExternalSyntheticApiModelOutline0 -> retrofit2.Reflection$Android24$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean retrofit2.Reflection$Android24$$InternalSyntheticApiModelOutline$1$0a27c2b09c86a0704e0052596ff07633e2fd1fef40349951af4880f33fc182a4$0.m(java.lang.reflect.Method) -> m
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.Reflection$Java8 -> retrofit2.Reflection$Java8:
    42:42:void <init>() -> <init>
    57:61:java.lang.String describeMethodParameter(java.lang.reflect.Method,int) -> describeMethodParameter
    52:52:java.lang.Object invokeDefaultMethod(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[]) -> invokeDefaultMethod
    45:45:boolean isDefaultMethod(java.lang.reflect.Method) -> isDefaultMethod
retrofit2.Reflection$Java8$$ExternalSyntheticApiModelOutline0 -> retrofit2.Reflection$Java8$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.reflect.Parameter[] retrofit2.Reflection$Java8$$InternalSyntheticApiModelOutline$1$f1aba9a7fa58799fed9c9f18ea0dbc719afc38033c2fea67b3a4275e32e2a624$0.m(java.lang.reflect.Method) -> m
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.Reflection$Java8$$ExternalSyntheticApiModelOutline1 -> retrofit2.Reflection$Java8$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean retrofit2.Reflection$Java8$$InternalSyntheticApiModelOutline$1$f1aba9a7fa58799fed9c9f18ea0dbc719afc38033c2fea67b3a4275e32e2a624$1.m(java.lang.reflect.Parameter) -> m
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.Reflection$Java8$$ExternalSyntheticApiModelOutline2 -> retrofit2.Reflection$Java8$$ExternalSyntheticApiModelOutline2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String retrofit2.Reflection$Java8$$InternalSyntheticApiModelOutline$1$f1aba9a7fa58799fed9c9f18ea0dbc719afc38033c2fea67b3a4275e32e2a624$2.m(java.lang.reflect.Parameter) -> m
      # {"id":"com.android.tools.r8.synthesized"}
retrofit2.RequestBuilder -> retrofit2.RequestBuilder:
    32:50:void <clinit>() -> <clinit>
    75:95:void <init>(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean) -> <init>
    209:211:void addFormField(java.lang.String,java.lang.String,boolean) -> addFormField
    104:113:void addHeader(java.lang.String,java.lang.String,boolean) -> addHeader
    118:118:void addHeaders(okhttp3.Headers) -> addHeaders
    217:217:void addPart(okhttp3.Headers,okhttp3.RequestBody) -> addPart
    222:222:void addPart(okhttp3.MultipartBody$Part) -> addPart
    122:132:void addPathParam(java.lang.String,java.lang.String,boolean) -> addPathParam
    187:202:void addQueryParam(java.lang.String,java.lang.String,boolean) -> addQueryParam
    230:230:void addTag(java.lang.Class,java.lang.Object) -> addTag
    137:147:java.lang.String canonicalizeForPath(java.lang.String,boolean) -> canonicalizeForPath
    159:181:void canonicalizeForPath(okio.Buffer,java.lang.String,int,int,boolean) -> canonicalizeForPath
    235:270:okhttp3.Request$Builder get() -> get
    226:226:void setBody(okhttp3.RequestBody) -> setBody
    100:100:void setRelativeUrl(java.lang.Object) -> setRelativeUrl
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody -> retrofit2.RequestBuilder$ContentTypeOverridingRequestBody:
    277:279:void <init>(okhttp3.RequestBody,okhttp3.MediaType) -> <init>
    289:289:long contentLength() -> contentLength
    284:284:okhttp3.MediaType contentType() -> contentType
    294:294:void writeTo(okio.BufferedSink) -> writeTo
retrofit2.RequestFactory -> retrofit2.RequestFactory:
    83:95:void <init>(retrofit2.RequestFactory$Builder) -> <init>
    100:137:okhttp3.Request create(java.lang.Object,java.lang.Object[]) -> create
    67:67:retrofit2.RequestFactory parseAnnotations(retrofit2.Retrofit,java.lang.Class,java.lang.reflect.Method) -> parseAnnotations
retrofit2.RequestFactory$Builder -> retrofit2.RequestFactory$Builder:
    148:149:void <clinit>() -> <clinit>
    177:183:void <init>(retrofit2.Retrofit,java.lang.Class,java.lang.reflect.Method) -> <init>
    861:868:java.lang.Class boxIfPrimitive(java.lang.Class) -> boxIfPrimitive
    187:229:retrofit2.RequestFactory build() -> build
    305:326:okhttp3.Headers parseHeaders(java.lang.String[],boolean) -> parseHeaders
    271:301:void parseHttpMethodAndPath(java.lang.String,java.lang.String,boolean) -> parseHttpMethodAndPath
    233:266:void parseMethodAnnotation(java.lang.annotation.Annotation) -> parseMethodAnnotation
    333:361:retrofit2.ParameterHandler parseParameter(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],boolean) -> parseParameter
    370:819:retrofit2.ParameterHandler parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation) -> parseParameterAnnotation
    852:855:java.util.Set parsePathParameters(java.lang.String) -> parsePathParameters
    833:843:void validatePathName(int,java.lang.String) -> validatePathName
    826:827:void validateResolvableType(int,java.lang.reflect.Type) -> validateResolvableType
retrofit2.Response -> retrofit2.Response:
    119:122:void <init>(okhttp3.Response,java.lang.Object,okhttp3.ResponseBody) -> <init>
    152:152:java.lang.Object body() -> body
    132:132:int code() -> code
    91:101:retrofit2.Response error(int,okhttp3.ResponseBody) -> error
    106:111:retrofit2.Response error(okhttp3.ResponseBody,okhttp3.Response) -> error
    157:157:okhttp3.ResponseBody errorBody() -> errorBody
    142:142:okhttp3.Headers headers() -> headers
    147:147:boolean isSuccessful() -> isSuccessful
    137:137:java.lang.String message() -> message
    127:127:okhttp3.Response raw() -> raw
    29:36:retrofit2.Response success(java.lang.Object) -> success
    45:54:retrofit2.Response success(int,java.lang.Object) -> success
    62:71:retrofit2.Response success(java.lang.Object,okhttp3.Headers) -> success
    79:83:retrofit2.Response success(java.lang.Object,okhttp3.Response) -> success
    162:162:java.lang.String toString() -> toString
retrofit2.Retrofit -> retrofit2.Retrofit:
    78:105:void <init>(okhttp3.Call$Factory,okhttp3.HttpUrl,java.util.List,int,java.util.List,int,java.util.concurrent.Executor,boolean) -> <init>
    275:275:okhttp3.HttpUrl baseUrl() -> baseUrl
    293:293:retrofit2.CallAdapter callAdapter(java.lang.reflect.Type,java.lang.annotation.Annotation[]) -> callAdapter
    283:283:java.util.List callAdapterFactories() -> callAdapterFactories
    270:270:okhttp3.Call$Factory callFactory() -> callFactory
    470:470:java.util.concurrent.Executor callbackExecutor() -> callbackExecutor
    338:338:java.util.List converterFactories() -> converterFactories
    158:161:java.lang.Object create(java.lang.Class) -> create
    217:261:retrofit2.ServiceMethod loadServiceMethod(java.lang.Class,java.lang.reflect.Method) -> loadServiceMethod
    474:474:retrofit2.Retrofit$Builder newBuilder() -> newBuilder
    304:328:retrofit2.CallAdapter nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[]) -> nextCallAdapter
    363:391:retrofit2.Converter nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[]) -> nextRequestBodyConverter
    412:440:retrofit2.Converter nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[]) -> nextResponseBodyConverter
    349:349:retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[]) -> requestBodyConverter
    401:401:retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[]) -> responseBodyConverter
    448:462:retrofit2.Converter stringConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[]) -> stringConverter
    183:208:void validateServiceInterface(java.lang.Class) -> validateServiceInterface
retrofit2.Retrofit$1 -> retrofit2.Retrofit$1:
    163:164:void <init>(retrofit2.Retrofit,java.lang.Class) -> <init>
    170:177:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
retrofit2.Retrofit$Builder -> retrofit2.Retrofit$Builder:
    486:491:void <init>() -> <init>
    486:515:void <init>(retrofit2.Retrofit) -> <init>
    628:628:retrofit2.Retrofit$Builder addCallAdapterFactory(retrofit2.CallAdapter$Factory) -> addCallAdapterFactory
    619:619:retrofit2.Retrofit$Builder addConverterFactory(retrofit2.Converter$Factory) -> addConverterFactory
    543:544:retrofit2.Retrofit$Builder baseUrl(java.net.URL) -> baseUrl
    553:554:retrofit2.Retrofit$Builder baseUrl(java.lang.String) -> baseUrl
    608:613:retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl) -> baseUrl
    670:711:retrofit2.Retrofit build() -> build
    646:646:java.util.List callAdapterFactories() -> callAdapterFactories
    533:533:retrofit2.Retrofit$Builder callFactory(okhttp3.Call$Factory) -> callFactory
    640:640:retrofit2.Retrofit$Builder callbackExecutor(java.util.concurrent.Executor) -> callbackExecutor
    524:524:retrofit2.Retrofit$Builder client(okhttp3.OkHttpClient) -> client
    651:651:java.util.List converterFactories() -> converterFactories
    659:659:retrofit2.Retrofit$Builder validateEagerly(boolean) -> validateEagerly
retrofit2.ServiceMethod -> retrofit2.ServiceMethod:
    24:24:void <init>() -> <init>
    26:39:retrofit2.ServiceMethod parseAnnotations(retrofit2.Retrofit,java.lang.Class,java.lang.reflect.Method) -> parseAnnotations
retrofit2.SkipCallbackExecutorImpl -> retrofit2.SkipCallbackExecutorImpl:
    22:22:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    38:38:java.lang.Class annotationType() -> annotationType
    25:32:java.lang.annotation.Annotation[] ensurePresent(java.lang.annotation.Annotation[]) -> ensurePresent
    43:43:boolean equals(java.lang.Object) -> equals
    0:0:int hashCode() -> hashCode
    53:53:java.lang.String toString() -> toString
retrofit2.Utils -> retrofit2.Utils:
    37:37:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    329:331:okhttp3.ResponseBody buffer(okhttp3.ResponseBody) -> buffer
    313:314:void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    308:309:java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    113:147:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    163:181:java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    348:350:java.lang.reflect.Type getParameterLowerBound(int,java.lang.reflect.ParameterizedType) -> getParameterLowerBound
    335:342:java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType) -> getParameterUpperBound
    72:105:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    210:212:java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    356:378:boolean hasUnresolvableType(java.lang.reflect.Type) -> hasUnresolvableType
    192:195:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    320:321:boolean isAnnotationPresent(java.lang.annotation.Annotation[],java.lang.Class) -> isAnnotationPresent
    548:552:boolean isUnit(java.lang.reflect.Type) -> isUnit
    44:44:java.lang.RuntimeException methodError(java.lang.reflect.Method,java.lang.String,java.lang.Object[]) -> methodError
    50:56:java.lang.RuntimeException methodError(java.lang.reflect.Method,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> methodError
    62:63:java.lang.RuntimeException parameterError(java.lang.reflect.Method,java.lang.Throwable,int,java.lang.String,java.lang.Object[]) -> parameterError
    67:68:java.lang.RuntimeException parameterError(java.lang.reflect.Method,int,java.lang.String,java.lang.Object[]) -> parameterError
    218:276:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    289:297:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    535:540:void throwIfFatal(java.lang.Throwable) -> throwIfFatal
    199:199:java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
retrofit2.Utils$GenericArrayTypeImpl -> retrofit2.Utils$GenericArrayTypeImpl:
    451:452:void <init>(java.lang.reflect.Type) -> <init>
    462:462:boolean equals(java.lang.Object) -> equals
    457:457:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    467:467:int hashCode() -> hashCode
    472:472:java.lang.String toString() -> toString
retrofit2.Utils$ParameterizedTypeImpl -> retrofit2.Utils$ParameterizedTypeImpl:
    391:405:void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> <init>
    425:425:boolean equals(java.lang.Object) -> equals
    410:410:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    420:420:java.lang.reflect.Type getOwnerType() -> getOwnerType
    415:415:java.lang.reflect.Type getRawType() -> getRawType
    430:432:int hashCode() -> hashCode
    437:444:java.lang.String toString() -> toString
retrofit2.Utils$WildcardTypeImpl -> retrofit2.Utils$WildcardTypeImpl:
    485:499:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    515:515:boolean equals(java.lang.Object) -> equals
    510:510:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    505:505:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    521:521:int hashCode() -> hashCode
    526:528:java.lang.String toString() -> toString
retrofit2.converter.gson.GsonConverterFactory -> retrofit2.converter.gson.GsonConverterFactory:
    57:58:void <init>(com.google.gson.Gson) -> <init>
    42:42:retrofit2.converter.gson.GsonConverterFactory create() -> create
    51:52:retrofit2.converter.gson.GsonConverterFactory create(com.google.gson.Gson) -> create
    74:75:retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit) -> requestBodyConverter
    64:65:retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit) -> responseBodyConverter
retrofit2.converter.gson.GsonRequestBodyConverter -> retrofit2.converter.gson.GsonRequestBodyConverter:
    32:32:void <clinit>() -> <clinit>
    37:39:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter) -> <init>
    31:31:java.lang.Object convert(java.lang.Object) -> convert
    44:49:okhttp3.RequestBody convert(java.lang.Object) -> convert
retrofit2.converter.gson.GsonResponseBodyConverter -> retrofit2.converter.gson.GsonResponseBodyConverter:
    31:33:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter) -> <init>
    27:27:java.lang.Object convert(java.lang.Object) -> convert
    38:46:java.lang.Object convert(okhttp3.ResponseBody) -> convert
