////////////////////////////////////////////////////////////////////////////////
//
// PLUGIN_VERSION is the common version name when describing the plugin.
// ATAK_VERSION   is for the version of ATAK this plugin should be compatible
//                with some examples include 3.11.0, 3.11.0.civ 3.11.1.fvey
//
////////////////////////////////////////////////////////////////////////////////

buildscript {

    ext.PLUGIN_VERSION = "2.0"
    ext.ATAK_VERSION = "5.4.0"

    // Use latest 2.x version for ATAK 4.2+
    def takdevVersion = '2.+'

    def getValueFromPropertiesFile = { propFile, key ->
        if(!propFile.isFile() || !propFile.canRead())
            return null
        def prop = new Properties()
        def reader = propFile.newReader()
        try {
            prop.load(reader)
        } finally {
            reader.close()
        }
        return prop.get(key)
    }

    def getProperty = { name, defValue ->
        def prop = project.properties[name] ?:
                getValueFromPropertiesFile(project.rootProject.file('local.properties'), name)
        return (null == prop) ? defValue : prop
    }

    def urlKey = 'takrepo.url'

    ext.isDevKitEnabled = { ->
        return getProperty(urlKey, null) != null
    }

    // TAK.gov Maven repository configuration
    ext.takrepoUrl = getProperty(urlKey, 'https://artifacts.tak.gov/artifactory/maven')
    ext.takrepoUser = getProperty('takrepo.user', 'invalid')
    ext.takrepoPassword = getProperty('takrepo.password', 'invalid')

    repositories {
        google()
        mavenCentral()
        maven {
            url = takrepoUrl
            credentials {
                username = takrepoUser
                password = takrepoPassword
            }
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath "com.atakmap.gradle:atak-gradle-takdev:${takdevVersion}"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url = takrepoUrl
            credentials {
                username = takrepoUser
                password = takrepoPassword
            }
        }
    }
}

apply plugin: 'com.android.application'
apply plugin: 'atak-takdev-plugin'

android {
    compileSdk 33
    namespace 'com.skyfi.atak.plugin'

    buildFeatures {
        buildConfig = true
    }

    compileOptions {
        // Use Java 1.8 compatibility for TAK.gov builds
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Required for TAK inner signing check
    bundle {
        storeArchive {
            enable = false
        }
    }

    // Required for native libraries
    packagingOptions {
        jniLibs {
            useLegacyPackaging = true
        }
        resources {
            excludes += ['META-INF/INDEX.LIST']
        }
    }

    // No signing configs for TAK.gov submission - they will sign it
    signingConfigs {
        // TAK.gov will handle signing
    }

    buildTypes {
        debug {
            debuggable true
            matchingFallbacks = ['sdk']
        }
        release {
            minifyEnabled true
            proguardFiles 'proguard-gradle.txt'
            matchingFallbacks = ['odk']
        }
    }

    flavorDimensions "application"

    productFlavors {
        civ {
            dimension "application"
            getIsDefault().set(true)
            manifestPlaceholders = [atakApiVersion: "com.atakmap.app@" + ATAK_VERSION + ".CIV"]
            matchingFallbacks = ['civ']
        }
        mil {
            dimension "application"
            manifestPlaceholders = [atakApiVersion: "com.atakmap.app@" + ATAK_VERSION + ".MIL"]
            matchingFallbacks = ['civ']
        }
        gov {
            dimension "application"
            applicationIdSuffix = ".gov"
            manifestPlaceholders = [atakApiVersion: "com.atakmap.app@" + ATAK_VERSION + ".CIV"]
            matchingFallbacks = ['civ']
        }
    }

    sourceSets {
        main {
            setProperty("archivesBaseName", "ATAK-Plugin-" + rootProject.name + "-" + PLUGIN_VERSION + "-" + getVersionName() + "-" + ATAK_VERSION)
            defaultConfig.versionCode = getVersionCode()
            defaultConfig.versionName = PLUGIN_VERSION + " (" + getVersionName() + ") - [" + ATAK_VERSION + "]"
        }

        gov.java.srcDirs 'src/gov/java'
        gov.assets.srcDir 'src/gov/assets'
        gov.res.srcDir 'src/gov/res'

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }
    
    lint {
        abortOnError true
        checkReleaseBuilds true
    }
}

afterEvaluate {
    // Update proguard repackaging with proper plugin name
    project.file('proguard-gradle-repackage.txt').text = "-repackageclasses atakplugin.SkyFiATAKPlugin"
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    
    // Dependencies will be resolved from TAK.gov Maven repository
    // Use the atak-gradle-takdev plugin to resolve ATAK SDK dependencies
    
    // Core dependencies that are safe to include
    implementation('com.squareup.okhttp3:okhttp:3.14.9')
    implementation('com.squareup.retrofit2:retrofit:2.9.0')
    implementation('com.squareup.retrofit2:converter-gson:2.9.0')
    implementation('androidx.recyclerview:recyclerview:1.3.2')
    implementation('org.locationtech.jts:jts-core:1.16.1')
    implementation('androidx.swiperefreshlayout:swiperefreshlayout:1.1.0')
    implementation('androidx.cardview:cardview:1.0.0')
    implementation('com.google.code.gson:gson:2.10.1')
    
    // Test dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.robolectric:robolectric:4.11.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.14.9'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'androidx.core') {
            details.useVersion "1.15.0"
        }
        if (details.requested.group == 'androidx.lifecycle') {
            details.useVersion "2.8.7"
        }
        if (details.requested.group == 'androidx.fragment') {
            details.useVersion "1.8.5"
        }
    }
}

configurations.implementation {
    exclude group: 'androidx.core', module: 'core-ktx'
    exclude group: 'androidx.core', module: 'core'
    exclude group: 'androidx.fragment', module: 'fragment'
    exclude group: 'androidx.lifecycle', module: 'lifecycle'
    exclude group: 'androidx.lifecycle', module: 'lifecycle-process'
    exclude group: 'androidx.tracing', module: 'tracing'
    exclude group: 'androidx.tracing', module: 'tracing-ktx'
    exclude group: 'androidx.annotation', module: 'annotation'
}