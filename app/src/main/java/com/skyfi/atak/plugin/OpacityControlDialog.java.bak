package com.skyfi.atak.plugin;

import android.app.AlertDialog;
import android.content.Context;
import android.graphics.Color;
import android.graphics.PorterDuff;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.SeekBar;
import android.widget.TextView;

public class OpacityControlDialog {
    
    // SkyFi branding colors
    private static final int SKYFI_BLUE = Color.parseColor("#0080FF");
    private static final int SKYFI_DARK_BLUE = Color.parseColor("#0066CC");
    private static final int SKYFI_BACKGROUND = Color.parseColor("#1A1A1A");
    private static final int SKYFI_TEXT = Color.parseColor("#FFFFFF");
    private static final int SKYFI_SECONDARY_TEXT = Color.parseColor("#B0B0B0");
    
    public interface OpacityChangeListener {
        void onOpacityChanged(int opacity); // 0-100
    }
    
    public static void show(Context context, String title, int currentOpacity, OpacityChangeListener listener) {
        View dialogView = LayoutInflater.from(context).inflate(R.layout.opacity_control_dialog, null);
        
        SeekBar opacitySeekBar = dialogView.findViewById(R.id.opacity_seekbar);
        TextView opacityValueText = dialogView.findViewById(R.id.opacity_value_text);
        TextView previewText = dialogView.findViewById(R.id.opacity_preview_text);
        
        // Apply SkyFi branding
        applySkyFiBranding(dialogView, opacitySeekBar, opacityValueText, previewText);
        
        // Set initial values
        opacitySeekBar.setProgress(currentOpacity);
        opacityValueText.setText(currentOpacity + "%");
        updatePreviewText(previewText, currentOpacity);
        
        // Set up seekbar listener
        opacitySeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                opacityValueText.setText(progress + "%");
                updatePreviewText(previewText, progress);
                if (listener != null) {
                    listener.onOpacityChanged(progress);
                }
            }
            
            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {}
            
            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {}
        });
        
        AlertDialog.Builder builder = new AlertDialog.Builder(context);
        builder.setTitle(title)
            .setView(dialogView)
            .setPositiveButton("OK", (dialog, which) -> {
                // Final opacity value already set via listener
            })
            .setNegativeButton("Cancel", (dialog, which) -> {
                // Revert to original opacity
                if (listener != null) {
                    listener.onOpacityChanged(currentOpacity);
                }
            });
        
        // Create dialog with SkyFi styling
        AlertDialog dialog = builder.create();
        
        // Apply dark theme background
        if (dialog.getWindow() != null) {
            dialog.getWindow().getDecorView().setBackgroundColor(SKYFI_BACKGROUND);
        }
        
        dialog.show();
    }
    
    /**
     * Apply SkyFi branding to dialog components
     */
    private static void applySkyFiBranding(View dialogView, SeekBar seekBar, TextView valueText, TextView previewText) {
        // Set dialog background
        dialogView.setBackgroundColor(SKYFI_BACKGROUND);
        
        // Style seekbar with SkyFi blue
        seekBar.getProgressDrawable().setColorFilter(SKYFI_BLUE, PorterDuff.Mode.SRC_IN);
        seekBar.getThumb().setColorFilter(SKYFI_BLUE, PorterDuff.Mode.SRC_IN);
        
        // Style text colors
        valueText.setTextColor(SKYFI_BLUE);
        previewText.setTextColor(SKYFI_SECONDARY_TEXT);
        
        // Find and style title text if present
        TextView titleView = dialogView.findViewById(R.id.opacity_title_text);
        if (titleView != null) {
            titleView.setTextColor(SKYFI_TEXT);
        }
        
        // Style opacity label
        TextView opacityLabel = dialogView.findViewById(R.id.opacity_label_text);
        if (opacityLabel != null) {
            opacityLabel.setTextColor(SKYFI_TEXT);
        }
    }
    
    private static void updatePreviewText(TextView previewText, int opacity) {
        String previewMessage;
        if (opacity == 0) {
            previewMessage = "üîç Transparent (Hidden)";
        } else if (opacity < 25) {
            previewMessage = "üå´Ô∏è Very Transparent";
        } else if (opacity < 50) {
            previewMessage = "‚ö™ Semi-Transparent";
        } else if (opacity < 75) {
            previewMessage = "üîò Slightly Transparent";
        } else if (opacity < 100) {
            previewMessage = "üîµ Nearly Opaque";
        } else {
            previewMessage = "‚ö´ Opaque (Fully Visible)";
        }
        
        previewText.setText(previewMessage);
        
        // Add fade animation effect for visual feedback
        previewText.setAlpha(0.7f + (opacity * 0.003f)); // Visual opacity feedback
    }
}