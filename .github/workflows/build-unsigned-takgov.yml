name: Build Unsigned APK for TAK.gov

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      flavor:
        description: 'Build flavor (civ, mil, etc.)'
        required: true
        default: 'civ'
        type: choice
        options:
          - civ
          - mil
          - aus
          - nzl
          - prt
          - nor
          - swe
          - gbr
          - can
          - hun
          - bel
          - est
          - ltu
          - ukr
          - pol
          - nld
          - esp
          - aeronet
          - gov
          - natosof

jobs:
  build-unsigned:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
        echo "takdev.plugin=$PWD/atak-gradle-takdev.jar" >> local.properties
        
    - name: Check ATAK gradle plugin
      run: |
        if [ ! -f "atak-gradle-takdev.jar" ]; then
          echo "ERROR: atak-gradle-takdev.jar not found in repository"
          exit 1
        fi
        
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Set build flavor
      run: |
        # Use input flavor or default to civ
        FLAVOR="${{ github.event.inputs.flavor || 'civ' }}"
        echo "BUILD_FLAVOR=$FLAVOR" >> $GITHUB_ENV
        echo "Building flavor: $FLAVOR"
        
    - name: Build Unsigned APK
      run: |
        # Build the unsigned variant for TAK.gov
        # Capitalize first letter of flavor for gradle task
        FLAVOR_CAP=$(echo "$BUILD_FLAVOR" | sed 's/\b\(.\)/\u\1/g')
        ./gradlew assemble${FLAVOR_CAP}Unsigned
        
    - name: Verify APK is unsigned
      run: |
        # Find the unsigned APK
        APK_PATH=$(find app/build/outputs/apk -name "*unsigned*.apk" -type f | head -1)
        if [ -f "$APK_PATH" ]; then
          echo "Found unsigned APK: $APK_PATH"
          # Verify it's actually unsigned
          if jarsigner -verify -verbose -certs "$APK_PATH" 2>&1 | grep -q "jar is unsigned"; then
            echo "✓ APK is properly unsigned"
          else
            echo "✗ ERROR: APK appears to be signed!"
            exit 1
          fi
        else
          echo "ERROR: No unsigned APK found!"
          exit 1
        fi
        
    - name: List build outputs
      run: |
        echo "Build outputs:"
        find app/build/outputs/apk -name "*.apk" -type f | while read apk; do
          echo "Found APK: $apk"
          echo "Size: $(du -h "$apk" | cut -f1)"
        done
        
    - name: Prepare APK for TAK.gov
      run: |
        # Find and rename the APK for TAK.gov submission
        APK_PATH=$(find app/build/outputs/apk/$BUILD_FLAVOR/unsigned -name "*.apk" -type f | head -1)
        if [ -f "$APK_PATH" ]; then
          # Create TAK.gov submission directory
          mkdir -p takgov-submission
          
          # Rename with standard naming for TAK.gov
          NEW_NAME="SkyFi-ATAK-Plugin-v2-${BUILD_FLAVOR^^}-UNSIGNED-$(date +%Y%m%d).apk"
          cp "$APK_PATH" "takgov-submission/$NEW_NAME"
          
          # Create submission README
          cat > takgov-submission/README.txt << EOF
SkyFi ATAK Plugin v2 - Unsigned Build for TAK.gov
================================================

Build Information:
- Flavor: ${BUILD_FLAVOR^^}
- Date: $(date +"%Y-%m-%d %H:%M:%S UTC")
- Git SHA: ${{ github.sha }}
- Branch: ${{ github.ref_name }}
- ATAK Version: 5.4.0

This APK is UNSIGNED and ready for TAK.gov submission.
It will be signed by TAK.gov during the approval process.

Plugin Features:
- High-resolution satellite imagery integration
- Area of Responsibility (AOR) filtering
- AOI management and drawing tools
- Multiple tasking methods (pindrop, lat/lon, MGRS)
- Image archiving and favorites
- Metadata sorting and filtering

Submission Instructions:
1. This APK is ready for direct upload to TAK.gov
2. No additional signing is required
3. The plugin declares compatibility with ATAK 5.4.0

For questions or support: [your-contact-info]
EOF
          
          echo "APK_NAME=$NEW_NAME" >> $GITHUB_ENV
          echo "SUBMISSION_DIR=takgov-submission" >> $GITHUB_ENV
        fi
        
    - name: Upload TAK.gov submission artifact
      uses: actions/upload-artifact@v4
      with:
        name: TAKgov-Submission-${{ env.BUILD_FLAVOR }}-${{ github.run_number }}
        path: ${{ env.SUBMISSION_DIR }}/
        retention-days: 90
        
    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.SUBMISSION_DIR }}/${{ env.APK_NAME }}
        generate_release_notes: true
        body: |
          ## SkyFi ATAK Plugin v2 - Unsigned Build for TAK.gov
          
          **⚠️ This is an UNSIGNED APK for TAK.gov submission only**
          
          ### For TAK.gov Submission:
          - This APK is ready for direct upload to TAK.gov
          - It will be signed by TAK.gov during the approval process
          - No additional signing is required
          
          ### For Direct Installation (Testing Only):
          - This unsigned APK can be sideloaded for testing
          - You may need to enable "Install from Unknown Sources"
          - For production use, please use the signed version from TAK.gov
          
          ### Build Information:
          - Flavor: ${{ env.BUILD_FLAVOR }}
          - ATAK Version: 5.4.0
          - Build Date: $(date +"%Y-%m-%d")