name: Regression Tests

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  regression-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Run Regression Test Suite
      run: ./gradlew test --tests "com.skyfi.atak.plugin.RegressionTestSuite"
      continue-on-error: false
    
    - name: Run All Unit Tests
      run: ./gradlew test
    
    - name: Generate Test Report
      if: always()
      run: ./gradlew jacocoTestReport
    
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          app/build/reports/tests/
          app/build/test-results/
    
    - name: Upload Coverage Reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: app/build/reports/jacoco/
    
    - name: Check Critical Tests Pass
      run: |
        echo "Checking critical test results..."
        if grep -r "FAILED" app/build/test-results/; then
          echo "Critical tests failed! Please fix before merging."
          exit 1
        fi
        echo "All critical tests passed!"

  integration-tests:
    runs-on: ubuntu-latest
    needs: regression-tests
    
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build Debug APK
      run: ./gradlew assembleCivDebug
    
    - name: Verify APK Structure
      run: |
        echo "Verifying APK structure..."
        unzip -l app/build/outputs/apk/civ/debug/*.apk | grep -E "(AndroidManifest.xml|classes.dex|resources.arsc)"
        if [ $? -ne 0 ]; then
          echo "APK structure validation failed!"
          exit 1
        fi
        echo "APK structure is valid!"
    
    - name: Check APK Size
      run: |
        APK_SIZE=$(stat -c%s app/build/outputs/apk/civ/debug/*.apk)
        MAX_SIZE=30000000  # 30MB limit
        if [ $APK_SIZE -gt $MAX_SIZE ]; then
          echo "APK size ($APK_SIZE) exceeds limit ($MAX_SIZE)!"
          exit 1
        fi
        echo "APK size is acceptable: $APK_SIZE bytes"

  backwards-compatibility:
    runs-on: ubuntu-latest
    needs: regression-tests
    
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Test API Compatibility
      run: |
        echo "Testing API backwards compatibility..."
        ./gradlew test --tests "*APIClient*"
    
    - name: Test Plugin Loading
      run: |
        echo "Testing plugin loading mechanisms..."
        ./gradlew test --tests "*PluginLifecycle*"
    
    - name: Test Data Migration
      run: |
        echo "Testing data migration paths..."
        ./gradlew test --tests "*Migration*" || echo "No migration tests found"