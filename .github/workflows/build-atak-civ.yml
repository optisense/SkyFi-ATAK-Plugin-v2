name: Build ATAK CIV Release

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-atak-civ:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
        echo "takdev.plugin=\${rootDir}/atak-gradle-takdev.jar" >> local.properties
        
    - name: Download ATAK gradle plugin
      run: |
        # Copy the ATAK gradle plugin from the repository
        # This file should be committed to the repo for CI/CD
        if [ ! -f "atak-gradle-takdev.jar" ]; then
          echo "ERROR: atak-gradle-takdev.jar not found in repository"
          echo "Please commit this file to the repository for CI/CD builds"
          exit 1
        fi
        
    - name: Download ATAK keystore
      run: |
        # Copy the ATAK keystore from the repository
        # This file should be committed to the repo for CI/CD
        if [ ! -f "android_keystore" ]; then
          echo "ERROR: android_keystore not found in repository"
          echo "Please commit this file to the repository for CI/CD builds"
          exit 1
        fi
        
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build ATAK CIV Release APK
      run: |
        # Build the CIV release variant with debug signing for ATAK compatibility
        ./gradlew assembleCivRelease
        
    - name: List build outputs
      run: |
        echo "Build outputs:"
        find app/build/outputs/apk -name "*.apk" -type f | while read apk; do
          echo "Found APK: $apk"
          echo "Size: $(du -h "$apk" | cut -f1)"
        done
        
    - name: Rename APK for clarity
      run: |
        # Find and rename the APK to include build info
        APK_PATH=$(find app/build/outputs/apk/civ/release -name "*.apk" -type f | head -1)
        if [ -f "$APK_PATH" ]; then
          NEW_NAME="SkyFi-ATAK-Plugin-v2-CIV-5.4-$(date +%Y%m%d)-${{ github.sha }}.apk"
          mv "$APK_PATH" "app/build/outputs/apk/civ/release/$NEW_NAME"
          echo "APK_NAME=$NEW_NAME" >> $GITHUB_ENV
          echo "APK_PATH=app/build/outputs/apk/civ/release/$NEW_NAME" >> $GITHUB_ENV
        fi
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: SkyFi-ATAK-CIV-APK
        path: ${{ env.APK_PATH }}
        retention-days: 30
        
    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.APK_PATH }}
        generate_release_notes: true
        body: |
          ## SkyFi ATAK Plugin v2 - CIV Release
          
          This release is built specifically for ATAK CIV 5.4 downloaded from the Play Store.
          
          ### Installation Instructions:
          1. Download the APK file
          2. Open ATAK on your device
          3. Navigate to Settings → Tool Preferences → Plugin Management
          4. Tap "Load Plugin..." and select the downloaded APK
          5. Restart ATAK for the plugin to take effect
          
          ### Features:
          - High-resolution image caching
          - Area of Responsibility (AOR) filtering
          - AOI management and drawing
          - Multiple tasking methods (pindrop, lat/lon, MGRS)
          - Image archiving and favorites
          - Metadata sorting and filtering