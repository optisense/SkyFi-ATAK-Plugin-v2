name: Stability and Regression Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run unit tests
      run: ./gradlew testCivDebugUnitTest --continue
      
    - name: Run stability test suite
      run: ./gradlew testCivDebugUnitTest --tests "com.skyfi.atak.plugin.StabilityTestSuite" --continue
      
    - name: Generate test report
      run: ./gradlew testCivDebugUnitTest jacocoTestReport
      
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: unit-test-results
        path: |
          app/build/reports/tests/
          app/build/reports/jacoco/
          
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: app/build/reports/jacoco/testCivDebugUnitTest/jacocoTestReport.xml
        flags: unittests
        name: codecov-umbrella

  integration-tests:
    name: Integration Tests
    runs-on: macos-latest
    
    strategy:
      matrix:
        api-level: [28, 29, 30]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: AVD cache
      uses: actions/cache@v3
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ matrix.api-level }}
        
    - name: Create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."
        
    - name: Run integration tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: ./gradlew connectedCivDebugAndroidTest --continue
        
    - name: Upload integration test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: integration-test-results-api-${{ matrix.api-level }}
        path: app/build/reports/androidTests/

  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    needs: [unit-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run regression tests
      run: ./gradlew testCivDebugUnitTest --tests "*RegressionTest" --continue
      
    - name: Run performance tests
      run: ./gradlew testCivDebugUnitTest --tests "com.skyfi.atak.plugin.PerformanceTest" --continue
      
    - name: Run error handling tests
      run: ./gradlew testCivDebugUnitTest --tests "com.skyfi.atak.plugin.ErrorHandlingTest" --continue
      
    - name: Upload regression test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: regression-test-results
        path: app/build/reports/tests/

  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [unit-tests, regression-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build debug APK
      run: ./gradlew assembleCivDebug
      
    - name: Build release APK
      run: ./gradlew assembleCivRelease
      
    - name: Run lint checks
      run: ./gradlew lintCivDebug
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          app/build/outputs/apk/
          app/build/reports/lint-results-civDebug.html

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run dependency check
      run: ./gradlew dependencyCheckAnalyze --continue
      
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-scan-results
        path: app/build/reports/dependency-check-report.html

  notify-results:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, regression-tests, build-verification, security-scan]
    if: always()
    
    steps:
    - name: Notify success
      if: ${{ needs.unit-tests.result == 'success' && needs.regression-tests.result == 'success' && needs.build-verification.result == 'success' }}
      run: echo "✅ All stability tests passed!"
      
    - name: Notify failure
      if: ${{ needs.unit-tests.result == 'failure' || needs.regression-tests.result == 'failure' || needs.build-verification.result == 'failure' }}
      run: |
        echo "❌ Stability tests failed!"
        echo "Unit tests: ${{ needs.unit-tests.result }}"
        echo "Regression tests: ${{ needs.regression-tests.result }}"
        echo "Build verification: ${{ needs.build-verification.result }}"
        exit 1