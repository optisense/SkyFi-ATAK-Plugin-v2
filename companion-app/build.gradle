apply plugin: 'com.android.application'

android {
    compileSdk 33
    namespace 'com.skyfi.atak.companion'

    defaultConfig {
        applicationId "com.skyfi.atak.companion"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Build config fields for runtime configuration
        buildConfigField "String", "SKYFI_API_BASE_URL", '"https://api.skyfi.com"'
        buildConfigField "String", "ATAK_CIV_PACKAGE", '"com.atakmap.app.civ"'
        buildConfigField "String", "ATAK_MIL_PACKAGE", '"com.atakmap.app"'
        buildConfigField "boolean", "DEBUG_LOGGING", "true"
    }

    buildFeatures {
        buildConfig = true
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            buildConfigField "boolean", "DEBUG_LOGGING", "true"
            
            // Use debug keystore for local testing
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "DEBUG_LOGGING", "false"
            
            // Production signing config (to be configured)
            // signingConfig signingConfigs.release
        }
    }

    // Product flavors for different deployment scenarios
    flavorDimensions "deployment"
    
    productFlavors {
        playstore {
            dimension "deployment"
            applicationIdSuffix ""
            versionNameSuffix ""
            buildConfigField "String", "DEPLOYMENT_TYPE", '"playstore"'
            
            // Play Store specific configuration
            buildConfigField "boolean", "ATAK_INTEGRATION_ENABLED", "true"
            buildConfigField "boolean", "STANDALONE_MODE", "false"
        }
        
        standalone {
            dimension "deployment"
            applicationIdSuffix ".standalone"
            versionNameSuffix "-standalone"
            buildConfigField "String", "DEPLOYMENT_TYPE", '"standalone"'
            
            // Standalone mode - full functionality without ATAK dependency
            buildConfigField "boolean", "ATAK_INTEGRATION_ENABLED", "false"
            buildConfigField "boolean", "STANDALONE_MODE", "true"
        }
        
        enterprise {
            dimension "deployment"
            applicationIdSuffix ".enterprise"
            versionNameSuffix "-enterprise"
            buildConfigField "String", "DEPLOYMENT_TYPE", '"enterprise"'
            
            // Enterprise deployment with enhanced security
            buildConfigField "boolean", "ATAK_INTEGRATION_ENABLED", "true"
            buildConfigField "boolean", "STANDALONE_MODE", "false"
            buildConfigField "boolean", "ENHANCED_SECURITY", "true"
        }
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 
                        'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 
                        'META-INF/notice.txt', 'META-INF/ASL2.0']
        }
    }

    lint {
        abortOnError false
        checkReleaseBuilds true
        ignoreWarnings true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    
    // AndroidX dependencies
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.work:work-runtime:2.9.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.7.0'
    implementation 'androidx.navigation:navigation-fragment:2.7.6'
    implementation 'androidx.navigation:navigation-ui:2.7.6'
    
    // Google Material Design
    implementation 'com.google.android.material:material:1.11.0'
    
    // Location services
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    
    // Networking
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    
    // JSON processing
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Image loading and processing
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'
    
    // Geospatial libraries (compatible with ATAK)
    implementation 'org.locationtech.jts:jts-core:1.16.1'
    implementation 'org.locationtech.spatial4j:spatial4j:0.8'
    
    // XML processing for CoT messages
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.16.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    
    // Security
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
    
    // Database
    implementation 'androidx.room:room-runtime:2.6.1'
    annotationProcessor 'androidx.room:room-compiler:2.6.1'
    
    // Permissions handling
    implementation 'pub.devrel:easypermissions:3.0.0'
    
    // Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'
    
    // Testing dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    
    // ATAK-specific testing (for integration tests)
    testImplementation 'org.robolectric:robolectric:4.11.1'
}

// Custom tasks for companion app deployment
task createATAKIntegrationPackage(type: Zip) {
    description = 'Create integration package for ATAK deployment'
    group = 'deployment'
    
    from("${buildDir}/outputs/apk/playstore/release/") {
        include "*.apk"
    }
    from("src/main/assets/atak-integration/") {
        include "**/*"
    }
    
    archiveFileName = "skyfi-atak-companion-integration-${android.defaultConfig.versionName}.zip"
    destinationDirectory = file("${buildDir}/distributions")
}

task generateDeploymentInstructions {
    description = 'Generate deployment instructions for different ATAK versions'
    group = 'deployment'
    
    doLast {
        def instructionsFile = file("${buildDir}/distributions/DEPLOYMENT_INSTRUCTIONS.md")
        instructionsFile.parentFile.mkdirs()
        
        def instructions = """
# SkyFi ATAK Companion App Deployment Instructions

## Overview
The SkyFi Companion App provides SkyFi satellite imagery functionality for ATAK users when the traditional plugin approach is not available.

## Installation Methods

### Method 1: Play Store Installation (Recommended)
1. Install the companion app from Google Play Store
2. Launch ATAK (any version)
3. Launch SkyFi Companion App
4. Follow the setup wizard to configure ATAK integration

### Method 2: Side-load Installation
1. Install the APK file: `skyfi-atak-companion-playstore-release.apk`
2. Grant necessary permissions when prompted
3. Configure ATAK integration in the app settings

### Method 3: Enterprise Deployment
1. Use the enterprise APK: `skyfi-atak-companion-enterprise-release.apk`
2. Configure enterprise settings via MDM
3. Deploy to devices with ATAK already installed

## ATAK Compatibility

### Supported ATAK Versions:
- ATAK-CIV (Play Store version)
- ATAK-CIV SDK version
- ATAK-MIL (where authorized)

### Integration Features:
- CoT message exchange
- Location sharing
- Satellite imagery overlay
- Order management
- Map synchronization

## Configuration

### First Launch:
1. Grant location and storage permissions
2. Sign in to SkyFi account
3. Configure ATAK integration settings
4. Test connectivity with ATAK

### Advanced Configuration:
- API endpoint customization
- Security settings
- Offline mode configuration
- Custom CoT message types

## Troubleshooting

### Common Issues:
1. **ATAK not detected**: Ensure ATAK is installed and version is supported
2. **Permission denied**: Grant all requested permissions in Android settings
3. **CoT messages not received**: Check ATAK CoT settings and network connectivity
4. **Location not syncing**: Verify location permissions for both apps

### Support:
- Documentation: https://docs.skyfi.com/atak-companion
- Support: support@skyfi.com
- GitHub Issues: https://github.com/skyfi/atak-companion/issues
"""
        
        instructionsFile.text = instructions
        println "Deployment instructions generated: ${instructionsFile.absolutePath}"
    }
}

// Ensure deployment tasks run after build
build.finalizedBy(createATAKIntegrationPackage)
createATAKIntegrationPackage.finalizedBy(generateDeploymentInstructions)