apiVersion: v1
kind: Namespace
metadata:
  name: gitlab-runner
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-runner
  namespace: gitlab-runner
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: gitlab-runner
  name: gitlab-runner
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/exec", "pods/attach", "secrets", "configmaps"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-runner
  namespace: gitlab-runner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitlab-runner
subjects:
  - kind: ServiceAccount
    name: gitlab-runner
    namespace: gitlab-runner
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-runner-config
  namespace: gitlab-runner
data:
  config.toml: |
    concurrent = 4
    check_interval = 3
    log_level = "info"
    
    [[runners]]
      name = "tak-gov-kubernetes-runner"
      url = "https://gitlab.tak.gov/"
      token = "${RUNNER_TOKEN}"
      executor = "kubernetes"
      
      [runners.kubernetes]
        image = "openjdk:17-jdk-slim"
        namespace = "gitlab-runner"
        privileged = false
        
        # Resource limits for build containers
        cpu_limit = "4"
        cpu_request = "1"
        memory_limit = "8Gi"
        memory_request = "2Gi"
        
        # Service account with proper permissions
        service_account = "gitlab-runner"
        service_account_overwrite_allowed = "gitlab-runner"
        
        # Pull policy
        pull_policy = ["if-not-present", "always"]
        
        # Helper container resources
        helper_cpu_limit = "500m"
        helper_cpu_request = "100m"
        helper_memory_limit = "512Mi"
        helper_memory_request = "128Mi"
        
        # Pod labels
        [runners.kubernetes.pod_labels]
          "app" = "gitlab-runner"
          "runner" = "tak-gov"
        
        # Pod annotations
        [runners.kubernetes.pod_annotations]
          "scheduler.alpha.kubernetes.io/critical-pod" = "true"
          "cluster-autoscaler.kubernetes.io/safe-to-evict" = "false"
        
        # Node tolerations for critical application taint
        [[runners.kubernetes.node_tolerations]]
          key = "application"
          value = "critical"
          effect = "NoSchedule"
          operator = "Equal"
        
        # Standard tolerations
        [[runners.kubernetes.node_tolerations]]
          key = "node.kubernetes.io/not-ready"
          effect = "NoExecute"
          operator = "Exists"
          toleration_seconds = 300
        
        [[runners.kubernetes.node_tolerations]]
          key = "node.kubernetes.io/unreachable"
          effect = "NoExecute"
          operator = "Exists"
          toleration_seconds = 300
        
        # Volumes for build cache
        [[runners.kubernetes.volumes.empty_dir]]
          name = "gradle-cache"
          mount_path = "/root/.gradle"
          medium = "Memory"
          size_limit = "2Gi"
        
        [[runners.kubernetes.volumes.empty_dir]]
          name = "android-sdk-cache"
          mount_path = "/android-sdk"
          medium = ""
          size_limit = "4Gi"
        
        [[runners.kubernetes.volumes.config_map]]
          name = "build-scripts"
          mount_path = "/scripts"
          read_only = true
          [runners.kubernetes.volumes.config_map.items]
            "build.sh" = "build.sh"
      
      [runners.cache]
        Type = "kubernetes"
        Path = "gitlab-runner"
        Shared = true
        
        [runners.cache.kubernetes]
          namespace = "gitlab-runner"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-runner
  namespace: gitlab-runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab-runner
  template:
    metadata:
      labels:
        app: gitlab-runner
    spec:
      serviceAccountName: gitlab-runner
      # Add tolerations to the runner pod itself
      tolerations:
        - key: "application"
          value: "critical"
          effect: "NoSchedule"
          operator: "Equal"
        - key: "node.kubernetes.io/not-ready"
          effect: "NoExecute"
          operator: "Exists"
          tolerationSeconds: 300
        - key: "node.kubernetes.io/unreachable"
          effect: "NoExecute"
          operator: "Exists"
          tolerationSeconds: 300
      # Remove node selector to allow scheduling on any available node
      # nodeSelector:
      #   node-type: standard
      containers:
        - name: gitlab-runner
          image: gitlab/gitlab-runner:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: config
              mountPath: /etc/gitlab-runner
              readOnly: true
            - name: runner-secrets
              mountPath: /secrets
              readOnly: true
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - name: RUNNER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: gitlab-runner-secret
                  key: runner-token
      volumes:
        - name: config
          configMap:
            name: gitlab-runner-config
        - name: runner-secrets
          secret:
            secretName: gitlab-runner-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-runner-secret
  namespace: gitlab-runner
type: Opaque
stringData:
  runner-token: "YOUR_RUNNER_REGISTRATION_TOKEN_HERE"